<Type Name="HttpServerUtilityBase" FullName="System.Web.HttpServerUtilityBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b7c5421d624b1a7edf4e5998a543c7e5ec1d57d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86607085" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpServerUtilityBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpServerUtilityBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtilityBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpServerUtilityBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtilityBase abstract" />
  <TypeSignature Language="F#" Value="type HttpServerUtilityBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Web.Abstractions" FromVersion="4.0.0.0" To="System.Web" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="08b8c-101">充当类的基类，前者提供用于处理 Web 请求的 helper 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-101">Serves as the base class for classes that provide helper methods for processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-102"><xref:System.Web.HttpServerUtilityBase>类是一个抽象类，它包含与类相同的成员 <xref:System.Web.HttpServerUtility> 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-102">The <xref:System.Web.HttpServerUtilityBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="08b8c-103"><xref:System.Web.HttpServerUtilityBase>利用类，您可以创建类似于类的派生类 <xref:System.Web.HttpServerUtility> ，但可以自定义该派生类并在 ASP.NET 管道之外工作。</span><span class="sxs-lookup"><span data-stu-id="08b8c-103">The <xref:System.Web.HttpServerUtilityBase> class enables you to create derived classes that are like the <xref:System.Web.HttpServerUtility> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="08b8c-104">执行单元测试时，通常使用派生类来实现具有自定义行为的成员，该行为可满足你要测试的方案。</span><span class="sxs-lookup"><span data-stu-id="08b8c-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="08b8c-105"><xref:System.Web.HttpServerUtilityWrapper> 类是从 <xref:System.Web.HttpServerUtilityBase> 类派生的。</span><span class="sxs-lookup"><span data-stu-id="08b8c-105">The <xref:System.Web.HttpServerUtilityWrapper> class derives from the <xref:System.Web.HttpServerUtilityBase> class.</span></span> <span data-ttu-id="08b8c-106"><xref:System.Web.HttpServerUtilityWrapper>类用作类的包装 <xref:System.Web.HttpServerUtility> 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-106">The <xref:System.Web.HttpServerUtilityWrapper> class serves as a wrapper for the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="08b8c-107">在运行时，通常使用类的实例 <xref:System.Web.HttpServerUtilityWrapper> 来调用对象的成员 <xref:System.Web.HttpServerUtility> 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-107">At run time, you typically use an instance of the <xref:System.Web.HttpServerUtilityWrapper> class to call members of the <xref:System.Web.HttpServerUtility> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpServerUtilityBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpServerUtilityBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08b8c-108">初始化该类供继承的类实例使用。</span><span class="sxs-lookup"><span data-stu-id="08b8c-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="08b8c-109">此构造函数只能由继承的类调用。</span><span class="sxs-lookup"><span data-stu-id="08b8c-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberSignature Language="F#" Value="abstract member ClearError : unit -&gt; unit&#xA;override this.ClearError : unit -&gt; unit" Usage="httpServerUtilityBase.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08b8c-110">当在派生类中重写时，清除最近发生的异常。</span><span class="sxs-lookup"><span data-stu-id="08b8c-110">When overridden in a derived class, clears the most recent exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-111">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-111">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-112">在派生类中重写时，创建 COM 对象的服务器实例。</span><span class="sxs-lookup"><span data-stu-id="08b8c-112">When overridden in a derived class, creates a server instance of a COM object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="abstract member CreateObject : string -&gt; obj&#xA;override this.CreateObject : string -&gt; obj" Usage="httpServerUtilityBase.CreateObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="08b8c-113">要创建其实例的对象的类或类型。</span><span class="sxs-lookup"><span data-stu-id="08b8c-113">The class or type of object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="08b8c-114">在派生类中重写时，创建 COM 对象的服务器实例，该对象由其编程标识符 (ProgID) 进行标识。</span><span class="sxs-lookup"><span data-stu-id="08b8c-114">When overridden in a derived class, creates a server instance of a COM object that is identified by the object's programmatic identifier (ProgID).</span></span></summary>
        <returns><span data-ttu-id="08b8c-115">新对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-115">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-116">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-116">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObject(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObject (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateObject : Type -&gt; obj&#xA;override this.CreateObject : Type -&gt; obj" Usage="httpServerUtilityBase.CreateObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="08b8c-117">表示要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="08b8c-117">A type that represents the object to create.</span></span></param>
        <summary><span data-ttu-id="08b8c-118">在派生类中重写时，创建 COM 对象的服务器实例，该对象由其类型进行标识。</span><span class="sxs-lookup"><span data-stu-id="08b8c-118">When overridden in a derived class, creates a server instance of a COM object that is identified by the object's type.</span></span></summary>
        <returns><span data-ttu-id="08b8c-119">新对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-119">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-120">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-120">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public virtual object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjectFromClsid : string -&gt; obj&#xA;override this.CreateObjectFromClsid : string -&gt; obj" Usage="httpServerUtilityBase.CreateObjectFromClsid clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid"><span data-ttu-id="08b8c-121">要创建其实例的对象的类标识符。</span><span class="sxs-lookup"><span data-stu-id="08b8c-121">The class identifier of the object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="08b8c-122">在派生类中重写时，创建 COM 对象的服务器实例，该对象由其类标识符 (CLSID) 进行标识。</span><span class="sxs-lookup"><span data-stu-id="08b8c-122">When overridden in a derived class, creates a server instance of a COM object that is identified by the object's class identifier (CLSID).</span></span></summary>
        <returns><span data-ttu-id="08b8c-123">新对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-123">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-124">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-124">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-125">在派生类中重写时，在当前请求的上下文中执行指定资源的处理程序，并将执行返回给调用该处理程序的进程。</span><span class="sxs-lookup"><span data-stu-id="08b8c-125">When overridden in a derived class, executes the handler for a specified resource in the context of the current request and returns execution to the process that invoked it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string -&gt; unit&#xA;override this.Execute : string -&gt; unit" Usage="httpServerUtilityBase.Execute path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-126">要执行的处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-126">The URL of the handler to execute.</span></span></param>
        <summary><span data-ttu-id="08b8c-127">当在派生类中重写时，执行当前进程上下文中所指定虚拟路径的处理程序。</span><span class="sxs-lookup"><span data-stu-id="08b8c-127">When overridden in a derived class, executes the handler for the specified virtual path in the context of the current process.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-128">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-128">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string * bool -&gt; unit&#xA;override this.Execute : string * bool -&gt; unit" Usage="httpServerUtilityBase.Execute (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-129">要执行的处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-129">The URL of the handler to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-130">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-130"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="08b8c-131">当在派生类中被重写时，为在当前进程的上下文中指定的虚拟路径执行处理程序，并指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="08b8c-131">When overridden in a derived class, executes the handler for the specified virtual path in the context of the current process and specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-132">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-132">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string * System.IO.TextWriter -&gt; unit&#xA;override this.Execute : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.Execute (path, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-133">要执行的处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-133">The URL of the handler to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="08b8c-134">用于捕获输出的对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-134">An object to capture the output.</span></span></param>
        <summary><span data-ttu-id="08b8c-135">在派生类中重写时，在当前进程的上下文中执行指定虚拟路径的处理程序，并使用 <see cref="T:System.IO.TextWriter" /> 实例捕获已执行处理程序的输出。</span><span class="sxs-lookup"><span data-stu-id="08b8c-135">When overridden in a derived class, executes the handler for the specified virtual path in the context of the current process, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the executed handler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-136">`writer`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.Execute%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-136">The `writer` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.Execute%2A> method.</span></span> <span data-ttu-id="08b8c-137">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `writer` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-137">To retrieve the output from the handler after the method completes, you use the properties and methods of the `writer` object.</span></span> <span data-ttu-id="08b8c-138">有关示例，请参见 <xref:System.Web.HttpServerUtility.Execute%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-138">For an example, see <xref:System.Web.HttpServerUtility.Execute%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-139">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-139">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string * System.IO.TextWriter * bool -&gt; unit&#xA;override this.Execute : string * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtilityBase.Execute (path, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-140">要执行的处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-140">The URL of the handler to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="08b8c-141">用于捕获输出的对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-141">The object to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-142">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-142"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="08b8c-143">在派生类中重写时，为当前请求上下文中指定的虚拟路径执行处理程序，执行时使用 <see cref="T:System.IO.TextWriter" /> 实例捕获页的输出，并使用一个值指示是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="08b8c-143">When overridden in a derived class, executes the handler for the specified virtual path in the context of the current request, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the page and a value that indicates whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-144">`writer`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.Execute%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-144">The `writer` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.Execute%2A> method.</span></span> <span data-ttu-id="08b8c-145">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `writer` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-145">To retrieve the output from the handler after the method completes, you use the properties and methods of the `writer` object.</span></span> <span data-ttu-id="08b8c-146">有关示例，请参见 <xref:System.Web.HttpServerUtility.Execute%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-146">For an example, see <xref:System.Web.HttpServerUtility.Execute%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-147">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-147">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit&#xA;override this.Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtilityBase.Execute (handler, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="08b8c-148">一个 HTTP 处理程序，用于实现要向其传输当前请求的接口。</span><span class="sxs-lookup"><span data-stu-id="08b8c-148">The HTTP handler that implements the interface to transfer the current request to.</span></span></param>
        <param name="writer"><span data-ttu-id="08b8c-149">用于捕获输出的对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-149">The object to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-150">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-150"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="08b8c-151">在派生类中重写时，在当前进程的上下文中执行指定的处理程序，方法是使用 <see cref="T:System.IO.TextWriter" /> 实例捕获已执行处理程序的输出和一个指定是否要清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合的值。</span><span class="sxs-lookup"><span data-stu-id="08b8c-151">When overridden in a derived class, executes the specified handler in the context of the current process, using a <see cref="T:System.IO.TextWriter" /> instance to capture output from the executed handler and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-152">`writer`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.Execute%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-152">The `writer` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.Execute%2A> method.</span></span> <span data-ttu-id="08b8c-153">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `writer` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-153">To retrieve the output from the handler after the method completes, you use the properties and methods of the `writer` object.</span></span> <span data-ttu-id="08b8c-154">有关示例，请参见 <xref:System.Web.HttpServerUtility.Execute%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-154">For an example, see <xref:System.Web.HttpServerUtility.Execute%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-155">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-155">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public virtual Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetLastError();" />
      <MemberSignature Language="F#" Value="abstract member GetLastError : unit -&gt; Exception&#xA;override this.GetLastError : unit -&gt; Exception" Usage="httpServerUtilityBase.GetLastError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08b8c-156">当在派生类中重写时，返回最近发生的异常。</span><span class="sxs-lookup"><span data-stu-id="08b8c-156">When overridden in a derived class, returns the most recent exception.</span></span></summary>
        <returns><span data-ttu-id="08b8c-157">最近引发的异常。</span><span class="sxs-lookup"><span data-stu-id="08b8c-157">The most recent exception that was thrown.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-158">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-158">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-159">在派生类中重写时，对 HTML 编码的字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="08b8c-159">When overridden in a derived class, decodes an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public virtual string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string -&gt; string&#xA;override this.HtmlDecode : string -&gt; string" Usage="httpServerUtilityBase.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-160">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-160">The HTML string to decode.</span></span></param>
        <summary><span data-ttu-id="08b8c-161">在派生类中重写时，对 HTML 编码的字符串进行解码，并返回已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-161">When overridden in a derived class, decodes an HTML-encoded string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="08b8c-162">已解码的文本。</span><span class="sxs-lookup"><span data-stu-id="08b8c-162">The decoded text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-163">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-163">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public virtual void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-164">要解码的 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-164">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="08b8c-165">包含已解码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-165">The stream to contain the decoded string.</span></span></param>
        <summary><span data-ttu-id="08b8c-166">当在派生类中重写时，对 HTML 编码的字符串进行解码，并在流中返回结果。</span><span class="sxs-lookup"><span data-stu-id="08b8c-166">When overridden in a derived class, decodes an HTML-encoded string and returns the results in a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-167">`output`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.HtmlDecode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-167">The `output` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.HtmlDecode%2A> method.</span></span> <span data-ttu-id="08b8c-168">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `output` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-168">To retrieve the output from the handler after the method completes, you use the properties and methods of the `output` object.</span></span> <span data-ttu-id="08b8c-169">有关示例，请参见 <xref:System.Web.HttpServerUtility.HtmlDecode%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-169">For an example, see <xref:System.Web.HttpServerUtility.HtmlDecode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-170">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-170">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-171">在派生类中重写时，对字符串进行 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="08b8c-171">When overridden in a derived class, HTML-encodes a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string -&gt; string&#xA;override this.HtmlEncode : string -&gt; string" Usage="httpServerUtilityBase.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-172">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-172">The string to encode.</span></span></param>
        <summary><span data-ttu-id="08b8c-173">当在派生类中重写时，对字符串进行 HTML 编码，并返回已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-173">When overridden in a derived class, HTML-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="08b8c-174">HTML 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="08b8c-174">The HTML-encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-175">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-175">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-176">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-176">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="08b8c-177">包含已编码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-177">The stream to contain the encoded string.</span></span></param>
        <summary><span data-ttu-id="08b8c-178">在派生类中重写时，对字符串进行 HTML 编码，将得到的输出发送到输出流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-178">When overridden in a derived class, HTML-encodes a string and sends the resulting output to an output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-179">`output`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.HtmlEncode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-179">The `output` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.HtmlEncode%2A> method.</span></span> <span data-ttu-id="08b8c-180">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `output` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-180">To retrieve the output from the handler after the method completes, you use the properties and methods of the `output` object.</span></span> <span data-ttu-id="08b8c-181">有关示例，请参见 <xref:System.Web.HttpServerUtility.HtmlEncode%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-181">For an example, see <xref:System.Web.HttpServerUtility.HtmlEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-182">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-182">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public virtual string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtilityBase.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.HttpServerUtilityBase.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08b8c-183">在派生类中重写时，获取服务器的计算机名称。</span><span class="sxs-lookup"><span data-stu-id="08b8c-183">When overridden in a derived class, gets the server's computer name.</span></span></summary>
        <value><span data-ttu-id="08b8c-184">服务器计算机的名称。</span><span class="sxs-lookup"><span data-stu-id="08b8c-184">The name of the server computer.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-185">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-185">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member MapPath : string -&gt; string&#xA;override this.MapPath : string -&gt; string" Usage="httpServerUtilityBase.MapPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-186">要为其获取物理路径的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="08b8c-186">The virtual path to get the physical path for.</span></span></param>
        <summary><span data-ttu-id="08b8c-187">在派生类中重写时，返回与 Web 服务器上的指定虚拟路径相对应的物理文件路径。</span><span class="sxs-lookup"><span data-stu-id="08b8c-187">When overridden in a derived class, returns the physical file path that corresponds to the specified virtual path on the Web server.</span></span></summary>
        <returns><span data-ttu-id="08b8c-188">对应于 <paramref name="path" /> 的物理文件路径。</span><span class="sxs-lookup"><span data-stu-id="08b8c-188">The physical file path that corresponds to <paramref name="path" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-189">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-189">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public virtual int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtilityBase.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTimeout : int with get, set" Usage="System.Web.HttpServerUtilityBase.ScriptTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08b8c-190">在派生类中重写时，获取或设置请求超时值（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="08b8c-190">When overridden in a derived class, gets or sets the request time-out value in seconds.</span></span></summary>
        <value><span data-ttu-id="08b8c-191">请求的超时值。</span><span class="sxs-lookup"><span data-stu-id="08b8c-191">The time-out value for requests.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-192">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-192">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-193">在派生类中重写时，终止当前进程的执行，然后开始为当前请求执行另一个进程。</span><span class="sxs-lookup"><span data-stu-id="08b8c-193">When overridden in a derived class, terminates execution of the current process and starts execution of a different process for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Transfer : string -&gt; unit&#xA;override this.Transfer : string -&gt; unit" Usage="httpServerUtilityBase.Transfer path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-194">要执行的页面或处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-194">The URL of the page or handler to execute.</span></span></param>
        <summary><span data-ttu-id="08b8c-195">在派生类中重写时，终止执行当前进程，并且开始执行使用 URL 指定的页面或处理程序。</span><span class="sxs-lookup"><span data-stu-id="08b8c-195">When overridden in a derived class, terminates execution of the current process and starts execution of a page or handler that is specified with a URL.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-196">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-196">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Transfer : string * bool -&gt; unit&#xA;override this.Transfer : string * bool -&gt; unit" Usage="httpServerUtilityBase.Transfer (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-197">要执行的页面或处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-197">The URL of the page or handler to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-198">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-198"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="08b8c-199">在派生类中重写时，通过使用指定的 URL 以及一个指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合的值，终止当前页面的执行，然后开始执行另一个页面或处理程序。</span><span class="sxs-lookup"><span data-stu-id="08b8c-199">When overridden in a derived class, terminates execution of the current page and starts execution of a different page or handler by using the specified URL and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-200">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-200">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Transfer : System.Web.IHttpHandler * bool -&gt; unit&#xA;override this.Transfer : System.Web.IHttpHandler * bool -&gt; unit" Usage="httpServerUtilityBase.Transfer (handler, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="08b8c-201">要向其传输当前请求的 HTTP 处理程序。</span><span class="sxs-lookup"><span data-stu-id="08b8c-201">The HTTP handler to transfer the current request to.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-202">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-202"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="08b8c-203">在派生类中重写时，通过使用自定义 HTTP 处理程序和一个指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合的值，终止当前进程的执行，然后开始执行新请求。</span><span class="sxs-lookup"><span data-stu-id="08b8c-203">When overridden in a derived class, terminates execution of the current process and starts execution of a new request, using a custom HTTP handler and a value that specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-204">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-204">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-205">在派生类中重写时，异步执行指定的 URL 的终结点。</span><span class="sxs-lookup"><span data-stu-id="08b8c-205">When overridden in a derived class, asynchronously executes the end point at the specified URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string -&gt; unit&#xA;override this.TransferRequest : string -&gt; unit" Usage="httpServerUtilityBase.TransferRequest path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-206">要执行的页面或处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-206">The URL of the page or handler to execute.</span></span></param>
        <summary><span data-ttu-id="08b8c-207">在派生类中重写时，异步执行指定的 URL 的终结点。</span><span class="sxs-lookup"><span data-stu-id="08b8c-207">When overridden in a derived class, asynchronously executes the end point at the specified URL.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-208">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-208">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string * bool -&gt; unit&#xA;override this.TransferRequest : string * bool -&gt; unit" Usage="httpServerUtilityBase.TransferRequest (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-209">要执行的页面或处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-209">The URL of the page or handler to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-210">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-210"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="08b8c-211">在派生类中重写时，异步执行位于指定 URL 上的终结点，并指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="08b8c-211">When overridden in a derived class, asynchronously executes the endpoint at the specified URL and specifies whether to clear the <see cref="P:System.Web.HttpRequestBase.QueryString" /> and <see cref="P:System.Web.HttpRequestBase.Form" /> collections.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-212">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-212">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpServerUtilityBase.TransferRequest (path, preserveForm, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-213">要执行的页面或处理程序的 URL。</span><span class="sxs-lookup"><span data-stu-id="08b8c-213">The URL of the page or handler to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-214">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-214"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <param name="method"><span data-ttu-id="08b8c-215">要用于新请求的 HTTP 方法（<see langword="GET" />、<see langword="POST" /> 等）。</span><span class="sxs-lookup"><span data-stu-id="08b8c-215">The HTTP method (<see langword="GET" />, <see langword="POST" />, and so on) to use for the new request.</span></span> <span data-ttu-id="08b8c-216">如果为 <see langword="null" />，则使用原始请求的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-216">If <see langword="null" />, the HTTP method of the original request is used.</span></span></param>
        <param name="headers"><span data-ttu-id="08b8c-217">用于新请求的请求标头集合。</span><span class="sxs-lookup"><span data-stu-id="08b8c-217">A collection of request headers for the new request.</span></span></param>
        <summary><span data-ttu-id="08b8c-218">在派生类中重写时，使用指定的 HTTP 方法和标头异步执行位于指定的 URL 处的终结点。</span><span class="sxs-lookup"><span data-stu-id="08b8c-218">When overridden in a derived class, asynchronously executes the endpoint at the specified URL by using the specified HTTP method and headers.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-219">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-219">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit&#xA;override this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit" Usage="httpServerUtilityBase.TransferRequest (path, preserveForm, method, headers, preserveUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveForm" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preserveUser" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="08b8c-220">路径。</span><span class="sxs-lookup"><span data-stu-id="08b8c-220">The path.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="08b8c-221">若要保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="true" />；如果要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-221"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <param name="method"><span data-ttu-id="08b8c-222">要用于新请求的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-222">The HTTP method to use for the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="08b8c-223">一个包含用于新请求的请求标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="08b8c-223">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span></span></param>
        <param name="preserveUser"><span data-ttu-id="08b8c-224">若要保存用户标识，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="08b8c-224"><see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="08b8c-225">此方法的其他重载通过 <paramref name="preserveUser" /> 参数设置至  <see langword="true" /> 调回此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="08b8c-225">Other overloads of this method call this method overload with the <paramref name="preserveUser" /> parameter set to <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="08b8c-226">在派生类中实现时，使用指定 HTTP 方法、标头、路径和选项在指定的 URL 上异步执行该终结点，以保留窗体值和保留用户标识。</span><span class="sxs-lookup"><span data-stu-id="08b8c-226">When implemented in a derived class, asynchronously executes the end point at the specified URL, using the specified HTTP method, headers, path, and options to preserve form values and preserve the user identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-227">在派生类中重写时，对编码为仅包含在 URL 中有效的字符的字符串进行解码。</span><span class="sxs-lookup"><span data-stu-id="08b8c-227">When overridden in a derived class, decodes a string that was encoded to include only characters that are valid in a URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public virtual string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member UrlDecode : string -&gt; string&#xA;override this.UrlDecode : string -&gt; string" Usage="httpServerUtilityBase.UrlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-228">要解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-228">The string to decode.</span></span></param>
        <summary><span data-ttu-id="08b8c-229">在派生类中重写时，对 URL 编码的字符串进行解码，并返回已解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-229">When overridden in a derived class, decodes a URL-encoded string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="08b8c-230">已解码的文本。</span><span class="sxs-lookup"><span data-stu-id="08b8c-230">The decoded text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-231">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-231">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public virtual void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member UrlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.UrlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.UrlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-232">要解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-232">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="08b8c-233">包含已解码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-233">The stream to contain the decoded string.</span></span></param>
        <summary><span data-ttu-id="08b8c-234">在派生类中重写时，对 URL 编码的字符串进行解码，并将得到的输出发送到流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-234">When overridden in a derived class, decodes a URL-encoded string and sends the resulting output to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-235">`output`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.UrlDecode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-235">The `output` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.UrlDecode%2A> method.</span></span> <span data-ttu-id="08b8c-236">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `output` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-236">To retrieve the output from the handler after the method completes, you use the properties and methods of the `output` object.</span></span> <span data-ttu-id="08b8c-237">有关示例，请参见 <xref:System.Web.HttpServerUtility.HtmlDecode%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-237">For an example, see <xref:System.Web.HttpServerUtility.HtmlDecode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-238">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-238">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08b8c-239">在派生类中重写时，将字符串编码为仅包含在 URL 中有效的字符。</span><span class="sxs-lookup"><span data-stu-id="08b8c-239">When overridden in a derived class, encodes a string to include only characters that are valid in a URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : string -&gt; string&#xA;override this.UrlEncode : string -&gt; string" Usage="httpServerUtilityBase.UrlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-240">要进行 URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="08b8c-240">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="08b8c-241">在派生类中重写时，对字符串进行 URL 编码，并返回已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-241">When overridden in a derived class, URL-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="08b8c-242">URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="08b8c-242">The URL-encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-243">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-243">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public virtual void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.UrlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.UrlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-244">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-244">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="08b8c-245">包含已编码字符串的流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-245">The stream to contain the encoded string.</span></span></param>
        <summary><span data-ttu-id="08b8c-246">在派生类中重写时，对字符串进行 URL 编码，将得到的输出发送到流。</span><span class="sxs-lookup"><span data-stu-id="08b8c-246">When overridden in a derived class, URL-encodes a string and sends the resulting output to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08b8c-247">`output`参数通过引用传递给 <xref:System.Web.HttpServerUtilityBase.UrlEncode%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08b8c-247">The `output` parameter is passed by reference to the <xref:System.Web.HttpServerUtilityBase.UrlEncode%2A> method.</span></span> <span data-ttu-id="08b8c-248">若要在方法完成后检索处理程序的输出，请使用对象的属性和方法 `output` 。</span><span class="sxs-lookup"><span data-stu-id="08b8c-248">To retrieve the output from the handler after the method completes, you use the properties and methods of the `output` object.</span></span> <span data-ttu-id="08b8c-249">有关示例，请参见 <xref:System.Web.HttpServerUtility.UrlEncode%2A>。</span><span class="sxs-lookup"><span data-stu-id="08b8c-249">For an example, see <xref:System.Web.HttpServerUtility.UrlEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-250">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-250">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpServerUtilityBase.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="08b8c-251">要进行 URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="08b8c-251">The string to URL-encode.</span></span></param>
        <summary><span data-ttu-id="08b8c-252">当在派生类中重写时，对 URL 字符串的路径部分进行 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="08b8c-252">When overridden in a derived class, URL-encodes the path section of a URL string.</span></span></summary>
        <returns><span data-ttu-id="08b8c-253">URL 编码的文本。</span><span class="sxs-lookup"><span data-stu-id="08b8c-253">The URL-encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-254">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-254">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public virtual byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="abstract member UrlTokenDecode : string -&gt; byte[]&#xA;override this.UrlTokenDecode : string -&gt; byte[]" Usage="httpServerUtilityBase.UrlTokenDecode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="08b8c-255">要解码的 URL 字符串标记。</span><span class="sxs-lookup"><span data-stu-id="08b8c-255">The URL string token to decode.</span></span></param>
        <summary><span data-ttu-id="08b8c-256">在派生类中重写时，使用 base64 编码的数字将 URL 字符串标记解码到等效的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="08b8c-256">When overridden in a derived class, decodes a URL string token into an equivalent byte array by using base64-encoded digits.</span></span></summary>
        <returns><span data-ttu-id="08b8c-257">包含解码后的 URL 标记的字节数组。</span><span class="sxs-lookup"><span data-stu-id="08b8c-257">The byte array that contains the decoded URL token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-258">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-258">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="F#" Value="abstract member UrlTokenEncode : byte[] -&gt; string&#xA;override this.UrlTokenEncode : byte[] -&gt; string" Usage="httpServerUtilityBase.UrlTokenEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="08b8c-259">要编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="08b8c-259">The byte array to encode.</span></span></param>
        <summary><span data-ttu-id="08b8c-260">在派生类中重写时，使用 base64 数字将字节数组编码为等效的字符串表示形式，以便使其适用于 URL 的传输。</span><span class="sxs-lookup"><span data-stu-id="08b8c-260">When overridden in a derived class, encodes a byte array into an equivalent string representation by using base64 digits, which makes it usable for transmission on the URL.</span></span></summary>
        <returns><span data-ttu-id="08b8c-261">如果 <paramref name="input" /> 的长度大于 1，则为包含已编码数组的字符串；否则为空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="08b8c-261">The string that contains the encoded array if the length of <paramref name="input" /> is greater than 1; otherwise, an empty string ("")</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="08b8c-262">始终。</span><span class="sxs-lookup"><span data-stu-id="08b8c-262">Always.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
