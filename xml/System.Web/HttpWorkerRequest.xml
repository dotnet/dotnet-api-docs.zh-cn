<Type Name="HttpWorkerRequest" FullName="System.Web.HttpWorkerRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ad244f885d4dd5b73720da903e0cd87183a992b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86654498" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpWorkerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract HttpWorkerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpWorkerRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpWorkerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpWorkerRequest abstract" />
  <TypeSignature Language="F#" Value="type HttpWorkerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>此抽象类定义由 ASP.NET 托管代码用于处理请求的基本辅助方法和枚举。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在大多数情况下，代码不会直接处理， <xref:System.Web.HttpWorkerRequest> 因为请求和响应数据通过 <xref:System.Web.HttpRequest> 和 <xref:System.Web.HttpResponse> 类公开。 某些内部 ASP.NET 类扩展了此类。 如果代码实现自己的宿主环境，则需要扩展此类以调用 <xref:System.Web.HttpRuntime.ProcessRequest%2A> 方法。 此外，你的代码可以创建一个派生类，以便在给定应用程序中执行子请求，以便将其实例传递到 <xref:System.Web.HttpRuntime.ProcessRequest%2A> 。 在这种情况下，派生类应保留对当前的引用 <xref:System.Web.HttpWorkerRequest> 并将大多数方法委托给它。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWorkerRequest ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWorkerRequest();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="protected HttpWorkerRequest ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpWorkerRequest();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.HttpWorkerRequest" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpWorkerRequest.%23ctor%2A>构造函数是类的无参数构造函数 <xref:System.Web.HttpWorkerRequest> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpWorkerRequest.BeginFlush (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback">相应异步操作完成时要调用的方法。</param>
        <param name="state">一个用户提供的对象，它将该特定的异步刷新操作与其他请求区别开来。</param>
        <summary>向客户端发送当前所有缓冲的响应。</summary>
        <returns>辅助请求缓冲区状态、标题和响应正文，直到生成创始异步的操作。 如果潜在的 <see cref="T:System.Web.HttpWorkerRequest" /> 对象支持异步刷新，且该方法是被异步模块事件或异步处理程序所调用，则发送操作将以异步方式执行。 否则，实现执行同步刷新操作。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpWorkerRequest.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer">数据读入的缓冲区。</param>
        <param name="offset">缓冲区中开始写入数据的字节偏移量。</param>
        <param name="count">最多读取的字节数。</param>
        <param name="callback">相应异步操作完成时要调用的方法。</param>
        <param name="state">一个用户提供的对象，它将该特定的异步读取与其他请求区别开来。</param>
        <summary>启动请求的实体正文中的一次异步读取操作。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public virtual void CloseConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseConnection();" />
      <MemberSignature Language="F#" Value="abstract member CloseConnection : unit -&gt; unit&#xA;override this.CloseConnection : unit -&gt; unit" Usage="httpWorkerRequest.CloseConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>终止与客户端的连接。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public virtual void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; unit&#xA;override this.EndFlush : IAsyncResult -&gt; unit" Usage="httpWorkerRequest.EndFlush asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult">对挂起的异步请求的引用。</param>
        <summary>等待挂起的异步刷新操作完成。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfRequest">
      <MemberSignature Language="C#" Value="public abstract void EndOfRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOfRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndOfRequest" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndOfRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndOfRequest();" />
      <MemberSignature Language="F#" Value="abstract member EndOfRequest : unit -&gt; unit" Usage="httpWorkerRequest.EndOfRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>由运行时使用以通知 <see cref="T:System.Web.HttpWorkerRequest" /> 当前请求的请求处理已完成。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndRead : IAsyncResult -&gt; int&#xA;override this.EndRead : IAsyncResult -&gt; int" Usage="httpWorkerRequest.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult">对挂起的异步请求的引用。</param>
        <summary>等待挂起的异步读操作完成。</summary>
        <returns>已经从流中读取的最大字节数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushResponse">
      <MemberSignature Language="C#" Value="public abstract void FlushResponse (bool finalFlush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlushResponse(bool finalFlush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub FlushResponse (finalFlush As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void FlushResponse(bool finalFlush);" />
      <MemberSignature Language="F#" Value="abstract member FlushResponse : bool -&gt; unit" Usage="httpWorkerRequest.FlushResponse finalFlush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalFlush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalFlush">如果这将是最后一次刷新响应数据，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将所有挂起的响应数据发送到客户端。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPath">
      <MemberSignature Language="C#" Value="public virtual string GetAppPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAppPath();" />
      <MemberSignature Language="F#" Value="abstract member GetAppPath : unit -&gt; string&#xA;override this.GetAppPath : unit -&gt; string" Usage="httpWorkerRequest.GetAppPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前正在执行的服务器应用程序的虚拟路径。</summary>
        <returns>当前应用程序的虚拟路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetAppPathTranslated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPathTranslated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPathTranslated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPathTranslated () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAppPathTranslated();" />
      <MemberSignature Language="F#" Value="abstract member GetAppPathTranslated : unit -&gt; string&#xA;override this.GetAppPathTranslated : unit -&gt; string" Usage="httpWorkerRequest.GetAppPathTranslated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前正在执行的服务器应用程序的物理路径。</summary>
        <returns>当前应用程序的物理路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppPoolID">
      <MemberSignature Language="C#" Value="public virtual string GetAppPoolID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAppPoolID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetAppPoolID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAppPoolID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAppPoolID();" />
      <MemberSignature Language="F#" Value="abstract member GetAppPoolID : unit -&gt; string&#xA;override this.GetAppPoolID : unit -&gt; string" Usage="httpWorkerRequest.GetAppPoolID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回当前 URL 的应用程序池 ID。</summary>
        <returns>始终返回 null。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytesRead">
      <MemberSignature Language="C#" Value="public virtual long GetBytesRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytesRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetBytesRead" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytesRead () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetBytesRead();" />
      <MemberSignature Language="F#" Value="abstract member GetBytesRead : unit -&gt; int64&#xA;override this.GetBytesRead : unit -&gt; int64" Usage="httpWorkerRequest.GetBytesRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取从客户端读入的字节数。</summary>
        <returns>包含读取的字节数的 <see langword="Long" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificate () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="abstract member GetClientCertificate : unit -&gt; byte[]&#xA;override this.GetClientCertificate : unit -&gt; byte[]" Usage="httpWorkerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，从客户端发出的请求获取证书字段（以 X.509 标准指定）。</summary>
        <returns>包含整个证书内容流的字节数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未发送证书，则 <xref:System.Web.HttpRequest.ClientCertificate%2A> 集合返回空。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateBinaryIssuer">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificateBinaryIssuer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificateBinaryIssuer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateBinaryIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateBinaryIssuer () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetClientCertificateBinaryIssuer();" />
      <MemberSignature Language="F#" Value="abstract member GetClientCertificateBinaryIssuer : unit -&gt; byte[]&#xA;override this.GetClientCertificateBinaryIssuer : unit -&gt; byte[]" Usage="httpWorkerRequest.GetClientCertificateBinaryIssuer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取证书颁发者（以二进制格式表示）。</summary>
        <returns>包含以二进制格式表示的证书颁发者的字节数组。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateEncoding">
      <MemberSignature Language="C#" Value="public virtual int GetClientCertificateEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetClientCertificateEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateEncoding () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetClientCertificateEncoding();" />
      <MemberSignature Language="F#" Value="abstract member GetClientCertificateEncoding : unit -&gt; int&#xA;override this.GetClientCertificateEncoding : unit -&gt; int" Usage="httpWorkerRequest.GetClientCertificateEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回用于编码客户端证书的 <see cref="T:System.Text.Encoding" /> 对象。</summary>
        <returns>表示为整数的证书编码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificatePublicKey">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificatePublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetClientCertificatePublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificatePublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificatePublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetClientCertificatePublicKey();" />
      <MemberSignature Language="F#" Value="abstract member GetClientCertificatePublicKey : unit -&gt; byte[]&#xA;override this.GetClientCertificatePublicKey : unit -&gt; byte[]" Usage="httpWorkerRequest.GetClientCertificatePublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，获取与客户端证书关联的 <see langword="PublicKey" /> 对象。</summary>
        <returns><see langword="PublicKey" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateValidFrom">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidFrom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetClientCertificateValidFrom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateValidFrom () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime GetClientCertificateValidFrom();" />
      <MemberSignature Language="F#" Value="abstract member GetClientCertificateValidFrom : unit -&gt; DateTime&#xA;override this.GetClientCertificateValidFrom : unit -&gt; DateTime" Usage="httpWorkerRequest.GetClientCertificateValidFrom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，则获取证书开始生效的日期。 此日期随区域设置的不同而不同。</summary>
        <returns>表示证书生效时间的 <see cref="T:System.DateTime" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateValidUntil">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidUntil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetClientCertificateValidUntil() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetClientCertificateValidUntil" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClientCertificateValidUntil () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime GetClientCertificateValidUntil();" />
      <MemberSignature Language="F#" Value="abstract member GetClientCertificateValidUntil : unit -&gt; DateTime&#xA;override this.GetClientCertificateValidUntil : unit -&gt; DateTime" Usage="httpWorkerRequest.GetClientCertificateValidUntil " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取证书到期日期。</summary>
        <returns>表示证书失效日期的 <see cref="T:System.DateTime" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionID">
      <MemberSignature Language="C#" Value="public virtual long GetConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetConnectionID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionID () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionID : unit -&gt; int64&#xA;override this.GetConnectionID : unit -&gt; int64" Usage="httpWorkerRequest.GetConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回当前连接的 ID。</summary>
        <returns>始终返回 0。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilePath">
      <MemberSignature Language="C#" Value="public virtual string GetFilePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilePath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilePath();" />
      <MemberSignature Language="F#" Value="abstract member GetFilePath : unit -&gt; string&#xA;override this.GetFilePath : unit -&gt; string" Usage="httpWorkerRequest.GetFilePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回所请求的 URI 的虚拟路径。</summary>
        <returns>请求的 URI 的路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilePathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetFilePathTranslated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePathTranslated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetFilePathTranslated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilePathTranslated () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilePathTranslated();" />
      <MemberSignature Language="F#" Value="abstract member GetFilePathTranslated : unit -&gt; string&#xA;override this.GetFilePathTranslated : unit -&gt; string" Usage="httpWorkerRequest.GetFilePathTranslated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回请求的 URI 的物理文件路径（并将其从虚拟路径转换成物理路径：例如，从“/proj1/page.aspx”转换成“c:\dir\page.aspx”）</summary>
        <returns>请求的 URI 的已转换的物理文件路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpVerbName">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVerbName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetHttpVerbName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetHttpVerbName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHttpVerbName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetHttpVerbName();" />
      <MemberSignature Language="F#" Value="abstract member GetHttpVerbName : unit -&gt; string" Usage="httpWorkerRequest.GetHttpVerbName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回请求标头的指定成员。</summary>
        <returns>请求标头中返回的 HTTP 谓词。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpVersion">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetHttpVersion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetHttpVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHttpVersion () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetHttpVersion();" />
      <MemberSignature Language="F#" Value="abstract member GetHttpVersion : unit -&gt; string" Usage="httpWorkerRequest.GetHttpVersion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供对请求的 HTTP 版本（如“HTTP/1.1”）的访问。</summary>
        <returns>请求标头中返回的 HTTP 版本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetKnownRequestHeader (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKnownRequestHeader(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKnownRequestHeader (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKnownRequestHeader(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKnownRequestHeader : int -&gt; string&#xA;override this.GetKnownRequestHeader : int -&gt; string" Usage="httpWorkerRequest.GetKnownRequestHeader index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">标头的索引。 例如，<see cref="F:System.Web.HttpWorkerRequest.HeaderAllow" /> 字段。</param>
        <summary>返回与指定的索引相对应的标准 HTTP 请求标头。</summary>
        <returns>HTTP 请求标头。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownRequestHeaderIndex (string header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetKnownRequestHeaderIndex(string header) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownRequestHeaderIndex (header As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetKnownRequestHeaderIndex(System::String ^ header);" />
      <MemberSignature Language="F#" Value="static member GetKnownRequestHeaderIndex : string -&gt; int" Usage="System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex header" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">标头的名称。</param>
        <summary>返回指定的 HTTP 请求标头的索引号。</summary>
        <returns>在 <paramref name="header" /> 参数中指定的 HTTP 请求标头的索引号。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownRequestHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownRequestHeaderName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetKnownRequestHeaderName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownRequestHeaderName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetKnownRequestHeaderName(int index);" />
      <MemberSignature Language="F#" Value="static member GetKnownRequestHeaderName : int -&gt; string" Usage="System.Web.HttpWorkerRequest.GetKnownRequestHeaderName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">标头的索引号。</param>
        <summary>返回指定的 HTTP 请求标头的名称。</summary>
        <returns>在 <paramref name="index" /> 参数中指定的 HTTP 请求标头的名称。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownResponseHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownResponseHeaderIndex (string header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetKnownResponseHeaderIndex(string header) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownResponseHeaderIndex (header As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetKnownResponseHeaderIndex(System::String ^ header);" />
      <MemberSignature Language="F#" Value="static member GetKnownResponseHeaderIndex : string -&gt; int" Usage="System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex header" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="header">HTTP 头的名称。</param>
        <summary>返回指定的 HTTP 响应标头的索引号。</summary>
        <returns>在 <paramref name="header" /> 参数中指定的 HTTP 响应标头的索引号。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownResponseHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownResponseHeaderName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetKnownResponseHeaderName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKnownResponseHeaderName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetKnownResponseHeaderName(int index);" />
      <MemberSignature Language="F#" Value="static member GetKnownResponseHeaderName : int -&gt; string" Usage="System.Web.HttpWorkerRequest.GetKnownResponseHeaderName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">标头的索引号。</param>
        <summary>返回指定的 HTTP 响应标头的名称。</summary>
        <returns>在 <paramref name="index" /> 参数中指定的 HTTP 响应标头的名称。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalAddress">
      <MemberSignature Language="C#" Value="public abstract string GetLocalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLocalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetLocalAddress" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLocalAddress () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetLocalAddress();" />
      <MemberSignature Language="F#" Value="abstract member GetLocalAddress : unit -&gt; string" Usage="httpWorkerRequest.GetLocalAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供对请求标头的指定成员的访问。</summary>
        <returns>请求标头中返回的服务器 IP 地址。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalPort">
      <MemberSignature Language="C#" Value="public abstract int GetLocalPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLocalPort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetLocalPort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLocalPort () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetLocalPort();" />
      <MemberSignature Language="F#" Value="abstract member GetLocalPort : unit -&gt; int" Usage="httpWorkerRequest.GetLocalPort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供对请求标头的指定成员的访问。</summary>
        <returns>请求标头中返回的服务器端口号。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathInfo">
      <MemberSignature Language="C#" Value="public virtual string GetPathInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPathInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPathInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPathInfo () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPathInfo();" />
      <MemberSignature Language="F#" Value="abstract member GetPathInfo : unit -&gt; string&#xA;override this.GetPathInfo : unit -&gt; string" Usage="httpWorkerRequest.GetPathInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回具有 URL 扩展的资源的其他路径信息。 即对于路径 /virdir/page.html/tail，<see langword="GetPathInfo" /> 值为 /tail。</summary>
        <returns>资源的附加路径信息。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreloadedEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>已重载。 返回 HTTP 请求正文当前已被读取的部分。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreloadedEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreloadedEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreloadedEntityBody () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreloadedEntityBody();" />
      <MemberSignature Language="F#" Value="abstract member GetPreloadedEntityBody : unit -&gt; byte[]&#xA;override this.GetPreloadedEntityBody : unit -&gt; byte[]" Usage="httpWorkerRequest.GetPreloadedEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 HTTP 请求正文已被读取的部分。</summary>
        <returns>HTTP 请求正文已被读取的部分。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBody (byte[] buffer, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreloadedEntityBody(unsigned int8[] buffer, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreloadedEntityBody (buffer As Byte(), offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreloadedEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset);" />
      <MemberSignature Language="F#" Value="abstract member GetPreloadedEntityBody : byte[] * int -&gt; int&#xA;override this.GetPreloadedEntityBody : byte[] * int -&gt; int" Usage="httpWorkerRequest.GetPreloadedEntityBody (buffer, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer">要读取的数据。</param>
        <param name="offset">开始读取的位置的字节偏移量。</param>
        <summary>使用指定的缓冲区数据和字节偏移量获取 HTTP 请求正文当前已被读取的部分。</summary>
        <returns>HTTP 请求正文已被读取的部分。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBodyLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreloadedEntityBodyLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBodyLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreloadedEntityBodyLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreloadedEntityBodyLength();" />
      <MemberSignature Language="F#" Value="abstract member GetPreloadedEntityBodyLength : unit -&gt; int&#xA;override this.GetPreloadedEntityBodyLength : unit -&gt; int" Usage="httpWorkerRequest.GetPreloadedEntityBodyLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取 HTTP 请求正文当前已被读取部分的长度。</summary>
        <returns>一个整数，包含当前已读取的 HTTP 请求正文的长度。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProtocol">
      <MemberSignature Language="C#" Value="public virtual string GetProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProtocol () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetProtocol();" />
      <MemberSignature Language="F#" Value="abstract member GetProtocol : unit -&gt; string&#xA;override this.GetProtocol : unit -&gt; string" Usage="httpWorkerRequest.GetProtocol " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回 HTTP 协议（HTTP 或 HTTPS）。</summary>
        <returns>如果 <see cref="M:System.Web.HttpWorkerRequest.IsSecure" /> 方法为 <see langword="true" />，则为 HTTPS；否则，为 HTTP。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryString">
      <MemberSignature Language="C#" Value="public abstract string GetQueryString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetQueryString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetQueryString" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetQueryString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetQueryString();" />
      <MemberSignature Language="F#" Value="abstract member GetQueryString : unit -&gt; string" Usage="httpWorkerRequest.GetQueryString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回请求 URL 中指定的查询字符串。</summary>
        <returns>请求查询字符串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryStringRawBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetQueryStringRawBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetQueryStringRawBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetQueryStringRawBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueryStringRawBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetQueryStringRawBytes();" />
      <MemberSignature Language="F#" Value="abstract member GetQueryStringRawBytes : unit -&gt; byte[]&#xA;override this.GetQueryStringRawBytes : unit -&gt; byte[]" Usage="httpWorkerRequest.GetQueryStringRawBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，以字节数组的形式返回响应查询字符串。</summary>
        <returns>包含响应的字节数组。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawUrl">
      <MemberSignature Language="C#" Value="public abstract string GetRawUrl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRawUrl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRawUrl" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRawUrl () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetRawUrl();" />
      <MemberSignature Language="F#" Value="abstract member GetRawUrl : unit -&gt; string" Usage="httpWorkerRequest.GetRawUrl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回附加了查询字符串的请求标头中包含的 URL 路径。</summary>
        <returns>请求标头的原始 URL 路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteAddress">
      <MemberSignature Language="C#" Value="public abstract string GetRemoteAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRemoteAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRemoteAddress () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetRemoteAddress();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteAddress : unit -&gt; string" Usage="httpWorkerRequest.GetRemoteAddress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供对请求标头的指定成员的访问。</summary>
        <returns>客户端的 IP 地址。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteName">
      <MemberSignature Language="C#" Value="public virtual string GetRemoteName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRemoteName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemoteName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetRemoteName();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteName : unit -&gt; string&#xA;override this.GetRemoteName : unit -&gt; string" Usage="httpWorkerRequest.GetRemoteName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回客户端计算机的名称。</summary>
        <returns>客户端计算机的名称。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemotePort">
      <MemberSignature Language="C#" Value="public abstract int GetRemotePort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemotePort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRemotePort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRemotePort () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetRemotePort();" />
      <MemberSignature Language="F#" Value="abstract member GetRemotePort : unit -&gt; int" Usage="httpWorkerRequest.GetRemotePort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供对请求标头的指定成员的访问。</summary>
        <returns>客户端的 HTTP 端口号。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestReason">
      <MemberSignature Language="C#" Value="public virtual int GetRequestReason ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRequestReason() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestReason () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRequestReason();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestReason : unit -&gt; int&#xA;override this.GetRequestReason : unit -&gt; int" Usage="httpWorkerRequest.GetRequestReason " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回请求的原因。</summary>
        <returns>原因代码。 默认为 <see langword="ReasonResponseCacheMiss" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerName">
      <MemberSignature Language="C#" Value="public virtual string GetServerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetServerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetServerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetServerName();" />
      <MemberSignature Language="F#" Value="abstract member GetServerName : unit -&gt; string&#xA;override this.GetServerName : unit -&gt; string" Usage="httpWorkerRequest.GetServerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回本地服务器的名称。</summary>
        <returns>本地服务器的名称。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVariable">
      <MemberSignature Language="C#" Value="public virtual string GetServerVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetServerVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetServerVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetServerVariable(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetServerVariable : string -&gt; string&#xA;override this.GetServerVariable : string -&gt; string" Usage="httpWorkerRequest.GetServerVariable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">请求的服务器变量的名称。</param>
        <summary>从与请求关联的服务器变量词典返回单个服务器变量。</summary>
        <returns>请求的服务器变量。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusDescription">
      <MemberSignature Language="C#" Value="public static string GetStatusDescription (int code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStatusDescription(int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStatusDescription (code As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStatusDescription(int code);" />
      <MemberSignature Language="F#" Value="static member GetStatusDescription : int -&gt; string" Usage="System.Web.HttpWorkerRequest.GetStatusDescription code" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">HTTP 状态代码。</param>
        <summary>返回一个字符串，该字符串描述指定的 HTTP 状态代码的名称。</summary>
        <returns>状态说明。 例如，<see cref="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" /> (404) 返回“未找到”。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTotalEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetTotalEntityBodyLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTotalEntityBodyLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetTotalEntityBodyLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTotalEntityBodyLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetTotalEntityBodyLength();" />
      <MemberSignature Language="F#" Value="abstract member GetTotalEntityBodyLength : unit -&gt; int&#xA;override this.GetTotalEntityBodyLength : unit -&gt; int" Usage="httpWorkerRequest.GetTotalEntityBodyLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取整个 HTTP 请求正文的长度。</summary>
        <returns>包含整个 HTTP 请求正文的长度的整数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetUnknownRequestHeader (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUnknownRequestHeader(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnknownRequestHeader (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUnknownRequestHeader(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetUnknownRequestHeader : string -&gt; string&#xA;override this.GetUnknownRequestHeader : string -&gt; string" Usage="httpWorkerRequest.GetUnknownRequestHeader name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">标头名称。</param>
        <summary>返回非标准的 HTTP 请求标头值。</summary>
        <returns>标头值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeaders">
      <MemberSignature Language="C#" Value="public virtual string[][] GetUnknownRequestHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[][] GetUnknownRequestHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnknownRequestHeaders () As String()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;cli::array &lt;System::String ^&gt; ^&gt; ^ GetUnknownRequestHeaders();" />
      <MemberSignature Language="F#" Value="abstract member GetUnknownRequestHeaders : unit -&gt; string[][]&#xA;override this.GetUnknownRequestHeaders : unit -&gt; string[][]" Usage="httpWorkerRequest.GetUnknownRequestHeaders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取所有非标准的 HTTP 标头的名称/值对。</summary>
        <returns>标头的名称/值对的数组。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUriPath">
      <MemberSignature Language="C#" Value="public abstract string GetUriPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUriPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUriPath" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUriPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUriPath();" />
      <MemberSignature Language="F#" Value="abstract member GetUriPath : unit -&gt; string" Usage="httpWorkerRequest.GetUriPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回请求的 URI 的虚拟路径。</summary>
        <returns>请求的 URI 的路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlContextID">
      <MemberSignature Language="C#" Value="public virtual long GetUrlContextID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetUrlContextID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUrlContextID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlContextID () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetUrlContextID();" />
      <MemberSignature Language="F#" Value="abstract member GetUrlContextID : unit -&gt; int64&#xA;override this.GetUrlContextID : unit -&gt; int64" Usage="httpWorkerRequest.GetUrlContextID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中被重写时，返回当前连接的上下文 ID。</summary>
        <returns>始终返回 0。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetUserToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetUserToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetUserToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserToken () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetUserToken();" />
      <MemberSignature Language="F#" Value="abstract member GetUserToken : unit -&gt; nativeint&#xA;override this.GetUserToken : unit -&gt; nativeint" Usage="httpWorkerRequest.GetUserToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中被重写时，返回客户端的模拟标记。</summary>
        <returns>表示客户端的模拟标记的值。 默认值为 0。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPathToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetVirtualPathToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetVirtualPathToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.GetVirtualPathToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualPathToken () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetVirtualPathToken();" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualPathToken : unit -&gt; nativeint&#xA;override this.GetVirtualPathToken : unit -&gt; nativeint" Usage="httpWorkerRequest.GetVirtualPathToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取请求虚拟路径的模拟标记。</summary>
        <returns>请求虚拟路径的标记的非托管内存指针。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Function HasEntityBody () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasEntityBody();" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : unit -&gt; bool" Usage="httpWorkerRequest.HasEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示请求是否包含正文数据。</summary>
        <returns>如果请求包含正文数据，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAccept">
      <MemberSignature Language="C#" Value="public const int HeaderAccept = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAccept = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAccept" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAccept As Integer  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAccept = 20;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAccept : int" Usage="System.Web.HttpWorkerRequest.HeaderAccept" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>指定 <see langword="Accept" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptCharset">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptCharset = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptCharset = (21)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptCharset" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptCharset As Integer  = 21" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptCharset = 21;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAcceptCharset : int" Usage="System.Web.HttpWorkerRequest.HeaderAcceptCharset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>指定 <see langword="Accept-Charset" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptEncoding = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptEncoding = (22)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptEncoding As Integer  = 22" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptEncoding = 22;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAcceptEncoding : int" Usage="System.Web.HttpWorkerRequest.HeaderAcceptEncoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>指定 <see langword="Accept-Encoding" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptLanguage = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptLanguage = (23)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptLanguage As Integer  = 23" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptLanguage = 23;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAcceptLanguage : int" Usage="System.Web.HttpWorkerRequest.HeaderAcceptLanguage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>指定 <see langword="Accept-Language" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAcceptRanges">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptRanges = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAcceptRanges = (20)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAcceptRanges" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAcceptRanges As Integer  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAcceptRanges = 20;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAcceptRanges : int" Usage="System.Web.HttpWorkerRequest.HeaderAcceptRanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>指定 <see langword="Accept-Ranges" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAge">
      <MemberSignature Language="C#" Value="public const int HeaderAge = 21;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAge = (21)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAge" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAge As Integer  = 21" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAge = 21;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAge : int" Usage="System.Web.HttpWorkerRequest.HeaderAge" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>指定 <see langword="Age" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAllow">
      <MemberSignature Language="C#" Value="public const int HeaderAllow = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAllow = (10)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAllow" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAllow As Integer  = 10" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAllow = 10;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAllow : int" Usage="System.Web.HttpWorkerRequest.HeaderAllow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>指定 <see langword="Allow" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderAuthorization = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderAuthorization = (24)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderAuthorization As Integer  = 24" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderAuthorization = 24;" />
      <MemberSignature Language="F#" Value="val mutable HeaderAuthorization : int" Usage="System.Web.HttpWorkerRequest.HeaderAuthorization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>指定 <see langword="Authorization" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderCacheControl">
      <MemberSignature Language="C#" Value="public const int HeaderCacheControl = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderCacheControl = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderCacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderCacheControl As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderCacheControl = 0;" />
      <MemberSignature Language="F#" Value="val mutable HeaderCacheControl : int" Usage="System.Web.HttpWorkerRequest.HeaderCacheControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>表示 HTTP<see langword="Cache-Control" />HTTP 标头的索引。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderConnection">
      <MemberSignature Language="C#" Value="public const int HeaderConnection = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderConnection = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderConnection" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderConnection As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderConnection = 1;" />
      <MemberSignature Language="F#" Value="val mutable HeaderConnection : int" Usage="System.Web.HttpWorkerRequest.HeaderConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定 <see langword="Connection" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderContentEncoding = 13;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentEncoding = (13)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentEncoding As Integer  = 13" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentEncoding = 13;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentEncoding : int" Usage="System.Web.HttpWorkerRequest.HeaderContentEncoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-Encoding" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderContentLanguage = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLanguage = (14)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentLanguage As Integer  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentLanguage = 14;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentLanguage : int" Usage="System.Web.HttpWorkerRequest.HeaderContentLanguage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-Language" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLength">
      <MemberSignature Language="C#" Value="public const int HeaderContentLength = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLength = (11)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentLength As Integer  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentLength = 11;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentLength : int" Usage="System.Web.HttpWorkerRequest.HeaderContentLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-Length" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentLocation">
      <MemberSignature Language="C#" Value="public const int HeaderContentLocation = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentLocation = (15)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentLocation" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentLocation As Integer  = 15" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentLocation = 15;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentLocation : int" Usage="System.Web.HttpWorkerRequest.HeaderContentLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-Location" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentMd5">
      <MemberSignature Language="C#" Value="public const int HeaderContentMd5 = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentMd5 = (16)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentMd5" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentMd5 As Integer  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentMd5 = 16;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentMd5 : int" Usage="System.Web.HttpWorkerRequest.HeaderContentMd5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-MD5" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  

 由于 MD5 出现冲突问题，Microsoft 建议使用基于 SHA256 或更高版本的安全模型。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentRange">
      <MemberSignature Language="C#" Value="public const int HeaderContentRange = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentRange = (17)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentRange" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentRange As Integer  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentRange = 17;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentRange : int" Usage="System.Web.HttpWorkerRequest.HeaderContentRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-Range" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderContentType">
      <MemberSignature Language="C#" Value="public const int HeaderContentType = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderContentType = (12)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderContentType" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderContentType As Integer  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderContentType = 12;" />
      <MemberSignature Language="F#" Value="val mutable HeaderContentType : int" Usage="System.Web.HttpWorkerRequest.HeaderContentType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>指定 <see langword="Content-Type" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderCookie">
      <MemberSignature Language="C#" Value="public const int HeaderCookie = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderCookie = (25)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderCookie" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderCookie As Integer  = 25" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderCookie = 25;" />
      <MemberSignature Language="F#" Value="val mutable HeaderCookie : int" Usage="System.Web.HttpWorkerRequest.HeaderCookie" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>指定 <see langword="Cookie" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderDate">
      <MemberSignature Language="C#" Value="public const int HeaderDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderDate = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderDate" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderDate As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderDate = 2;" />
      <MemberSignature Language="F#" Value="val mutable HeaderDate : int" Usage="System.Web.HttpWorkerRequest.HeaderDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指定 <see langword="Date" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEtag">
      <MemberSignature Language="C#" Value="public const int HeaderEtag = 22;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderEtag = (22)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderEtag" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderEtag As Integer  = 22" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderEtag = 22;" />
      <MemberSignature Language="F#" Value="val mutable HeaderEtag : int" Usage="System.Web.HttpWorkerRequest.HeaderEtag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>指定 <see langword="ETag" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderExpect">
      <MemberSignature Language="C#" Value="public const int HeaderExpect = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderExpect = (26)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderExpect" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderExpect As Integer  = 26" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderExpect = 26;" />
      <MemberSignature Language="F#" Value="val mutable HeaderExpect : int" Usage="System.Web.HttpWorkerRequest.HeaderExpect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>指定 <see langword="Except" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderExpires">
      <MemberSignature Language="C#" Value="public const int HeaderExpires = 18;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderExpires = (18)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderExpires" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderExpires As Integer  = 18" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderExpires = 18;" />
      <MemberSignature Language="F#" Value="val mutable HeaderExpires : int" Usage="System.Web.HttpWorkerRequest.HeaderExpires" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>指定 <see langword="Expires" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderFrom">
      <MemberSignature Language="C#" Value="public const int HeaderFrom = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderFrom = (27)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderFrom" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderFrom As Integer  = 27" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderFrom = 27;" />
      <MemberSignature Language="F#" Value="val mutable HeaderFrom : int" Usage="System.Web.HttpWorkerRequest.HeaderFrom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>指定 <see langword="From" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderHost">
      <MemberSignature Language="C#" Value="public const int HeaderHost = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderHost = (28)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderHost" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderHost As Integer  = 28" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderHost = 28;" />
      <MemberSignature Language="F#" Value="val mutable HeaderHost : int" Usage="System.Web.HttpWorkerRequest.HeaderHost" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>指定 <see langword="Host" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfMatch = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfMatch = (29)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfMatch" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfMatch As Integer  = 29" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfMatch = 29;" />
      <MemberSignature Language="F#" Value="val mutable HeaderIfMatch : int" Usage="System.Web.HttpWorkerRequest.HeaderIfMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>指定 <see langword="If-Match" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfModifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfModifiedSince = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfModifiedSince = (30)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfModifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfModifiedSince As Integer  = 30" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfModifiedSince = 30;" />
      <MemberSignature Language="F#" Value="val mutable HeaderIfModifiedSince : int" Usage="System.Web.HttpWorkerRequest.HeaderIfModifiedSince" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>指定 <see langword="If-Modified-Since" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfNoneMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfNoneMatch = 31;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfNoneMatch = (31)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfNoneMatch" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfNoneMatch As Integer  = 31" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfNoneMatch = 31;" />
      <MemberSignature Language="F#" Value="val mutable HeaderIfNoneMatch : int" Usage="System.Web.HttpWorkerRequest.HeaderIfNoneMatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary>指定 <see langword="If-None-Match" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfRange">
      <MemberSignature Language="C#" Value="public const int HeaderIfRange = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfRange = (32)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfRange" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfRange As Integer  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfRange = 32;" />
      <MemberSignature Language="F#" Value="val mutable HeaderIfRange : int" Usage="System.Web.HttpWorkerRequest.HeaderIfRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>指定 <see langword="If-Range" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderIfUnmodifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfUnmodifiedSince = 33;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderIfUnmodifiedSince = (33)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderIfUnmodifiedSince As Integer  = 33" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderIfUnmodifiedSince = 33;" />
      <MemberSignature Language="F#" Value="val mutable HeaderIfUnmodifiedSince : int" Usage="System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>33</MemberValue>
      <Docs>
        <summary>指定 <see langword="If-Unmodified-Since" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderKeepAlive">
      <MemberSignature Language="C#" Value="public const int HeaderKeepAlive = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderKeepAlive = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderKeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderKeepAlive As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderKeepAlive = 3;" />
      <MemberSignature Language="F#" Value="val mutable HeaderKeepAlive : int" Usage="System.Web.HttpWorkerRequest.HeaderKeepAlive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>指定 <see langword="Keep-Alive" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderLastModified">
      <MemberSignature Language="C#" Value="public const int HeaderLastModified = 19;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderLastModified = (19)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderLastModified" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderLastModified As Integer  = 19" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderLastModified = 19;" />
      <MemberSignature Language="F#" Value="val mutable HeaderLastModified : int" Usage="System.Web.HttpWorkerRequest.HeaderLastModified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>指定 <see langword="Last-Modified" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderLocation">
      <MemberSignature Language="C#" Value="public const int HeaderLocation = 23;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderLocation = (23)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderLocation" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderLocation As Integer  = 23" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderLocation = 23;" />
      <MemberSignature Language="F#" Value="val mutable HeaderLocation : int" Usage="System.Web.HttpWorkerRequest.HeaderLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>指定 <see langword="Location" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderMaxForwards">
      <MemberSignature Language="C#" Value="public const int HeaderMaxForwards = 34;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderMaxForwards = (34)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderMaxForwards" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderMaxForwards As Integer  = 34" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderMaxForwards = 34;" />
      <MemberSignature Language="F#" Value="val mutable HeaderMaxForwards : int" Usage="System.Web.HttpWorkerRequest.HeaderMaxForwards" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>34</MemberValue>
      <Docs>
        <summary>指定 <see langword="Max-Forwards" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderPragma">
      <MemberSignature Language="C#" Value="public const int HeaderPragma = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderPragma = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderPragma" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderPragma As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderPragma = 4;" />
      <MemberSignature Language="F#" Value="val mutable HeaderPragma : int" Usage="System.Web.HttpWorkerRequest.HeaderPragma" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>指定 <see langword="Pragma" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProxyAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthenticate = 24;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderProxyAuthenticate = (24)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderProxyAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderProxyAuthenticate As Integer  = 24" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderProxyAuthenticate = 24;" />
      <MemberSignature Language="F#" Value="val mutable HeaderProxyAuthenticate : int" Usage="System.Web.HttpWorkerRequest.HeaderProxyAuthenticate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>指定 <see langword="Proxy-Authenticate" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProxyAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthorization = 35;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderProxyAuthorization = (35)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderProxyAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderProxyAuthorization As Integer  = 35" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderProxyAuthorization = 35;" />
      <MemberSignature Language="F#" Value="val mutable HeaderProxyAuthorization : int" Usage="System.Web.HttpWorkerRequest.HeaderProxyAuthorization" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary>指定 <see langword="Proxy-Authorization" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRange">
      <MemberSignature Language="C#" Value="public const int HeaderRange = 37;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderRange = (37)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderRange" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderRange As Integer  = 37" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderRange = 37;" />
      <MemberSignature Language="F#" Value="val mutable HeaderRange : int" Usage="System.Web.HttpWorkerRequest.HeaderRange" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>指定 <see langword="Range" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderReferer">
      <MemberSignature Language="C#" Value="public const int HeaderReferer = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderReferer = (36)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderReferer" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderReferer As Integer  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderReferer = 36;" />
      <MemberSignature Language="F#" Value="val mutable HeaderReferer : int" Usage="System.Web.HttpWorkerRequest.HeaderReferer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>指定 <see langword="Referer" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRetryAfter">
      <MemberSignature Language="C#" Value="public const int HeaderRetryAfter = 25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderRetryAfter = (25)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderRetryAfter" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderRetryAfter As Integer  = 25" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderRetryAfter = 25;" />
      <MemberSignature Language="F#" Value="val mutable HeaderRetryAfter : int" Usage="System.Web.HttpWorkerRequest.HeaderRetryAfter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>指定 <see langword="Retry-After" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderServer">
      <MemberSignature Language="C#" Value="public const int HeaderServer = 26;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderServer = (26)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderServer" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderServer As Integer  = 26" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderServer = 26;" />
      <MemberSignature Language="F#" Value="val mutable HeaderServer : int" Usage="System.Web.HttpWorkerRequest.HeaderServer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>指定 <see langword="Server" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSetCookie">
      <MemberSignature Language="C#" Value="public const int HeaderSetCookie = 27;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderSetCookie = (27)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderSetCookie" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderSetCookie As Integer  = 27" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderSetCookie = 27;" />
      <MemberSignature Language="F#" Value="val mutable HeaderSetCookie : int" Usage="System.Web.HttpWorkerRequest.HeaderSetCookie" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>指定 <see langword="Set-Cookie" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersSent">
      <MemberSignature Language="C#" Value="public virtual bool HeadersSent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HeadersSent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.HeadersSent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HeadersSent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HeadersSent();" />
      <MemberSignature Language="F#" Value="abstract member HeadersSent : unit -&gt; bool&#xA;override this.HeadersSent : unit -&gt; bool" Usage="httpWorkerRequest.HeadersSent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示是否已为当前的请求将 HTTP 响应标头发送到客户端。</summary>
        <returns>如果 HTTP 响应标头已发送到客户端，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTe">
      <MemberSignature Language="C#" Value="public const int HeaderTe = 38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTe = (38)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTe" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderTe As Integer  = 38" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderTe = 38;" />
      <MemberSignature Language="F#" Value="val mutable HeaderTe : int" Usage="System.Web.HttpWorkerRequest.HeaderTe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>38</MemberValue>
      <Docs>
        <summary>指定 <see langword="TE" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTrailer">
      <MemberSignature Language="C#" Value="public const int HeaderTrailer = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTrailer = (5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTrailer" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderTrailer As Integer  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderTrailer = 5;" />
      <MemberSignature Language="F#" Value="val mutable HeaderTrailer : int" Usage="System.Web.HttpWorkerRequest.HeaderTrailer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>指定 <see langword="Trailer" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTransferEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderTransferEncoding = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderTransferEncoding = (6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderTransferEncoding As Integer  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderTransferEncoding = 6;" />
      <MemberSignature Language="F#" Value="val mutable HeaderTransferEncoding : int" Usage="System.Web.HttpWorkerRequest.HeaderTransferEncoding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>指定 <see langword="Transfer-Encoding" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderUpgrade">
      <MemberSignature Language="C#" Value="public const int HeaderUpgrade = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderUpgrade = (7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderUpgrade As Integer  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderUpgrade = 7;" />
      <MemberSignature Language="F#" Value="val mutable HeaderUpgrade : int" Usage="System.Web.HttpWorkerRequest.HeaderUpgrade" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>指定 <see langword="Upgrade" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderUserAgent">
      <MemberSignature Language="C#" Value="public const int HeaderUserAgent = 39;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderUserAgent = (39)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderUserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderUserAgent As Integer  = 39" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderUserAgent = 39;" />
      <MemberSignature Language="F#" Value="val mutable HeaderUserAgent : int" Usage="System.Web.HttpWorkerRequest.HeaderUserAgent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>39</MemberValue>
      <Docs>
        <summary>指定 <see langword="User-Agent" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVary">
      <MemberSignature Language="C#" Value="public const int HeaderVary = 28;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderVary = (28)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderVary" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderVary As Integer  = 28" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderVary = 28;" />
      <MemberSignature Language="F#" Value="val mutable HeaderVary : int" Usage="System.Web.HttpWorkerRequest.HeaderVary" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>指定 <see langword="Vary" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderVia">
      <MemberSignature Language="C#" Value="public const int HeaderVia = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderVia = (8)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderVia" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderVia As Integer  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderVia = 8;" />
      <MemberSignature Language="F#" Value="val mutable HeaderVia : int" Usage="System.Web.HttpWorkerRequest.HeaderVia" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>指定 <see langword="Via" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWarning">
      <MemberSignature Language="C#" Value="public const int HeaderWarning = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderWarning = (9)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderWarning As Integer  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderWarning = 9;" />
      <MemberSignature Language="F#" Value="val mutable HeaderWarning : int" Usage="System.Web.HttpWorkerRequest.HeaderWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>指定 <see langword="Warning" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderWwwAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderWwwAuthenticate = 29;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HeaderWwwAuthenticate = (29)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.HeaderWwwAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Const HeaderWwwAuthenticate As Integer  = 29" />
      <MemberSignature Language="C++ CLI" Value="public: int HeaderWwwAuthenticate = 29;" />
      <MemberSignature Language="F#" Value="val mutable HeaderWwwAuthenticate : int" Usage="System.Web.HttpWorkerRequest.HeaderWwwAuthenticate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>指定 <see langword="WWW-Authenticate" />HTTP 标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsClientConnected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsClientConnected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsClientConnected () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsClientConnected();" />
      <MemberSignature Language="F#" Value="abstract member IsClientConnected : unit -&gt; bool&#xA;override this.IsClientConnected : unit -&gt; bool" Usage="httpWorkerRequest.IsClientConnected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示客户端连接是否仍处于活动状态。</summary>
        <returns>如果客户端连接仍处于活动状态，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEntireEntityBodyIsPreloaded">
      <MemberSignature Language="C#" Value="public virtual bool IsEntireEntityBodyIsPreloaded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEntireEntityBodyIsPreloaded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEntireEntityBodyIsPreloaded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEntireEntityBodyIsPreloaded();" />
      <MemberSignature Language="F#" Value="abstract member IsEntireEntityBodyIsPreloaded : unit -&gt; bool&#xA;override this.IsEntireEntityBodyIsPreloaded : unit -&gt; bool" Usage="httpWorkerRequest.IsEntireEntityBodyIsPreloaded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示是否所有请求数据都可用，以及是否不需要对客户端进行进一步读取。</summary>
        <returns>如果所有请求数据都可用，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.IsSecure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSecure () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSecure();" />
      <MemberSignature Language="F#" Value="abstract member IsSecure : unit -&gt; bool&#xA;override this.IsSecure : unit -&gt; bool" Usage="httpWorkerRequest.IsSecure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个指示连接是否使用 SSL 的值。</summary>
        <returns>如果连接为 SSL 连接，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineConfigPath">
      <MemberSignature Language="C#" Value="public virtual string MachineConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineConfigPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.MachineConfigPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineConfigPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineConfigPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineConfigPath : string" Usage="System.Web.HttpWorkerRequest.MachineConfigPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Machine.config 文件的完整物理路径。</summary>
        <value>Machine.config 文件的物理路径。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineInstallDirectory">
      <MemberSignature Language="C#" Value="public virtual string MachineInstallDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineInstallDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.MachineInstallDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineInstallDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineInstallDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineInstallDirectory : string" Usage="System.Web.HttpWorkerRequest.MachineInstallDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 ASP.NET 二进制文件的安装目录的物理路径。</summary>
        <value>ASP.NET 二进制文件的物理目录。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member MapPath : string -&gt; string&#xA;override this.MapPath : string -&gt; string" Usage="httpWorkerRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虚拟路径。</param>
        <summary>返回与指定虚拟路径相对应的物理路径。</summary>
        <returns>与 <paramref name="virtualPath" /> 参数中指定的虚拟路径相对应的物理路径。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>已重载。 读取客户端的请求数据（在尚未预加载时）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 即使尚未到达流的末尾，实现也可以自由返回比请求更少的字节。  
  
 此重载用于指定大于 2 GB 的消息正文的响应。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityBody(unsigned int8[] buffer, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEntityBody (buffer As Byte(), size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int size);" />
      <MemberSignature Language="F#" Value="abstract member ReadEntityBody : byte[] * int -&gt; int&#xA;override this.ReadEntityBody : byte[] * int -&gt; int" Usage="httpWorkerRequest.ReadEntityBody (buffer, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">将数据读入的字节数组。</param>
        <param name="size">最多读取的字节数。</param>
        <summary>读取客户端的请求数据（在尚未预加载时）。</summary>
        <returns>读取的字节数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 即使尚未到达流的末尾，实现也可以自由返回比请求更少的字节。  
  
 此重载用于指定大于 2 GB 的消息正文的响应。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityBody(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadEntityBody (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="abstract member ReadEntityBody : byte[] * int * int -&gt; int&#xA;override this.ReadEntityBody : byte[] * int * int -&gt; int" Usage="httpWorkerRequest.ReadEntityBody (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="size" Type="System.Int32" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="buffer">将数据读入的字节数组。</param>
        <param name="offset">开始读取的位置的字节偏移量。</param>
        <param name="size">最多读取的字节数。</param>
        <summary>使用指定的要从中读取数据的缓冲区、字节偏移量和最大字节数从客户端读取请求数据（当未预先加载时）。</summary>
        <returns>读取的字节数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 即使尚未到达流的末尾，实现也可以自由返回比请求更少的字节。  
  
 此重载用于指定大于 2 GB 的消息正文的响应。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReasonCachePolicy">
      <MemberSignature Language="C#" Value="public const int ReasonCachePolicy = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonCachePolicy = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonCachePolicy As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonCachePolicy = 2;" />
      <MemberSignature Language="F#" Value="val mutable ReasonCachePolicy : int" Usage="System.Web.HttpWorkerRequest.ReasonCachePolicy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指定请求的原因。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonCacheSecurity">
      <MemberSignature Language="C#" Value="public const int ReasonCacheSecurity = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonCacheSecurity = (3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonCacheSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonCacheSecurity As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonCacheSecurity = 3;" />
      <MemberSignature Language="F#" Value="val mutable ReasonCacheSecurity : int" Usage="System.Web.HttpWorkerRequest.ReasonCacheSecurity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>指定请求的原因。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonClientDisconnect">
      <MemberSignature Language="C#" Value="public const int ReasonClientDisconnect = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonClientDisconnect = (4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonClientDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonClientDisconnect As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonClientDisconnect = 4;" />
      <MemberSignature Language="F#" Value="val mutable ReasonClientDisconnect : int" Usage="System.Web.HttpWorkerRequest.ReasonClientDisconnect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>指定请求的原因。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonDefault">
      <MemberSignature Language="C#" Value="public const int ReasonDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonDefault As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonDefault = 0;" />
      <MemberSignature Language="F#" Value="val mutable ReasonDefault : int" Usage="System.Web.HttpWorkerRequest.ReasonDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指定请求的原因。 默认值为 <see cref="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonFileHandleCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonFileHandleCacheMiss = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonFileHandleCacheMiss = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonFileHandleCacheMiss As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonFileHandleCacheMiss = 1;" />
      <MemberSignature Language="F#" Value="val mutable ReasonFileHandleCacheMiss : int" Usage="System.Web.HttpWorkerRequest.ReasonFileHandleCacheMiss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定请求的原因。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="ReasonResponseCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonResponseCacheMiss = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ReasonResponseCacheMiss = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />
      <MemberSignature Language="VB.NET" Value="Public Const ReasonResponseCacheMiss As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int ReasonResponseCacheMiss = 0;" />
      <MemberSignature Language="F#" Value="val mutable ReasonResponseCacheMiss : int" Usage="System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指定请求的原因。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.GetRequestReason" />
      </Docs>
    </Member>
    <Member MemberName="RequestHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int RequestHeaderMaximum = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 RequestHeaderMaximum = (40)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.RequestHeaderMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Const RequestHeaderMaximum As Integer  = 40" />
      <MemberSignature Language="C++ CLI" Value="public: int RequestHeaderMaximum = 40;" />
      <MemberSignature Language="F#" Value="val mutable RequestHeaderMaximum : int" Usage="System.Web.HttpWorkerRequest.RequestHeaderMaximum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>指定 <see langword="Maximum" />HTTP 请求标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public virtual Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Web.HttpWorkerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前请求的 Windows 跟踪 ID 的对应事件跟踪。</summary>
        <value>当前 ASP.NET 请求的跟踪 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 请求的执行与对应的 IIS 请求的跟踪 ID 相同。 这有助于在整个生存期中跟踪请求，从 HTTP.SYS 内核模式 HTTP 侦听器开始，到 IIS 服务，再到 ASP.NET 系统。 IIS 提供的 Id 因平台和 Service Pack 级别而异。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.CorrelationManager" />
        <altmember cref="T:System.Web.HttpRuntime" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int ResponseHeaderMaximum = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ResponseHeaderMaximum = (30)" />
      <MemberSignature Language="DocId" Value="F:System.Web.HttpWorkerRequest.ResponseHeaderMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Const ResponseHeaderMaximum As Integer  = 30" />
      <MemberSignature Language="C++ CLI" Value="public: int ResponseHeaderMaximum = 30;" />
      <MemberSignature Language="F#" Value="val mutable ResponseHeaderMaximum : int" Usage="System.Web.HttpWorkerRequest.ResponseHeaderMaximum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>指定 <see langword="Maximum" />HTTP 响应标头的索引号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 为每个标准 HTTP 标头类型分配索引号，以便在 <xref:System.Web.HttpWorkerRequest.GetKnownRequestHeader%2A> 和方法中使用 <xref:System.Web.HttpWorkerRequest.SendKnownResponseHeader%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootWebConfigPath">
      <MemberSignature Language="C#" Value="public virtual string RootWebConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootWebConfigPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.RootWebConfigPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootWebConfigPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RootWebConfigPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootWebConfigPath : string" Usage="System.Web.HttpWorkerRequest.RootWebConfigPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取根 Web.config 文件的完整物理路径。</summary>
        <value>根 Web.config 文件的物理路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要实现自己的宿主环境，则可以重写此属性以返回环境根配置文件的位置。 此类的一个示例是 <xref:System.Web.Hosting.SimpleWorkerRequest> 提供的简单实现的类 <xref:System.Web.HttpWorkerRequest> 。 <xref:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath%2A?displayProperty=nameWithType>类的属性 <xref:System.Web.Hosting.SimpleWorkerRequest> 重写 <xref:System.Web.HttpWorkerRequest.RootWebConfigPath%2A> 类的属性 <xref:System.Web.HttpWorkerRequest> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178683(v=vs.100)">ASP.NET 配置概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendCalculatedContentLength">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see langword="Content-Length" />HTTP 标头添加到响应。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (int contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCalculatedContentLength(int32 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendCalculatedContentLength (contentLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendCalculatedContentLength(int contentLength);" />
      <MemberSignature Language="F#" Value="abstract member SendCalculatedContentLength : int -&gt; unit&#xA;override this.SendCalculatedContentLength : int -&gt; unit" Usage="httpWorkerRequest.SendCalculatedContentLength contentLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="contentLength">响应的长度（按字节计）。</param>
        <summary>将 <see langword="Content-Length" /> HTTP 标头添加到小于或等于 2 GB 的消息正文的响应。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未显式设置内容长度，则此方法使实例能够向 <xref:System.Web.HttpWorkerRequest> 响应中添加 `Content-Length` HTTP 标头。  
  
 `Content-Length`当响应消息正文的长度小于或等于 2 GB 时，使用此重载设置标头。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (long contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCalculatedContentLength(int64 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendCalculatedContentLength (contentLength As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendCalculatedContentLength(long contentLength);" />
      <MemberSignature Language="F#" Value="abstract member SendCalculatedContentLength : int64 -&gt; unit&#xA;override this.SendCalculatedContentLength : int64 -&gt; unit" Usage="httpWorkerRequest.SendCalculatedContentLength contentLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int64" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="contentLength">响应的长度（按字节计）。</param>
        <summary>将 <see langword="Content-Length" /> HTTP 标头添加到大于 2 GB 的消息正文的响应。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未显式设置内容长度，则此方法使实例能够向 <xref:System.Web.HttpWorkerRequest> 响应中添加 `Content-Length` HTTP 标头。 默认实现将调用采用 `contentLength` 类型为的参数的重载 <xref:System.Int32> 。  
  
 此重载用于指定大于 2 GB 的消息正文的响应。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendKnownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendKnownResponseHeader (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKnownResponseHeader(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendKnownResponseHeader (index As Integer, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendKnownResponseHeader(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SendKnownResponseHeader : int * string -&gt; unit" Usage="httpWorkerRequest.SendKnownResponseHeader (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">标头索引。 例如 <see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" />。</param>
        <param name="value">标头的值。</param>
        <summary>将标准 HTTP 标头添加到响应。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendResponseFromFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将文件的内容添加到响应。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (IntPtr handle, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromFile(native int handle, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendResponseFromFile (handle As IntPtr, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendResponseFromFile(IntPtr handle, long offset, long length);" />
      <MemberSignature Language="F#" Value="abstract member SendResponseFromFile : nativeint * int64 * int64 -&gt; unit" Usage="httpWorkerRequest.SendResponseFromFile (handle, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="handle">要发送的文件的句柄。</param>
        <param name="offset">文件中的起始位置。</param>
        <param name="length">要发送的字节数。</param>
        <summary>将指定文件的内容添加到响应并指定文件中的起始位置和要发送的字节数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendResponseFromFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendResponseFromFile(System::String ^ filename, long offset, long length);" />
      <MemberSignature Language="F#" Value="abstract member SendResponseFromFile : string * int64 * int64 -&gt; unit" Usage="httpWorkerRequest.SendResponseFromFile (filename, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename">要发送的文件的名称。</param>
        <param name="offset">文件中的起始位置。</param>
        <param name="length">要发送的字节数。</param>
        <summary>将指定文件的内容添加到响应并指定文件中的起始位置和要发送的字节数。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendResponseFromMemory">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将内存块的内容添加到响应。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromMemory (byte[] data, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromMemory(unsigned int8[] data, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendResponseFromMemory (data As Byte(), length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendResponseFromMemory(cli::array &lt;System::Byte&gt; ^ data, int length);" />
      <MemberSignature Language="F#" Value="abstract member SendResponseFromMemory : byte[] * int -&gt; unit" Usage="httpWorkerRequest.SendResponseFromMemory (data, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">要发送的字节数组。</param>
        <param name="length">要发送的字节数（从第一个字节开始）。</param>
        <summary>将字节数组中指定数目的字节添加到响应。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public virtual void SendResponseFromMemory (IntPtr data, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendResponseFromMemory(native int data, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendResponseFromMemory (data As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendResponseFromMemory(IntPtr data, int length);" />
      <MemberSignature Language="F#" Value="abstract member SendResponseFromMemory : nativeint * int -&gt; unit&#xA;override this.SendResponseFromMemory : nativeint * int -&gt; unit" Usage="httpWorkerRequest.SendResponseFromMemory (data, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">指向内存块的非托管指针。</param>
        <param name="length">要发送的字节数。</param>
        <summary>将内存块中指定数目的字节添加到响应。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendStatus">
      <MemberSignature Language="C#" Value="public abstract void SendStatus (int statusCode, string statusDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendStatus(int32 statusCode, string statusDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendStatus (statusCode As Integer, statusDescription As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendStatus(int statusCode, System::String ^ statusDescription);" />
      <MemberSignature Language="F#" Value="abstract member SendStatus : int * string -&gt; unit" Usage="httpWorkerRequest.SendStatus (statusCode, statusDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="statusDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statusCode">要发送的状态代码</param>
        <param name="statusDescription">要发送的状态说明。</param>
        <summary>指定响应的 HTTP 状态代码和状态说明，例如 <c>SendStatus(200,"Ok")</c>。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUnknownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendUnknownResponseHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendUnknownResponseHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SendUnknownResponseHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SendUnknownResponseHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SendUnknownResponseHeader : string * string -&gt; unit" Usage="httpWorkerRequest.SendUnknownResponseHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要发送的标头的名称。</param>
        <param name="value">标头的值。</param>
        <summary>将非标准 HTTP 标头添加到响应。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndOfSendNotification">
      <MemberSignature Language="C#" Value="public virtual void SetEndOfSendNotification (System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEndOfSendNotification(class System.Web.HttpWorkerRequest/EndOfSendNotification callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEndOfSendNotification (callback As HttpWorkerRequest.EndOfSendNotification, extraData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEndOfSendNotification(System::Web::HttpWorkerRequest::EndOfSendNotification ^ callback, System::Object ^ extraData);" />
      <MemberSignature Language="F#" Value="abstract member SetEndOfSendNotification : System.Web.HttpWorkerRequest.EndOfSendNotification * obj -&gt; unit&#xA;override this.SetEndOfSendNotification : System.Web.HttpWorkerRequest.EndOfSendNotification * obj -&gt; unit" Usage="httpWorkerRequest.SetEndOfSendNotification (callback, extraData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpWorkerRequest+EndOfSendNotification" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">在发送所有数据（带外）后调用的通知回调。</param>
        <param name="extraData">回调的附加参数。</param>
        <summary>在发送所有响应数据后注册可选通知。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现缓冲区回收时，此方法可能很有用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAsyncFlush { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAsyncFlush : bool" Usage="System.Web.HttpWorkerRequest.SupportsAsyncFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否支持异步刷新操作。</summary>
        <value>如果支持异步刷新操作，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncRead">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAsyncRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncRead" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpWorkerRequest.SupportsAsyncRead" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAsyncRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAsyncRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAsyncRead : bool" Usage="System.Web.HttpWorkerRequest.SupportsAsyncRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否支持异步读取操作。</summary>
        <value>如果支持异步读取操作，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
