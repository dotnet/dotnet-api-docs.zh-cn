<Type Name="SiteMap" FullName="System.Web.SiteMap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="839807ad745ca9dceed27850d5a53b505185294a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89879172" /></Metadata><TypeSignature Language="C#" Value="public static class SiteMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SiteMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.SiteMap" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteMap" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteMap abstract sealed" />
  <TypeSignature Language="F#" Value="type SiteMap = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.SiteMap" /> 类是站点的导航结构在内存中的表示形式，导航结构由一个或多个站点地图提供程序提供。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 站点地图与 <xref:System.Web.UI.WebControls.SiteMapDataSource> 、和其他控件结合使用， <xref:System.Web.UI.WebControls.SiteMapPath> 可为用户提供有效的导航界面以导航网站。 <xref:System.Web.SiteMap>对象是 ASP.NET 站点导航基础结构的一个组件，它为使用导航和控件的页面和控件开发人员提供对只读站点地图信息的访问 <xref:System.Web.UI.WebControls.SiteMapDataSource> 。 ASP.NET 站点导航基础结构的其他组件包括 <xref:System.Web.SiteMapProvider> 和 <xref:System.Web.XmlSiteMapProvider> 类、Web web.sitemap 文件以及使用类的各种控件（如 <xref:System.Web.SiteMap> <xref:System.Web.UI.WebControls.SiteMapPath> 控件）来呈现内容和菜单。  
  
 <xref:System.Web.SiteMap>具有若干函数：  
  
-   它提供站点导航层次结构的根节点 (只能有一个根节点) 。  
  
-   它标识哪个站点地图提供程序是主体或默认的提供程序。  
  
-   它跟踪所有用于创建的提供程序对象 <xref:System.Web.SiteMap> 。  
  
 从根本上讲， <xref:System.Web.SiteMap> 是对象的分层集合的容器 <xref:System.Web.SiteMapNode> 。 但是， <xref:System.Web.SiteMap> 并不维护节点之间的关系; 相反，它将此委托委托给站点地图提供程序。 用作 <xref:System.Web.SiteMap> 站点导航信息的接口，以 <xref:System.Web.SiteMapNode> 这些站点地图提供程序所持有的对象) 形式 (。 它会跟踪提供程序，从中可以访问站点导航数据并公开其 <xref:System.Web.SiteMap.Providers%2A> 集合。 提供程序可以通过任何方式存储它的站点地图信息-只要它扩展了 <xref:System.Web.SiteMapProvider> 抽象类，就 <xref:System.Web.SiteMap> 可以从中成功初始化该类。  
  
 类的默认提供程序 <xref:System.Web.SiteMap> 为 <xref:System.Web.XmlSiteMapProvider> 类，该类与 XML 配置文件 web.sitemap 一起使用。 不过，您可以编写自己的 <xref:System.Web.SiteMapProvider> 对象，并使用它来初始化站点的站点图。 有关自定义站点地图提供程序的示例，请参见 <xref:System.Web.SiteMapProvider> 。  
  
 指定管理站点导航配置的默认站点地图配置。 如果你选择编写自己的站点地图提供程序，则可以在 Web.config 文件中覆盖此配置。  
  
 <xref:System.Web.SiteMap>类仅提供静态成员的性能，并且可以在给定站点中的任何时间通过 Web 窗体或 web 服务器控件进行访问。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个代码示例演示如何在 Web.config 文件中声明站点地图提供程序。 第二个代码示例演示如何使用 <xref:System.Web.SiteMap> 对象。  
  
 下面的代码示例是一个 Web.config 配置节，该配置节演示如何 <xref:System.Web.XmlSiteMapProvider> 将对象声明为默认 <xref:System.Web.SiteMapProvider> 对象。  
  
```  
<siteMap defaultProvider="MyXmlSiteMapProvider" enabled="true">  
  <providers>  
    <add name="MyXmlSiteMapProvider"  
      description="The site map provider that reads in the .sitemap XML files."  
      type="System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"  
      siteMapFile="my.sitemap" />  
  </providers>  
</siteMap>  
```  
  
 下面的代码示例演示如何 <xref:System.Web.SiteMap> 通过访问对象的静态成员来显示有关和属性的信息，从而使用对象 <xref:System.Web.SiteMap.RootNode%2A> <xref:System.Web.SiteMap.CurrentNode%2A> 。 将其与由控件呈现的输出进行比较 <xref:System.Web.UI.WebControls.SiteMapPath> 。  
  
 [!code-aspx-csharp[System.Web.SiteMap_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_3/CS/sitemapcs.aspx#1)]
 [!code-aspx-vb[System.Web.SiteMap_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_3/VB/sitemapvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMapNode" />
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.SiteMapNodeCollection" />
    <altmember cref="T:System.Web.SiteMapProviderCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapPath" />
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e468hxky(v=vs.100)">ASP.NET 站点导航概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yy2ykkab(v=vs.100)">ASP.NET 网站地图</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/4ht3k9tx(v=vs.100)">ASP.NET 站点导航提供程序</related>
  </Docs>
  <Members>
    <Member MemberName="CurrentNode">
      <MemberSignature Language="C#" Value="public static System.Web.SiteMapNode CurrentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.SiteMapNode CurrentNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMap.CurrentNode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SiteMapNode ^ CurrentNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNode : System.Web.SiteMapNode" Usage="System.Web.SiteMap.CurrentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示当前被请求的页的 <see cref="T:System.Web.SiteMapNode" /> 控件。</summary>
        <value>表示当前被请求的页的 <see cref="T:System.Web.SiteMapNode" /> 实例；如果站点地图信息中不存在代表节点，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMap>类 <xref:System.Web.SiteMap.CurrentNode%2A> 通过从提供程序请求来检索属性。  
  
 如果站点地图信息中的页不存在任何具有代表性的节点，或者如果启用了安全修整且无法为当前用户返回节点， `null` 则返回。  
  
 <xref:System.Web.SiteMap.SiteMapResolve>如果存在一个或多个订阅，则默认的站点地图提供程序会引发事件。  
  
 如果实现自己 <xref:System.Web.SiteMapProvider> 的对象，则可以创建自己的机制来查找和检索 <xref:System.Web.SiteMapProvider.CurrentNode%2A> 。 但是，如果扩展 <xref:System.Web.StaticSiteMapProvider> 类并使用基于 URL 的方案来标识页，则可以重写 <xref:System.Web.StaticSiteMapProvider.FindSiteMapNode%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.SiteMap.CurrentNode%2A> 属性来检索 <xref:System.Web.SiteMapNode> 表示当前页的对象。  
  
 [!code-aspx-csharp[System.Web.SiteMap_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_1/CS/catalogcs.aspx#1)]
 [!code-aspx-vb[System.Web.SiteMap_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_1/VB/catalogvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">未启用站点地图功能。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">配置中指定的默认提供程序不存在。</exception>
        <exception cref="T:System.Web.HttpException">只有在低信任或以上设置的情况下运行时，才支持此功能。</exception>
        <altmember cref="P:System.Web.SiteMapProvider.CurrentNode" />
        <altmember cref="E:System.Web.SiteMap.SiteMapResolve" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMap.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.SiteMap.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个布尔值，该值指示 Web.config 文件中是否指定了某个站点地图提供程序，以及是否启用了该站点地图提供程序。</summary>
        <value>如果配置并启用了某个站点地图提供程序，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定管理站点导航配置的默认站点地图配置。 如果你选择编写自己的站点地图提供程序，则可以在 Web.config 文件中覆盖此配置。  
  
   
  
## Examples  
 下面的代码示例是一个 Web.config 配置节，该配置节演示如何将 <xref:System.Web.XmlSiteMapProvider> 对象声明为默认 <xref:System.Web.SiteMapProvider> 对象。  
  
```  
<siteMap defaultProvider="MyXmlSiteMapProvider" enabled="true">  
  <providers>  
    <add name="MyXmlSiteMapProvider"  
      description="SiteMap provider that reads in .sitemap XML files."  
      type="System.Web.XmlSiteMapProvider, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"  
      siteMapFile="my.sitemap" />  
  </providers>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.SiteMapProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.SiteMapProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMap.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As SiteMapProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SiteMapProvider ^ Provider { System::Web::SiteMapProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.SiteMapProvider" Usage="System.Web.SiteMap.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前站点地图的默认 <see cref="T:System.Web.SiteMapProvider" /> 对象。</summary>
        <value><see cref="T:System.Web.SiteMap" /> 的默认站点地图提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，将 <xref:System.Web.XmlSiteMapProvider> 使用对象，并从位于站点根目录中的 web.config 文件加载站点导航数据。 管理类中标识了此项，管理类用于管理站点导航配置和 Web.config 文件的 "站点地图配置" 部分。 默认情况下，它是类的实例 <xref:System.Web.XmlSiteMapProvider> ，该类使用 web.config 文件作为其持久性存储区。 但是，您可以通过编写实现抽象类的类来实现自己的站点地图存储和配置方案 <xref:System.Web.SiteMapProvider> 。 有关编写您自己的提供程序的详细信息，请参阅 <xref:System.Web.SiteMapProvider> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.SiteMapProvider> 使用静态属性访问站点的默认对象 <xref:System.Web.SiteMap.Provider%2A> 。  
  
 [!code-aspx-csharp[System.Web.SiteMap_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_2/CS/catalog2cs.aspx#1)]
 [!code-aspx-vb[System.Web.SiteMap_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_2/VB/catalog2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">未启用站点地图功能。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">配置中指定的默认提供程序不存在。</exception>
        <exception cref="T:System.Web.HttpException">只有在低信任或以上设置的情况下运行时，才支持此功能。</exception>
        <altmember cref="P:System.Web.SiteMap.Providers" />
        <altmember cref="T:System.Web.SiteMapProvider" />
        <altmember cref="T:System.Web.StaticSiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.SiteMapProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.SiteMapProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMap.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As SiteMapProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SiteMapProviderCollection ^ Providers { System::Web::SiteMapProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.SiteMapProviderCollection" Usage="System.Web.SiteMap.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.SiteMapProvider" /> 类可用的命名 <see cref="T:System.Web.SiteMap" /> 对象的只读集合。</summary>
        <value>命名 <see cref="T:System.Web.SiteMapProviderCollection" /> 对象的 <see cref="T:System.Web.SiteMapProvider" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合中列出的站点地图提供程序是在 <xref:System.Web.SiteMap.Providers%2A> 配置层次结构中指定的站点地图提供程序，用于初始化 <xref:System.Web.SiteMap> 类。 只有属性) 标识的默认提供程序 (<xref:System.Web.SiteMap.Provider%2A> 可以在 <xref:System.Web.SiteMap> 初始化期间使用; 在集合中存在提供程序 <xref:System.Web.SiteMap.Providers%2A> 意味着它是在配置中指定的，并且在初始化期间可用。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.SiteMap.Providers%2A> 从类中检索集合 <xref:System.Web.SiteMap> ，然后循环访问该集合。  
  
 [!code-aspx-csharp[System.Web.SiteMap_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_2/CS/catalog2cs.aspx#1)]
 [!code-aspx-vb[System.Web.SiteMap_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_2/VB/catalog2vb.aspx#1)]  
  
 如果你的站点不只是为站点配置的默认提供程序，则会看到每个提供程序都显示。 例如，如果使用的是示例 Microsoft Access 提供程序 (参阅 <xref:System.Web.StaticSiteMapProvider>) ，将看到以下输出：  
  
```  
XmlSiteMapProvider   System.Web.XmlSiteMapProvider  
AccessSiteMapProvider   Samples.AspNet.AccessSiteMapProvider  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">未启用站点地图功能。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">配置中指定的默认提供程序不存在。</exception>
        <exception cref="T:System.Web.HttpException">只有在低信任或以上设置的情况下运行时，才支持此功能。</exception>
        <altmember cref="P:System.Web.SiteMap.Provider" />
        <altmember cref="T:System.Web.SiteMapProvider" />
        <altmember cref="T:System.Web.StaticSiteMapProvider" />
      </Docs>
    </Member>
    <Member MemberName="RootNode">
      <MemberSignature Language="C#" Value="public static System.Web.SiteMapNode RootNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.SiteMapNode RootNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMap.RootNode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootNode As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SiteMapNode ^ RootNode { System::Web::SiteMapNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNode : System.Web.SiteMapNode" Usage="System.Web.SiteMap.RootNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个表示站点的导航结构的顶级页的 <see cref="T:System.Web.SiteMapNode" /> 对象。</summary>
        <value>表示站点的导航结构的顶级页的 <see cref="T:System.Web.SiteMapNode" />；如果启用了安全修整且不能为当前用户返回该节点，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMap>类 <xref:System.Web.SiteMap.RootNode%2A> 通过从提供程序请求来检索属性。 如果存在提供程序层次结构， <xref:System.Web.SiteMap> 类将在层次结构中检索根提供程序的根节点。 若要访问默认提供程序的根节点，请调用 <xref:System.Web.SiteMap.Provider%2A> 属性，该属性检索默认提供程序及其 <xref:System.Web.SiteMapProvider.RootNode%2A> 属性。  
  
 <xref:System.Web.XmlSiteMapProvider>对象是类的默认提供程序 <xref:System.Web.SiteMap> ，它只支持一个 <xref:System.Web.XmlSiteMapProvider.RootNode%2A> 。  
  
 如果实现自己的 <xref:System.Web.SiteMapProvider> 类并重写 abstract <xref:System.Web.SiteMapProvider.RootNode%2A> 属性，则必须提供自己的实现来跟踪 <xref:System.Web.SiteMapProvider.RootNode%2A> 实例的属性 <xref:System.Web.SiteMapNode> 。  
  
 根节点必须按设计对所有用户可见。 如果启用了安全修整时，根节点对所有用户都不可见，则访问 <xref:System.Web.SiteMap.RootNode%2A> 属性可能会导致 <xref:System.InvalidOperationException> 异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.SiteMap.RootNode%2A> 属性来检索 <xref:System.Web.SiteMapNode> 表示站点的根节点的对象，而不考虑页层次结构中的当前位置。  
  
 [!code-aspx-csharp[System.Web.SiteMap_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap_1/CS/catalogcs.aspx#1)]
 [!code-aspx-vb[System.Web.SiteMap_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap_1/VB/catalogvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">未启用站点地图功能。  
  
- 或 - 
<see cref="P:System.Web.SiteMap.RootNode" /> 解析为 <see langword="null" />，如果启用了安全修整并且根节点对当前用户不可见，就会发生这种情况。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">配置中指定的默认提供程序不存在。</exception>
        <exception cref="T:System.Web.HttpException">只有在低信任或以上设置的情况下运行时，才支持此功能。</exception>
        <altmember cref="P:System.Web.SiteMap.CurrentNode" />
      </Docs>
    </Member>
    <Member MemberName="SiteMapResolve">
      <MemberSignature Language="C#" Value="public static event System.Web.SiteMapResolveEventHandler SiteMapResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.SiteMapResolveEventHandler SiteMapResolve" />
      <MemberSignature Language="DocId" Value="E:System.Web.SiteMap.SiteMapResolve" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SiteMapResolve As SiteMapResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::SiteMapResolveEventHandler ^ SiteMapResolve;" />
      <MemberSignature Language="F#" Value="member this.SiteMapResolve : System.Web.SiteMapResolveEventHandler " Usage="member this.SiteMapResolve : System.Web.SiteMapResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当访问 <see cref="P:System.Web.SiteMap.CurrentNode" /> 属性时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 订阅服务器将 <xref:System.Web.SiteMapResolveEventHandler> 对象附加到静态 <xref:System.Web.SiteMap.SiteMapResolve> 事件，以便在访问属性时接收通知 <xref:System.Web.SiteMap.CurrentNode%2A> 。 这样，用户便可以在创建当前正在执行的页的表示形式时实现自定义逻辑， <xref:System.Web.SiteMapNode> 而无需使用自定义提供程序实现。  
  
 如果订阅 <xref:System.Web.SiteMap.SiteMapResolve> 事件，也会在 <xref:System.Web.SiteMapProvider.SiteMapResolve> 默认站点地图提供程序上订阅该事件。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.SiteMap.SiteMapResolve> 在 ASP.NET 网页上处理事件，以修改站点导航控件（如控件）显示的目标 url <xref:System.Web.UI.WebControls.SiteMapPath> 。 在此示例中，当前页面是联机公告板或论坛中的 post 页面。 为了呈现更有意义的站点导航，导航控件显示的节点 Url 附加了上下文相关的查询字符串。  
  
> [!NOTE]
>  ASP.NET 站点导航基础结构可防止无限递归，这可提供一种保护措施，并最大限度地减少与 <xref:System.Web.SiteMap.CurrentNode%2A> 从类中访问属性关联的安全风险 <xref:System.Web.SiteMapResolveEventHandler> 。  
  
 下面的代码属于 global.asax 文件。 对于应用程序，只会附加一次事件处理程序。 此代码将识别页面是否实现了 `ISiteMapResolver` 接口。 如果实现了接口，则 `ExpandForumPaths` 调用函数。  
  
 [!code-csharp[System.Web.SiteMap.SiteMapResolve#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMap.SiteMapResolve#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx.vb#1)]  
  
 下面的代码定义了一个单独的接口。  (在网站项目中，您可以将此代码放在 App_Code 文件夹中。 ) `ISiteMapResolver` 接口定义 `ExpandForumPaths` 方法。  
  
 [!code-csharp[System.Web.SiteMap.SiteMapResolve#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx.cs#2)]
 [!code-vb[System.Web.SiteMap.SiteMapResolve#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx.vb#2)]  
  
 以下代码属于页面，该页面在站点映射结构中的深度至少为三个节点。 该页实现了 `ISiteMapResolver` 接口，该接口允许 `ExpandForumPaths` 调用方法。  
  
 [!code-aspx-csharp[System.Web.SiteMap.SiteMapResolve#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/CS/sitemapresolve1cs.aspx#3)]
 [!code-aspx-vb[System.Web.SiteMap.SiteMapResolve#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMap.SiteMapResolve/VB/sitemapresolve1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SiteMapResolveEventHandler" />
        <altmember cref="T:System.Web.SiteMapResolveEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>
