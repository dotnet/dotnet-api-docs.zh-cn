<Type Name="TraceContextRecord" FullName="System.Web.TraceContextRecord">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9103d9f7abb91fd74890a116d26a46a903ae7d98" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89947565" /></Metadata><TypeSignature Language="C#" Value="public sealed class TraceContextRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextRecord" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextRecord sealed" />
  <TypeSignature Language="F#" Value="type TraceContextRecord = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 ASP.NET 跟踪消息和任何关联数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.TraceContextRecord>对象封装跟踪消息、类别、任何关联的 <xref:System.Exception> ，以及是否由方法写入跟踪记录 <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> 。  
  
 对和方法的每次调用 <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> 都会生成一个 <xref:System.Web.TraceContextRecord> 添加到 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> 消息集合的对象。 您可以通过处理事件来访问记录的集合 <xref:System.Web.TraceContext.TraceFinished> 。  
  
   
  
## Examples  
 下面的代码示例演示如何注册 <xref:System.Web.TraceContextEventHandler> 委托来处理 <xref:System.Web.TraceContext.TraceFinished> 事件。 在此示例中， `OnTraceFinished` 方法 <xref:System.Web.TraceContextRecord> 通过属性访问对象的集合 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> ，循环访问它们，并将它们写入响应流。  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)">ASP.NET 跟踪概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/94c55d08(v=vs.100)">如何：启用 ASP.NET 页跟踪</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string msg, bool isWarning, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, msg As String, isWarning As Boolean, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextRecord(System::String ^ category, System::String ^ msg, bool isWarning, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextRecord : string * string * bool * Exception -&gt; System.Web.TraceContextRecord" Usage="new System.Web.TraceContextRecord (category, msg, isWarning, errorInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="isWarning" Type="System.Boolean" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">接收消息的跟踪类别。</param>
        <param name="msg">跟踪消息。</param>
        <param name="isWarning">如果与 <see cref="T:System.Web.TraceContextRecord" /> 关联的方法是 <see cref="Overload:System.Web.TraceContext.Warn" /> 方法，则为 <see langword="true" />；如果跟踪方法是 <see cref="Overload:System.Web.TraceContext.Write" /> 方法，则为 <see langword="false" />。</param>
        <param name="errorInfo">包含其他错误消息的 <see cref="T:System.Exception" /> 对象。</param>
        <summary>初始化 <see cref="T:System.Web.TraceContextRecord" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对和方法的每次调用 <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> 都会生成一个 <xref:System.Web.TraceContextRecord> 添加到 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> 消息集合的对象。 <xref:System.Web.TraceContext.Warn%2A>方法调用将属性设置 <xref:System.Web.TraceContextRecord.IsWarning%2A> 为 `true` ，而 <xref:System.Web.TraceContext.Write%2A> 方法调用将其设置为 `false` 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)">ASP.NET 跟踪概述</related>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Web.TraceContextRecord.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取跟踪记录的用户定义的类别。</summary>
        <value>表示跟踪记录的类别的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类别用于更好地将跟踪消息组织成可识别的组，但可以是任意字符串。 <xref:System.Web.TraceContext>类使用 <xref:System.String.Empty?displayProperty=nameWithType> 作为仅采用参数的方法的默认类别 `message` 。 ASP.NET 的默认类别（在启用跟踪时写入多个跟踪记录）为 "aspx. page"。  
  
   
  
## Examples  
 下面的代码示例演示如何访问的 <xref:System.Web.TraceContextRecord.Category%2A> 属性 <xref:System.Web.TraceContextRecord> ，以及如何将其和关联的跟踪消息输出到流中 `Response` 。  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)">ASP.NET 跟踪概述</related>
      </Docs>
    </Member>
    <Member MemberName="ErrorInfo">
      <MemberSignature Language="C#" Value="public Exception ErrorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.ErrorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorInfo As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorInfo { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorInfo : Exception" Usage="System.Web.TraceContextRecord.ErrorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与跟踪记录关联的 <see cref="T:System.Exception" />（如果有）。</summary>
        <value>与跟踪记录关联的 <see cref="T:System.Exception" />（如果存在）或 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果使用跟踪来调试应用程序或排查错误和异常处理问题，则可以在跟踪记录中包含一个异常。 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> `null` 当跟踪记录与没有 <xref:System.Web.TraceContext> 显式 `errorInfo` 参数或未提供异常的方法之一相关联时，属性为。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)">ASP.NET 跟踪概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsWarning">
      <MemberSignature Language="C#" Value="public bool IsWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.IsWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarning : bool" Usage="System.Web.TraceContextRecord.IsWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示跟踪记录是否与 <see cref="Overload:System.Web.TraceContext.Warn" /> 方法调用关联。</summary>
        <value>如果 <see cref="T:System.Web.TraceContextRecord" /> 与 <see cref="Overload:System.Web.TraceContext.Warn" /> 方法调用关联，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何检查 <xref:System.Web.TraceContextRecord.IsWarning%2A> 的属性 <xref:System.Web.TraceContextRecord> ，以确定记录包含的消息是否由 <xref:System.Web.TraceContext.Warn%2A> 或 <xref:System.Web.TraceContext.Write%2A> 方法调用编写。 如果跟踪记录是一条警告消息，则会执行不同于错误消息的操作。  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)">ASP.NET 跟踪概述</related>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.TraceContextRecord.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户定义的跟踪消息。</summary>
        <value>表示跟踪记录的消息的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 消息可以是任何字符串，并且用于写入详细的跟踪信息。 它对应于传递到和方法的消息参数 <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> 。 这些信息可以是运行时值、为您定向的消息，并指导您完成程序的执行或其他诊断数据。  
  
   
  
## Examples  
 下面的代码示例演示如何访问的 <xref:System.Web.TraceContextRecord.Message%2A> 属性 <xref:System.Web.TraceContextRecord> ，并将其打印到 `Response` 流中。  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)">ASP.NET 跟踪概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
