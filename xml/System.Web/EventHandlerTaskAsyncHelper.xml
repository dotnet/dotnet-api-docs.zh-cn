<Type Name="EventHandlerTaskAsyncHelper" FullName="System.Web.EventHandlerTaskAsyncHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3728bc992a6a9a6f95c3ce4140719cf264406238" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69386220" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerTaskAsyncHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerTaskAsyncHelper sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerTaskAsyncHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="03bd7-101">将任务返回的异步方法转换为使用用于 ASP.NET 的前一版本的异步编程模型和基于启动和结束事件的方法。</span><span class="sxs-lookup"><span data-stu-id="03bd7-101">Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03bd7-102">若要在 ASP.NET 4.5 中处理异步任务，请实现逻辑以将任务作为 <xref:System.Web.TaskEventHandler> 委托返回。</span><span class="sxs-lookup"><span data-stu-id="03bd7-102">To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate.</span></span> <span data-ttu-id="03bd7-103">此基于任务的异步编程模型取代了早期版本的 ASP.NET 中使用的模型，该模型基于开始和结束事件的所有事件处理。</span><span class="sxs-lookup"><span data-stu-id="03bd7-103">This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events.</span></span> <span data-ttu-id="03bd7-104">实现 <xref:System.Web.TaskEventHandler> 委托后，可以将其传递给 <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> 构造函数，该构造函数包装任务返回的逻辑，并将处理程序转换为使用 begin 和 end 事件的模型。</span><span class="sxs-lookup"><span data-stu-id="03bd7-104">After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events.</span></span> <span data-ttu-id="03bd7-105"><xref:System.Web.EventHandlerTaskAsyncHelper>类使对象与 <xref:System.Web.TaskEventHandler> ASP.NET 页框架兼容。</span><span class="sxs-lookup"><span data-stu-id="03bd7-105">The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework.</span></span> <span data-ttu-id="03bd7-106">当你调用 <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> 方法来处理异步页的任务时，你可以使用 <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> 和 <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> 属性将转换后的开始和事件处理程序传递给方法。</span><span class="sxs-lookup"><span data-stu-id="03bd7-106">When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.TaskEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As TaskEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerTaskAsyncHelper(System::Web::TaskEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.EventHandlerTaskAsyncHelper : System.Web.TaskEventHandler -&gt; System.Web.EventHandlerTaskAsyncHelper" Usage="new System.Web.EventHandlerTaskAsyncHelper handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.TaskEventHandler" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="03bd7-107">异步任务。</span><span class="sxs-lookup"><span data-stu-id="03bd7-107">The asynchronous task.</span></span></param>
        <summary><span data-ttu-id="03bd7-108">初始化 <see cref="T:System.Web.EventHandlerTaskAsyncHelper" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03bd7-108">Initializes a new instance of the <see cref="T:System.Web.EventHandlerTaskAsyncHelper" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginEventHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginEventHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginEventHandler : System.Web.BeginEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03bd7-109">表示异步任务的 <see cref="T:System.Web.BeginEventHandler" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="03bd7-109">Represents the <see cref="T:System.Web.BeginEventHandler" /> method for an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="03bd7-110">处理该用于异步任务的起始事件的方法。</span><span class="sxs-lookup"><span data-stu-id="03bd7-110">The method that handles the begin event for the asynchronous task.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndEventHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndEventHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndEventHandler : System.Web.EndEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03bd7-111">表示异步任务的 <see cref="T:System.Web.EndEventHandler" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="03bd7-111">Represents the <see cref="T:System.Web.EndEventHandler" /> method for an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="03bd7-112">处理该用于异步任务的结束事件的方法。</span><span class="sxs-lookup"><span data-stu-id="03bd7-112">The method that handles the end event for the asynchronous task.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
