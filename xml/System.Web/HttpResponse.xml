<Type Name="HttpResponse" FullName="System.Web.HttpResponse">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d80b09c2d4c49528d8b3c6c014095e8c1684942" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86654587" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpResponse" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpResponse" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpResponse sealed" />
  <TypeSignature Language="F#" Value="type HttpResponse = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d5aee-101">封装来自 ASP.NET 操作的 HTTP 响应信息。</span><span class="sxs-lookup"><span data-stu-id="d5aee-101">Encapsulates HTTP-response information from an ASP.NET operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-102">类的方法和属性 <xref:System.Web.HttpResponse> 通过 <xref:System.Web.HttpApplication.Response%2A> <xref:System.Web.HttpApplication> 、 <xref:System.Web.HttpContext> 、 <xref:System.Web.UI.Page> 和类的属性公开 <xref:System.Web.UI.UserControl> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-102">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>

 <span data-ttu-id="d5aee-103"><xref:System.Web.HttpResponse>仅在回发方案（而不是异步回发方案）中支持类的以下方法：</span><span class="sxs-lookup"><span data-stu-id="d5aee-103">The following methods of the <xref:System.Web.HttpResponse> class are supported only in post back scenarios and not in asynchronous post back scenarios:</span></span>

-   <xref:System.Web.HttpResponse.BinaryWrite%2A>

-   <xref:System.Web.HttpResponse.Clear%2A>

-   <xref:System.Web.HttpResponse.ClearContent%2A>

-   <xref:System.Web.HttpResponse.ClearHeaders%2A>

-   <xref:System.Web.HttpResponse.Close%2A>

-   <xref:System.Web.HttpResponse.End%2A>

-   <xref:System.Web.HttpResponse.Flush%2A>

-   <xref:System.Web.HttpResponse.TransmitFile%2A>

-   <xref:System.Web.HttpResponse.Write%2A>

-   <xref:System.Web.HttpResponse.WriteFile%2A>

-   <xref:System.Web.HttpResponse.WriteSubstitution%2A>

 <span data-ttu-id="d5aee-104">当您使用 <xref:System.Web.UI.UpdatePanel> 控件更新页面的选定区域，而不是使用回发更新整个页面时，会启用部分页面更新。</span><span class="sxs-lookup"><span data-stu-id="d5aee-104">Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back.</span></span> <span data-ttu-id="d5aee-105">有关详细信息，请参阅 [UpdatePanel 控件概述](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) 和 [部分页呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d5aee-105">For more information, see [UpdatePanel Control Overview](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) and [Partial-Page Rendering Overview](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="d5aee-106">下面的示例在请求页时绘制三个重叠矩形。</span><span class="sxs-lookup"><span data-stu-id="d5aee-106">The following example draws three overlapping rectangles when the page is requested.</span></span> <span data-ttu-id="d5aee-107">代码首先将 <xref:System.Web.HttpResponse.ContentType%2A> 属性设置为 image/jpeg，使整个页面呈现为 jpeg 图像。</span><span class="sxs-lookup"><span data-stu-id="d5aee-107">The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image.</span></span> <span data-ttu-id="d5aee-108">然后，该代码调用 <xref:System.Web.HttpResponse.Clear%2A> 方法，以确保不会随此响应发送无关的内容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-108">The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response.</span></span> <span data-ttu-id="d5aee-109">接下来，代码将 <xref:System.Web.HttpResponse.BufferOutput%2A> 属性设置为 true，以便在将页发送到请求客户端之前对其进行完全处理。</span><span class="sxs-lookup"><span data-stu-id="d5aee-109">Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client.</span></span> <span data-ttu-id="d5aee-110">然后创建两个用于绘制矩形的对象：一个 <xref:System.Drawing.Bitmap> 和一个 <xref:System.Drawing.Graphics> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-110">Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="d5aee-111">在页中创建的变量用作绘制矩形的坐标和出现在最大矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-111">The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.</span></span>

 <span data-ttu-id="d5aee-112">绘制三个矩形和其中显示的字符串时，将 <xref:System.Drawing.Bitmap> 保存到 <xref:System.IO.Stream> 与属性相关联的对象， <xref:System.Web.HttpResponse.OutputStream%2A> 并将其格式设置为 "JPEG"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-112">When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG.</span></span> <span data-ttu-id="d5aee-113">此代码调用 <xref:System.Drawing.Image.Dispose%2A> 和 <xref:System.Drawing.Graphics.Dispose%2A> 方法以释放由两个图形对象使用的资源。</span><span class="sxs-lookup"><span data-stu-id="d5aee-113">The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects.</span></span> <span data-ttu-id="d5aee-114">最后，该代码调用 <xref:System.Web.HttpResponse.Flush%2A> 方法将缓冲响应发送到请求客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-114">Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.</span></span>

> [!NOTE]
>  <span data-ttu-id="d5aee-115">在代码中， <xref:System.Web.HttpResponse> 由关键字引用对象 `Response` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-115">In code, the <xref:System.Web.HttpResponse> object is referred to by the keyword `Response`.</span></span> <span data-ttu-id="d5aee-116">例如， `Response.Clear()` 表示 <xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-116">For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d5aee-117"><xref:System.Web.UI.Page>类具有一个名为的属性，该属性 <xref:System.Web.UI.Page.Response%2A> 公开的当前实例 <xref:System.Web.HttpResponse> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-117">The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of <xref:System.Web.HttpResponse>.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpResponse (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpResponse(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpResponse : System.IO.TextWriter -&gt; System.Web.HttpResponse" Usage="new System.Web.HttpResponse writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="d5aee-118">实现自定义 HTTP 输出的 <see cref="T:System.IO.TextWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-118">A <see cref="T:System.IO.TextWriter" /> object that enables custom HTTP output.</span></span></param>
        <summary><span data-ttu-id="d5aee-119">初始化 <see cref="T:System.Web.HttpResponse" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d5aee-119">Initializes a new instance of the <see cref="T:System.Web.HttpResponse" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-120">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-120">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>

 <span data-ttu-id="d5aee-121">类的方法和属性 <xref:System.Web.HttpResponse> 通过 ASP.NET 中的内部对象公开 <xref:System.Web.HttpContext.Response%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-121">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheDependency">
      <MemberSignature Language="C#" Value="public void AddCacheDependency (params System.Web.Caching.CacheDependency[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheDependency(class System.Web.Caching.CacheDependency[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheDependency (ParamArray dependencies As CacheDependency())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheDependency(... cli::array &lt;System::Web::Caching::CacheDependency ^&gt; ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.AddCacheDependency : System.Web.Caching.CacheDependency[] -&gt; unit" Usage="httpResponse.AddCacheDependency dependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependencies"><span data-ttu-id="d5aee-122">要添加到应用程序依赖项列表的文件、缓存键或 <see cref="T:System.Web.Caching.CacheDependency" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-122">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> to add to the list of application dependencies.</span></span></param>
        <summary><span data-ttu-id="d5aee-123">将一组缓存依赖项与响应关联，这样，如果响应存储在输出缓存中并且指定的依赖项发生变化，就可以使该响应失效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-123">Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-124"><xref:System.Web.HttpResponse.AddCacheDependency%2A>方法允许在缓存的响应和对象之间创建依赖关系 <xref:System.Web.Caching.CacheDependency> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-124">The <xref:System.Web.HttpResponse.AddCacheDependency%2A> method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object.</span></span>



## Examples
 <span data-ttu-id="d5aee-125">下面的示例演示如何使用方法和对象创建缓存依赖项 <xref:System.Web.HttpResponse.AddCacheDependency%2A> <xref:System.Web.Caching.CacheDependency> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-125">The following example demonstrates how to create a cache dependency by using the <xref:System.Web.HttpResponse.AddCacheDependency%2A> method and a <xref:System.Web.Caching.CacheDependency> object.</span></span>

 [!code-aspx-csharp[HttpResponse.AddCacheDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/CS/httpresponse.addcachedependency_cs.aspx#1)]
 [!code-aspx-vb[HttpResponse.AddCacheDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/VB/httpresponse.addcachedependency_vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-126"><paramref name="dependencies" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-126">The <paramref name="dependencies" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-127">在缓存处理管线中调用此方法太迟，已经在创建了缓存响应之后。</span><span class="sxs-lookup"><span data-stu-id="d5aee-127">This method was called too late in the cache processing pipeline, after the cached response was already created.</span></span></exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-128">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-128">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCacheItemDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-129">使缓存响应的有效性依赖于缓存中的其他项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-129">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(class System.Collections.ArrayList cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(System::Collections::ArrayList ^ cacheKeys);" />
      <MemberSignature Language="F#" Value="member this.AddCacheItemDependencies : System.Collections.ArrayList -&gt; unit" Usage="httpResponse.AddCacheItemDependencies cacheKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="d5aee-130"><see cref="T:System.Collections.ArrayList" />，包含当前缓存的响应所依赖的项的键。</span><span class="sxs-lookup"><span data-stu-id="d5aee-130">The <see cref="T:System.Collections.ArrayList" /> that contains the keys of the items that the current cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="d5aee-131">使缓存响应的有效性依赖于缓存中的其他项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-131">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-132">如果从缓存中删除了参数中引用的项 `cacheKeys` ，则当前项的缓存响应无效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-132">When the items referred to in the `cacheKeys` parameter are removed from the cache, the cached response of the current item is not valid.</span></span>



## Examples
 <span data-ttu-id="d5aee-133">下面的示例演示如何使用缓存输出的 ASP.NET 页。</span><span class="sxs-lookup"><span data-stu-id="d5aee-133">The following example demonstrates how to use an ASP.NET page that is output cached.</span></span> <span data-ttu-id="d5aee-134">页面的代码将创建 <xref:System.Collections.ArrayList> 与对象中存储的项关联的键的对象 <xref:System.Web.Caching.Cache> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-134">The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object.</span></span> <span data-ttu-id="d5aee-135">接下来，代码在对 <xref:System.Collections.ArrayList> 方法的调用中将作为参数传递 <xref:System.Web.HttpResponse.AddCacheItemDependencies%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-135">Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddCacheItemDependencies%2A> method.</span></span> <span data-ttu-id="d5aee-136">如果在更改中指定的任何文件，这会使输出缓存的响应无效 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-136">This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/cacheitemsdepscs.aspx#5)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/cacheitemsdepsvb.aspx#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-137">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-137">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (string[] cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(string[] cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(cli::array &lt;System::String ^&gt; ^ cacheKeys);" />
      <MemberSignature Language="F#" Value="member this.AddCacheItemDependencies : string[] -&gt; unit" Usage="httpResponse.AddCacheItemDependencies cacheKeys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.String[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="d5aee-138">一个项键的数组，缓存响应依赖于这些项键。</span><span class="sxs-lookup"><span data-stu-id="d5aee-138">An array of item keys that the cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="d5aee-139">使缓存项的有效性依赖于缓存中的另一项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-139">Makes the validity of a cached item dependent on another item in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-140">如果从缓存中删除了任何一个 `cacheKey` ，则当前项的缓存响应将无效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-140">When any of the `cacheKey`s are removed from the cache, the cached response of the current item is invalid.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-141">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-141">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependency">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependency (string cacheKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependency(string cacheKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependency (cacheKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependency(System::String ^ cacheKey);" />
      <MemberSignature Language="F#" Value="member this.AddCacheItemDependency : string -&gt; unit" Usage="httpResponse.AddCacheItemDependency cacheKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheKey"><span data-ttu-id="d5aee-142">缓存的响应所依赖的项的键。</span><span class="sxs-lookup"><span data-stu-id="d5aee-142">The key of the item that the cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="d5aee-143">使缓存响应的有效性依赖于缓存中的其他项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-143">Makes the validity of a cached response dependent on another item in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-144">如果 `cacheKey` 从缓存中删除与该参数对应的项，则当前项的缓存响应将无效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-144">When the item corresponding to the `cacheKey` parameter is removed from the cache, the cached response of the current item is invalid.</span></span>



## Examples
 <span data-ttu-id="d5aee-145">下面的示例是一个 ASP.NET 用户控件，该控件是已缓存的输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-145">The following example is an ASP.NET user control that is output cached.</span></span> <span data-ttu-id="d5aee-146">控件的代码 <xref:System.Web.HttpResponse.AddCacheItemDependency%2A> 使用 <xref:System.Web.Caching.Cache> 作为参数传递的对象中存储的项的键调用方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-146">The code for the control calls the <xref:System.Web.HttpResponse.AddCacheItemDependency%2A> method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter.</span></span> <span data-ttu-id="d5aee-147">如果缓存中不存在该项，则存储在输出缓存中的控件响应会失效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-147">If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated.</span></span> <span data-ttu-id="d5aee-148">这意味着，在后续请求中，会将新版本的控件响应添加到输出缓存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-148">This means that on the subsequent request, a new version of the control's response will be added to the output cache.</span></span>

 <span data-ttu-id="d5aee-149">接下来，该代码将检查与某个键关联的项是否 `bookData` 存储在该 `Cache` 对象中，并根据结果显示两行文本之一。</span><span class="sxs-lookup"><span data-stu-id="d5aee-149">Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result.</span></span> <span data-ttu-id="d5aee-150">然后，该代码 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> <xref:System.Web.UI.WebControls.DataGrid> 使用调用自定义类的共享方法设置名为的控件的属性， `dgBooks` `DataHelper` `GetBookData` 并 <xref:System.Web.UI.WebControls.DataGrid> 使用 <xref:System.Web.UI.Control.DataBind%2A> 方法填充。</span><span class="sxs-lookup"><span data-stu-id="d5aee-150">Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/bookscs.ascx#3)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/booksvb.ascx#3)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-151">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-151">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFileDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-152">将一组文件名添加到文件名集合中，当前响应依赖于该集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-152">Adds a group of file names to the collection of file names on which the current response is dependent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (System.Collections.ArrayList filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(class System.Collections.ArrayList filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(System::Collections::ArrayList ^ filenames);" />
      <MemberSignature Language="F#" Value="member this.AddFileDependencies : System.Collections.ArrayList -&gt; unit" Usage="httpResponse.AddFileDependencies filenames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="d5aee-153">要添加的文件集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-153">The collection of files to add.</span></span></param>
        <summary><span data-ttu-id="d5aee-154">将一组文件名添加到文件名集合中，当前响应依赖于该集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-154">Adds a group of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-155">下面的示例是缓存输出的 ASP.NET 页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-155">The following example is an ASP.NET page that is output cached.</span></span> <span data-ttu-id="d5aee-156">页面的代码将创建一个 <xref:System.Collections.ArrayList> 文件路径，然后 <xref:System.Collections.ArrayList> 在对方法的调用中将作为参数传递 <xref:System.Web.HttpResponse.AddFileDependencies%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-156">The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method.</span></span> <span data-ttu-id="d5aee-157">如果在更改中指定的任何文件，这会使输出缓存的响应无效 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-157">This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/responsefiledepscs.aspx#6)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/responsefiledepsvb.aspx#6)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-158">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-158">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="member this.AddFileDependencies : string[] -&gt; unit" Usage="httpResponse.AddFileDependencies filenames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="d5aee-159">要添加的文件数组。</span><span class="sxs-lookup"><span data-stu-id="d5aee-159">An array of files to add.</span></span></param>
        <summary><span data-ttu-id="d5aee-160">将文件名数组添加到当前响应依赖的文件名集合中。</span><span class="sxs-lookup"><span data-stu-id="d5aee-160">Adds an array of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-161">下面的示例将文件名的数组添加到 <xref:System.Web.HttpResponse.AddFileDependencies%2A> 文件依赖项列表。</span><span class="sxs-lookup"><span data-stu-id="d5aee-161">The following example adds an array of file names to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> file dependency list.</span></span> <span data-ttu-id="d5aee-162">如果文件发生更改，则会使缓存的响应失效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-162">If the files changes, the cached response is invalidated.</span></span>

 [!code-aspx-csharp[Response.AddFileDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Response.AddFileDependency/CS/addfiledependency_cs.aspx#1)]
 [!code-aspx-vb[Response.AddFileDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Response.AddFileDependency/VB/addfiledependency_vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-163">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-163">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependency">
      <MemberSignature Language="C#" Value="public void AddFileDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependency(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependency (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.AddFileDependency : string -&gt; unit" Usage="httpResponse.AddFileDependency filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="d5aee-164">要添加的文件名。</span><span class="sxs-lookup"><span data-stu-id="d5aee-164">The name of the file to add.</span></span></param>
        <summary><span data-ttu-id="d5aee-165">将单个文件名添加到文件名集合中，当前响应依赖于该集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-165">Adds a single file name to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-166">使用 <xref:System.Web.HttpResponse.AddFileDependency%2A> 方法添加文件依赖项时，还必须以编程方式或声明方式指定输出缓存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-166">When you use the <xref:System.Web.HttpResponse.AddFileDependency%2A> method to add a file dependency, you must also specify output caching programmatically or declaratively.</span></span> <span data-ttu-id="d5aee-167">例如，若要以声明方式指定输出缓存，请使用 [@ OutputCache](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdxfb6cy(v=vs.100)) 指令。</span><span class="sxs-lookup"><span data-stu-id="d5aee-167">For example, to specify output caching declaratively, use the [@ OutputCache](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdxfb6cy(v=vs.100)) directive.</span></span> <span data-ttu-id="d5aee-168">有关详细信息，请参阅 [如何：缓存具有文件依赖项的页输出](https://docs.microsoft.com/previous-versions/aspnet/67z4z916(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d5aee-168">For more information, see [How to: Cache Page Output with File Dependencies](https://docs.microsoft.com/previous-versions/aspnet/67z4z916(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="d5aee-169">下面的示例演示如何将单个文件名添加到 <xref:System.Web.HttpResponse.AddFileDependency%2A> 文件依赖项列表。</span><span class="sxs-lookup"><span data-stu-id="d5aee-169">The following example shows how to add a single file name to the <xref:System.Web.HttpResponse.AddFileDependency%2A> file dependency list.</span></span> <span data-ttu-id="d5aee-170">如果文件发生更改，则会使缓存的响应失效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-170">If the file changes, the cached response is invalidated.</span></span>

 [!code-csharp[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="d5aee-171">缓存 ASP.NET 页</span><span class="sxs-lookup"><span data-stu-id="d5aee-171">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHeader : string * string -&gt; unit" Usage="httpResponse.AddHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d5aee-172">要将 <paramref name="value" /> 添加到其中的 HTTP 标头的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-172">The name of the HTTP header to add <paramref name="value" /> to.</span></span></param>
        <param name="value"><span data-ttu-id="d5aee-173">要添加到头中的字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-173">The string to add to the header.</span></span></param>
        <summary><span data-ttu-id="d5aee-174">将 HTTP 头添加到输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-174">Adds an HTTP header to the output stream.</span></span> <span data-ttu-id="d5aee-175">提供 <see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" />，以便兼容 ASP 的早期版本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-175"><see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-176"><xref:System.Web.HttpResponse.AddHeader%2A> 与相同 <xref:System.Web.HttpResponse.AppendHeader%2A> ，只是为了与 ASP 的早期版本兼容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-176"><xref:System.Web.HttpResponse.AddHeader%2A> is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="d5aee-177">使用 ASP.NET，请使用 <xref:System.Web.HttpResponse.AppendHeader%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-177">With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnSendingHeaders">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContext&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken AddOnSendingHeaders(class System.Action`1&lt;class System.Web.HttpContext&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOnSendingHeaders (callback As Action(Of HttpContext)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ AddOnSendingHeaders(Action&lt;System::Web::HttpContext ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.AddOnSendingHeaders : Action&lt;System.Web.HttpContext&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpResponse.AddOnSendingHeaders callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContext&gt;" Index="0" FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="d5aee-178">回调方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-178">The callback method.</span></span></param>
        <summary><span data-ttu-id="d5aee-179">注册一个回调，在即将为此请求发送响应标头之前，ASP.NET 运行时将会调用此回调。</span><span class="sxs-lookup"><span data-stu-id="d5aee-179">Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</span></span></summary>
        <returns><span data-ttu-id="d5aee-180">表示对 OnSendingHeaders 伪事件的订阅的 <see cref="T:System.Web.ISubscriptionToken" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-180">An <see cref="T:System.Web.ISubscriptionToken" /> object that represents the subscription to the OnSendingHeaders pseudo-event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
>  <span data-ttu-id="d5aee-181">如果本机模块首先刷新响应，则不会调用 AddOnSendingHeaders 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-181">The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</span></span>

 <span data-ttu-id="d5aee-182">伪事件对 onsendingheaders 与 IHttpModule 管道事件的不同之处在于，它是一个每个请求订阅，而不是按应用程序订阅。</span><span class="sxs-lookup"><span data-stu-id="d5aee-182">The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</span></span> <span data-ttu-id="d5aee-183">目的是回调可以修改响应状态代码，也可以设置响应 cookie 或标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-183">The intent is that the callback may modify the response status code or may set a response cookie or header.</span></span> <span data-ttu-id="d5aee-184">其他使用注意事项和注意事项：</span><span class="sxs-lookup"><span data-stu-id="d5aee-184">Other usage notes and caveats:</span></span>

-   <span data-ttu-id="d5aee-185">此方法仅在以下情况下有效： IIS 在集成管道模式管道中运行，并且仅在当前请求尚未发送响应标头时有效。</span><span class="sxs-lookup"><span data-stu-id="d5aee-185">This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</span></span>

-   <span data-ttu-id="d5aee-186">ASP.NET 运行时不保证调用回调的线程的任何内容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-186">The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</span></span> <span data-ttu-id="d5aee-187">例如，如果正在执行后台刷新，则可在后台线程中同步调用回调。</span><span class="sxs-lookup"><span data-stu-id="d5aee-187">For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</span></span> <span data-ttu-id="d5aee-188"><xref:System.Web.HttpContext.Current%2A> 不保证在此类线程中可用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-188"><xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.</span></span>

-   <span data-ttu-id="d5aee-189">回调不得调用任何操作响应实体正文或导致刷新的方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-189">The callback must not call any method that manipulates the response entity body or that results in a flush.</span></span> <span data-ttu-id="d5aee-190">例如，回调不得调用 <xref:System.Web.HttpResponse.Redirect%2A> ，因为该方法可以操作响应实体正文。</span><span class="sxs-lookup"><span data-stu-id="d5aee-190">For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body.</span></span>

-   <span data-ttu-id="d5aee-191">回调必须只包含短时间运行的同步代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-191">The callback must contain only short-running synchronous code.</span></span> <span data-ttu-id="d5aee-192">尝试调用异步操作或等待这样的操作可能会导致死锁。</span><span class="sxs-lookup"><span data-stu-id="d5aee-192">Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</span></span>

-   <span data-ttu-id="d5aee-193">回调不得引发异常;否则，行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="d5aee-193">The callback must not throw an exception; otherwise behavior is undefined.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public void AppendCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.AppendCookie : System.Web.HttpCookie -&gt; unit" Usage="httpResponse.AppendCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="d5aee-194">要添加到输出流的 <see cref="T:System.Web.HttpCookie" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-194">The <see cref="T:System.Web.HttpCookie" /> to add to the output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-195">将一个 HTTP Cookie 添加到内部 Cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-195">Adds an HTTP cookie to the intrinsic cookie collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-196">下面的示例创建一个名为的新 cookie，将该 cookie 的 `LastVisit` 值设置为当前日期和时间，并将该 cookie 追加到当前 cookie 集合中。</span><span class="sxs-lookup"><span data-stu-id="d5aee-196">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection.</span></span> <span data-ttu-id="d5aee-197">Cookie 集合中的所有 cookie 都 `Set-Cookie` 通过 HTTP 输出流发送到标头中的客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-197">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>

 [!code-csharp[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-198">在发送了 HTTP 标头之后会追加一个 Cookie。</span><span class="sxs-lookup"><span data-stu-id="d5aee-198">A cookie is appended after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AppendHeader : string * string -&gt; unit" Usage="httpResponse.AppendHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d5aee-199">要添加到输出流的 HTTP 头的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-199">The name of the HTTP header to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="d5aee-200">要追加到头中的字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-200">The string to append to the header.</span></span></param>
        <summary><span data-ttu-id="d5aee-201">将 HTTP 头添加到输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-201">Adds an HTTP header to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-202">如果使用 <xref:System.Web.HttpResponse.AppendHeader%2A> 方法发送缓存特定的标头，并同时使用缓存对象模型 (<xref:System.Web.HttpResponse.Cache%2A>) 设置缓存策略，则在 `Cache-Control` `Expires` `Last-Modified` `Pragma` `Vary` 使用缓存对象模型时，可能会删除与缓存 (、、、和) 相关的 HTTP 响应标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-202">If you use the <xref:System.Web.HttpResponse.AppendHeader%2A> method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used.</span></span> <span data-ttu-id="d5aee-203">此行为可使 ASP.NET 保持最严格的设置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-203">This behavior enables ASP.NET to maintain the most restrictive settings.</span></span> <span data-ttu-id="d5aee-204">例如，请考虑一个包括用户控件的页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-204">For example, consider a page that includes user controls.</span></span> <span data-ttu-id="d5aee-205">如果这些控件具有冲突的缓存策略，则将使用限制性最强的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="d5aee-205">If those controls have conflicting cache policies, the most restrictive cache policy will be used.</span></span> <span data-ttu-id="d5aee-206">如果一个用户控件设置标头 " `Cache-Control: Public` "，而另一个用户控件通过调用来设置限制性更强的标头 "" `Cache-Control: Private` <xref:System.Web.HttpCachePolicy.SetCacheability%2A> ，则 " `Cache-Control: Private` " 标头将与响应一起发送。</span><span class="sxs-lookup"><span data-stu-id="d5aee-206">If one user control sets the header "`Cache-Control: Public`" and another user control sets the more restrictive header "`Cache-Control: Private`" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the "`Cache-Control: Private`" header will be sent with the response.</span></span>

 <span data-ttu-id="d5aee-207">有关标准 HTTP/1.1 标头的列表，请参阅万维网联合会 (W3C) 网站上的 [超文本传输协议-HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) 规范中的第14部分 "标头字段定义"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-207">For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-208">下面的示例调用 <xref:System.Web.HttpResponse.AppendHeader%2A> 方法，将自定义标头添加到 <xref:System.Web.HttpResponse> 发送给发出请求的客户端的对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-208">The following example calls the <xref:System.Web.HttpResponse.AppendHeader%2A> method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.</span></span>

 [!code-csharp[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/CS/responseappendheader.cs.aspx#1)]
 [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/VB/responseappendheader.vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-209">发送 HTTP 标头后追加该标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-209">The header is appended after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendToLog">
      <MemberSignature Language="C#" Value="public void AppendToLog (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendToLog(string param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendToLog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendToLog (param As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendToLog(System::String ^ param);" />
      <MemberSignature Language="F#" Value="member this.AppendToLog : string -&gt; unit" Usage="httpResponse.AppendToLog param" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param"><span data-ttu-id="d5aee-210">要添加到日志文件的文本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-210">The text to add to the log file.</span></span></param>
        <summary><span data-ttu-id="d5aee-211">将自定义日志信息添加到 Internet Information Services (IIS)日志文件。</span><span class="sxs-lookup"><span data-stu-id="d5aee-211">Adds custom log information to the Internet Information Services (IIS) log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-212">若要允许在日志文件中记录指定的字符串，首先必须为要在 IIS 中记录其活动的站点启用 "**扩展日志记录属性**" 对话框的 " **URI 查询**" 选项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-212">To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS.</span></span>

 <span data-ttu-id="d5aee-213">若要在 IIS 6.0 中自定义扩展日志记录，请执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="d5aee-213">To customize extended logging in IIS 6.0, follow these steps:</span></span>

1.  <span data-ttu-id="d5aee-214">在 IIS 管理器中，展开 "本地计算机" 节点，展开 "Web" 或 "FTP 站点" 文件夹，右键单击 Web 或 FTP 站点，然后单击 " **属性**"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-214">In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**.</span></span>

2.  <span data-ttu-id="d5aee-215">单击 " **Web" 或 "FTP 站点** " 选项卡，然后选中 " **启用日志记录** " 复选框， (如果尚未选择此选项) 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-215">Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected).</span></span>

3.  <span data-ttu-id="d5aee-216">在 " **活动日志格式** " 框中，单击 " **W3C 扩展日志文件格式**"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-216">In the **Active log format** box, click **W3C Extended Log File Format**.</span></span>

4.  <span data-ttu-id="d5aee-217">单击 **“属性”** 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-217">Click **Properties**.</span></span>

5.  <span data-ttu-id="d5aee-218">单击 " **高级** " 选项卡，选择要记录的属性，然后单击 **"确定"**。</span><span class="sxs-lookup"><span data-stu-id="d5aee-218">Click the **Advanced** tab, select the properties that you want to log, and then click **OK**.</span></span>



## Examples
 <span data-ttu-id="d5aee-219">下面的示例演示如何将字符串追加到日志中。</span><span class="sxs-lookup"><span data-stu-id="d5aee-219">The following example shows how to append a string to the log.</span></span>

 [!code-csharp[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=36829"><span data-ttu-id="d5aee-220">Windows Server 2003 产品帮助</span><span class="sxs-lookup"><span data-stu-id="d5aee-220">Windows Server 2003 Product Help</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplyAppPathModifier">
      <MemberSignature Language="C#" Value="public string ApplyAppPathModifier (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ApplyAppPathModifier(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyAppPathModifier (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ApplyAppPathModifier(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.ApplyAppPathModifier : string -&gt; string" Usage="httpResponse.ApplyAppPathModifier virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="d5aee-221">资源的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-221">The virtual path to a resource.</span></span></param>
        <summary><span data-ttu-id="d5aee-222">如果会话正在使用 <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> 会话状态，则将会话 ID 添加到虚拟路径中，并返回组合路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-222">Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state and returns the combined path.</span></span> <span data-ttu-id="d5aee-223">如果不使用 <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> 会话状态，则 <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> 将返回原始虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-223">If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> returns the original virtual path.</span></span></summary>
        <returns><span data-ttu-id="d5aee-224">已插入会话 ID 的 <paramref name="virtualPath" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-224">The <paramref name="virtualPath" /> with the session ID inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-225"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> 仅用于无 cookie 会话来构造绝对 Href。</span><span class="sxs-lookup"><span data-stu-id="d5aee-225"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> is used only with cookieless sessions to construct absolute HREFs.</span></span>



## Examples
 <span data-ttu-id="d5aee-226">下面的示例声明一个名为的字符串变量 `urlConverted` ，并将其设置为 <xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> 方法调用的结果。</span><span class="sxs-lookup"><span data-stu-id="d5aee-226">The following example declares a string variable named `urlConverted`, and sets it to the result of an <xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> method call.</span></span> <span data-ttu-id="d5aee-227">然后，代码将变量的值传递到 <xref:System.Web.UI.WebControls.HyperLink> 控件的 <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d5aee-227">The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.</span></span>

 [!code-csharp[System.Web.HttpResponse_Sample5#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/responseapppathmodifiercs.aspx#5)]
 [!code-vb[System.Web.HttpResponse_Sample5#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/responseapppathmodifiervb.aspx#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginFlush : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpResponse.BeginFlush (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="d5aee-228">回调对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-228">The callback object.</span></span></param>
        <param name="state"><span data-ttu-id="d5aee-229">响应状态。</span><span class="sxs-lookup"><span data-stu-id="d5aee-229">The response state.</span></span></param>
        <summary><span data-ttu-id="d5aee-230">向客户端发送当前所有缓冲的响应。</span><span class="sxs-lookup"><span data-stu-id="d5aee-230">Sends the currently buffered response to the client.</span></span></summary>
        <returns><span data-ttu-id="d5aee-231">异步结果对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-231">The asynchronous result object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-232">如果基础 <xref:System.Web.HttpWorkerRequest> 对象支持异步刷新操作，并且从异步模块事件或异步处理程序中调用此方法，则会以异步方式执行刷新操作。</span><span class="sxs-lookup"><span data-stu-id="d5aee-232">If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</span></span> <span data-ttu-id="d5aee-233">否则，将同步执行刷新操作。</span><span class="sxs-lookup"><span data-stu-id="d5aee-233">Otherwise, the flush operation is performed synchronously.</span></span> <span data-ttu-id="d5aee-234">IIS 6.0 和更高版本支持异步刷新。</span><span class="sxs-lookup"><span data-stu-id="d5aee-234">Asynchronous flush is supported for IIS 6.0 and later.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-235">响应已完成。</span><span class="sxs-lookup"><span data-stu-id="d5aee-235">The response is already completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryWrite">
      <MemberSignature Language="C#" Value="public void BinaryWrite (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BinaryWrite(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub BinaryWrite (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BinaryWrite(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.BinaryWrite : byte[] -&gt; unit" Usage="httpResponse.BinaryWrite buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d5aee-236">要写入输出流的字节。</span><span class="sxs-lookup"><span data-stu-id="d5aee-236">The bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-237">将二进制字符串写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-237">Writes a string of binary characters to the HTTP output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-238">下面的示例将文本文件读入缓冲区，并将缓冲区写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-238">The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.</span></span>

 [!code-csharp[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.HttpResponse.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-239">获取或设置一个值，该值指示是否缓冲输出并在处理完整个响应之后发送它。</span><span class="sxs-lookup"><span data-stu-id="d5aee-239">Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</span></span></summary>
        <value><span data-ttu-id="d5aee-240">如果缓冲了发送到客户端的输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-240"><see langword="true" /> if the output to client is buffered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-241"><xref:System.Web.HttpResponse.Buffer%2A>属性已不推荐使用 <xref:System.Web.HttpResponse.BufferOutput%2A> 属性，只是为了与 ASP 的早期版本兼容而提供。</span><span class="sxs-lookup"><span data-stu-id="d5aee-241">The <xref:System.Web.HttpResponse.Buffer%2A> property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="d5aee-242">使用 ASP.NET，请使用 <xref:System.Web.HttpResponse.BufferOutput%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-242">With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferOutput">
      <MemberSignature Language="C#" Value="public bool BufferOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.BufferOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferOutput : bool with get, set" Usage="System.Web.HttpResponse.BufferOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-243">获取或设置一个值，该值指示是否缓冲输出并在处理完整个页之后发送它。</span><span class="sxs-lookup"><span data-stu-id="d5aee-243">Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</span></span></summary>
        <value><span data-ttu-id="d5aee-244">如果缓冲了发送到客户端的输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-244"><see langword="true" /> if the output to client is buffered; otherwise <see langword="false" />.</span></span> <span data-ttu-id="d5aee-245">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-245">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-246">下面的示例设置对 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg 的响应的属性，调用 <xref:System.Web.HttpResponse.Clear%2A> 方法以删除可能附加到响应的其他内容，然后将 <xref:System.Web.HttpResponse.BufferOutput%2A> 属性设置为 true，以便在将任何内容发送到请求客户端之前处理整个页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-246">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the entire page will be processed before any content is sent to the requesting client.</span></span>

 <span data-ttu-id="d5aee-247">有关完整示例，请参阅 <xref:System.Web.HttpResponse> 类。</span><span class="sxs-lookup"><span data-stu-id="d5aee-247">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>

 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.HttpCachePolicy Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCachePolicy Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As HttpCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCachePolicy ^ Cache { System::Web::HttpCachePolicy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.HttpCachePolicy" Usage="System.Web.HttpResponse.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-248">获取网页的缓存策略(例如，过期时间、保密性设置和变化条款)。</span><span class="sxs-lookup"><span data-stu-id="d5aee-248">Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</span></span></summary>
        <value><span data-ttu-id="d5aee-249">包含当前响应的缓存策略相关信息的 <see cref="T:System.Web.HttpCachePolicy" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-249">An <see cref="T:System.Web.HttpCachePolicy" /> object that contains information about the caching policy of the current response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-250">下面的示例将当前缓存策略的属性写入 HTTP 输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-250">The following example writes properties of the current cache policy to the HTTP output stream.</span></span>

 [!code-csharp[Classic HttpResponse.Cache Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cache Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheControl">
      <MemberSignature Language="C#" Value="public string CacheControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.CacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CacheControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheControl : string with get, set" Usage="System.Web.HttpResponse.CacheControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-251">获取或设置与 <see langword="Cache-Control" /> 枚举值之一匹配的 <see cref="T:System.Web.HttpCacheability" /> HTTP 标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-251">Gets or sets the <see langword="Cache-Control" /> HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></summary>
        <value><span data-ttu-id="d5aee-252"><see cref="T:System.Web.HttpCacheability" /> 枚举值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="d5aee-252">A string representation of the <see cref="T:System.Web.HttpCacheability" /> enumeration value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-253">`Private`、和的值 `Public` `No-Cache` 是字符串，必须用引号引起来 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-253">The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (" ").</span></span> <span data-ttu-id="d5aee-254">如果 <xref:System.Web.HttpResponse.CacheControl%2A> 将属性设置为与枚举值之一不匹配的值，则 <xref:System.Web.HttpCacheability> <xref:System.ArgumentException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="d5aee-254">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="d5aee-255">如果 <xref:System.Web.HttpResponse.CacheControl%2A> 未设置该属性，则将响应的可缓存性设置为 <xref:System.Web.HttpCacheability.NoCache> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-255">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability.NoCache>.</span></span>

 <span data-ttu-id="d5aee-256">`CacheControl`、 <xref:System.Web.HttpResponse.Expires%2A> 和属性已 <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> 弃用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-256">The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated.</span></span> <span data-ttu-id="d5aee-257">相反，类的方法 <xref:System.Web.HttpCachePolicy> 可通过内部对象使用， <xref:System.Web.HttpResponse.Cache%2A> 以控制 IIS) 输出缓存和客户端缓存 (的 Internet Information Services。</span><span class="sxs-lookup"><span data-stu-id="d5aee-257">Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-258">设置的字符串值与 <see cref="T:System.Web.HttpCacheability" /> 枚举值之一不匹配。</span><span class="sxs-lookup"><span data-stu-id="d5aee-258">The string value set does not match one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Charset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Charset : string with get, set" Usage="System.Web.HttpResponse.Charset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-259">获取或设置输出流的 HTTP 字符集。</span><span class="sxs-lookup"><span data-stu-id="d5aee-259">Gets or sets the HTTP character set of the output stream.</span></span></summary>
        <value><span data-ttu-id="d5aee-260">输出流的 HTTP 字符集。</span><span class="sxs-lookup"><span data-stu-id="d5aee-260">The HTTP character set of the output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-261">`Charset`属性可以设置为 `null` 以禁止显示 HTTP `Content-Type` 标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-261">The `Charset` property can be set to `null` to suppress the HTTP `Content-Type` header.</span></span>



## Examples
 <span data-ttu-id="d5aee-262">下面的示例检查输出流的字符集是否为中欧 (ISO) 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-262">The following example checks whether the character set of the output stream is Central European (ISO).</span></span>

 [!code-csharp[System.Web.HttpResponse.Charset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.Charset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/vb/default.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-263">发送标头后设置 <see langword="Charset" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="d5aee-263">The <see langword="Charset" /> property was set after headers were sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpResponse.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-264">清除缓冲区流中的所有内容输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-264">Clears all content output from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-265"><xref:System.Web.HttpResponse.Clear%2A>方法不清除标头信息。</span><span class="sxs-lookup"><span data-stu-id="d5aee-265">The <xref:System.Web.HttpResponse.Clear%2A> method does not clear header information.</span></span>



## Examples
 <span data-ttu-id="d5aee-266">下面的示例设置对 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg 的响应的属性，调用 <xref:System.Web.HttpResponse.Clear%2A> 方法以删除可能附加到响应的其他内容，然后将 <xref:System.Web.HttpResponse.BufferOutput%2A> 属性设置为 true，以便在将任何内容发送到请求客户端之前处理整个页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-266">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>

 <span data-ttu-id="d5aee-267">有关完整示例，请参阅 <xref:System.Web.HttpResponse> 类。</span><span class="sxs-lookup"><span data-stu-id="d5aee-267">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>

 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberSignature Language="F#" Value="member this.ClearContent : unit -&gt; unit" Usage="httpResponse.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-268">清除缓冲区流中的所有内容输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-268">Clears all content output from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-269"><xref:System.Web.HttpResponse.ClearContent%2A>方法不清除标头信息。</span><span class="sxs-lookup"><span data-stu-id="d5aee-269">The <xref:System.Web.HttpResponse.ClearContent%2A> method does not clear header information.</span></span>



## Examples
 <span data-ttu-id="d5aee-270">下面的示例将清除缓冲区流中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-270">The following example clears all content from the buffer stream.</span></span>

 [!code-csharp[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearHeaders">
      <MemberSignature Language="C#" Value="public void ClearHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHeaders ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHeaders();" />
      <MemberSignature Language="F#" Value="member this.ClearHeaders : unit -&gt; unit" Usage="httpResponse.ClearHeaders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-271">清除缓冲区流中的所有头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-271">Clears all headers from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-272">下面的示例调用 <xref:System.Web.HttpResponse.ClearHeaders%2A> 方法，以确保不会与当前响应一起发送任何标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-272">The following example calls the <xref:System.Web.HttpResponse.ClearHeaders%2A> method to ensure that no headers are sent with the current response.</span></span> <span data-ttu-id="d5aee-273">如果 ASP.NET 响应正在生成图像（如 JPEG 文件），则此方法可能特别重要。</span><span class="sxs-lookup"><span data-stu-id="d5aee-273">This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file.</span></span> <span data-ttu-id="d5aee-274">在此示例中，将 <xref:System.Web.HttpResponse.ContentType%2A> 属性设置为 image/jpeg。</span><span class="sxs-lookup"><span data-stu-id="d5aee-274">In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.</span></span>

 [!code-csharp[System.Web.HttpResponse_Sample5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponseclearheaderscs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Sample5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponseclearheadersvb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-275">发送 HTTP 标头后清除标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-275">Headers are cleared after the HTTP headers have been sent.</span></span></exception>
        <altmember cref="M:System.Web.HttpResponse.ClearContent" />
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnectedToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ClientDisconnectedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ClientDisconnectedToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ClientDisconnectedToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientDisconnectedToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ClientDisconnectedToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientDisconnectedToken : System.Threading.CancellationToken" Usage="System.Web.HttpResponse.ClientDisconnectedToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-276">获取客户端断开连接时触发的 <see cref="T:System.Threading.CancellationToken" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-276">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when the client disconnects.</span></span></summary>
        <value><span data-ttu-id="d5aee-277">取消标记。</span><span class="sxs-lookup"><span data-stu-id="d5aee-277">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-278">此 API 是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="d5aee-278">This API is thread-safe.</span></span> <span data-ttu-id="d5aee-279">但对于应使用取消令牌的方式有一些限制。</span><span class="sxs-lookup"><span data-stu-id="d5aee-279">However, there are some restrictions on how the cancellation token should be used.</span></span> <span data-ttu-id="d5aee-280">如果使用不当，可能会导致争用条件、死锁或其他意外行为。</span><span class="sxs-lookup"><span data-stu-id="d5aee-280">Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</span></span> <span data-ttu-id="d5aee-281">请记住以下准则：</span><span class="sxs-lookup"><span data-stu-id="d5aee-281">Keep in mind the following guidelines:</span></span>

-   <span data-ttu-id="d5aee-282">确保不在单个请求的边界之外调用此 API，因为 ASP.NET 将在请求结束时释放取消标记。</span><span class="sxs-lookup"><span data-stu-id="d5aee-282">Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</span></span> <span data-ttu-id="d5aee-283">不保证令牌在被释放之前将转换为已取消状态。</span><span class="sxs-lookup"><span data-stu-id="d5aee-283">There is no guarantee that the token will ever transition to a canceled state before it is disposed.</span></span> <span data-ttu-id="d5aee-284">例如，如果请求在客户端没有断开连接的情况下完成，则会在未事先取消的情况下释放令牌。</span><span class="sxs-lookup"><span data-stu-id="d5aee-284">For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</span></span>

-   <span data-ttu-id="d5aee-285">不要等待 <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType> ，因为这违背了异步通知的目的，并可能导致死锁。</span><span class="sxs-lookup"><span data-stu-id="d5aee-285">Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</span></span>

-   <span data-ttu-id="d5aee-286">不要调用对 <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> 原始对象调用回调的重载 <xref:System.Threading.SynchronizationContext> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-286">Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.</span></span>

-   <span data-ttu-id="d5aee-287">不要在 <xref:System.Web.HttpContext> 提供给方法的回调中使用对象或其他非线程安全的 ASP.NET 内部对象 <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-287">Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d5aee-288">回调可能与其他 ASP.NET 或应用程序代码同时运行。</span><span class="sxs-lookup"><span data-stu-id="d5aee-288">The callback may be running concurrently with other ASP.NET or application code.</span></span>

-   <span data-ttu-id="d5aee-289">保留回调方法简短运行和非阻塞。</span><span class="sxs-lookup"><span data-stu-id="d5aee-289">Keep the callback methods short-running and non-blocking.</span></span>

-   <span data-ttu-id="d5aee-290">请尽力避免从回调方法中引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-290">Make every effort to avoid throwing exceptions from within the callback methods.</span></span>

 <span data-ttu-id="d5aee-291">此属性仅在集成模式下 (IIS) 7.5 或更高版本的 Internet 信息服务中受支持。</span><span class="sxs-lookup"><span data-stu-id="d5aee-291">This property is only supported in Internet Information Service (IIS) 7.5 or higher in integrated mode.</span></span> <span data-ttu-id="d5aee-292">如果在没有正确的 IIS 版本或管道模式的情况下调用它，则 <xref:System.PlatformNotSupportedException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="d5aee-292">If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown.</span></span> <span data-ttu-id="d5aee-293">若要确定 IIS 版本，请使用 <xref:System.Web.HttpRuntime.IISVersion%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-293">To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>.</span></span> <span data-ttu-id="d5aee-294">若要确定管道模式，请使用 <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-294">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpResponse.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-295">关闭到客户端的套接字连接。</span><span class="sxs-lookup"><span data-stu-id="d5aee-295">Closes the socket connection to a client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-296">此方法会以突然的方式终止与客户端的连接，而不是用于正常的 HTTP 请求处理。</span><span class="sxs-lookup"><span data-stu-id="d5aee-296">This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</span></span> <span data-ttu-id="d5aee-297">方法将重置数据包发送到客户端，这可能会导致在服务器上、客户端或之间的某个位置缓冲的响应数据被删除。</span><span class="sxs-lookup"><span data-stu-id="d5aee-297">The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</span></span>

 <span data-ttu-id="d5aee-298">但是， <xref:System.Web.HttpApplication.CompleteRequest%2A> 如果要跳转到 <xref:System.Web.HttpApplication.EndRequest> 事件并向客户端发送响应，则通常应调用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-298">However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpResponse.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-299">获取或设置输出流的 HTTP 字符集。</span><span class="sxs-lookup"><span data-stu-id="d5aee-299">Gets or sets the HTTP character set of the output stream.</span></span></summary>
        <value><span data-ttu-id="d5aee-300">包含当前响应的字符集相关信息的 <see cref="T:System.Text.Encoding" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-300">A <see cref="T:System.Text.Encoding" /> object that contains information about the character set of the current response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-301">`ContentEncoding`可以在 ASP.NET 配置文件中的配置文件中指定 Default， [ (ASP.NET Settings Schema) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100))部分。</span><span class="sxs-lookup"><span data-stu-id="d5aee-301">Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) section.</span></span> <span data-ttu-id="d5aee-302">如果 <xref:System.Web.HttpResponse.ContentEncoding%2A> 客户端指定了，则将重写默认配置设置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-302">If <xref:System.Web.HttpResponse.ContentEncoding%2A> is specified by the client, the default configuration settings are overridden.</span></span>



## Examples
 <span data-ttu-id="d5aee-303">下面的示例将字符集编码的可读说明写入输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-303">The following example writes a human-readable description of the character set encoding to the output stream.</span></span>

 [!code-csharp[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-304">尝试将 <see cref="P:System.Web.HttpResponse.ContentEncoding" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-304">Attempted to set <see cref="P:System.Web.HttpResponse.ContentEncoding" /> to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpResponse.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-305">获取或设置输出流的 HTTP MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="d5aee-305">Gets or sets the HTTP MIME type of the output stream.</span></span></summary>
        <value><span data-ttu-id="d5aee-306">输出流的 HTTP MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="d5aee-306">The HTTP MIME type of the output stream.</span></span> <span data-ttu-id="d5aee-307">默认值为“<see langword="text/html" />”。</span><span class="sxs-lookup"><span data-stu-id="d5aee-307">The default value is "<see langword="text/html" />".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-308">下面的示例设置对 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg 的响应的属性，调用 <xref:System.Web.HttpResponse.Clear%2A> 方法以删除可能附加到响应的其他内容，然后将 <xref:System.Web.HttpResponse.BufferOutput%2A> 属性设置为 true，以便在将任何内容发送到请求客户端之前处理整个页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-308">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>

 <span data-ttu-id="d5aee-309">有关完整示例，请参阅 <xref:System.Web.HttpResponse> 类。</span><span class="sxs-lookup"><span data-stu-id="d5aee-309">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>

 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-310"><see cref="P:System.Web.HttpResponse.ContentType" /> 属性已设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-310">The <see cref="P:System.Web.HttpResponse.ContentType" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpResponse.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-311">获取响应 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-311">Gets the response cookie collection.</span></span></summary>
        <value><span data-ttu-id="d5aee-312">响应 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-312">The response cookie collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-313">ASP.NET 包括两个内部 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-313">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="d5aee-314">通过的集合访问的集合 <xref:System.Web.HttpRequest.Cookies%2A> <xref:System.Web.HttpRequest> 包含客户端向标头中的服务器传输的 cookie `Cookie` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-314">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="d5aee-315">通过的集合访问的集合 <xref:System.Web.HttpResponse.Cookies%2A> <xref:System.Web.HttpResponse> 包含在服务器上创建并在标头中传输到客户端的新 cookie `Set-Cookie` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-315">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>

 <span data-ttu-id="d5aee-316">使用集合添加 cookie 后 <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> ，cookie 会立即出现在 <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> 集合中，即使尚未将响应发送到客户端也是如此。</span><span class="sxs-lookup"><span data-stu-id="d5aee-316">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>



## Examples
 <span data-ttu-id="d5aee-317">下面的示例创建一个名为的新 cookie，将该 cookie 的 `LastVisit` 值设置为当前日期和时间，并将该 cookie 添加到当前 cookie 集合中。</span><span class="sxs-lookup"><span data-stu-id="d5aee-317">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection.</span></span> <span data-ttu-id="d5aee-318">Cookie 集合中的所有 cookie 都 `Set-Cookie` 通过 HTTP 输出流发送到标头中的客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-318">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>

 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableKernelCache">
      <MemberSignature Language="C#" Value="public void DisableKernelCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableKernelCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableKernelCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableKernelCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableKernelCache();" />
      <MemberSignature Language="F#" Value="member this.DisableKernelCache : unit -&gt; unit" Usage="httpResponse.DisableKernelCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-319">禁用当前响应的内核缓存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-319">Disables kernel caching for the current response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-320">如果不支持内核缓存，则此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-320">If kernel caching is not supported, this method has no effect.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableUserCache">
      <MemberSignature Language="C#" Value="public void DisableUserCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableUserCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableUserCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableUserCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableUserCache();" />
      <MemberSignature Language="F#" Value="member this.DisableUserCache : unit -&gt; unit" Usage="httpResponse.DisableUserCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-321">禁用 IIS 用户-方式来缓存反映。</span><span class="sxs-lookup"><span data-stu-id="d5aee-321">Disables IIS user-mode caching for this response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-322">如果不支持 IIS 用户模式缓存，则此方法返回，而不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="d5aee-322">If IIS user-mode caching is not supported, this method returns without performing any action.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.End" />
      <MemberSignature Language="VB.NET" Value="Public Sub End ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void End();" />
      <MemberSignature Language="F#" Value="member this.End : unit -&gt; unit" Usage="httpResponse.End " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-323">将当前所有缓冲的输出发送到客户端，停止该页的执行，并引发 <see cref="E:System.Web.HttpApplication.EndRequest" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d5aee-323">Sends all currently buffered output to the client, stops execution of the page, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-324">提供此方法只是为了与 ASP 兼容-这就是与前面 ASP.NET 的基于 COM 的 Web 编程技术的兼容性。</span><span class="sxs-lookup"><span data-stu-id="d5aee-324">This method is provided only for compatibility with ASP - that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</span></span> <span data-ttu-id="d5aee-325">如果你想要跳转到 <xref:System.Web.HttpApplication.EndRequest> 事件并向客户端发送响应，通常最好改为调用 <xref:System.Web.HttpApplication.CompleteRequest%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-325">If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead.</span></span>

 <span data-ttu-id="d5aee-326">若要模仿 `End` asp.net 中的方法的行为，此方法会尝试引发 <xref:System.Threading.ThreadAbortException> 异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-326">To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception.</span></span> <span data-ttu-id="d5aee-327">如果此尝试成功，则调用线程将中止，这会对你的站点性能产生不利后果。</span><span class="sxs-lookup"><span data-stu-id="d5aee-327">If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</span></span> <span data-ttu-id="d5aee-328">在这种情况下，不会执行调用方法之后的任何代码 <xref:System.Web.HttpResponse.End%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-328">In that case, no code after the call to the <xref:System.Web.HttpResponse.End%2A> method is executed.</span></span>

 <span data-ttu-id="d5aee-329">如果该 <xref:System.Web.HttpResponse.End%2A> 方法无法引发 <xref:System.Threading.ThreadAbortException> ，则它会将响应字节刷新到客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-329">If the <xref:System.Web.HttpResponse.End%2A> method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client.</span></span> <span data-ttu-id="d5aee-330">它会以同步方式执行此工作，这也可能会对站点性能产生不利后果。</span><span class="sxs-lookup"><span data-stu-id="d5aee-330">It does this synchronously, which can also be detrimental to your site's performance.</span></span>

 <span data-ttu-id="d5aee-331">在任一情况下 (是否 <xref:System.Threading.ThreadAbortException> 已成功引发异常) ，响应管道将向前跳到 <xref:System.Web.HttpApplication.EndRequest> 事件。</span><span class="sxs-lookup"><span data-stu-id="d5aee-331">In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event.</span></span>

 <span data-ttu-id="d5aee-332"><xref:System.Web.HttpApplication.CompleteRequest%2A>方法不会引发异常，并且可能会执行对方法的调用后的代码 <xref:System.Web.HttpApplication.CompleteRequest%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-332">The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed.</span></span> <span data-ttu-id="d5aee-333">如果你的目的是避免执行后面的代码，并且可以接受的性能损失 <xref:System.Web.HttpResponse.End%2A> ，则可以调用 <xref:System.Web.HttpResponse.End%2A> 而不是 <xref:System.Web.HttpApplication.CompleteRequest%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-333">If your intention is to avoid execution of subsequent code, and if the performance penalty of <xref:System.Web.HttpResponse.End%2A> is acceptable, you can call <xref:System.Web.HttpResponse.End%2A> instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadAbortException"><span data-ttu-id="d5aee-334">对 <see cref="M:System.Web.HttpResponse.End" /> 的调用已终止当前请求。</span><span class="sxs-lookup"><span data-stu-id="d5aee-334">The call to <see cref="M:System.Web.HttpResponse.End" /> has terminated the current request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndFlush : IAsyncResult -&gt; unit" Usage="httpResponse.EndFlush asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d5aee-335">异步结果对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-335">The asynchronous result object.</span></span></param>
        <summary><span data-ttu-id="d5aee-336">完成异步刷新操作。</span><span class="sxs-lookup"><span data-stu-id="d5aee-336">Completes an asynchronous flush operation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-337">不支持异步刷新，且 <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-337">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-338">不支持异步刷新，且 <paramref name="asyncResult" /> 参数不能转换到 FlushAsyncResult<c></c> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-338">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter cannot be cast to a <c>FlushAsyncResult</c> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public int Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Expires { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : int with get, set" Usage="System.Web.HttpResponse.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-339">获取或设置在浏览器上缓存的页过期之前的分钟数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-339">Gets or sets the number of minutes before a page cached on a browser expires.</span></span> <span data-ttu-id="d5aee-340">如果用户在页面过期之前返回到该页，则显示缓存的版本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-340">If the user returns to the same page before it expires, the cached version is displayed.</span></span> <span data-ttu-id="d5aee-341">提供 <see cref="P:System.Web.HttpResponse.Expires" />，以便兼容 ASP 的早期版本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-341"><see cref="P:System.Web.HttpResponse.Expires" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <value><span data-ttu-id="d5aee-342">在页过期之前的分钟数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-342">The number of minutes before the page expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-343">`Expires` <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> <xref:System.Web.HttpResponse.CacheControl%2A> 通过内部对象获取的、和属性已弃用， <xref:System.Web.HttpCachePolicy> <xref:System.Web.HttpResponse.Cache%2A> 可用于控制 IIS) 输出缓存和客户端缓存 (Internet Information Services。</span><span class="sxs-lookup"><span data-stu-id="d5aee-343">The `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAbsolute">
      <MemberSignature Language="C#" Value="public DateTime ExpiresAbsolute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpiresAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ExpiresAbsolute" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresAbsolute As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpiresAbsolute { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ExpiresAbsolute : DateTime with get, set" Usage="System.Web.HttpResponse.ExpiresAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-344">获取或设置从缓存中移删除缓存信息的绝对日期和时间。</span><span class="sxs-lookup"><span data-stu-id="d5aee-344">Gets or sets the absolute date and time at which to remove cached information from the cache.</span></span> <span data-ttu-id="d5aee-345">提供 <see cref="P:System.Web.HttpResponse.ExpiresAbsolute" />，以便兼容 ASP 的早期版本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-345"><see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <value><span data-ttu-id="d5aee-346">该页过期时的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="d5aee-346">The date and time at which the page expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-347">`ExpiresAbsolute` <xref:System.Web.HttpResponse.Expires%2A> <xref:System.Web.HttpResponse.CacheControl%2A> 通过内部对象获取的、和属性已弃用， <xref:System.Web.HttpCachePolicy> <xref:System.Web.HttpResponse.Cache%2A> 可用于控制 IIS) 输出缓存和客户端缓存 (Internet Information Services。</span><span class="sxs-lookup"><span data-stu-id="d5aee-347">The `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpResponse.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-348">获取或设置一个包装筛选器对象，该对象用于在传输之前修改 HTTP 实体主体。</span><span class="sxs-lookup"><span data-stu-id="d5aee-348">Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</span></span></summary>
        <value><span data-ttu-id="d5aee-349">作为输出筛选器的 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-349">The <see cref="T:System.IO.Stream" /> object that acts as the output filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-350">创建 `Stream` 对象并将 <xref:System.Web.HttpResponse.Filter%2A> 属性设置为 `Stream` 对象时，通过筛选器发送的所有 HTTP 输出都将通过 <xref:System.Web.HttpResponse.Write%2A> 筛选器。</span><span class="sxs-lookup"><span data-stu-id="d5aee-350">When you create a `Stream` object and set the <xref:System.Web.HttpResponse.Filter%2A> property to the `Stream` object, all HTTP output sent by <xref:System.Web.HttpResponse.Write%2A> passes through the filter.</span></span>



## Examples
 <span data-ttu-id="d5aee-351">下面的示例是一个 ASP.NET 页，它将 <xref:System.Web.HttpResponse.Filter%2A> 属性设置为类的新实例 `UpperCaseFilter` ，这是一个自定义类，它 <xref:System.IO.Stream> 将通过其传递的所有文本转换为大写。</span><span class="sxs-lookup"><span data-stu-id="d5aee-351">The following example is an ASP.NET page that sets the <xref:System.Web.HttpResponse.Filter%2A> property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase.</span></span> <span data-ttu-id="d5aee-352">有关请求的信息保存到文本文件中，然后 <xref:System.Web.HttpResponse.Filter%2A> 设置属性。</span><span class="sxs-lookup"><span data-stu-id="d5aee-352">The information about the request is saved to a text file, and then the <xref:System.Web.HttpResponse.Filter%2A> property is set.</span></span> <span data-ttu-id="d5aee-353">响应筛选器就绪后，代码会调用 <xref:System.Web.HttpRequest.MapPath%2A> 方法来获取名为的文本文件的绝对路径，该文本文件用作 `TestFile.txt` 响应内容的源。</span><span class="sxs-lookup"><span data-stu-id="d5aee-353">After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response.</span></span> <span data-ttu-id="d5aee-354">然后，该代码创建一个新的 <xref:System.IO.StreamReader> 对象来读取文本文件，然后调用 <xref:System.Web.HttpResponse.Write%2A> 方法以在页面上显示该文件的内容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-354">The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.</span></span>

 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-355">不允许对实体进行筛选。</span><span class="sxs-lookup"><span data-stu-id="d5aee-355">Filtering is not allowed with the entity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="httpResponse.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-356">向客户端发送当前所有缓冲的输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-356">Sends all currently buffered output to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-357">强制将所有当前缓冲的输出发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-357">Forces all currently buffered output to be sent to the client.</span></span> <span data-ttu-id="d5aee-358">在 <xref:System.Web.HttpResponse.Flush%2A> 请求处理过程中，可以多次调用方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-358">The <xref:System.Web.HttpResponse.Flush%2A> method can be called multiple times during request processing.</span></span>



## Examples
 <span data-ttu-id="d5aee-359">下面的示例调用 <xref:System.Drawing.Graphics.Save%2A> 方法将 <xref:System.Drawing.Bitmap> 对象保存到 <xref:System.Web.HttpResponse.OutputStream%2A> 属性，并将图像转换为 JPEG 格式。</span><span class="sxs-lookup"><span data-stu-id="d5aee-359">The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format.</span></span> <span data-ttu-id="d5aee-360">然后，该代码对 `Dispose` <xref:System.Drawing.Bitmap> 对象和对象调用方法 <xref:System.Drawing.Graphics> ，释放正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="d5aee-360">The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="d5aee-361">然后，它调用 <xref:System.Web.HttpResponse.Flush%2A> 方法，将响应内容发送给请求的客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-361">It then calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>

 <span data-ttu-id="d5aee-362">有关完整示例，请参阅 <xref:System.Web.HttpResponse> 类。</span><span class="sxs-lookup"><span data-stu-id="d5aee-362">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-363">发送响应后刷新缓存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-363">The cache is flushed after the response has been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="httpResponse.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5aee-364">向客户端异步发送当前缓冲的所有输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-364">Asynchronously sends all currently buffered output to the client.</span></span></summary>
        <returns><span data-ttu-id="d5aee-365">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-365">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeaderEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeaderEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpResponse.HeaderEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-366">获取或设置表示当前标头输出流的编码的 <see cref="T:System.Text.Encoding" />对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-366">Gets or sets an <see cref="T:System.Text.Encoding" /> object that represents the encoding for the current header output stream.</span></span></summary>
        <value><span data-ttu-id="d5aee-367">包含当前标头的字符集相关信息的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-367">An <see cref="T:System.Text.Encoding" /> that contains information about the character set for the current header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-368"><xref:System.Web.HttpResponse.HeaderEncoding%2A>属性使您能够 <xref:System.Text.Encoding> 通过使用 <xref:System.Text.ASCIIEncoding> 、 <xref:System.Text.UnicodeEncoding> 、 <xref:System.Text.UTF7Encoding> 或对象来禁用或更改响应标头上的对象 <xref:System.Text.UTF8Encoding> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-368">The <xref:System.Web.HttpResponse.HeaderEncoding%2A> property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="d5aee-369">默认编码值为 <xref:System.Text.UTF8Encoding> 类。</span><span class="sxs-lookup"><span data-stu-id="d5aee-369">The default encoding value is the <xref:System.Text.UTF8Encoding> class.</span></span>

 <span data-ttu-id="d5aee-370">通过更改属性的类型 <xref:System.Web.HttpResponse.HeaderEncoding%2A> ，可能会增加某些恶意攻击的风险，或导致通过响应标头发送敏感数据。</span><span class="sxs-lookup"><span data-stu-id="d5aee-370">By changing the type of the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</span></span> <span data-ttu-id="d5aee-371">在部分中，可以通过将 <xref:System.Web.HttpResponse.HeaderEncoding%2A> 响应的属性保留为默认设置来避免标头注入攻击。</span><span class="sxs-lookup"><span data-stu-id="d5aee-371">Header injection attacks can be avoided, in part, by leaving the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property of a response to the default setting.</span></span> <span data-ttu-id="d5aee-372">对易受攻击的应用程序的攻击可能会回显受保护的数据，作为响应标头的一部分。</span><span class="sxs-lookup"><span data-stu-id="d5aee-372">An attack against a vulnerable application could echo back entrusted data as part of a response header.</span></span> <span data-ttu-id="d5aee-373">如果 <xref:System.Web.HttpResponse.HeaderEncoding%2A> 因为标头中的延续行要求而禁用，或者根据不受信任的数据的结果构造了任何标头，则应在发送到响应流之前验证标头数据。</span><span class="sxs-lookup"><span data-stu-id="d5aee-373">If the <xref:System.Web.HttpResponse.HeaderEncoding%2A> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-374">编码值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-374">The encoding value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-375">编码值为 <see cref="P:System.Text.Encoding.Unicode" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-375">The encoding value is <see cref="P:System.Text.Encoding.Unicode" />.</span></span>

<span data-ttu-id="d5aee-376">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-376">-or-</span></span>

<span data-ttu-id="d5aee-377">已发送标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-377">The headers have already been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpResponse.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-378">获取响应标头的集合。</span><span class="sxs-lookup"><span data-stu-id="d5aee-378">Gets the collection of response headers.</span></span></summary>
        <value><span data-ttu-id="d5aee-379">响应标头的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-379">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of response headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-380"><xref:System.Web.HttpResponse.Headers%2A>仅 [!INCLUDE[iisver](~/includes/iisver-md.md)] 集成管道模式支持属性，且至少支持 .NET Framework 3.0。</span><span class="sxs-lookup"><span data-stu-id="d5aee-380">The <xref:System.Web.HttpResponse.Headers%2A> property is only supported with the [!INCLUDE[iisver](~/includes/iisver-md.md)] integrated pipeline mode and at least the .NET Framework 3.0.</span></span> <span data-ttu-id="d5aee-381">当你尝试访问该属性时，如果 <xref:System.Web.HttpResponse.Headers%2A> 不满足这两个条件中的任何一个，则 <xref:System.PlatformNotSupportedException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="d5aee-381">When you try to access the <xref:System.Web.HttpResponse.Headers%2A> property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d5aee-382">该操作要求使用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 中的集成管道模式，并且 .NET Framework 至少为 3.0 版本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-382">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=86952"><span data-ttu-id="d5aee-383">将 ASP.NET 应用程序升级到 IIS 7.0： IIS 7.0 集成模式和经典模式之间的差异</span><span class="sxs-lookup"><span data-stu-id="d5aee-383">Upgrading ASP.NET Applications to IIS 7.0: Differences between IIS 7.0 Integrated Mode and Classic mode</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HeadersWritten">
      <MemberSignature Language="C#" Value="public bool HeadersWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersWritten" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeadersWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeadersWritten As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HeadersWritten { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HeadersWritten : bool" Usage="System.Web.HttpResponse.HeadersWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-384">获取指示是否已写入响应标头的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-384">Gets a value indicating whether the response headers have been written.</span></span></summary>
        <value><span data-ttu-id="d5aee-385">如果已写入响应标头，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-385"><see langword="true" /> if the response headers have been written; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public bool IsClientConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClientConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClientConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClientConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClientConnected : bool" Usage="System.Web.HttpResponse.IsClientConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-386">获取指示客户端是否仍连接在服务器上的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-386">Gets a value indicating whether the client is still connected to the server.</span></span></summary>
        <value><span data-ttu-id="d5aee-387">如果客户端当前仍在连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-387"><see langword="true" /> if the client is currently connected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-388"><xref:System.Web.HttpResponse.IsClientConnected%2A> `false` 当满足以下条件时，属性将返回：</span><span class="sxs-lookup"><span data-stu-id="d5aee-388">The <xref:System.Web.HttpResponse.IsClientConnected%2A> property returns `false` when the following conditions are true:</span></span>

-   <span data-ttu-id="d5aee-389">与客户端的连接已终止。</span><span class="sxs-lookup"><span data-stu-id="d5aee-389">The connection to the client was terminated.</span></span> <span data-ttu-id="d5aee-390">如果 <xref:System.Web.HttpResponse.Close%2A> 调用了方法，或者客户端停止了 Web 页的执行或浏览到其他页，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="d5aee-390">This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</span></span>

-   <span data-ttu-id="d5aee-391"><xref:System.Web.HttpWorkerRequest>处理请求的对象是 `null` 或 <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> 方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-391">The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method returns `false`.</span></span> <span data-ttu-id="d5aee-392">如果自定义 <xref:System.Web.HttpWorkerRequest> 对象处理请求，则 <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> 可能会根据自定义条件设置方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-392">If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method might be set based on custom criteria.</span></span> <span data-ttu-id="d5aee-393">例如，自定义工作请求可能会在一段时间后强制超时。</span><span class="sxs-lookup"><span data-stu-id="d5aee-393">For example, the custom worker request might force a time-out after a period of time.</span></span>



## Examples
 <span data-ttu-id="d5aee-394">下面的示例使用 <xref:System.Web.HttpResponse.IsClientConnected%2A> 属性来检查请求该页的客户端是否仍连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="d5aee-394">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="d5aee-395">如果 <xref:System.Web.HttpResponse.IsClientConnected%2A> 为 true，则代码将调用 <xref:System.Web.HttpResponse.Redirect%2A> 方法，并且客户端将查看另一页。</span><span class="sxs-lookup"><span data-stu-id="d5aee-395">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="d5aee-396">如果 <xref:System.Web.HttpResponse.IsClientConnected%2A> 为 false，则代码调用 <xref:System.Web.HttpResponse.End%2A> 方法并且终止所有页面处理。</span><span class="sxs-lookup"><span data-stu-id="d5aee-396">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestBeingRedirected">
      <MemberSignature Language="C#" Value="public bool IsRequestBeingRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestBeingRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsRequestBeingRedirected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequestBeingRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequestBeingRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequestBeingRedirected : bool" Usage="System.Web.HttpResponse.IsRequestBeingRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-397">获取指示客户端是否正在被传输到新位置的布尔值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-397">Gets a Boolean value indicating whether the client is being transferred to a new location.</span></span></summary>
        <value><span data-ttu-id="d5aee-398">如果位置响应标头的值与当前位置不同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-398"><see langword="true" /> if the value of the location response header is different than the current location; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-399">将 <xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A> 属性与属性结合使用， <xref:System.Web.HttpResponse.RedirectLocation%2A> 以测试和确定传输到 HTTP 标头中的客户端的绝对 uri 是否与 `Location` 当前 uri 不同，以及要传输到的新目标 URI。</span><span class="sxs-lookup"><span data-stu-id="d5aee-399">Use the <xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A> property with the <xref:System.Web.HttpResponse.RedirectLocation%2A> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP `Location` header is different than the current URI and what the new intended URI that is being transferred to will be.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Output" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Output As TextWriter" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter" Usage="System.Web.HttpResponse.Output" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Output As TextWriter" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter with get, set" Usage="System.Web.HttpResponse.Output" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-400">实现到传出 HTTP 响应流的文本输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-400">Enables output of text to the outgoing HTTP response stream.</span></span></summary>
        <value><span data-ttu-id="d5aee-401">实现到客户端的自定义输出的 <see cref="T:System.IO.TextWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-401">A <see cref="T:System.IO.TextWriter" /> object that enables custom output to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-402">下面的示例是一个 ASP.NET 页，其中包含 <xref:System.Web.UI.WebControls.TextBox> 其 <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> 属性设置为的控件 <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-402">The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>.</span></span> <span data-ttu-id="d5aee-403">该页的代码使用用户在中输入的文本 <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> ，使用 <xref:System.Web.HttpServerUtility.HtmlEncode%2A> 方法对其进行 HTML 编码，并使用 <xref:System.Web.HttpResponse.Output%2A> 属性将编码的字符串显示到页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-403">The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the <xref:System.Web.HttpResponse.Output%2A> property to display the encoded string to the page.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/CS/responseoutputcs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/VB/responseoutputvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.OutputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ OutputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputStream : System.IO.Stream" Usage="System.Web.HttpResponse.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-404">实现到传出 HTTP 内容主体的二进制输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-404">Enables binary output to the outgoing HTTP content body.</span></span></summary>
        <value><span data-ttu-id="d5aee-405">表示传出 HTTP 内容主体的原始内容的 IO <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-405">An IO <see cref="T:System.IO.Stream" /> representing the raw contents of the outgoing HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-406">从 .NET Framework 版本2.0 开始，当你使用 <xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 属性返回的 IO 流的方法时 <xref:System.Web.HttpResponse.OutputStream%2A> ，可能会引发以下异常：</span><span class="sxs-lookup"><span data-stu-id="d5aee-406">Starting with the .NET Framework version 2.0, when you use the <xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method of the IO stream returned by the <xref:System.Web.HttpResponse.OutputStream%2A> property, the following exceptions might be thrown:</span></span>

-   <span data-ttu-id="d5aee-407"><xref:System.ArgumentOutOfRangeException>如果 `offset` 或 `count` 参数为负，或者 `buffer` 参数的长度减去 `offset` 参数小于或等于零，则为。</span><span class="sxs-lookup"><span data-stu-id="d5aee-407"><xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.</span></span>

-   <span data-ttu-id="d5aee-408"><xref:System.ArgumentNullException>如果 `buffer` 参数为，则为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-408"><xref:System.ArgumentNullException>, if the `buffer` parameter is `null`.</span></span>



## Examples
 <span data-ttu-id="d5aee-409">下面的示例调用 <xref:System.Drawing.Image.Save%2A> 方法将 <xref:System.Drawing.Bitmap> 对象保存到 <xref:System.Web.HttpResponse.OutputStream%2A> 属性，并将图像转换为 JPEG 格式。</span><span class="sxs-lookup"><span data-stu-id="d5aee-409">The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property, and converts the image to the JPEG format.</span></span> <span data-ttu-id="d5aee-410">然后，该代码对 <xref:System.Drawing.Bitmap> 对象和对象调用 Dispose 方法 <xref:System.Drawing.Graphics> ，释放正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="d5aee-410">The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="d5aee-411">最后，该代码调用 <xref:System.Web.HttpResponse.Flush%2A> 方法以将响应内容发送给请求的客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-411">Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>

 <span data-ttu-id="d5aee-412">有关完整示例，请参阅 <xref:System.Web.HttpResponse> 类。</span><span class="sxs-lookup"><span data-stu-id="d5aee-412">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-413"><paramref name="OutputStream" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-413"><paramref name="OutputStream" /> is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pics">
      <MemberSignature Language="C#" Value="public void Pics (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pics(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Pics(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pics (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pics(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Pics : string -&gt; unit" Usage="httpResponse.Pics value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d5aee-414">要添加到 <see langword="PICS-Label" /> 标头的字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-414">The string to add to the <see langword="PICS-Label" /> header.</span></span></param>
        <summary><span data-ttu-id="d5aee-415">将 HTTP <see langword="PICS-Label" /> 标头追加到输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-415">Appends a HTTP <see langword="PICS-Label" /> header to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-416">用于 Internet 内容选择的平台 (图片) 是万维网联合会 (W3C) 标准来标记内容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-416">Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</span></span> <span data-ttu-id="d5aee-417">图片实质上是一种用于创建分级系统的语言。</span><span class="sxs-lookup"><span data-stu-id="d5aee-417">PICS is essentially a language for creating a ratings system.</span></span>

 <span data-ttu-id="d5aee-418">任何值都可以是图片标签;ASP.NET 不会验证标签。</span><span class="sxs-lookup"><span data-stu-id="d5aee-418">Any value can be a PICS label; ASP.NET does not validate the label.</span></span> <span data-ttu-id="d5aee-419">字符串的最大长度为255个字符。</span><span class="sxs-lookup"><span data-stu-id="d5aee-419">The maximum length of the string is 255 characters.</span></span> <span data-ttu-id="d5aee-420">有关图片标准和语法的详细信息，请参阅 [万维网联合会](https://go.microsoft.com/fwlink/?LinkID=37125) 网站。</span><span class="sxs-lookup"><span data-stu-id="d5aee-420">For more information about PICS standards and syntax, see the [World Wide Web Consortium](https://go.microsoft.com/fwlink/?LinkID=37125) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-421">下面的示例是一个显示图像的 ASP.NET 页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-421">The following example is an ASP.NET page that displays an image.</span></span> <span data-ttu-id="d5aee-422">页面代码会调用 <xref:System.Web.HttpResponse.Pics%2A> 方法，以设置响应的 HTTP `PICS-Label` 标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-422">The page code calls the <xref:System.Web.HttpResponse.Pics%2A> method to set the HTTP `PICS-Label` header for the response.</span></span> <span data-ttu-id="d5aee-423">作为参数传递给方法的字符串 <xref:System.Web.HttpResponse.Pics%2A> 表示从 Internet 内容分级关联 (ICRA) 网站生成的评级标签。</span><span class="sxs-lookup"><span data-stu-id="d5aee-423">The string that is passed as the parameter to the <xref:System.Web.HttpResponse.Pics%2A> method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page2cs.aspx#2)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page2vb.aspx#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushPromise">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-424">提升承诺的对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-424">Promotes a promised object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.PushPromise : string -&gt; unit" Usage="httpResponse.PushPromise path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="d5aee-425">推送请求的 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-425">The URL of the push request.</span></span> <span data-ttu-id="d5aee-426">它应为服务器想要推送到客户端的相对资源的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-426">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <summary><span data-ttu-id="d5aee-427">此 API 用于支持将推送承诺发送到 HTTP 2.0 客户端的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d5aee-427">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="d5aee-428">有关 Http2 服务器推送的详细信息，请参阅 <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 规范第 8.2 节：服务器推送</see>。</span><span class="sxs-lookup"><span data-stu-id="d5aee-428">You can find more details regarding to Http2 server push at <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-429">PushPromise 是不确定性的，应用程序不应具有依赖于它的逻辑。</span><span class="sxs-lookup"><span data-stu-id="d5aee-429">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="d5aee-430">在某些情况下，其唯一用途是性能优势。</span><span class="sxs-lookup"><span data-stu-id="d5aee-430">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="d5aee-431">存在许多 (协议和实现) 的条件，这可能会导致完全忽略推送请求。</span><span class="sxs-lookup"><span data-stu-id="d5aee-431">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="d5aee-432">预期的基于火灾。</span><span class="sxs-lookup"><span data-stu-id="d5aee-432">The expectation is based on fire-and-forget.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="member this.PushPromise : string * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpResponse.PushPromise (path, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="d5aee-433">推送请求的 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-433">The URL of the push request.</span></span> <span data-ttu-id="d5aee-434">它应为服务器想要推送到客户端的相对资源的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-434">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <param name="method"><span data-ttu-id="d5aee-435">将由推送请求使用的 http 请求方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-435">Http request method that would be used by the push request.</span></span></param>
        <param name="headers"><span data-ttu-id="d5aee-436">将由推送请求使用的 http 请求头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-436">Http request header that would be used by the push request.</span></span></param>
        <summary><span data-ttu-id="d5aee-437">此 API 用于支持将推送承诺发送到 HTTP 2.0 客户端的应用程序。</span><span class="sxs-lookup"><span data-stu-id="d5aee-437">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="d5aee-438">有关 Http2 服务器推送的详细信息，请参阅 <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 规范第 8.2 节：服务器推送</see>。</span><span class="sxs-lookup"><span data-stu-id="d5aee-438">You can find more details regarding to Http2 server push at <see href="https://http2.github.io/http2-spec/#PushResources">HTTP/2 Specification Section 8.2: Server Push</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-439">PushPromise 是不确定性的，应用程序不应具有依赖于它的逻辑。</span><span class="sxs-lookup"><span data-stu-id="d5aee-439">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="d5aee-440">在某些情况下，其唯一用途是性能优势。</span><span class="sxs-lookup"><span data-stu-id="d5aee-440">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="d5aee-441">存在许多 (协议和实现) 的条件，这可能会导致完全忽略推送请求。</span><span class="sxs-lookup"><span data-stu-id="d5aee-441">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="d5aee-442">预期的基于火灾。</span><span class="sxs-lookup"><span data-stu-id="d5aee-442">The expectation is based on fire-and-forget.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Redirect">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-443">将客户端重定向到新的 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-443">Redirects a client to a new URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Redirect : string -&gt; unit" Usage="httpResponse.Redirect url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="d5aee-444">目标位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-444">The target location.</span></span> <span data-ttu-id="d5aee-445">这可能是相对于应用程序的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-445">This may be an application-relative virtual path.</span></span></param>
        <summary><span data-ttu-id="d5aee-446">将请求重定向到新 URL 并指定该新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-446">Redirects a request to a new URL and specifies the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-447">调用 <xref:System.Web.HttpResponse.Redirect%2A> 等效于 <xref:System.Web.HttpResponse.Redirect%2A> 在第二个参数设置为的情况调用 `true` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-447">Calling <xref:System.Web.HttpResponse.Redirect%2A> is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`.</span></span>

 <span data-ttu-id="d5aee-448"><xref:System.Web.HttpResponse.Redirect%2A><xref:System.Web.HttpResponse.End%2A> <xref:System.Threading.ThreadAbortException> 完成后引发异常的调用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-448"><xref:System.Web.HttpResponse.Redirect%2A> calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span> <span data-ttu-id="d5aee-449">此例外会对 Web 应用程序性能产生不利影响。</span><span class="sxs-lookup"><span data-stu-id="d5aee-449">This exception has a detrimental effect on Web application performance.</span></span> <span data-ttu-id="d5aee-450">因此，建议不要使用此重载，而是使用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> 重载并传递 `false` `endResponse` 参数，然后调用 <xref:System.Web.HttpApplication.CompleteRequest%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-450">Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="d5aee-451">有关更多信息，请参见 <xref:System.Web.HttpResponse.End%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-451">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>

> [!NOTE]
>  <span data-ttu-id="d5aee-452">仅对于移动页面，如果你的应用程序依赖于无 cookie 会话，或可能接收到需要无 cookie 会话的移动设备发出的请求，则在路径中使用波形符 (\~) 会导致创建新的会话，可能会丢失会话数据。</span><span class="sxs-lookup"><span data-stu-id="d5aee-452">For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (\~) in a path can result in creating a new session and potentially losing session data.</span></span> <span data-ttu-id="d5aee-453">若要使用路径（如 "/path"）设置移动控件上的属性 \~ ，请在将路径 <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \~ 分配给属性之前使用 "/path" 解析该路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-453">To set a property on a mobile control with a path such as "\~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "\~/path" before assigning it to the property.</span></span>

 <span data-ttu-id="d5aee-454">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-454">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="d5aee-455">将控制转移到另一页的另一种方法是 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-455">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="d5aee-456"><xref:System.Web.HttpServerUtility.Transfer%2A>方法通常更高效，因为它不会导致到客户端的往返。</span><span class="sxs-lookup"><span data-stu-id="d5aee-456">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="d5aee-457">有关详细信息，请参阅 [如何：将用户重定向到另一页](https://docs.microsoft.com/previous-versions/aspnet/540y83hx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d5aee-457">For more information, see [How to: Redirect Users to Another Page](https://docs.microsoft.com/previous-versions/aspnet/540y83hx(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="d5aee-458">以下示例强制将无条件重定向到另一个网站。</span><span class="sxs-lookup"><span data-stu-id="d5aee-458">The following example forces an unconditional redirection to another Web site.</span></span>

 [!code-csharp[Classic HttpResponse.Redirect Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Redirect Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-459">发送 HTTP 标头之后尝试重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-459">A redirection is attempted after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url, bool endResponse);" />
      <MemberSignature Language="F#" Value="member this.Redirect : string * bool -&gt; unit" Usage="httpResponse.Redirect (url, endResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="d5aee-460">目标的位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-460">The location of the target.</span></span></param>
        <param name="endResponse"><span data-ttu-id="d5aee-461">指示当前页的执行是否应终止。</span><span class="sxs-lookup"><span data-stu-id="d5aee-461">Indicates whether execution of the current page should terminate.</span></span></param>
        <summary><span data-ttu-id="d5aee-462">将客户端重定向到新的 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-462">Redirects a client to a new URL.</span></span> <span data-ttu-id="d5aee-463">指定新的 URL 并指定当前页的执行是否应终止。</span><span class="sxs-lookup"><span data-stu-id="d5aee-463">Specifies the new URL and whether execution of the current page should terminate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-464">绝对 URL (例如 `http://www.contoso.com/default.aspx`) 或相对 URL (例如，可为目标位置指定 default.aspx) ，但某些浏览器可能会拒绝相对 url。</span><span class="sxs-lookup"><span data-stu-id="d5aee-464">An absolute URL (for example, `http://www.contoso.com/default.aspx`) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</span></span>

 <span data-ttu-id="d5aee-465">当你在页面处理程序中使用此方法终止一个页面请求并为另一个页面启动新请求时，将设置 `endResponse` 为， `false` 然后调用 <xref:System.Web.HttpApplication.CompleteRequest%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-465">When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="d5aee-466">如果 `true` 为 `endResponse` 参数指定，则此方法将 <xref:System.Web.HttpResponse.End%2A> 为原始请求调用方法，该方法在 <xref:System.Threading.ThreadAbortException> 完成时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-466">If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes.</span></span> <span data-ttu-id="d5aee-467">此例外会对 Web 应用程序性能产生不利影响，这就是为什么建议为参数传递的原因 `false` `endResponse` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-467">This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended.</span></span> <span data-ttu-id="d5aee-468">有关更多信息，请参见 <xref:System.Web.HttpResponse.End%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-468">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>

> [!NOTE]
>  <span data-ttu-id="d5aee-469">对于移动页面，如果你的应用程序依赖于无 cookie 会话，或者可能接收到需要无 cookie 会话的移动设备发出的请求，则使用路径中的波形符 (\~) 可以创建新的会话，并可能丢失会话数据。</span><span class="sxs-lookup"><span data-stu-id="d5aee-469">For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (\~) in a path can create a new session and potentially lose session data.</span></span> <span data-ttu-id="d5aee-470">若要使用路径（如 "/path"）设置移动控件上的属性 \~ ，请在将路径 <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \~ 分配给属性之前使用 "/path" 解析该路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-470">To set a property on a mobile control with a path such as "\~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "\~/path" before assigning it to the property.</span></span>

 <span data-ttu-id="d5aee-471">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-471">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="d5aee-472">将控制转移到另一页的另一种方法是 <xref:System.Web.HttpServerUtility.Transfer%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-472">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="d5aee-473"><xref:System.Web.HttpServerUtility.Transfer%2A>方法通常更高效，因为它不会导致到客户端的往返。</span><span class="sxs-lookup"><span data-stu-id="d5aee-473">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="d5aee-474">有关详细信息，请参阅 [如何：将用户重定向到另一页](https://docs.microsoft.com/previous-versions/aspnet/540y83hx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d5aee-474">For more information, see [How to: Redirect Users to Another Page](https://docs.microsoft.com/previous-versions/aspnet/540y83hx(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="d5aee-475">下面的示例使用 <xref:System.Web.HttpResponse.IsClientConnected%2A> 属性来检查请求该页的客户端是否仍连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="d5aee-475">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="d5aee-476">如果 <xref:System.Web.HttpResponse.IsClientConnected%2A> 为 true，则代码将调用 <xref:System.Web.HttpResponse.Redirect%2A> 方法，并且客户端将查看另一页。</span><span class="sxs-lookup"><span data-stu-id="d5aee-476">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="d5aee-477">如果 <xref:System.Web.HttpResponse.IsClientConnected%2A> 为 false，则代码调用 <xref:System.Web.HttpResponse.End%2A> 方法并且终止所有页面处理。</span><span class="sxs-lookup"><span data-stu-id="d5aee-477">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-478"><paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-478"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-479"><paramref name="url" /> 包含换行符。</span><span class="sxs-lookup"><span data-stu-id="d5aee-479"><paramref name="url" /> contains a newline character.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-480">发送 HTTP 标头之后尝试重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-480">A redirection is attempted after the HTTP headers have been sent.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="d5aee-481">该页面请求是回调的结果。</span><span class="sxs-lookup"><span data-stu-id="d5aee-481">The page request is the result of a callback.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.RedirectLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedirectLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectLocation : string with get, set" Usage="System.Web.HttpResponse.RedirectLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-482">获取或设置 HTTP <see langword="Location" /> 标头的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-482">Gets or sets the value of the HTTP <see langword="Location" /> header.</span></span></summary>
        <value><span data-ttu-id="d5aee-483">通过 HTTP <see langword="Location" /> 标头传输到客户端的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="d5aee-483">The absolute URI that is transmitted to the client in the HTTP <see langword="Location" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-484">下面的示例演示如何使用此属性来指定在通过使用 HTTP 301 响应代码对永久重定向进行编码时的重定向 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-484">The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.</span></span>

```csharp
Response.StatusCode = 301;
Response.Status = "301 Moved Permanently";
Response.RedirectLocation = "http://www.newurl.com ";
Response.End();
```

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-485">已编写 HTTP 标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-485">The HTTP headers have already been written.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectPermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-486">执行从所请求 URL 到所指定 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-486">Performs a permanent redirection from a requested URL to a specified URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RedirectPermanent : string -&gt; unit" Usage="httpResponse.RedirectPermanent url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="d5aee-487">要将请求重定向到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-487">The location to redirect the request to.</span></span></param>
        <summary><span data-ttu-id="d5aee-488">执行从所请求 URL 到所指定 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-488">Performs a permanent redirection from the requested URL to the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-489"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29>方法重载在响应中提供 301 HTTP 状态代码，并包含用于将请求重定向到的 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-489">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="d5aee-490">301 HTTP 状态代码是 HTTP 响应中的标准代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-490">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="d5aee-491">它指示存在永久重定向，并且它提供重定向位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-491">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>

 <span data-ttu-id="d5aee-492">调用 <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> 方法重载会终止响应。</span><span class="sxs-lookup"><span data-stu-id="d5aee-492">Calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload terminates the response.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-493"><paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-493"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-494"><paramref name="url" /> 包括一个换行符 (<c>\n</c>)。</span><span class="sxs-lookup"><span data-stu-id="d5aee-494"><paramref name="url" /> includes a newline character (<c>\n</c>).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url, bool endResponse);" />
      <MemberSignature Language="F#" Value="member this.RedirectPermanent : string * bool -&gt; unit" Usage="httpResponse.RedirectPermanent (url, endResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endResponse" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="d5aee-495">要将请求重定向到其中的位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-495">The location to redirect the request to.</span></span></param>
        <param name="endResponse"><span data-ttu-id="d5aee-496">若要终止响应，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-496"><see langword="true" /> to terminate the response; otherwise <see langword="false" />.</span></span> <span data-ttu-id="d5aee-497">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-497">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d5aee-498">执行从所请求 URL 到所指定 URL 的永久重定向，并提供用于完成响应的选项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-498">Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-499"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>方法重载在响应中提供 301 HTTP 状态代码，并包含用于将请求重定向到的 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-499">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="d5aee-500">此方法重载还提供了用于指定是否在执行重定向后终止或完成响应的选项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-500">This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</span></span> <span data-ttu-id="d5aee-501">301 HTTP 状态代码是 HTTP 响应中的标准代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-501">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="d5aee-502">它指示存在永久重定向，并且它提供重定向位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-502">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-503"><paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-503"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-504"><paramref name="url" /> 包括一个换行符 (<c>\n</c>)。</span><span class="sxs-lookup"><span data-stu-id="d5aee-504"><paramref name="url" /> includes a newline character (<c>\n</c>).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-505">使用路由参数值和/或路由名称将请求重定向到新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-505">Redirects a request to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : obj -&gt; unit" Usage="httpResponse.RedirectToRoute routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="d5aee-506">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-506">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-507">使用路由参数值将请求重定向到新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-507">Redirects a request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-508">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-508">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-509">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-509">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-510">此方法使用构造函数将传入的对象转换 `routeValues` 为 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> 对象 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-510">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d5aee-511"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-511">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>

 <span data-ttu-id="d5aee-512">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-512">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-513">下面的示例演示如何调用此方法以重定向到具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-513">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoute(
  New With {.productid = "1", .category = "widgets"})
```

```csharp
Response.RedirectToRoute(
  new { productid = "1", category = "widgets" });
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-514">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-514">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-515">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-515">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-516">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-516">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : string -&gt; unit" Usage="httpResponse.RedirectToRoute routeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="d5aee-517">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-517">The name of the route.</span></span></param>
        <summary><span data-ttu-id="d5aee-518">使用路由名称将请求重定向到新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-518">Redirects a request to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-519">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-519">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-520">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-520">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-521">此方法使用方法将传入的路由名称转换 `routeName` 为 URL <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-521">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="d5aee-522">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-522">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-523">下面的示例演示如何调用此方法以重定向到名为的路由 `Products` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-523">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>

```vb
Response.RedirectToRoute("Products")
```

```csharp
Response.RedirectToRoute("Products");
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-524">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-524">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-525">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-525">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-526">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-526">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoute routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="d5aee-527">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-527">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-528">使用路由参数值将请求重定向到新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-528">Redirects a request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-529">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-529">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-530">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-530">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-531">此方法调用 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> 方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-531">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>

 <span data-ttu-id="d5aee-532">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-532">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-533">下面的示例演示如何调用此方法以重定向到具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-533">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoute(
  new RouteValueDictionary {productId="1", category="widgets"})
```

```csharp
Response.RedirectToRoute(
  (new RouteValueDictionary {productId="1", category="widgets"});
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-534">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-534">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-535">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-535">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-536">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-536">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : string * obj -&gt; unit" Usage="httpResponse.RedirectToRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="d5aee-537">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-537">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="d5aee-538">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-538">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-539">使用路由参数值和路由名称将请求重定向到新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-539">Redirects a request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-540">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-540">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-541">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-541">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-542">此方法使用构造函数将传入的对象转换 `routeValues` 为 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> 对象 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-542">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d5aee-543"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-543">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>

 <span data-ttu-id="d5aee-544">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-544">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-545">下面的示例演示如何调用此方法以重定向到名为 `Product` 且具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-545">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoute("Product",
  New With {.productid = "1", .category = "widgets"})
```

```csharp
Response.RedirectToRoute("Product",
  new { productid = "1", category = "widgets" });
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-546">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-546">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-547">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-547">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-548">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-548">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoute : string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoute (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="d5aee-549">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-549">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="d5aee-550">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-550">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-551">使用路由参数值和路由名称将请求重定向到新 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-551">Redirects a request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-552">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-552">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-553">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-553">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-554"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-554">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is called to determine the URL.</span></span>

 <span data-ttu-id="d5aee-555">ASP.NET 通过返回 302 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-555">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-556">下面的示例演示如何调用此方法以重定向到名为 `Product` 且具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-556">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoute("Product",
  new RouteValueDictionary {productId="1", category="widgets"})
```

```csharp
Response.RedirectToRoute("Product",
  (new RouteValueDictionary {productId="1", category="widgets"});
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-557">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-557">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-558">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-558">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-559">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-559">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoutePermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-560">使用路由参数值和/或路由名称执行从所请求 URL 到新 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-560">Performs a permanent redirection from a requested URL to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : obj -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="d5aee-561">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-561">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-562">使用路由参数值执行从所请求 URL 到新 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-562">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-563">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-563">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-564">它等效于调用 <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-564">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-565">此方法使用构造函数将传入的对象转换 `routeValues` 为 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> 对象 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-565">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d5aee-566"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-566">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>

 <span data-ttu-id="d5aee-567">ASP.NET 通过返回 301 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-567">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-568">下面的示例演示如何调用此方法以重定向到具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-568">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoutePermanent(
  New With {.productid = "1", .category = "widgets"})
```

```csharp
Response.RedirectToRoutePermanent(
  new { productid = "1", category = "widgets" });
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-569">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-569">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-570">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-570">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-571">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-571">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : string -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent routeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="d5aee-572">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-572">The name of the route.</span></span></param>
        <summary><span data-ttu-id="d5aee-573">使用路由名称执行从所请求 URL 到新 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-573">Performs a permanent redirection from a requested URL to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-574">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-574">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-575">它等效于调用 <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-575">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-576">此方法使用方法将传入的路由名称转换 `routeName` 为 URL <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-576">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="d5aee-577">ASP.NET 通过返回 301 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-577">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-578">下面的示例演示如何调用此方法以重定向到名为的路由 `Products` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-578">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>

```vb
Response.RedirectToRoutePermanent("Products")
```

```csharp
Response.RedirectToRoutePermanent("Products");
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-579">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-579">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-580">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-580">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-581">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-581">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent routeValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="d5aee-582">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-582">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-583">使用路由参数值执行从所请求 URL 到新 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-583">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-584">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-584">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-585">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-585">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-586">此方法调用 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> 方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-586">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>

 <span data-ttu-id="d5aee-587">ASP.NET 通过返回 301 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-587">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-588">下面的示例演示如何调用此方法以重定向到具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-588">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoutePermanent(
  new RouteValueDictionary {productId="1", category="widgets"})
```

```csharp
Response.RedirectToRoutePermanent(
  new RouteValueDictionary {productId="1", category="widgets"});
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-589">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-589">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-590">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-590">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-591">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-591">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : string * obj -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="d5aee-592">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-592">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="d5aee-593">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-593">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-594">使用路由参数值以及与新 URL 对应的路由的名称执行从所请求 URL 到新 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-594">Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-595">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-595">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-596">它等效于调用 <xref:System.Web.HttpResponse.RedirectPermanent%2A> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-596">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-597">此方法使用构造函数将传入的对象转换 `routeValues` 为 <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> 对象 <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-597">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d5aee-598"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>然后调用方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-598">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>

 <span data-ttu-id="d5aee-599">ASP.NET 通过返回 301 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-599">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-600">下面的示例演示如何调用此方法以重定向到名为 `Product` 且具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-600">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoutePermanent("Product",
  New With {.productid = "1", .category = "widgets"})
```

```csharp
Response.RedirectToRoutePermanent("Product",
  new { productid = "1", category = "widgets" });
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-601">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-601">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-602">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-602">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-603">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-603">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="member this.RedirectToRoutePermanent : string * System.Web.Routing.RouteValueDictionary -&gt; unit" Usage="httpResponse.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="d5aee-604">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="d5aee-604">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="d5aee-605">路由参数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-605">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="d5aee-606">使用路由参数值和路由名称执行从所请求 URL 到新 URL 的永久重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-606">Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-607">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-607">This method is provided for coding convenience.</span></span> <span data-ttu-id="d5aee-608">它等效于调用 <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> 方法，并将第二个参数设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-608">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>

 <span data-ttu-id="d5aee-609">此方法调用 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> 方法来确定 URL。</span><span class="sxs-lookup"><span data-stu-id="d5aee-609">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>

 <span data-ttu-id="d5aee-610">ASP.NET 通过返回 301 HTTP 状态代码来执行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-610">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>



## Examples
 <span data-ttu-id="d5aee-611">下面的示例演示如何调用此方法以重定向到名为 `Product` 且具有名为和的参数的路由 `productid` `category` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-611">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>

```vb
Response.RedirectToRoutePermanent("Product",
  new RouteValueDictionary {productId="1", category="widgets"})
```

```csharp
Response.RedirectToRoutePermanent("Product",
  new RouteValueDictionary {productId="1", category="widgets"});
```

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5aee-612">没有与指定路由参数对应的路由。</span><span class="sxs-lookup"><span data-stu-id="d5aee-612">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-613">在发送 HTTP 标头之后尝试进行重定向。</span><span class="sxs-lookup"><span data-stu-id="d5aee-613">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="d5aee-614">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="d5aee-614">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveOutputCacheItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-615">使用默认的输出缓存提供程序从输出缓存中删除缓存项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-615">Removes cached items from the output cache by using the default output-cache provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RemoveOutputCacheItem : string -&gt; unit" Usage="System.Web.HttpResponse.RemoveOutputCacheItem path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="d5aee-616">已从缓存中移除的项的虚拟绝对路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-616">The virtual absolute path to the items that are removed from the cache.</span></span></param>
        <summary><span data-ttu-id="d5aee-617">从缓存中删除与默认输出缓存提供程序关联的所有缓存项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-617">Removes from the cache all cached items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="d5aee-618">此方法是静态的。</span><span class="sxs-lookup"><span data-stu-id="d5aee-618">This method is static.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-619">调用此方法可移除与默认输出缓存提供程序关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-619">Call this method to remove output-cache items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="d5aee-620">调用 <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> 方法以删除与在网站配置文件中指定的自定义输出缓存提供程序关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-620">Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-621"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-621"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-622"><paramref name="path" /> 并非绝对虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-622"><paramref name="path" /> is not an absolute virtual path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path, string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path, string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String, providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path, System::String ^ providerName);" />
      <MemberSignature Language="F#" Value="static member RemoveOutputCacheItem : string * string -&gt; unit" Usage="System.Web.HttpResponse.RemoveOutputCacheItem (path, providerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="d5aee-623">从缓存中删除的项的虚拟绝对路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-623">The virtual absolute path of the items that are removed from the cache.</span></span></param>
        <param name="providerName"><span data-ttu-id="d5aee-624">用于删除与指定路径关联的输出缓存项的提供程序。</span><span class="sxs-lookup"><span data-stu-id="d5aee-624">The provider that is used to remove the output-cache artifacts that are associated with the specified path.</span></span></param>
        <summary><span data-ttu-id="d5aee-625">使用指定的输出缓存提供程序删除所有与指定路径关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-625">Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-626">调用此方法可删除与网站配置文件中指定的自定义输出缓存提供程序关联的输出缓存项。</span><span class="sxs-lookup"><span data-stu-id="d5aee-626">Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</span></span> <span data-ttu-id="d5aee-627">若要删除与默认输出缓存提供程序关联的输出缓存项，请调用 <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="d5aee-627">To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-628"><paramref name="path" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="d5aee-628"><paramref name="path" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-629"><paramref name="path" /> 是无效路径。</span><span class="sxs-lookup"><span data-stu-id="d5aee-629"><paramref name="path" /> is an invalid path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public void SetCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.SetCookie : System.Web.HttpCookie -&gt; unit" Usage="httpResponse.SetCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="d5aee-630">集合中要更新的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="d5aee-630">The cookie in the collection to be updated.</span></span></param>
        <summary><span data-ttu-id="d5aee-631">因为 HttpResponse.SetCookie<b></b> 方法仅供内部使用，所以不应在代码中调用该方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-631">Because the <b>HttpResponse.SetCookie</b> method is intended for internal use only, you should not call it in your code.</span></span> <span data-ttu-id="d5aee-632">可以改为调用 HttpResponse.Cookies.Set<b></b> 方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="d5aee-632">Instead, you can call the <b>HttpResponse.Cookies.Set</b> method, as the following example shows.</span></span><br /> <span data-ttu-id="d5aee-633">更新 Cookie 集合中的一个现有 Cookie。</span><span class="sxs-lookup"><span data-stu-id="d5aee-633">Updates an existing cookie in the cookie collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-634">下面的示例更新现有 cookie 的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-634">The following example updates the value of an existing cookie.</span></span>

 [!code-csharp[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-635">已尝试在发送 HTTP 标头之后设置 Cookie。</span><span class="sxs-lookup"><span data-stu-id="d5aee-635">Attempted to set the cookie after the HTTP headers were sent.</span></span></exception>
        <altmember cref="F:System.Net.HttpRequestHeader.Cookie" />
        <altmember cref="T:System.Web.HttpCookie" />
        <altmember cref="T:System.Web.HttpCookieMode" />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public string Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Status { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Status : string with get, set" Usage="System.Web.HttpResponse.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-636">设置返回到客户端的 <see langword="Status" /> 行。</span><span class="sxs-lookup"><span data-stu-id="d5aee-636">Sets the <see langword="Status" /> line that is returned to the client.</span></span></summary>
        <value><span data-ttu-id="d5aee-637">设置状态代码会使描述 HTTP 输出状态的字符串返回到客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-637">Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</span></span> <span data-ttu-id="d5aee-638">默认值为 200 (OK)。</span><span class="sxs-lookup"><span data-stu-id="d5aee-638">The default value is 200 (OK).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-639"><xref:System.Web.HttpResponse.Status%2A> 已不推荐使用 <xref:System.Web.HttpResponse.StatusDescription%2A> ，提供它仅是为了与 ASP 的早期版本兼容。</span><span class="sxs-lookup"><span data-stu-id="d5aee-639"><xref:System.Web.HttpResponse.Status%2A> has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="d5aee-640">对于 ASP.NET，请 <xref:System.Web.HttpResponse.StatusDescription%2A> 改用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-640">With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-641">状态设置为无效的状态代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-641">Status is set to an invalid status code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StatusCode : int with get, set" Usage="System.Web.HttpResponse.StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-642">获取或设置返回给客户端的输出的 HTTP 状态代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-642">Gets or sets the HTTP status code of the output returned to the client.</span></span></summary>
        <value><span data-ttu-id="d5aee-643">表示返回到客户端的 HTTP 输出状态的整数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-643">An Integer representing the status of the HTTP output returned to the client.</span></span> <span data-ttu-id="d5aee-644">默认值为 200 (OK)。</span><span class="sxs-lookup"><span data-stu-id="d5aee-644">The default value is 200 (OK).</span></span> <span data-ttu-id="d5aee-645">有关有效状态代码的列表，请参阅 <see href="/windows/win32/winhttp/http-status-codes">HTTP 状态代码</see>。</span><span class="sxs-lookup"><span data-stu-id="d5aee-645">For a listing of valid status codes, see <see href="/windows/win32/winhttp/http-status-codes">HTTP Status Codes</see>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-646">下面的示例检查输出流的状态代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-646">The following example checks the status code of the output stream.</span></span> <span data-ttu-id="d5aee-647">如果状态代码不等于200，则执行其他代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-647">If the status code is not equal to 200, additional code is executed.</span></span>

 [!code-csharp[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/vb/default.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-648">发送 HTTP 标头后设置 <see cref="P:System.Web.HttpResponse.StatusCode" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-648"><see cref="P:System.Web.HttpResponse.StatusCode" /> is set after the HTTP headers have been sent.</span></span></exception>
        <altmember cref="P:System.Web.HttpResponse.SubStatusCode" />
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StatusDescription : string with get, set" Usage="System.Web.HttpResponse.StatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-649">获取或设置返回给客户端的输出的 HTTP 状态字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-649">Gets or sets the HTTP status string of the output returned to the client.</span></span></summary>
        <value><span data-ttu-id="d5aee-650">一个字符串，描述返回给客户端的 HTTP 输出的状态。</span><span class="sxs-lookup"><span data-stu-id="d5aee-650">A string that describes the status of the HTTP output returned to the client.</span></span> <span data-ttu-id="d5aee-651">默认值为 "OK"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-651">The default value is "OK".</span></span> <span data-ttu-id="d5aee-652">有关有效状态代码的列表，请参阅 <see href="/windows/win32/winhttp/http-status-codes">HTTP 状态代码</see>。</span><span class="sxs-lookup"><span data-stu-id="d5aee-652">For a listing of valid status codes, see <see href="/windows/win32/winhttp/http-status-codes">HTTP Status Codes</see>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-653">下面的示例检查输出流的状态字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-653">The following example checks the status string of the output stream.</span></span> <span data-ttu-id="d5aee-654">如果状态不等于 "确定"，则执行其他代码。</span><span class="sxs-lookup"><span data-stu-id="d5aee-654">If the status is not equal to "OK", additional code is executed.</span></span>

 [!code-csharp[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/vb/default.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-655">发送 HTTP 标头后设置 <paramref name="StatusDescription" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-655"><paramref name="StatusDescription" /> is set after the HTTP headers have been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d5aee-656">所选值的长度大于 512。</span><span class="sxs-lookup"><span data-stu-id="d5aee-656">The selected value has a length greater than 512.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubStatusCode">
      <MemberSignature Language="C#" Value="public int SubStatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubStatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SubStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property SubStatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubStatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SubStatusCode : int with get, set" Usage="System.Web.HttpResponse.SubStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-657">获取或设置一个限定响应的状态代码的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-657">Gets or sets a value qualifying the status code of the response.</span></span></summary>
        <value><span data-ttu-id="d5aee-658">表示 [!INCLUDE[iisver](~/includes/iisver-md.md)] 子状态代码的整数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-658">An integer value that represents the [!INCLUDE[iisver](~/includes/iisver-md.md)] sub status code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-659">此 <xref:System.Web.HttpResponse.SubStatusCode%2A> 属性仅支持中的集成管道模式 [!INCLUDE[iisver](~/includes/iisver-md.md)] ，并且至少支持 .NET Framework 版本3.0。</span><span class="sxs-lookup"><span data-stu-id="d5aee-659">The <xref:System.Web.HttpResponse.SubStatusCode%2A> property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span> <span data-ttu-id="d5aee-660">设置 <xref:System.Web.HttpResponse.SubStatusCode%2A> 属性时， [!INCLUDE[iisver](~/includes/iisver-md.md)] 如果配置了 failed-请求跟踪，状态将为 "已登录"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-660">When you set the <xref:System.Web.HttpResponse.SubStatusCode%2A> property, the status is logged on [!INCLUDE[iisver](~/includes/iisver-md.md)] if failed-request tracing is configured.</span></span> <span data-ttu-id="d5aee-661">不管是否配置了跟踪，都不会将代码作为最终响应的一部分发送到请求。</span><span class="sxs-lookup"><span data-stu-id="d5aee-661">Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</span></span> <span data-ttu-id="d5aee-662">有关详细信息，请参阅 [IIS 7.0 中的使用失败请求跟踪对失败请求进行故障排除](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)。</span><span class="sxs-lookup"><span data-stu-id="d5aee-662">For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1).</span></span>



## Examples
 <span data-ttu-id="d5aee-663">下面的示例在事件的事件 <xref:System.Web.HttpResponse.SubStatusCode%2A> 处理程序中设置属性 <xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication.PostAuthenticateRequest> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-663">The following example sets the <xref:System.Web.HttpResponse.SubStatusCode%2A> property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event.</span></span> <span data-ttu-id="d5aee-664">将代码文件放在 Web 应用程序的 App_Code 文件夹中，并将 Web.config 文件配置为注册该模块。</span><span class="sxs-lookup"><span data-stu-id="d5aee-664">Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module.</span></span> <span data-ttu-id="d5aee-665">有关详细信息，请参阅 [演练：创建和注册自定义 HTTP 模块](https://docs.microsoft.com/previous-versions/aspnet/ms227673(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d5aee-665">For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](https://docs.microsoft.com/previous-versions/aspnet/ms227673(v=vs.100)).</span></span>

 [!code-csharp[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/VB/App_Code/TestModule.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d5aee-666">该操作要求使用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 中的集成管道模式，并且 .NET Framework 至少为 3.0 版本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-666">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-667">状态代码在发送完所有 HTTP 标头之后设置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-667">The status code is set after all HTTP headers have been sent.</span></span></exception>
        <altmember cref="P:System.Web.HttpResponse.StatusCode" />
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsAsyncFlush { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAsyncFlush : bool" Usage="System.Web.HttpResponse.SupportsAsyncFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-668">获取指示集合是否支持异步刷新操作的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-668">Gets a value that indicates whether the connection supports asynchronous flush operations.</span></span></summary>
        <value><span data-ttu-id="d5aee-669">如果连接支持异步刷新操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-669"><see langword="true" /> if the connection supports asynchronous flush operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-670">此属性返回属性的值 <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-670">This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType> property.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressContent">
      <MemberSignature Language="C#" Value="public bool SuppressContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressContent : bool with get, set" Usage="System.Web.HttpResponse.SuppressContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-671">获取或设置一个值，该值指示是否将 HTTP 内容发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-671">Gets or sets a value indicating whether to send HTTP content to the client.</span></span></summary>
        <value><span data-ttu-id="d5aee-672">若要取消输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-672"><see langword="true" /> to suppress output; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-673">下面的示例检查属性是否 <xref:System.Web.HttpRequest.IsSecureConnection%2A> 设置为 false。</span><span class="sxs-lookup"><span data-stu-id="d5aee-673">The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="d5aee-674">如果是，则将 <xref:System.Web.HttpResponse.SuppressContent%2A> 属性设置为 true 以停止发送响应。</span><span class="sxs-lookup"><span data-stu-id="d5aee-674">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>

 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressDefaultCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SuppressDefaultCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressDefaultCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressDefaultCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressDefaultCacheControlHeader : bool with get, set" Usage="System.Web.HttpResponse.SuppressDefaultCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-675">获取或设置一个值，该值指示是否取消默认缓存控件：当前 HTTP 响应的专用<c></c>标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-675">Gets or sets a value indicating whether to suppress the default <c>Cache Control: private</c> header for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="d5aee-676"><see langword="true" /> 若要取消默认 <c>缓存控件：</c> 当前 HTTP 响应的专用标头;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-676"><see langword="true" /> to suppress the default <c>Cache Control: private</c> header for the current HTTP response; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-677">默认情况下， `Cache-Control: private` 除非已为此响应指定了显式缓存策略，否则 ASP.NET 将发送响应标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-677">By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response.</span></span> <span data-ttu-id="d5aee-678">此属性允许基于每个请求禁止显示此默认响应标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-678">This property allows suppressing this default response header on a per-request basis.</span></span> <span data-ttu-id="d5aee-679">对于整个应用程序，仍可以通过 <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> 在 HttpRuntime 元素中设置 [ (ASP.NET settings schema) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) 或 [outputCache 元素进行缓存 (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228124(v=vs.100))来禁止显示该标头。</span><span class="sxs-lookup"><span data-stu-id="d5aee-679">The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) or [outputCache Element for caching (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228124(v=vs.100)).</span></span>

 <span data-ttu-id="d5aee-680">取消默认标头时要格外小心 `Cache-Control: private` ，因为代理和其他中介可以在默认情况下将没有此标头的响应视为可缓存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-680">Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</span></span> <span data-ttu-id="d5aee-681">此处理可能导致无意中缓存敏感信息。</span><span class="sxs-lookup"><span data-stu-id="d5aee-681">This treatment can lead to the inadvertent caching of sensitive information.</span></span> <span data-ttu-id="d5aee-682">有关详细信息，请参阅[RFC 2616，秒13.4。](https://tools.ietf.org/html/rfc2616)</span><span class="sxs-lookup"><span data-stu-id="d5aee-682">See [RFC 2616, Sec. 13.4](https://tools.ietf.org/html/rfc2616) for more information.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressFormsAuthenticationRedirect">
      <MemberSignature Language="C#" Value="public bool SuppressFormsAuthenticationRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressFormsAuthenticationRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressFormsAuthenticationRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressFormsAuthenticationRedirect : bool with get, set" Usage="System.Web.HttpResponse.SuppressFormsAuthenticationRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-683">获取或设置指定重定向至登录页的 forms 身份验证是否应取消的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-683">Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</span></span></summary>
        <value><span data-ttu-id="d5aee-684">如果应取消窗体身份认证重定向，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-684"><see langword="true" /> if forms authentication redirection should be suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-685">默认情况下，forms 身份验证将 HTTP 401 状态代码转换为302，以便重定向到登录页。</span><span class="sxs-lookup"><span data-stu-id="d5aee-685">By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</span></span> <span data-ttu-id="d5aee-686">这并不适用于某些错误类，例如当身份验证成功但授权失败，或者当前请求是 AJAX 或 web 服务请求时。</span><span class="sxs-lookup"><span data-stu-id="d5aee-686">This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</span></span> <span data-ttu-id="d5aee-687">此属性提供了一种方式来禁止重定向行为，并将原始状态代码发送到客户端。</span><span class="sxs-lookup"><span data-stu-id="d5aee-687">This property provides a way to suppress the redirect behavior and send the original status code to the client.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransmitFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-688">将指定的文件直接写入 HTTP 响应输出流，而不在内存中缓冲该文件。</span><span class="sxs-lookup"><span data-stu-id="d5aee-688">Writes the specified file directly to an HTTP response output stream without buffering it in memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.TransmitFile : string -&gt; unit" Usage="httpResponse.TransmitFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="d5aee-689">要写入 HTTP 输出的文件名。</span><span class="sxs-lookup"><span data-stu-id="d5aee-689">The name of the file to write to the HTTP output.</span></span></param>
        <summary><span data-ttu-id="d5aee-690">将指定的文件直接写入 HTTP 响应输出流，而不在内存中缓冲该文件。</span><span class="sxs-lookup"><span data-stu-id="d5aee-690">Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-691"><paramref name="filename" /> 参数为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="d5aee-691">The <paramref name="filename" /> parameter is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename, long offset, long length);" />
      <MemberSignature Language="F#" Value="member this.TransmitFile : string * int64 * int64 -&gt; unit" Usage="httpResponse.TransmitFile (filename, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Int64" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="d5aee-692">要写入 HTTP 输出的文件名。</span><span class="sxs-lookup"><span data-stu-id="d5aee-692">The name of the file to write to the HTTP output.</span></span></param>
        <param name="offset"><span data-ttu-id="d5aee-693">文件中的位置，将从该位置开始将内容写入到 HTTP 输出中。</span><span class="sxs-lookup"><span data-stu-id="d5aee-693">The position in the file to begin to write to the HTTP output.</span></span></param>
        <param name="length"><span data-ttu-id="d5aee-694">要传输的字节数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-694">The number of bytes to be transmitted.</span></span></param>
        <summary><span data-ttu-id="d5aee-695">将文件的指定部分直接写入 HTTP 响应输出流，而不在内存中缓冲它。</span><span class="sxs-lookup"><span data-stu-id="d5aee-695">Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-696">如果将0指定为 `offset` 参数，并将-1 指定为 `length` 参数，则将发送整个文件。</span><span class="sxs-lookup"><span data-stu-id="d5aee-696">If you specify 0 as the `offset` parameter and -1 as the `length` parameter, the whole file is sent.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-697"><paramref name="offset" /> 参数小于零。</span><span class="sxs-lookup"><span data-stu-id="d5aee-697">The <paramref name="offset" /> parameter is less than zero.</span></span>

<span data-ttu-id="d5aee-698">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-698">-or-</span></span>

<span data-ttu-id="d5aee-699"><paramref name="length" /> 参数小于 -1。</span><span class="sxs-lookup"><span data-stu-id="d5aee-699">The <paramref name="length" /> parameter is less than -1.</span></span>

<span data-ttu-id="d5aee-700">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-700">-or-</span></span>

<span data-ttu-id="d5aee-701"><paramref name="length" /> 参数指定的字节数大于文件包含的字节数减去偏移值得到的数值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-701">The <paramref name="length" /> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d5aee-702">不支持辅助进程外请求。</span><span class="sxs-lookup"><span data-stu-id="d5aee-702">The out-of-process worker request is not supported.</span></span>

<span data-ttu-id="d5aee-703">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-703">-or-</span></span>

<span data-ttu-id="d5aee-704">响应不使用 <see cref="T:System.Web.HttpWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-704">The response is not using an <see cref="T:System.Web.HttpWriter" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-705"><paramref name="offset" /> 参数小于零或大于文件大小。</span><span class="sxs-lookup"><span data-stu-id="d5aee-705">The <paramref name="offset" /> parameter is less than zero or greater than the file size.</span></span>

<span data-ttu-id="d5aee-706">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-706">-or-</span></span>

<span data-ttu-id="d5aee-707"><paramref name="length" /> 参数小于 -1 或大于 <paramref name="offset" /> 参数加上文件大小的值。</span><span class="sxs-lookup"><span data-stu-id="d5aee-707">The <paramref name="length" /> parameter is less than -1 or greater than the value of the <paramref name="offset" /> parameter plus the file size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrySkipIisCustomErrors">
      <MemberSignature Language="C#" Value="public bool TrySkipIisCustomErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrySkipIisCustomErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.TrySkipIisCustomErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TrySkipIisCustomErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrySkipIisCustomErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrySkipIisCustomErrors : bool with get, set" Usage="System.Web.HttpResponse.TrySkipIisCustomErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5aee-708">获取或设置一个值，该值指定是否禁用 [!INCLUDE[iisver](~/includes/iisver-md.md)] 自定义错误。</span><span class="sxs-lookup"><span data-stu-id="d5aee-708">Gets or sets a value that specifies whether [!INCLUDE[iisver](~/includes/iisver-md.md)] custom errors are disabled.</span></span></summary>
        <value><span data-ttu-id="d5aee-709">若要禁用 IIS 自定义错误，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-709"><see langword="true" /> to disable IIS custom errors; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-710"><xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>仅当你的应用程序托管在 IIS 7.0 和更高版本中时，才使用此属性。</span><span class="sxs-lookup"><span data-stu-id="d5aee-710">The <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property is used only when your application is hosted in IIS 7.0 and later.</span></span> <span data-ttu-id="d5aee-711">在经典模式下运行时， <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> 属性的默认值为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-711">When running in Classic mode, the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `true`.</span></span> <span data-ttu-id="d5aee-712">在集成模式下运行时， <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> 属性的默认值为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-712">When running in Integrated mode, the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `false`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-713">将信息写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-713">Writes information to an HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(char ch);" />
      <MemberSignature Language="F#" Value="member this.Write : char -&gt; unit" Usage="httpResponse.Write ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="d5aee-714">要写入 HTTP 输出流的字符。</span><span class="sxs-lookup"><span data-stu-id="d5aee-714">The character to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-715">将一个字符写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-715">Writes a character to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-716">下面的示例创建一系列使用 Write 方法写入到 ASP.NET 页的常量。</span><span class="sxs-lookup"><span data-stu-id="d5aee-716">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="d5aee-717">此代码将调用此写入方法版本，以将单个字符常量写入页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-717">The code calls this version of the Write method to write individual character constants to the page.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Write : obj -&gt; unit" Usage="httpResponse.Write obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d5aee-718">要写入 HTTP 输出流的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-718">The <see cref="T:System.Object" /> to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-719">将 <see cref="T:System.Object" /> 写入 HTTP 响应流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-719">Writes an <see cref="T:System.Object" /> to an HTTP response stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="httpResponse.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d5aee-720">要写入 HTTP 输出流的字符串。</span><span class="sxs-lookup"><span data-stu-id="d5aee-720">The string to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-721">将字符串写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-721">Writes a string to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-722">如果从 Web 客户端接收到从客户端接收的输入或将其传输回客户端，则动态生成的 HTML 页面可能会带来安全风险。</span><span class="sxs-lookup"><span data-stu-id="d5aee-722">Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</span></span> <span data-ttu-id="d5aee-723">嵌入到输入网站并稍后写回客户端的输入中的恶意脚本可能看似来自受信任的源。</span><span class="sxs-lookup"><span data-stu-id="d5aee-723">Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</span></span> <span data-ttu-id="d5aee-724">此安全风险称为跨站点脚本攻击。</span><span class="sxs-lookup"><span data-stu-id="d5aee-724">This security risk is referred to as a cross-site scripting attack.</span></span> <span data-ttu-id="d5aee-725">应始终验证从客户端传输到客户端浏览器时从客户端收到的数据。</span><span class="sxs-lookup"><span data-stu-id="d5aee-725">You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</span></span>

 <span data-ttu-id="d5aee-726">而且，无论何时以 HTML 形式写出作为输入接收的任何数据，都应使用一种技术（如或）对其进行编码， <xref:System.Web.HttpServerUtility.HtmlEncode%2A> <xref:System.Web.HttpServerUtility.UrlEncode%2A> 以防止恶意脚本执行。</span><span class="sxs-lookup"><span data-stu-id="d5aee-726">Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing.</span></span> <span data-ttu-id="d5aee-727">此方法适用于接收时未验证的数据。</span><span class="sxs-lookup"><span data-stu-id="d5aee-727">This technique is useful for data that was not validated when it was received.</span></span>

 <span data-ttu-id="d5aee-728">编码或筛选数据时，必须为网页指定字符集，以便筛选器可以识别并删除任何不属于该集的字节序列 (如非字母数字序列) 并且可能会嵌入恶意脚本。</span><span class="sxs-lookup"><span data-stu-id="d5aee-728">When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</span></span>

 <span data-ttu-id="d5aee-729">有关跨站点脚本攻击的详细信息，请参阅 [Microsoft 知识库](https://go.microsoft.com/fwlink/?LinkID=37115) 网站上的文章 Q252985 "如何阻止跨站点脚本安全问题"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-729">For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?LinkID=37115) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-730">下面的示例将客户端的名称回显到客户端的浏览器。</span><span class="sxs-lookup"><span data-stu-id="d5aee-730">The following example echoes the client's name back to the client's browser.</span></span> <span data-ttu-id="d5aee-731"><xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法去除了可能在输入字段中提交的任何恶意脚本和无效字符 `UserName` 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-731">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.</span></span>

 [!code-csharp[System.Web.HttpResponse.Write#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Write/CS/systemwebhttpresponsewrite.cs#1)]
 [!code-vb[System.Web.HttpResponse.Write#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Write/vb/systemwebhttpresponsewrite.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : char[] * int * int -&gt; unit" Usage="httpResponse.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d5aee-732">要写入的字符数组。</span><span class="sxs-lookup"><span data-stu-id="d5aee-732">The character array to write.</span></span></param>
        <param name="index"><span data-ttu-id="d5aee-733">字符数组中开始进行写入的位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-733">The position in the character array where writing starts.</span></span></param>
        <param name="count"><span data-ttu-id="d5aee-734">从 <paramref name="index" /> 开始的要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-734">The number of characters to write, beginning at <paramref name="index" />.</span></span></param>
        <summary><span data-ttu-id="d5aee-735">将字符数组写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-735">Writes an array of characters to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="d5aee-736">下面的示例创建一系列使用 Write 方法写入到 ASP.NET 页的常量。</span><span class="sxs-lookup"><span data-stu-id="d5aee-736">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="d5aee-737">此代码将调用此写入方法版本，以将单个字符常量写入页面。</span><span class="sxs-lookup"><span data-stu-id="d5aee-737">The code calls this version of the Write method to write individual character constants to the page.</span></span>

 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5aee-738">将指定的文件直接写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-738">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : string -&gt; unit" Usage="httpResponse.WriteFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="d5aee-739">要写入 HTTP 输出的文件名。</span><span class="sxs-lookup"><span data-stu-id="d5aee-739">The name of the file to write to the HTTP output.</span></span></param>
        <summary><span data-ttu-id="d5aee-740">将指定文件的内容作为文件块直接写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-740">Writes the contents of the specified file directly to an HTTP response output stream as a file block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-741">将此方法用于大型文件时，调用方法可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-741">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="d5aee-742">可与此方法一起使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-742">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="d5aee-743">有关详细信息，请参阅 [Microsoft 知识库](https://go.microsoft.com/fwlink/?linkid=149903) 网站上的文章 812406 "PRB： WriteFile 无法下载大文件"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-743">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-744">下面的示例将名为 (的文本文件的所有内容写入 `Login.txt` 到输出流，该文件可能包含文字 HTML 文本和输入控件) 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-744">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>

 [!code-csharp[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-745"><paramref name="filename" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-745">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, bool readIntoMemory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, bool readIntoMemory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, readIntoMemory As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, bool readIntoMemory);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : string * bool -&gt; unit" Usage="httpResponse.WriteFile (filename, readIntoMemory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="readIntoMemory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="d5aee-746">要写入内存块的文件名。</span><span class="sxs-lookup"><span data-stu-id="d5aee-746">The name of the file to write into a memory block.</span></span></param>
        <param name="readIntoMemory"><span data-ttu-id="d5aee-747">指示是否将把文件写入内存块。</span><span class="sxs-lookup"><span data-stu-id="d5aee-747">Indicates whether the file will be written into a memory block.</span></span></param>
        <summary><span data-ttu-id="d5aee-748">将指定文件的内容作为内存块直接写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-748">Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-749">将此方法用于大型文件时，调用方法可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-749">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="d5aee-750">可与此方法一起使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-750">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="d5aee-751">有关详细信息，请参阅 [Microsoft 知识库](https://go.microsoft.com/fwlink/?linkid=149903) 网站上的文章 812406 "PRB： WriteFile 无法下载大文件"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-751">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-752">下面的示例将文件写入内存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-752">The following example writes a file to memory.</span></span>

 [!code-csharp[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-753"><paramref name="filename" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-753">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(native int fileHandle, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (fileHandle As IntPtr, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : nativeint * int64 * int64 -&gt; unit" Usage="httpResponse.WriteFile (fileHandle, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileHandle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileHandle"><span data-ttu-id="d5aee-754">要写入 HTTP 输出流的文件的文件句柄。</span><span class="sxs-lookup"><span data-stu-id="d5aee-754">The file handle of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="d5aee-755">文件中将开始进行写入的字节位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-755">The byte position in the file where writing will start.</span></span></param>
        <param name="size"><span data-ttu-id="d5aee-756">要写入输出流的字节数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-756">The number of bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-757">将指定的文件直接写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-757">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-758">将此方法用于大型文件时，调用方法可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-758">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="d5aee-759">可与此方法一起使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-759">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="d5aee-760">有关详细信息，请参阅 [Microsoft 知识库](https://go.microsoft.com/fwlink/?linkid=149903) 网站上的文章 812406 "PRB： WriteFile 无法下载大文件"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-760">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-761">下面的示例将名为 (的文本文件的所有内容写入 `Login.txt` 到输出流，该文件可能包含文字 HTML 文本和输入控件) 。</span><span class="sxs-lookup"><span data-stu-id="d5aee-761">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>

 [!code-csharp[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-762"><paramref name="fileHandler" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-762"><paramref name="fileHandler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-763"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="d5aee-763"><paramref name="offset" /> is less than 0.</span></span>

<span data-ttu-id="d5aee-764">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-764">-or-</span></span>

 <span data-ttu-id="d5aee-765"><paramref name="size" /> 大于文件大小与 <paramref name="offset" /> 之差。</span><span class="sxs-lookup"><span data-stu-id="d5aee-765"><paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.WriteFile : string * int64 * int64 -&gt; unit" Usage="httpResponse.WriteFile (filename, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="d5aee-766">要写入 HTTP 输出流的文件名。</span><span class="sxs-lookup"><span data-stu-id="d5aee-766">The name of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="d5aee-767">文件中将开始进行写入的字节位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-767">The byte position in the file where writing will start.</span></span></param>
        <param name="size"><span data-ttu-id="d5aee-768">要写入输出流的字节数。</span><span class="sxs-lookup"><span data-stu-id="d5aee-768">The number of bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="d5aee-769">将指定的文件直接写入 HTTP 响应输出流。</span><span class="sxs-lookup"><span data-stu-id="d5aee-769">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-770">将此方法用于大型文件时，调用方法可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="d5aee-770">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="d5aee-771">可与此方法一起使用的文件的大小取决于 Web 服务器的硬件配置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-771">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="d5aee-772">有关详细信息，请参阅 [Microsoft 知识库](https://go.microsoft.com/fwlink/?linkid=149903) 网站上的文章 812406 "PRB： WriteFile 无法下载大文件"。</span><span class="sxs-lookup"><span data-stu-id="d5aee-772">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](https://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>



## Examples
 <span data-ttu-id="d5aee-773">下面的示例将名为 (的文本文件的所有内容 `Login.txt` （可能包含文本文本和 HTML 输入控件) 直接写入输出流）。</span><span class="sxs-lookup"><span data-stu-id="d5aee-773">The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.</span></span>

 [!code-csharp[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="d5aee-774"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="d5aee-774"><paramref name="offset" /> is less than 0.</span></span>

<span data-ttu-id="d5aee-775">- 或 -</span><span class="sxs-lookup"><span data-stu-id="d5aee-775">-or-</span></span>

 <span data-ttu-id="d5aee-776"><paramref name="size" /> 大于文件大小与 <paramref name="offset" /> 之差。</span><span class="sxs-lookup"><span data-stu-id="d5aee-776"><paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d5aee-777"><paramref name="filename" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d5aee-777">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubstitution">
      <MemberSignature Language="C#" Value="public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSubstitution(class System.Web.HttpResponseSubstitutionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSubstitution (callback As HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSubstitution(System::Web::HttpResponseSubstitutionCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.WriteSubstitution : System.Web.HttpResponseSubstitutionCallback -&gt; unit" Usage="httpResponse.WriteSubstitution callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpResponseSubstitutionCallback" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="d5aee-778">要替换的方法、用户控件或对象。</span><span class="sxs-lookup"><span data-stu-id="d5aee-778">The method, user control, or object to substitute.</span></span></param>
        <summary><span data-ttu-id="d5aee-779">允许将响应替换块插入响应，从而允许为缓存的输出响应动态生成指定的响应区域。</span><span class="sxs-lookup"><span data-stu-id="d5aee-779">Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d5aee-780">可以 <xref:System.Web.HttpResponse.WriteSubstitution%2A> 在输出缓存的页中将方法用于缓存后替换。</span><span class="sxs-lookup"><span data-stu-id="d5aee-780">You can use the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method for post-cache substitution in your output-cached pages.</span></span> <span data-ttu-id="d5aee-781">通过将 <xref:System.Web.HttpContext> 对象传递给具有规定签名的回调方法 <xref:System.Web.HttpResponseSubstitutionCallback> ，你可以将输出缓存内容替换到页面缓存中的任何给定位置。</span><span class="sxs-lookup"><span data-stu-id="d5aee-781">By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache.</span></span> <span data-ttu-id="d5aee-782">若要启动替换，请调用 <xref:System.Web.HttpResponse.WriteSubstitution%2A> 方法，并向其传递回调方法，该方法必须是线程安全的，并且可以是以下两种方法之一：</span><span class="sxs-lookup"><span data-stu-id="d5aee-782">To initiate the replacement, call the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method, passing it the callback method, which must be thread safe and can be either of the following:</span></span>

-   <span data-ttu-id="d5aee-783">容器页或用户控件上的静态方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-783">A static method on the container page or user control.</span></span>

-   <span data-ttu-id="d5aee-784">其他任意对象上的静态方法或实例方法。</span><span class="sxs-lookup"><span data-stu-id="d5aee-784">A static or instance method on another arbitrary object.</span></span>

 <span data-ttu-id="d5aee-785">在第一次请求页面时，将 <xref:System.Web.HttpResponse.WriteSubstitution%2A> 调用 <xref:System.Web.HttpResponseSubstitutionCallback> 委托以生成输出。</span><span class="sxs-lookup"><span data-stu-id="d5aee-785">On the first request to the page, the <xref:System.Web.HttpResponse.WriteSubstitution%2A> calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output.</span></span> <span data-ttu-id="d5aee-786">然后，它会将替换缓冲区添加到响应中，这将保留委托以便在将来的请求时调用。</span><span class="sxs-lookup"><span data-stu-id="d5aee-786">Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</span></span> <span data-ttu-id="d5aee-787">最后，它将客户端可缓存性从公共降级到仅服务器，确保以后向页面发出的请求不会在客户端上缓存的情况下重新调用委托。</span><span class="sxs-lookup"><span data-stu-id="d5aee-787">Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</span></span>

> [!NOTE]
>  <span data-ttu-id="d5aee-788">对于在用户控件级别应用输出缓存的缓存用户控件，不支持缓存后替换。</span><span class="sxs-lookup"><span data-stu-id="d5aee-788">Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</span></span> <span data-ttu-id="d5aee-789">这也称为片段缓存。</span><span class="sxs-lookup"><span data-stu-id="d5aee-789">This is also known as fragment caching.</span></span> <span data-ttu-id="d5aee-790">有关详细信息，请参阅 [缓存部分 ASP.NET 页面](https://docs.microsoft.com/previous-versions/aspnet/h30h475z(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="d5aee-790">For more information, see [Caching Portions of an ASP.NET Page](https://docs.microsoft.com/previous-versions/aspnet/h30h475z(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5aee-791"><paramref name="callback" /> 参数的目标的为 <see cref="T:System.Web.UI.Control" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="d5aee-791">The target of the <paramref name="callback" /> parameter is of type <see cref="T:System.Web.UI.Control" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpResponseSubstitutionCallback" />
        <altmember cref="T:System.Web.UI.WebControls.Substitution" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w9s3a17d(v=vs.100)"><span data-ttu-id="d5aee-792">设置页面的可缓存性</span><span class="sxs-lookup"><span data-stu-id="d5aee-792">Setting the Cacheability of a Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/h30h475z(v=vs.100)"><span data-ttu-id="d5aee-793">缓存 ASP.NET 页面的部分</span><span class="sxs-lookup"><span data-stu-id="d5aee-793">Caching Portions of an ASP.NET Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227429(v=vs.100)"><span data-ttu-id="d5aee-794">动态更新缓存页面的部分</span><span class="sxs-lookup"><span data-stu-id="d5aee-794">Dynamically Updating Portions of a Cached Page</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
