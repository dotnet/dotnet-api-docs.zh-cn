<Type Name="ParserError" FullName="System.Web.ParserError">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b82ee19d5f4d24fc8f93aba321037e898b179fec" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89879262" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParserError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ParserError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ParserError" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParserError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserError sealed" />
  <TypeSignature Language="F#" Value="type ParserError = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示分析器错误或警告。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ParserError>对象表示在引发异常时创建的错误 <xref:System.Web.HttpParseException> 。 分析器错误对象可以包含错误消息文本、发生错误的文件的虚拟路径，以及该文件中的错误的后续行号。 如果发生多个分析器错误或要将多个分析器错误存储在一个集中的位置，请使用 <xref:System.Web.ParserErrorCollection> 对象。  
  
 分析器错误的类型为 <xref:System.Web.HttpException> 。 有关异常以及如何处理它们的详细信息，请参阅 [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118)。  
  
   
  
## Examples  
 下面的代码示例演示如何向对象添加新的分析器错误 <xref:System.Web.ParserErrorCollection> 。  
  
 [!code-csharp[System.Web.ParserErrorCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#3)]
 [!code-vb[System.Web.ParserErrorCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.ParserErrorCollection" />
    <altmember cref="T:System.Web.HttpException" />
    <altmember cref="T:System.Web.HttpParseException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.ParserError" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserError.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserError();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.ParserError" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何初始化类的空实例 <xref:System.Web.ParserError> 以及如何使用其属性。  
  
 [!code-csharp[System.Web.ParserError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserError/CS/parsererror_cs.aspx#1)]
 [!code-vb[System.Web.ParserError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserError/VB/parsererror_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserError (string errorText, string virtualPath, int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string errorText, string virtualPath, int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserError.#ctor(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorText As String, virtualPath As String, line As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserError(System::String ^ errorText, System::String ^ virtualPath, int line);" />
      <MemberSignature Language="F#" Value="new System.Web.ParserError : string * string * int -&gt; System.Web.ParserError" Usage="new System.Web.ParserError (errorText, virtualPath, line)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorText">错误消息文本。</param>
        <param name="virtualPath">发生错误时正在分析的文件的虚拟路径。</param>
        <param name="line">错误源的行号。</param>
        <summary>使用指定的错误文本、虚拟路径和错误源行号初始化 <see cref="T:System.Web.ParserError" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.ParserError.%23ctor%2A> 构造函数初始化 <xref:System.Web.ParserError> 具有自定义设置的对象。 <xref:System.Web.ParserError.%23ctor%2A>构造函数具有以下属性：  
  
-   <xref:System.Web.ParserError.ErrorText%2A>属性，它是包含与分析器错误相关的错误消息的字符串。  
  
-   <xref:System.Web.ParserError.VirtualPath%2A>属性，它是一个只读字符串，指定包含分析器错误的文件的虚拟路径。  
  
-   <xref:System.Web.ParserError.Line%2A>属性，它是引发此对象的文件中的行号 <xref:System.Web.ParserError> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserError.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Web.ParserError.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置表示 <see cref="T:System.Web.ParserError" /> 对象的错误的字符串。</summary>
        <value>包含错误信息的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.ParserError.ErrorText%2A> 属性可为用于在对象中显示的分析器错误提供程序员定义的错误消息 <xref:System.Web.ParserError> 。  
  
   
  
## Examples  
 下面的代码示例演示如何填充对象的 <xref:System.Web.ParserError.ErrorText%2A> 属性 <xref:System.Web.ParserError> 。  
  
 [!code-csharp[System.Web.ParserError#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserError/CS/parsererror_cs.aspx#3)]
 [!code-vb[System.Web.ParserError#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserError/VB/parsererror_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public int Line { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserError.Line" />
      <MemberSignature Language="VB.NET" Value="Public Property Line As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Line { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Line : int with get, set" Usage="System.Web.ParserError.Line" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置错误源所在的行号。</summary>
        <value>分析器遇到错误的位置的错误源行号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ParserError.Line%2A>属性是引发此对象的文件中的行号 <xref:System.Web.ParserError> 。  
  
   
  
## Examples  
 下面的代码示例演示如何填充对象的 <xref:System.Web.ParserError.Line%2A> 属性 <xref:System.Web.ParserError> 。  
  
 [!code-csharp[System.Web.ParserError#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserError/CS/parsererror_cs.aspx#4)]
 [!code-vb[System.Web.ParserError#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserError/VB/parsererror_vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserError.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string with get, set" Usage="System.Web.ParserError.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在发生错误时正在分析的文件的虚拟路径。</summary>
        <value>一个字符串，指定包含分析器错误的文件的虚拟路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何填充对象的 <xref:System.Web.ParserError.VirtualPath%2A> 属性 <xref:System.Web.ParserError> 。  
  
 [!code-csharp[System.Web.ParserError#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserError/CS/parsererror_cs.aspx#5)]
 [!code-vb[System.Web.ParserError#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserError/VB/parsererror_vb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.VirtualPathUtility" />
      </Docs>
    </Member>
  </Members>
</Type>
