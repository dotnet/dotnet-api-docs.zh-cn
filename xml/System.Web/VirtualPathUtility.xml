<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31483a1a894e64bfb8b0bd6d03b499cbb0304a05" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="77244169" /></Metadata><TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为常见的虚拟路径操作提供实用工具方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility>类提供用于涉及虚拟路径的常见操作的实用工具方法。 对于 ASP.NET 服务器控件和服务器代码，使用 Web 应用程序根运算符的虚拟路径，通常使用波形符（~），而不是相对路径和绝对路径。 有关详细信息，请参阅[ASP.NET Web 项目路径](https://docs.microsoft.com/previous-versions/aspnet/ms178116(v=vs.100))。  
  
 <xref:System.Web.VirtualPathUtility>当需要将应用程序相对路径转换为绝对虚拟路径时，请使用类，这可能是开发自定义 Web 服务处理程序的情况。  
  
 绝对虚拟路径以文本斜杠（/）开头。 相对虚拟路径是相对于应用程序根目录的相对路径，如果它只是一个波形符（ \~ ）或以颚化符和双反斜杠（ \~ \\ \\ ）或颚化符和斜杠标记（ \~ /）开头。 使虚拟路径相对，使路径与应用程序无关。  
  
 可从和属性获取应用程序的虚拟目录 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> <xref:System.Web.HttpRequest.ApplicationPath%2A> 。  
  
> [!NOTE]
>  <xref:System.Web.VirtualPathUtility>类不用于安全或规范化目的。 有关 Web 应用程序安全的详细信息，请参阅[Web 应用程序安全威胁概述](https://docs.microsoft.com/previous-versions/f13d73y6(v=vs.140))。 有关泛型 URL 处理功能，请参阅 <xref:System.Uri> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility> 类及其部分方法。 首先， <xref:System.Web.HttpRequest.FilePath%2A> 属性生成网页的虚拟路径。 <xref:System.Web.VirtualPathUtility.GetFileName%2A>、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> 和 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> 方法返回虚拟路径的相关信息。 接下来， <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> <xref:System.Web.HttpRequest.FilePath%2A> 如果调用了方法，该属性将生成当前请求的虚拟路径，该路径可能与属性不同 <xref:System.Web.HttpResponse.Redirect%2A> 。 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> 和 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法返回虚拟路径的相关信息。  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178116(v=vs.100)">ASP.NET 网站路径</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要向其追加正斜杠的虚拟路径。</param>
        <summary>将正斜杠 (/) 追加到虚拟路径的末尾（如果尚不存在正斜杠）。</summary>
        <returns>修改后的虚拟路径。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在虚拟路径的末尾存在文本斜杠标记（/），则不会修改虚拟路径。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">基路径。</param>
        <param name="relativePath">相对路径。</param>
        <summary>将一个基路径和一个相对路径进行组合。</summary>
        <returns>组合后的 <paramref name="basePath" /> 和 <paramref name="relativePath" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.Combine%2A> <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> 如果相对路径正好是波形符（~），则方法将返回属性的值。  
  
 <xref:System.Web.VirtualPathUtility.Combine%2A> <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> 如果相对路径以波形符和斜杠（~/）开头，则该方法将使用属性值而不是基路径; 否则，该方法将 <xref:System.Web.VirtualPathUtility.Combine%2A> 使用基路径。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="relativePath" /> 是一个物理路径。  
  
- 或 - 
 <paramref name="relativePath" /> 包含一个或多个冒号。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relativePath" /> 为 <see langword="null" /> 或空字符串。  
  
- 或 - 
 <paramref name="basePath" /> 为 <see langword="null" /> 或空字符串。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虚拟路径。</param>
        <summary>返回虚拟路径的目录部分。</summary>
        <returns>虚拟路径中引用的目录。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不 `virtualPath` 是根路径，则它不等于根运算符（颚化符 [ \~ ]），不是以波形符（）开头， \~ 如波形符和斜杠标记（ \~ /）或波形符和双反斜杠（ \~ //），或者不以斜杠标记（/）开头，则 <xref:System.ArgumentException> 会引发异常。  
  
 如果传入方法的虚拟路径 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> 为 `"/images/image1.gif"` ，则返回的目录为 `"/images"` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> 和 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> 方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 不含有根路径。  
  
- 或 - 
 <paramref name="virtualPath" /> 为 <see langword="null" /> 或空字符串。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虚拟路径。</param>
        <summary>检索虚拟路径中引用的文件的扩展名。</summary>
        <returns>文件扩展名字符串，包括句点 (.)、<see langword="null" /> 或空字符串 ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果传入方法的虚拟路径 <xref:System.Web.VirtualPathUtility.GetExtension%2A> 为 `"/images/image1.gif"` ，则返回的扩展为 `".gif"` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> 和 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> 方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 包含 <see cref="F:System.IO.Path.InvalidPathChars" /> 中定义的一个或多个无效字符。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虚拟路径。</param>
        <summary>检索虚拟路径中引用的文件的文件名。</summary>
        <returns><paramref name="virtualPath" /> 中的最后的目录字符后面的文件名文本；否则为最后的目录名称（如果 <paramref name="virtualPath" /> 的最后一个字符是目录字符或卷分隔符)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果传入方法的虚拟路径 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 为 `"/images/image1.gif"` ，则返回的文件名为 `"image1.gif"` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> 和 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> 方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 包含 <see cref="F:System.IO.Path.InvalidPathChars" /> 中定义的一个或多个无效字符。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要检查的虚拟路径。</param>
        <summary>返回一个布尔值，该值指示指定的虚拟路径是否为绝对路径，也就是以正斜杠 (/) 开头。</summary>
        <returns>如果 <paramref name="virtualPath" /> 是绝对路径，并且不为 <see langword="true" /> 或空字符串 ("")，则为 <see langword="null" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果虚拟路径以文字斜杠（/）开头，则该路径为绝对路径。 例如， <xref:System.Web.HttpRequest.Path%2A> 属性返回一个绝对虚拟路径。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A> 、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> 和 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> 为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要检查的虚拟路径。</param>
        <summary>返回一个布尔值，该值指示指定的虚拟路径是否为相对于应用程序的相对路径。</summary>
        <returns>如果 <paramref name="virtualPath" /> 相对于应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虚拟路径可以只是根运算符（颚化符 [~]），也可以以根运算符开头。 如果 `virtualPath` 为 `null` ，则 <xref:System.ArgumentNullException> 引发异常。 如果 `virtualPath` 是空字符串（""），则该 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> 方法返回 `false` 。  
  
> [!NOTE]
>  `"~``filename` `"` 不是有效的虚拟路径，并且 `false` 为 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> 方法返回。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A> 、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> 和 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">要返回的相对虚拟路径的起始虚拟路径。</param>
        <param name="toPath">要返回的相对虚拟路径的结束虚拟路径。</param>
        <summary>返回从一个包含根操作符（波形符 [~]）的虚拟路径到另一个此类虚拟路径的相对虚拟路径。</summary>
        <returns>从 <paramref name="fromPath" /> 到 <paramref name="toPath" /> 的相对虚拟路径。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `fromPath` 和 `toPath` 参数不是根路径，即它们不等于根运算符（颚化符 []），则不以波形符 [ \~ ] 开头， \~ 例如波形符和斜杠标记（ \~ /）或波形符和双反斜杠（ \~ //），或者不以斜杠标记（/）开头，则 <xref:System.ArgumentException> 会引发异常。  
  
 URI 中使用的查询字符串参数和 HTML 定位点不用于确定相对路径。  
  
 如果 `fromPath` 为 `"/directory1/file1.aspx"` 且 `toPath` 为 `"/directory2/file2.aspx"` ，则该 <xref:System.Web.VirtualPathUtility.MakeRelative%2A> 方法返回 `"../directory2/file2.aspx"` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fromPath" /> 不含有根路径。  
  
- 或 - 
 <paramref name="toPath" /> 不含有根路径。</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要移除末尾的任何正斜杠的虚拟路径。</param>
        <summary>从虚拟路径移除末尾的正斜杠 (/)。</summary>
        <returns>如果虚拟路径尚不是根目录 ("/")，则返回末尾没有正斜杠的虚拟路径；否则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>方法从虚拟路径的末尾移除斜杠标记（/）。 如果虚拟路径已是根目录（ `"/"` ），则不执行任何操作。 如果虚拟路径为 `null` 或空字符串（""），则该 <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A> 方法将返回 `null` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将虚拟路径转换为应用程序绝对路径。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要转换为应用程序相对路径的虚拟路径。</param>
        <summary>将虚拟路径转换为应用程序绝对路径。</summary>
        <returns>指定的虚拟路径的绝对路径表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序的绝对路径是使用应用程序路径而不是根运算符（代字号 [~]）的路径。  
  
 如果 `virtualPath` 为：  
  
-   绝对 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 方法返回未更改的虚拟路径。  
  
-   相对于应用程序，方法会将 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 当前应用程序的虚拟目录路径追加到的开头 `virtualPath` 。 例如，可从属性访问当前应用程序虚拟目录路径 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> 。  
  
-   不是根路径， <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 方法将引发 <xref:System.ArgumentOutOfRangeException> 异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="virtualPath" /> 不含有根路径。</exception>
        <exception cref="T:System.Web.HttpException">前导双句点 (..) 用于退出顶级目录。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要转换为应用程序相对路径的虚拟路径。</param>
        <param name="applicationPath">要用于将 <paramref name="virtualPath" /> 转换为相对路径的应用程序路径。</param>
        <summary>使用指定的应用程序路径将虚拟路径转换为应用程序绝对路径。</summary>
        <returns><paramref name="virtualPath" /> 的绝对虚拟路径表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法的重载 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 使用提供的应用程序路径，而不是当前应用程序的路径。  
  
 如果 `virtualPath` 为：  
  
-   绝对， <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 方法返回不带更改的虚拟路径。  
  
-   相对于应用程序，该 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 方法将添加 `applicationPath` 到虚拟路径的开头。  
  
-   不是根路径， <xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 方法将引发 <xref:System.ArgumentOutOfRangeException> 异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="applicationPath" /> 不含有根路径。</exception>
        <exception cref="T:System.Web.HttpException">前导双句点 (..) 在应用程序路径中用于退出顶级目录。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将虚拟路径转换为应用程序相对路径。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要转换为应用程序相对路径的虚拟路径。</param>
        <summary>使用 <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" /> 属性中的应用程序虚拟路径将虚拟路径转换为应用程序相对路径。</summary>
        <returns><paramref name="virtualPath" /> 的应用程序相对路径表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果应用程序的虚拟路径为 `"myapp"` ，并且将虚拟路径 `"/myApp/sub/default.asp"` 传递给 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法，则生成的应用程序相对路径为 `"~/sub/default.aspx"` 。  
  
 如果不 `virtualPath` 以当前应用程序路径开头，则 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法将返回未更改的虚拟路径。  
  
 如果与 `virtualPath` 应用程序路径相同，则返回根运算符（颚化符 [~]）。 例如，可从属性访问当前应用程序虚拟目录路径 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A> 、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> 和 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要转换为应用程序相对路径的虚拟路径。</param>
        <param name="applicationPath">要用于将 <paramref name="virtualPath" /> 转换为相对路径的应用程序路径。</param>
        <summary>使用指定的应用程序路径将虚拟路径转换为应用程序相对路径。</summary>
        <returns><paramref name="virtualPath" /> 的应用程序相对路径表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法的重载 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 使用 `applicationPath` 而不是当前应用程序路径。 如果不 `virtualPath` 以开头 `applicationPath` ，则 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 方法返回未更改的虚拟路径。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
