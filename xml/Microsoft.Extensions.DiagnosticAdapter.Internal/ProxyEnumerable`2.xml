<Type Name="ProxyEnumerable&lt;TSourceElement,TTargetElement&gt;" FullName="Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable&lt;TSourceElement,TTargetElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60300708e75efc661d5fc91b2dc29bded3fd979f" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92086465" /></Metadata><TypeSignature Language="C#" Value="public class ProxyEnumerable&lt;TSourceElement,TTargetElement&gt; : System.Collections.Generic.IEnumerable&lt;TTargetElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyEnumerable`2&lt;TSourceElement, TTargetElement&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!TTargetElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyEnumerable(Of TSourceElement, TTargetElement)&#xA;Implements IEnumerable(Of TTargetElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSourceElement, typename TTargetElement&gt;&#xA;public ref class ProxyEnumerable : System::Collections::Generic::IEnumerable&lt;TTargetElement&gt;" />
  <TypeSignature Language="F#" Value="type ProxyEnumerable&lt;'SourceElement, 'argetElement&gt; = class&#xA;    interface seq&lt;'argetElement&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSourceElement" />
    <TypeParameter Name="TTargetElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TTargetElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSourceElement">To be added.</typeparam>
    <typeparam name="TTargetElement">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyEnumerable (System.Collections.Generic.IEnumerable&lt;TSourceElement&gt; source, Type proxyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!TSourceElement&gt; source, class System.Type proxyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IEnumerable(Of TSourceElement), proxyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyEnumerable(System::Collections::Generic::IEnumerable&lt;TSourceElement&gt; ^ source, Type ^ proxyType);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable&lt;'SourceElement, 'argetElement&gt; : seq&lt;'SourceElement&gt; * Type -&gt; Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable&lt;'SourceElement, 'argetElement&gt;" Usage="new Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable&lt;'SourceElement, 'argetElement&gt; (source, proxyType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSourceElement&gt;" />
        <Parameter Name="proxyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="proxyType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TTargetElement&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TTargetElement&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TTargetElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TTargetElement&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'argetElement&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'argetElement&gt;" Usage="proxyEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TTargetElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1452-101">返回一个循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="c1452-101">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="c1452-102">用于循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="c1452-102">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="proxyEnumerable.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DiagnosticAdapter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1452-103">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="c1452-103">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="c1452-104">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c1452-104">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c1452-105">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="c1452-105">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c1452-106">它只能在 <xref:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="c1452-106">It can be used only when the <xref:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyEnumerable`2> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
