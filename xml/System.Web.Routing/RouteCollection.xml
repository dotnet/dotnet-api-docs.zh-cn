<Type Name="RouteCollection" FullName="System.Web.Routing.RouteCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="563ec8a2564703d12630dcf5372b0e06e20631af" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86844665" /></Metadata><TypeSignature Language="C#" Value="public class RouteCollection : System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Inherits Collection(Of RouteBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : System::Collections::ObjectModel::Collection&lt;System::Web::Routing::RouteBase ^&gt;" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    inherit Collection&lt;RouteBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Web.Routing" FromVersion="4.0.0.0" To="System.Web" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Web.Routing.RouteBase</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="85132-101">提供 ASP.NET 路由的路由集合。</span><span class="sxs-lookup"><span data-stu-id="85132-101">Provides a collection of routes for ASP.NET routing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-102"><xref:System.Web.Routing.RouteCollection>类提供了一些方法，使你能够管理从类派生的对象的集合 <xref:System.Web.Routing.RouteBase> 。</span><span class="sxs-lookup"><span data-stu-id="85132-102">The <xref:System.Web.Routing.RouteCollection> class provides methods that enable you to manage a collection of objects that derive from the <xref:System.Web.Routing.RouteBase> class.</span></span>

 <span data-ttu-id="85132-103">通常，您将使用 `static` <xref:System.Web.Routing.RouteTable.Routes%2A> 类的属性 <xref:System.Web.Routing.RouteTable> 来检索 <xref:System.Web.Routing.RouteCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="85132-103">Typically, you will use the `static`<xref:System.Web.Routing.RouteTable.Routes%2A> property of the <xref:System.Web.Routing.RouteTable> class to retrieve a <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="85132-104"><xref:System.Web.Routing.RouteTable.Routes%2A>属性存储 ASP.NET 应用程序的所有路由。</span><span class="sxs-lookup"><span data-stu-id="85132-104">The <xref:System.Web.Routing.RouteTable.Routes%2A> property stores all the routes for an ASP.NET application.</span></span> <span data-ttu-id="85132-105">ASP.NET 路由循环访问属性中的路由， <xref:System.Web.Routing.RouteTable.Routes%2A> 以查找与 URL 匹配的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-105">ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> property to find the route that matches a URL.</span></span>

 <span data-ttu-id="85132-106">若要构造 URL，请调用 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 方法并传入值的集合。</span><span class="sxs-lookup"><span data-stu-id="85132-106">To construct a URL, you call the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and pass in a collection of values.</span></span> <span data-ttu-id="85132-107"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>方法查找其参数与你传入的值相匹配的第一个路由，并返回一个 <xref:System.Web.Routing.VirtualPathData> 对象，其中包含有关匹配的路由的信息。</span><span class="sxs-lookup"><span data-stu-id="85132-107">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method finds the first route with parameters that match the values that you passed in, and returns a <xref:System.Web.Routing.VirtualPathData> object that contains information about the matching route.</span></span> <span data-ttu-id="85132-108">通过对象的属性检索 URL <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> <xref:System.Web.Routing.VirtualPathData> 。</span><span class="sxs-lookup"><span data-stu-id="85132-108">You retrieve the URL through the <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> property of the <xref:System.Web.Routing.VirtualPathData> object.</span></span>

 <span data-ttu-id="85132-109">可以使用名称或不带名称添加路由。</span><span class="sxs-lookup"><span data-stu-id="85132-109">You can add a route either with a name or without a name.</span></span> <span data-ttu-id="85132-110">通过包含名称，可以在构造 Url 时区分相似的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-110">Including a name enables you to distinguish between similar routes when URLs are constructed.</span></span> <span data-ttu-id="85132-111">如果未指定名称，ASP.NET 路由将使用集合中的第一个匹配路由来构造 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-111">If you do not specify a name, ASP.NET routing uses the first matching route in the collection to construct a URL.</span></span>

 <span data-ttu-id="85132-112">将未命名的路由添加到 <xref:System.Web.Routing.RouteCollection> 对象时，无法添加集合中已经存在的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-112">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span> <span data-ttu-id="85132-113">添加命名路由时，不能使用已经在集合中标识路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-113">When you add a named route, you cannot use a name that already identifies a route in the collection.</span></span>

 <span data-ttu-id="85132-114">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法可确保与集合交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-114">You use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 <span data-ttu-id="85132-115">有关如何向路由集合添加路由的详细信息，请参阅 [ASP.NET 路由](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="85132-115">For more information about how to add a route to a route collection, see [ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)).</span></span>

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-116">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-116">ASP.NET Routing</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85132-117">初始化 <see cref="T:System.Web.Routing.RouteCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85132-117">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-118">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-118">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85132-119">初始化 <see cref="T:System.Web.Routing.RouteCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85132-119">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-120">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-120">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPathProvider As VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.RouteCollection : System.Web.Hosting.VirtualPathProvider -&gt; System.Web.Routing.RouteCollection" Usage="new System.Web.Routing.RouteCollection virtualPathProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider"><span data-ttu-id="85132-121">用于从虚拟文件系统中检索资源的提供程序。</span><span class="sxs-lookup"><span data-stu-id="85132-121">A provider for retrieving resources from a virtual file system.</span></span></param>
        <summary><span data-ttu-id="85132-122">通过使用指定的虚拟路径提供程序初始化 <see cref="T:System.Web.Routing.RouteCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85132-122">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-123">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-123">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : string * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.Add (name, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="85132-124">标识该路由的值。</span><span class="sxs-lookup"><span data-stu-id="85132-124">The value that identifies the route.</span></span> <span data-ttu-id="85132-125">该值可为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="85132-125">The value can be <see langword="null" /> or an empty string.</span></span></param>
        <param name="item"><span data-ttu-id="85132-126">要添加到集合末尾的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-126">The route to add to the end of the collection.</span></span></param>
        <summary><span data-ttu-id="85132-127">向 <see cref="T:System.Web.Routing.RouteCollection" /> 对象末尾添加路由，并为该路由分配指定的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-127">Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-128">使用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法，可以在将路由添加到路由集合时定义该路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-128">The <xref:System.Web.Routing.RouteCollection.Add%2A> method enables you to define a name for a route when you add it to the route collection.</span></span> <span data-ttu-id="85132-129">通过定义路由的名称，可以指定使用路由构造 URL 时要使用的特定路由。</span><span class="sxs-lookup"><span data-stu-id="85132-129">By defining a name for the route, you can specify a particular route to use when you use routing to construct a URL.</span></span> <span data-ttu-id="85132-130">如果有多个路由与传递给该方法的值匹配，则指定特定路由非常重要 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-130">Specifying a particular route is important when more than one route matches the values that you pass to the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method.</span></span> <span data-ttu-id="85132-131">如果未指定命名路由，ASP.NET 路由将使用与值匹配的集合中的第一个路由。</span><span class="sxs-lookup"><span data-stu-id="85132-131">If you do not specify a named route, ASP.NET routing will use the first route in the collection that matches the values.</span></span> <span data-ttu-id="85132-132">有关详细信息，请参阅 [如何：从路由构造 url](https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="85132-132">For more information, see [How to: Construct URLs from Routes](https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)).</span></span>

 <span data-ttu-id="85132-133">名称只能在对象中使用一次 <xref:System.Web.Routing.RouteCollection> 。</span><span class="sxs-lookup"><span data-stu-id="85132-133">A name can be used only one time in the <xref:System.Web.Routing.RouteCollection> object.</span></span>

 <span data-ttu-id="85132-134">如果无需指定路由的名称，则可以通过调用方法来添加路由 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-134">If you do not have to specify a name for the route, you can add the route by calling the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method.</span></span>

 <span data-ttu-id="85132-135">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法确保与集合进行交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-135">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>



## Examples
 <span data-ttu-id="85132-136">下面的示例演示如何将路由添加到 <xref:System.Web.Routing.RouteCollection> 对象并为该路由分配一个名称。</span><span class="sxs-lookup"><span data-stu-id="85132-136">The following example shows how to add a route to a <xref:System.Web.Routing.RouteCollection> object and assign a name to the route.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#1)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85132-137"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-137"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85132-138"><paramref name="name" /> 已在集合中使用。</span><span class="sxs-lookup"><span data-stu-id="85132-138"><paramref name="name" /> is already used in the collection.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-139">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-139">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public bool AppendTrailingSlash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendTrailingSlash { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppendTrailingSlash : bool with get, set" Usage="System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85132-140">获取或设置指示标准化虚拟路径时是否添加首尾斜杠的值。</span><span class="sxs-lookup"><span data-stu-id="85132-140">Gets or sets a value that indicates whether trailing slashes are added when virtual paths are normalized.</span></span></summary>
        <value><span data-ttu-id="85132-141">如果添加尾部斜杠，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85132-141"><see langword="true" /> if trailing slashes are added; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="85132-142">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85132-142">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="routeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85132-143">从 <see cref="T:System.Web.Routing.RouteCollection" /> 对象中移除所有元素。</span><span class="sxs-lookup"><span data-stu-id="85132-143">Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-144">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法确保与集合进行交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-144">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-145">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-145">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetReadLock">
      <MemberSignature Language="C#" Value="public IDisposable GetReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetReadLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetReadLock();" />
      <MemberSignature Language="F#" Value="member this.GetReadLock : unit -&gt; IDisposable" Usage="routeCollection.GetReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85132-146">提供一个对象，用于管理在集合中检索对象时的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="85132-146">Provides an object for managing thread safety when you retrieve an object from the collection.</span></span></summary>
        <returns><span data-ttu-id="85132-147">用于管理线程安全性的对象。</span><span class="sxs-lookup"><span data-stu-id="85132-147">An object that manages thread safety.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-148"><xref:System.Web.Routing.RouteCollection>对象可用于应用程序中的多个进程。</span><span class="sxs-lookup"><span data-stu-id="85132-148">The <xref:System.Web.Routing.RouteCollection> object is available to multiple processes in the application.</span></span> <span data-ttu-id="85132-149">因此，如果必须在应用程序运行时检索路由，请使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法来确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="85132-149">Therefore, if you have to retrieve a route when the application is running, use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method in order to guarantee thread safety.</span></span> <span data-ttu-id="85132-150">通过获取路由集合上的读取锁定，可以确保在尝试检索集合时不会修改该集合。</span><span class="sxs-lookup"><span data-stu-id="85132-150">By obtaining a read lock on the route collection, you make sure that the collection will not be modified while you are trying to retrieve it.</span></span>

 <span data-ttu-id="85132-151"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法停止线程继续，直到可以获取锁。</span><span class="sxs-lookup"><span data-stu-id="85132-151">The <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method stops the thread from continuing until the lock can be acquired.</span></span> <span data-ttu-id="85132-152">如果已有写入锁定，则线程将等待，直到更新完成并且写入锁被释放。</span><span class="sxs-lookup"><span data-stu-id="85132-152">If a write lock is in place, the thread waits until the update is completed and the write lock is released.</span></span> <span data-ttu-id="85132-153">当释放此方法返回的对象时，将释放路由集合上的读取锁定 <xref:System.IDisposable> 。</span><span class="sxs-lookup"><span data-stu-id="85132-153">The read lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>

 <span data-ttu-id="85132-154">如果不使用，则在 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 读取集合时可能会收到错误 <xref:System.Web.Routing.RouteCollection> 。</span><span class="sxs-lookup"><span data-stu-id="85132-154">If you do not use <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, you might get an error while you are reading through the <xref:System.Web.Routing.RouteCollection> collection.</span></span> <span data-ttu-id="85132-155">例如，假设您循环遍历集合中的对象 <xref:System.Web.Routing.RouteCollection> 以进行读取，而不调用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-155">For example, suppose you loop through the objects in the <xref:System.Web.Routing.RouteCollection> collection to read them, without calling <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span> <span data-ttu-id="85132-156">当你执行此操作时，另一个请求中的其他线程可能会调用 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 并向集合添加路由。</span><span class="sxs-lookup"><span data-stu-id="85132-156">While you are doing that, another thread from another request might call <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> and add a route to the collection.</span></span> <span data-ttu-id="85132-157">第一个线程将失败并出现错误。</span><span class="sxs-lookup"><span data-stu-id="85132-157">The first thread will then fail with an error.</span></span>

 <span data-ttu-id="85132-158">在以下两种情况下，你无需调用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> ：</span><span class="sxs-lookup"><span data-stu-id="85132-158">There are two scenarios in which you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span></span>

-   <span data-ttu-id="85132-159">类的公共方法 <xref:System.Web.Routing.RouteCollection> （如） <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> ， <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> 并 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 在内部调用。</span><span class="sxs-lookup"><span data-stu-id="85132-159">Public methods of the <xref:System.Web.Routing.RouteCollection> class such as <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> and <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> internally.</span></span> <span data-ttu-id="85132-160">因此， <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 当您调用类的公共方法 <xref:System.Web.Routing.RouteCollection> 从集合中检索数据时，无需显式调用。</span><span class="sxs-lookup"><span data-stu-id="85132-160">Therefore, you do not have to explicitly call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> when you call a public method of the <xref:System.Web.Routing.RouteCollection> class to retrieve data from the collection.</span></span>

-   <span data-ttu-id="85132-161">当应用程序正在启动，并且尚未处理请求（如事件处理程序中）时， `Application_Start` 只有一个线程正在运行。</span><span class="sxs-lookup"><span data-stu-id="85132-161">When the application is starting and is not yet processing requests, such as in the `Application_Start` event handler, only one thread is running.</span></span> <span data-ttu-id="85132-162">由于在您读取集合时没有其他线程可能更新该集合，因此您无需调用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-162">Because there are no other threads that might update the collection while you are reading it, you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span>



## Examples
 <span data-ttu-id="85132-163">下面的示例演示如何 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 在应用程序运行时检索路由时使用方法。</span><span class="sxs-lookup"><span data-stu-id="85132-163">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method when you retrieve a route while the application is running.</span></span> <span data-ttu-id="85132-164">`Using`语句可确保在从集合中读取数据时，无论代码是正常完成还是引发异常，都可以确保在运行时发生什么 () 会安全地在代码块的末尾释放锁 `Using` 。</span><span class="sxs-lookup"><span data-stu-id="85132-164">The `Using` statement ensures that no matter what happens at run time when you read from the collection (whether the code completes normally or an exception is thrown) the lock will be safely released at the end of the `Using` code block.</span></span>



 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-165">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-165">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="member this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeCollection.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext"><span data-ttu-id="85132-166">一个对象，该对象封装有关 HTTP 请求的信息。</span><span class="sxs-lookup"><span data-stu-id="85132-166">An object that encapsulates information about the HTTP request.</span></span></param>
        <summary><span data-ttu-id="85132-167">返回有关集合中与指定值匹配的路由的信息。</span><span class="sxs-lookup"><span data-stu-id="85132-167">Returns information about the route in the collection that matches the specified values.</span></span></summary>
        <returns><span data-ttu-id="85132-168">一个对象，其中包含路由定义中的值。</span><span class="sxs-lookup"><span data-stu-id="85132-168">An object that contains the values from the route definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85132-169"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-169"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85132-170"><paramref name="context" /> 参数中对象的 <see cref="P:System.Web.HttpContextBase.Request" /> 属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-170">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-171">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-171">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVirtualPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85132-172">返回与路由关联的 URL 路径的相关信息。</span><span class="sxs-lookup"><span data-stu-id="85132-172">Returns information about the URL path that is associated with the route.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-173">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-173">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualPath (requestContext As RequestContext, values As RouteValueDictionary) As VirtualPathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="85132-174">一个对象，封装有关所请求的路由的信息。</span><span class="sxs-lookup"><span data-stu-id="85132-174">An object that encapsulates information about the requested route.</span></span></param>
        <param name="values"><span data-ttu-id="85132-175">一个包含路由的参数的对象。</span><span class="sxs-lookup"><span data-stu-id="85132-175">An object that contains the parameters for a route.</span></span></param>
        <summary><span data-ttu-id="85132-176">如果具有指定的上下文和参数值，则返回与路由关联的 URL 路径的相关信息。</span><span class="sxs-lookup"><span data-stu-id="85132-176">Returns information about the URL path that is associated with the route, given the specified context and parameter values.</span></span></summary>
        <returns><span data-ttu-id="85132-177">一个对象，其中包含与路由关联的 URL 路径的相关信息。</span><span class="sxs-lookup"><span data-stu-id="85132-177">An object that contains information about the URL path that is associated with the route.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-178">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-178">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualPath (requestContext As RequestContext, name As String, values As RouteValueDictionary) As VirtualPathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::String ^ name, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="85132-179">一个对象，封装有关所请求的路由的信息。</span><span class="sxs-lookup"><span data-stu-id="85132-179">An object that encapsulates information about the requested route.</span></span></param>
        <param name="name"><span data-ttu-id="85132-180">要在检索 URL 路径相关信息时使用的路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-180">The name of the route to use when information about the URL path is retrieved.</span></span></param>
        <param name="values"><span data-ttu-id="85132-181">一个包含路由的参数的对象。</span><span class="sxs-lookup"><span data-stu-id="85132-181">An object that contains the parameters for a route.</span></span></param>
        <summary><span data-ttu-id="85132-182">如果具有指定的上下文、路由名称和参数值，则返回与命名路由关联的 URL 路径的相关信息。</span><span class="sxs-lookup"><span data-stu-id="85132-182">Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</span></span></summary>
        <returns><span data-ttu-id="85132-183">一个对象，其中包含与路由关联的 URL 路径的相关信息。</span><span class="sxs-lookup"><span data-stu-id="85132-183">An object that contains information about the URL path that is associated with the route.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85132-184">找不到具有 <paramref name="name" /> 参数中指定名称的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-184">No route could be found that has the name specified in the <paramref name="name" /> parameter.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-185">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-185">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetWriteLock">
      <MemberSignature Language="C#" Value="public IDisposable GetWriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetWriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetWriteLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetWriteLock();" />
      <MemberSignature Language="F#" Value="member this.GetWriteLock : unit -&gt; IDisposable" Usage="routeCollection.GetWriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85132-186">提供一个对象，用于管理在集合中添加或删除元素时的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="85132-186">Provides an object for managing thread safety when you add or remove elements in the collection.</span></span></summary>
        <returns><span data-ttu-id="85132-187">用于管理线程安全性的对象。</span><span class="sxs-lookup"><span data-stu-id="85132-187">An object that manages thread safety.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-188">在 ASP.NET 应用程序中定义路由的建议方法是将路由添加到 <xref:System.Web.Routing.RouteTable.Routes%2A> global.asax 文件中事件的事件处理程序中的属性 `Application_Start` 。</span><span class="sxs-lookup"><span data-stu-id="85132-188">The recommended approach for defining routes in an ASP.NET application is to add the routes to the <xref:System.Web.Routing.RouteTable.Routes%2A> property in an event handler for the `Application_Start` event in the Global.asax file.</span></span> <span data-ttu-id="85132-189">有关详细信息，请参阅 <xref:System.Web.Routing.RouteCollection>。</span><span class="sxs-lookup"><span data-stu-id="85132-189">For more information, see <xref:System.Web.Routing.RouteCollection>.</span></span>

 <span data-ttu-id="85132-190">如果在应用程序运行时必须添加路由，请使用 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法来确保线程安全。</span><span class="sxs-lookup"><span data-stu-id="85132-190">If you have to add a route when the application is running, you use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to guarantee thread safety.</span></span> <span data-ttu-id="85132-191">当释放此方法返回的对象时，将释放路由集合上的写入锁 <xref:System.IDisposable> 。</span><span class="sxs-lookup"><span data-stu-id="85132-191">The write lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>



## Examples
 <span data-ttu-id="85132-192">下面的示例演示如何 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 在应用程序运行时添加路由时使用方法。</span><span class="sxs-lookup"><span data-stu-id="85132-192">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method when you add a route while the application is running.</span></span>



 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-193">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-193">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ignore">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85132-194">定义不需检查是否匹配路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-194">Defines a URL pattern that should not be checked for matches against routes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-195">此方法创建映射到 <xref:System.Web.Routing.StopRoutingHandler> 路由处理程序的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-195">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="85132-196">调用此方法后，匹配指定 URL 模式的请求将不会作为路由请求处理。</span><span class="sxs-lookup"><span data-stu-id="85132-196">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>

 <span data-ttu-id="85132-197">当 URL 与物理文件（如图像文件）匹配时，ASP.NET 路由会自动忽略请求。</span><span class="sxs-lookup"><span data-stu-id="85132-197">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="85132-198">在某些情况下，你可能还希望路由在没有物理文件时忽略请求。</span><span class="sxs-lookup"><span data-stu-id="85132-198">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="85132-199">例如，即使没有与 axd 文件扩展名相对应的物理文件，也不应将 ASP.NET 自动对 axd 文件进行的请求视为路由请求。</span><span class="sxs-lookup"><span data-stu-id="85132-199">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-200">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-200">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; unit" Usage="routeCollection.Ignore url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="85132-201">要忽略的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-201">The URL pattern to be ignored.</span></span></param>
        <summary><span data-ttu-id="85132-202">定义不需检查是否匹配路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-202">Defines a URL pattern that should not be checked for matches against routes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-203">此方法创建映射到 <xref:System.Web.Routing.StopRoutingHandler> 路由处理程序的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-203">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="85132-204">调用此方法后，匹配指定 URL 模式的请求将不会作为路由请求处理。</span><span class="sxs-lookup"><span data-stu-id="85132-204">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>

 <span data-ttu-id="85132-205">当 URL 与物理文件（如图像文件）匹配时，ASP.NET 路由会自动忽略请求。</span><span class="sxs-lookup"><span data-stu-id="85132-205">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="85132-206">在某些情况下，你可能还希望路由在没有物理文件时忽略请求。</span><span class="sxs-lookup"><span data-stu-id="85132-206">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="85132-207">例如，即使没有与 axd 文件扩展名相对应的物理文件，也不应将 ASP.NET 自动对 axd 文件进行的请求视为路由请求。</span><span class="sxs-lookup"><span data-stu-id="85132-207">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>



## Examples
 <span data-ttu-id="85132-208">MVC 项目的默认模板使用此方法从路由中排除 axd 文件，如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="85132-208">The default template for MVC projects uses this method to exclude .axd files from routing, as shown in the following example:</span></span>

 [!code-csharp[MvcDefaultApp#2](~/samples/snippets/csharp/VS_Snippets_WebNet/mvcdefaultapp/cs/global.asax.cs#2)]
 [!code-vb[MvcDefaultApp#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/mvcdefaultapp/vb/global.asax.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-209">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-209">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url, object constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url, object constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String, constraints As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url, System::Object ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string * obj -&gt; unit" Usage="routeCollection.Ignore (url, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="constraints" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="85132-210">要忽略的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-210">The URL pattern to be ignored.</span></span></param>
        <param name="constraints"><span data-ttu-id="85132-211">附加条件，用于确定是否忽略匹配 URL 模式的请求。</span><span class="sxs-lookup"><span data-stu-id="85132-211">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</span></span></param>
        <summary><span data-ttu-id="85132-212">定义一个 URL 模式，此模式在请求 URL 满足指定约束的情况下不需要检查 URL 是否与路由匹配。</span><span class="sxs-lookup"><span data-stu-id="85132-212">Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-213">此方法创建映射到 <xref:System.Web.Routing.StopRoutingHandler> 路由处理程序的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-213">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="85132-214">调用此方法后，匹配指定 URL 模式的请求将不会作为路由请求处理。</span><span class="sxs-lookup"><span data-stu-id="85132-214">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>

 <span data-ttu-id="85132-215">当 URL 与物理文件（如图像文件）匹配时，ASP.NET 路由会自动忽略请求。</span><span class="sxs-lookup"><span data-stu-id="85132-215">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="85132-216">在某些情况下，你可能还希望路由在没有物理文件时忽略请求。</span><span class="sxs-lookup"><span data-stu-id="85132-216">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="85132-217">例如，即使没有与 axd 文件扩展名相对应的物理文件，也不应将 ASP.NET 自动对 axd 文件进行的请求视为路由请求。</span><span class="sxs-lookup"><span data-stu-id="85132-217">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>



## Examples
 <span data-ttu-id="85132-218">下面的示例演示如何使用此方法忽略扩展名为 .aspx 的所有 Url。</span><span class="sxs-lookup"><span data-stu-id="85132-218">The following example shows how to use this method to ignore all URLs that have an .aspx extension.</span></span> <span data-ttu-id="85132-219">如果注册自定义 HTTP 处理程序来处理扩展名为 ".aspx" 的文件的所有 Url，则可能需要执行此操作。</span><span class="sxs-lookup"><span data-stu-id="85132-219">You might want to do this if you register a custom HTTP handler to handle all URLs for files that have the extension ".aspx".</span></span> <span data-ttu-id="85132-220">匹配所有 .aspx 请求的单一 URL 模式需要两个通用参数，例如 `{*path}.aspx/{*pathinfo}` 。</span><span class="sxs-lookup"><span data-stu-id="85132-220">A single URL pattern that would match all .aspx requests would require two catchall parameters such as `{*path}.aspx/{*pathinfo}`.</span></span> <span data-ttu-id="85132-221"> (此模式将匹配以 .aspx 结尾的任何 URL，其中包括具有查询字符串参数的 URL。 ) 不过，路由在末尾只允许使用一个参数。</span><span class="sxs-lookup"><span data-stu-id="85132-221">(This pattern would match any URL that ends in .aspx, including those that have query-string parameters.) However, routing allows only one catchall parameter at the end.</span></span> <span data-ttu-id="85132-222">作为替代方法，您可以指定一个 URL 模式，该 URL 模式具有与所有 Url 匹配的单个内参数，然后指定排除不具有 .aspx 扩展名的所有内容的约束，如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="85132-222">As an alternative, you can specify a URL pattern that has a single catchall parameter that matches all URLs and then specify constraints that exclude everything that does not have the .aspx extension, as shown in the following example:</span></span>

```vb
routes.Ignore("{*allaspx}", new With {.allaspx = ".*\.aspx(/.*)?"})
```

```csharp
routes.Ignore("{*allaspx}", new {allaspx=@".*\.aspx(/.*)?"});
```

 <span data-ttu-id="85132-223">之前的代码行将通常添加到从 global.asax 中的方法调用的方法中 `Application_Start` ，如重载的示例中所示 <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="85132-223">The previous line of code would typically be added to a method that is called from the `Application_Start` method in the Global.asax, as shown in the example for the <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85132-224"><paramref name="url" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-224">The <paramref name="url" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-225">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-225">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="85132-226">从零开始的索引，在此处插入 <paramref name="item" />。</span><span class="sxs-lookup"><span data-stu-id="85132-226">The zero-based index at which <paramref name="item" /> is inserted.</span></span></param>
        <param name="item"><span data-ttu-id="85132-227">要插入的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-227">The route to insert.</span></span></param>
        <summary><span data-ttu-id="85132-228">将指定路由插入到 <see cref="T:System.Web.Routing.RouteCollection" /> 对象中的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="85132-228">Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-229">将未命名的路由添加到 <xref:System.Web.Routing.RouteCollection> 对象时，无法添加集合中已经存在的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-229">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>

 <span data-ttu-id="85132-230">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法确保与集合进行交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-230">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85132-231"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-231"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85132-232"><paramref name="item" /> 已在集合中。</span><span class="sxs-lookup"><span data-stu-id="85132-232"><paramref name="item" /> is already in the collection.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-233">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-233">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteBase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteBase Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As RouteBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteBase ^ default[System::String ^] { System::Web::Routing::RouteBase ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Routing.RouteBase" Usage="System.Web.Routing.RouteCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="85132-234">标识要获取的路由的值。</span><span class="sxs-lookup"><span data-stu-id="85132-234">The value that identifies the route to get.</span></span></param>
        <summary><span data-ttu-id="85132-235">获取具有指定名称的集合中的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-235">Gets the route in the collection that has the specified name.</span></span></summary>
        <value><span data-ttu-id="85132-236">具有指定名称的对象（或者如果 <paramref name="name" /> 为 <see langword="null" />，则 <see langword="null" />）为空字符串，或与集合中的任何路由均不匹配。</span><span class="sxs-lookup"><span data-stu-id="85132-236">An object that has the specified name, or <see langword="null" /> if <paramref name="name" /> is <see langword="null" />, is an empty string, or does not match any route in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-237">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法确保与集合进行交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-237">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-238">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-238">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LowercaseUrls">
      <MemberSignature Language="C#" Value="public bool LowercaseUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowercaseUrls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property LowercaseUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LowercaseUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LowercaseUrls : bool with get, set" Usage="System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85132-239">获取或设置指示标准化虚拟路径时是否将 URL 转换为小写的值。</span><span class="sxs-lookup"><span data-stu-id="85132-239">Gets or sets a value that indicates whether URLs are converted to lower case when virtual paths are normalized.</span></span></summary>
        <value><span data-ttu-id="85132-240">将 URL 转换为小写，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85132-240"><see langword="true" /> to convert URLs to lower case; otherwise <see langword="false" />.</span></span> <span data-ttu-id="85132-241">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85132-241">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-242">如果 URL 中包含了查询字符串，则 URL 的此部分不会转换为小写。</span><span class="sxs-lookup"><span data-stu-id="85132-242">If a query string is included in the URL, that part of the URL is not converted to lower case.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPageRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85132-243">提供用于定义 Web 窗体应用程序的路由的方法。</span><span class="sxs-lookup"><span data-stu-id="85132-243">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-244">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="85132-244">This method is provided for coding convenience.</span></span> <span data-ttu-id="85132-245">它等效于调用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法并传递 <xref:System.Web.Routing.Route> 使用类创建的对象 <xref:System.Web.Routing.PageRouteHandler> 。</span><span class="sxs-lookup"><span data-stu-id="85132-245">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="85132-246">下面的示例演示如何使用此方法为 Web 窗体应用程序定义路由。</span><span class="sxs-lookup"><span data-stu-id="85132-246">The following example shows how to define routes for a Web Forms application by using this method.</span></span> <span data-ttu-id="85132-247">该示例显示了一个名为 `RegisterRoutes` 的方法，该方法 `Application_Start` 在 global.asax 文件中从调用。</span><span class="sxs-lookup"><span data-stu-id="85132-247">The example shows a method named `RegisterRoutes` that is called from `Application_Start` in the Global.asax file.</span></span> <span data-ttu-id="85132-248">方法使用的每个重载 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 将路由添加到应用程序。</span><span class="sxs-lookup"><span data-stu-id="85132-248">The method uses each overload of <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> to add a route to the application.</span></span> <span data-ttu-id="85132-249">有关如何为 Web 窗体应用程序定义路由的详细信息，请参阅 [如何：为 Web 窗体应用程序定义路由](https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678)。</span><span class="sxs-lookup"><span data-stu-id="85132-249">For more information about how to define routes for Web Forms applications, see [How to: Define Routes for Web Forms Applications](https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#122)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#122)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-250">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-250">ASP.NET Routing</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="85132-251">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-251">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="85132-252">路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-252">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="85132-253">路由的物理 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-253">The physical URL for the route.</span></span></param>
        <summary><span data-ttu-id="85132-254">提供用于定义 Web 窗体应用程序的路由的方法。</span><span class="sxs-lookup"><span data-stu-id="85132-254">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="85132-255">将添加到路由集合的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-255">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-256">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="85132-256">This method is provided for coding convenience.</span></span> <span data-ttu-id="85132-257">它等效于调用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法并传递 <xref:System.Web.Routing.Route> 使用类创建的对象 <xref:System.Web.Routing.PageRouteHandler> 。</span><span class="sxs-lookup"><span data-stu-id="85132-257">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="85132-258">下面的示例演示如何使用此方法定义路由。</span><span class="sxs-lookup"><span data-stu-id="85132-258">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="85132-259">第一个语句定义没有名称的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-259">The first statement defines a route that does not have a name.</span></span> <span data-ttu-id="85132-260">第二个语句定义命名路由。</span><span class="sxs-lookup"><span data-stu-id="85132-260">The second statement defines a named route.</span></span> <span data-ttu-id="85132-261">此示例是方法概述中提供的一个更大示例的一部分 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-261">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#140)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#140)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-262">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-262">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="85132-263">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-263">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="85132-264">路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-264">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="85132-265">路由的物理 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-265">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="85132-266">一个值，该值指示 ASP.NET 是否应验证用户是否有权访问物理 URL（始终会检查路由 URL）。</span><span class="sxs-lookup"><span data-stu-id="85132-266">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="85132-267">此参数设置 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="85132-267">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <summary><span data-ttu-id="85132-268">提供用于定义 Web 窗体应用程序的路由的方法。</span><span class="sxs-lookup"><span data-stu-id="85132-268">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="85132-269">将添加到路由集合的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-269">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-270">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="85132-270">This method is provided for coding convenience.</span></span> <span data-ttu-id="85132-271">它等效于调用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法并传递 <xref:System.Web.Routing.Route> 使用类创建的对象 <xref:System.Web.Routing.PageRouteHandler> 。</span><span class="sxs-lookup"><span data-stu-id="85132-271">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="85132-272">下面的示例演示如何使用此方法定义路由。</span><span class="sxs-lookup"><span data-stu-id="85132-272">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="85132-273">此示例是方法概述中提供的一个更大示例的一部分 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-273">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#145)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#145)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-274">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-274">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="85132-275">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-275">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="85132-276">路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-276">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="85132-277">路由的物理 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-277">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="85132-278">一个值，该值指示 ASP.NET 是否应验证用户是否有权访问物理 URL（始终会检查路由 URL）。</span><span class="sxs-lookup"><span data-stu-id="85132-278">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="85132-279">此参数设置 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="85132-279">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <param name="defaults"><span data-ttu-id="85132-280">路由参数的默认值。</span><span class="sxs-lookup"><span data-stu-id="85132-280">Default values for the route parameters.</span></span></param>
        <summary><span data-ttu-id="85132-281">提供用于定义 Web 窗体应用程序的路由的方法。</span><span class="sxs-lookup"><span data-stu-id="85132-281">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="85132-282">将添加到路由集合的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-282">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-283">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="85132-283">This method is provided for coding convenience.</span></span> <span data-ttu-id="85132-284">它等效于调用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法并传递 <xref:System.Web.Routing.Route> 使用类创建的对象 <xref:System.Web.Routing.PageRouteHandler> 。</span><span class="sxs-lookup"><span data-stu-id="85132-284">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="85132-285">下面的示例演示如何使用此方法定义路由。</span><span class="sxs-lookup"><span data-stu-id="85132-285">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="85132-286">此示例是方法概述中提供的一个更大示例的一部分 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-286">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#150)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#150)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-287">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-287">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="85132-288">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-288">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="85132-289">路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-289">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="85132-290">路由的物理 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-290">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="85132-291">一个值，该值指示 ASP.NET 是否应验证用户是否有权访问物理 URL（始终会检查路由 URL）。</span><span class="sxs-lookup"><span data-stu-id="85132-291">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="85132-292">此参数设置 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="85132-292">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <param name="defaults"><span data-ttu-id="85132-293">路由的默认值。</span><span class="sxs-lookup"><span data-stu-id="85132-293">Default values for the route.</span></span></param>
        <param name="constraints"><span data-ttu-id="85132-294">一些约束，URL 请求必须满足这些约束才能作为此路由处理。</span><span class="sxs-lookup"><span data-stu-id="85132-294">Constraints that a URL request must meet in order to be processed as this route.</span></span></param>
        <summary><span data-ttu-id="85132-295">提供用于定义 Web 窗体应用程序的路由的方法。</span><span class="sxs-lookup"><span data-stu-id="85132-295">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="85132-296">将添加到路由集合的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-296">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-297">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="85132-297">This method is provided for coding convenience.</span></span> <span data-ttu-id="85132-298">它等效于调用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法并传递 <xref:System.Web.Routing.Route> 使用类创建的对象 <xref:System.Web.Routing.PageRouteHandler> 。</span><span class="sxs-lookup"><span data-stu-id="85132-298">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="85132-299">下面的示例演示如何使用此方法定义路由。</span><span class="sxs-lookup"><span data-stu-id="85132-299">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="85132-300">此示例是方法概述中提供的一个更大示例的一部分 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-300">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#155)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#155)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-301">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-301">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints, dataTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="physicalFile" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="85132-302">路由的名称。</span><span class="sxs-lookup"><span data-stu-id="85132-302">The name of the route.</span></span></param>
        <param name="routeUrl"><span data-ttu-id="85132-303">路由的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-303">The URL pattern for the route.</span></span></param>
        <param name="physicalFile"><span data-ttu-id="85132-304">路由的物理 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-304">The physical URL for the route.</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="85132-305">一个值，该值指示 ASP.NET 是否应验证用户是否有权访问物理 URL（始终会检查路由 URL）。</span><span class="sxs-lookup"><span data-stu-id="85132-305">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span></span> <span data-ttu-id="85132-306">此参数设置 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="85132-306">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span></span></param>
        <param name="defaults"><span data-ttu-id="85132-307">路由参数的默认值。</span><span class="sxs-lookup"><span data-stu-id="85132-307">Default values for the route parameters.</span></span></param>
        <param name="constraints"><span data-ttu-id="85132-308">一些约束，URL 请求必须满足这些约束才能作为此路由处理。</span><span class="sxs-lookup"><span data-stu-id="85132-308">Constraints that a URL request must meet in order to be processed as this route.</span></span></param>
        <param name="dataTokens"><span data-ttu-id="85132-309">与路由关联的值，但这些值不用于确定路由是否匹配 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="85132-309">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</span></span></param>
        <summary><span data-ttu-id="85132-310">提供用于定义 Web 窗体应用程序的路由的方法。</span><span class="sxs-lookup"><span data-stu-id="85132-310">Provides a way to define routes for Web Forms applications.</span></span></summary>
        <returns><span data-ttu-id="85132-311">将添加到路由集合的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-311">The route that is added to the route collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-312">提供此方法是为了便于编码。</span><span class="sxs-lookup"><span data-stu-id="85132-312">This method is provided for coding convenience.</span></span> <span data-ttu-id="85132-313">它等效于调用 <xref:System.Web.Routing.RouteCollection.Add%2A> 方法并传递 <xref:System.Web.Routing.Route> 使用类创建的对象 <xref:System.Web.Routing.PageRouteHandler> 。</span><span class="sxs-lookup"><span data-stu-id="85132-313">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>



## Examples
 <span data-ttu-id="85132-314">下面的示例演示如何使用此方法定义路由。</span><span class="sxs-lookup"><span data-stu-id="85132-314">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="85132-315">此示例是方法概述中提供的一个更大示例的一部分 <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> 。</span><span class="sxs-lookup"><span data-stu-id="85132-315">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>

 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#160)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#160)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85132-316"><paramref name="routeUrl" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-316">The <paramref name="routeUrl" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-317">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-317">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="routeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="85132-318">要删除的路由的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="85132-318">The zero-based index of the route to remove.</span></span></param>
        <summary><span data-ttu-id="85132-319">从 <see cref="T:System.Web.Routing.RouteCollection" /> 对象的指定索引处删除路由。</span><span class="sxs-lookup"><span data-stu-id="85132-319">Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-320">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法确保与集合进行交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-320">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-321">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-321">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85132-322">获取或设置一个值，它指示 ASP.NET 路由是否应处理与现有文件匹配的 URL。</span><span class="sxs-lookup"><span data-stu-id="85132-322">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span></span></summary>
        <value><span data-ttu-id="85132-323">如果 ASP.NET 路由处理所有请求（即使与现有文件匹配的请求），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85132-323"><see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="85132-324">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85132-324">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-325">尽管此值可以动态更改，但在激活服务后所做的任何更改都将在使用 ASP.NET 路由集成时被忽略。</span><span class="sxs-lookup"><span data-stu-id="85132-325">Although this value can be changed dynamically, any change made after a service has been activated will be ignored when using ASP.NET routing integration.</span></span> <span data-ttu-id="85132-326">有关详细信息，请参阅 [ASP.NET 路由集成](https://go.microsoft.com/fwlink/?LinkId=195235)。</span><span class="sxs-lookup"><span data-stu-id="85132-326">For more information, see [ASP.NET Routing Integration](https://go.microsoft.com/fwlink/?LinkId=195235).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-327">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-327">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="85132-328">待替换的路由的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="85132-328">The zero-based index of the route to replace.</span></span></param>
        <param name="item"><span data-ttu-id="85132-329">将在指定索引处添加的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-329">The route to add at the specified index.</span></span></param>
        <summary><span data-ttu-id="85132-330">替换指定索引处的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-330">Replaces the route at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="85132-331">将未命名的路由添加到 <xref:System.Web.Routing.RouteCollection> 对象时，无法添加集合中已经存在的路由。</span><span class="sxs-lookup"><span data-stu-id="85132-331">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>

 <span data-ttu-id="85132-332">使用 <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> 方法和 <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> 方法确保与集合进行交互，而不会与其他进程发生冲突。</span><span class="sxs-lookup"><span data-stu-id="85132-332">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85132-333"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85132-333"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85132-334"><paramref name="item" /> 已在集合中。</span><span class="sxs-lookup"><span data-stu-id="85132-334"><paramref name="item" /> is already in the collection.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="85132-335">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="85132-335">ASP.NET Routing</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
