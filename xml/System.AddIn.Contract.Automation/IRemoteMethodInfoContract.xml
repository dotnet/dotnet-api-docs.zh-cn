<Type Name="IRemoteMethodInfoContract" FullName="System.AddIn.Contract.Automation.IRemoteMethodInfoContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69c3f2575ffdda835da9698306fc6cdc461ae557" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78723854" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteMethodInfoContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteMethodInfoContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteMethodInfoContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteMethodInfoContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteMethodInfoContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>定义一个协定，组件可使用该协定跨应用程序域和进程边界访问有关方法的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract>表示实现接口的远程对象的方法 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 。  
  
 若要访问远程对象的一个或多个方法，请使用 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 方法获取 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> 表示远程对象的类型的。 然后调用 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> 或 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> 方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteMethodData GetMethodData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteMethodData GetMethodData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodData () As RemoteMethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteMethodData GetMethodData();" />
      <MemberSignature Language="F#" Value="abstract member GetMethodData : unit -&gt; System.AddIn.Contract.Automation.RemoteMethodData" Usage="iRemoteMethodInfoContract.GetMethodData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteMethodData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回有关此 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 标识的方法的信息。</summary>
        <returns>一个 <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" />，提供有关此 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 标识的方法的信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构提供的信息 <xref:System.AddIn.Contract.Automation.RemoteMethodData> 包括方法的返回值和参数的类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument Invoke (System.AddIn.Contract.Automation.IRemoteObjectContract target, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument Invoke(class System.AddIn.Contract.Automation.IRemoteObjectContract target, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (target As IRemoteObjectContract, bindingFlags As BindingFlags, parameters As IRemoteArgumentArrayContract, localeId As Integer) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument Invoke(System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ parameters, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : System.AddIn.Contract.Automation.IRemoteObjectContract * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteMethodInfoContract.Invoke (target, bindingFlags, parameters, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="parameters" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />，标识包含要调用的方法的对象。</param>
        <param name="bindingFlags"><see cref="T:System.Reflection.BindingFlags" /> 值的一个按位组合，用于指定调用方法的方式。</param>
        <param name="parameters">一个指定方法参数的 <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />；如果方法不具有任何参数，则为 <see langword="null" />。</param>
        <param name="localeId">方法在参数或返回值的任何区域设置特定的类型转换中将使用的区域设置 ID。</param>
        <summary>调用此 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 标识的方法。</summary>
        <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" />，指定已调用方法的返回值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的方法没有返回值（例如，该方法是构造函数），则将 <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke%2A> 返回一个默认值， <xref:System.AddIn.Contract.RemoteArgument> 其中 <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> 属性设置为值 <xref:System.AddIn.Contract.RemoteArgumentKind.Missing?displayProperty=nameWithType> ， <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> 属性设置为值 <xref:System.TypeCode.Empty?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
