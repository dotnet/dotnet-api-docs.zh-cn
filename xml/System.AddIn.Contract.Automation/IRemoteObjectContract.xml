<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="831992608cc45d7411406940c9eaf8c6849ba920" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69343285" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>定义一个协定，组件可使用该协定跨应用程序域和进程边界访问对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 类型上实现时，组件可以使用协定来访问类型的对象的类型信息。 组件通过调用方法来访问类型信息 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 以获取 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> 。 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>接口定义一个协定，组件可使用该协定访问特定类型和成员信息，以及调用成员。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />，它指定当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 的类型。</summary>
        <returns>一个 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />，它指定当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 的类型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 方法可访问当前标识的远程对象的成员 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">要将对象强制转换成的类型的规范名称。</param>
        <summary>将当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 标识的对象强制转换为指定类型。</summary>
        <returns>一个 <see cref="T:System.AddIn.Contract.RemoteArgument" />，表示强制转换操作的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 规范名称是全局唯一名称，如 GUID。 建议使用格式的 \<*assembly name*> 字符串 \<*fully qualified type name*> 。 建议的规范名称格式的一个示例是 "ShapeApp，VisualStudio，ShapeApp" 的示例。  
  
 在组件中发布类型后，类型的规范名称无法更改。 更改组件的未来版本中类型的规范名称会断开组件与已使用该类型的客户端之间的兼容性。  
  
 建议 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> <xref:System.InvalidCastException> 在转换操作失败时，实现引发。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
