<Type Name="IStateRuntime" FullName="System.Web.SessionState.IStateRuntime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed45f82699b04f3e81b99f1766f987a9d1acc9b7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86665949" /></Metadata><TypeSignature Language="C#" Value="public interface IStateRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateRuntime" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.IStateRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateRuntime" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStateRuntime" />
  <TypeSignature Language="F#" Value="type IStateRuntime = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义 ASP.NET 状态服务管理会话数据所使用的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 可以使用称为 ASP.NET 状态服务的 Windows 服务管理进程外会话状态。 <xref:System.Web.SessionState.StateRuntime>此服务中的非托管代码使用类来管理会话数据。 此类支持 ASP.NET 状态服务的 .NET Framework 基础结构实现，不应在代码中直接使用。

 使用 ASP.NET 状态服务不是在 ASP.NET 中管理 sessionstate 的默认方法;默认情况下，ASP.NET 支持进程内会话状态管理。 它还支持第二个进程外选项，该选项管理 Microsoft SQL Server 数据库中的会话状态，并启用自定义会话状态管理解决方案。 有关会话状态存储选项的详细信息，请参阅 [会话状态模式](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))。

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="ProcessRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>由 ASP.NET 状态服务器用于处理会话数据。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest([in]native int tracker, [in]int32 verb, [in]string uri, [in]int32 exclusive, [in]int32 timeout, [in]int32 lockCookieExists, [in]int32 lockCookie, [in]int32 contentLength, [in]native int content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (tracker As IntPtr, verb As Integer, uri As String, exclusive As Integer, timeout As Integer, lockCookieExists As Integer, lockCookie As Integer, contentLength As Integer, content As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(IntPtr tracker, int verb, System::String ^ uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : nativeint * int * string * int * int * int * int * int * nativeint -&gt; unit" Usage="iStateRuntime.ProcessRequest (tracker, verb, uri, exclusive, timeout, lockCookieExists, lockCookie, contentLength, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" />
        <Parameter Name="verb" Type="System.Int32" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="exclusive" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="lockCookieExists" Type="System.Int32" />
        <Parameter Name="lockCookie" Type="System.Int32" />
        <Parameter Name="contentLength" Type="System.Int32" />
        <Parameter Name="content" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tracker">指向存储在非托管 ASP.NET 状态服务器中的某个对象的 <see cref="T:System.IntPtr" /> 指针。</param>
        <param name="verb">要对该对象执行的操作。</param>
        <param name="uri">会话的标识符。</param>
        <param name="exclusive">存储区中的对象的访问类型。</param>
        <param name="timeout">存储会话数据的分钟数。</param>
        <param name="lockCookieExists">指示在从 ASP.NET Web 服务器到 ASP.NET 状态服务器的原始请求中是否存在锁 Cookie 的值。</param>
        <param name="lockCookie">会话状态上的锁的所有者。</param>
        <param name="contentLength">为该会话存储的数据的长度（以字节为单位）。</param>
        <param name="content">指向非托管 ASP.NET 状态服务器中为该会话存储的内容的 <see cref="T:System.IntPtr" /> 指针。</param>
        <summary>由 ASP.NET 状态服务器用于处理会话数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 可以使用称为 ASP.NET 状态服务的 Windows 服务管理进程外会话状态。 <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>此服务中的非托管代码使用方法来管理会话数据。

 此成员支持 ASP.NET 状态服务的 .NET Framework 基础结构实现，不应在代码中直接使用。 有关会话状态存储选项的详细信息，请参阅 [会话状态模式](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest([in]native int tracker, [in]int32 verb, [in]string uri, [in]int32 exclusive, [in]int32 extraFlags, [in]int32 timeout, [in]int32 lockCookieExists, [in]int32 lockCookie, [in]int32 contentLength, [in]native int content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (tracker As IntPtr, verb As Integer, uri As String, exclusive As Integer, extraFlags As Integer, timeout As Integer, lockCookieExists As Integer, lockCookie As Integer, contentLength As Integer, content As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(IntPtr tracker, int verb, System::String ^ uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : nativeint * int * string * int * int * int * int * int * int * nativeint -&gt; unit" Usage="iStateRuntime.ProcessRequest (tracker, verb, uri, exclusive, extraFlags, timeout, lockCookieExists, lockCookie, contentLength, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="verb" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="uri" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exclusive" Type="System.Int32" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="extraFlags" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockCookieExists" Type="System.Int32" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockCookie" Type="System.Int32" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="contentLength" Type="System.Int32" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="content" Type="System.IntPtr" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="tracker">指向存储在非托管 ASP.NET 状态服务器中的某个对象的 <see cref="T:System.IntPtr" /> 指针。</param>
        <param name="verb">要对该对象执行的操作。</param>
        <param name="uri">会话的标识符。</param>
        <param name="exclusive">存储区中的对象的访问类型。</param>
        <param name="extraFlags">指示当前会话是否为未初始化和无 Cookie 的会话的值。</param>
        <param name="timeout">存储会话数据的分钟数。</param>
        <param name="lockCookieExists">指示在从 ASP.NET Web 服务器到 ASP.NET 状态服务器的原始请求中是否存在锁 Cookie 的值。</param>
        <param name="lockCookie">会话状态上的锁的所有者。</param>
        <param name="contentLength">为该会话存储的数据的长度（以字节为单位）。</param>
        <param name="content">指向非托管 ASP.NET 状态服务器中为该会话存储的内容的 <see cref="T:System.IntPtr" /> 指针。</param>
        <summary>由 ASP.NET 状态服务器用于处理会话数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 可以使用称为 ASP.NET 状态服务的 Windows 服务管理进程外会话状态。 <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>此服务中的非托管代码使用方法来管理会话数据。

 此成员支持 ASP.NET 状态服务的 .NET Framework 基础结构实现，不应在代码中直接使用。 有关会话状态存储选项的详细信息，请参阅 [会话状态模式](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="StopProcessing">
      <MemberSignature Language="C#" Value="public void StopProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.StopProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopProcessing();" />
      <MemberSignature Language="F#" Value="abstract member StopProcessing : unit -&gt; unit" Usage="iStateRuntime.StopProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止对存储在 ASP.NET 状态服务器中的会话数据的处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 可以使用称为 ASP.NET 状态服务的 Windows 服务管理进程外会话状态。 <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A>此服务中的非托管代码使用方法来停止处理会话数据。 提供此成员是为了支持 ASP.NET 状态服务的 .NET Framework 基础结构实现，不应在代码中直接使用。 有关会话状态存储选项的详细信息，请参阅 [会话状态模式](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
