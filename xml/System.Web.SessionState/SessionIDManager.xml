<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81870fc307435da3f0e6668c9231318a9f638cd7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89914059" /></Metadata><TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionIDManager&#xA;Implements ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionIDManager : System::Web::SessionState::ISessionIDManager" />
  <TypeSignature Language="F#" Value="type SessionIDManager = class&#xA;    interface ISessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>管理 ASP.NET 会话状态的唯一标识符。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.SessionState.SessionIDManager>类是一个 HTTP 模块，它管理用于 ASP.NET 会话状态的唯一会话标识符。 ASP.NET 会话的唯一标识符是 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 属性，该属性可从 <xref:System.Web.HttpContext.Session%2A> 当前或的属性访问 <xref:System.Web.HttpContext> <xref:System.Web.UI.Page> 。 ASP.NET 会话标识符是随机生成的数字，编码为24个字符的字符串，由从 a 到 z 的小写字符和从0到5的数字组成。

 默认情况下，此 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值随每个请求发送到 ASP.NET 应用程序。 包含该值的 cookie 的名称 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 为 .asp。默认情况下 NET_SessionId。 可以通过将 SessionState 元素的属性设置为所需的 cookie 名称，来配置不同的 cookie 名称 `cookieName` [ (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v=vs.100)) 。

 如果要禁止在 ASP.NET 应用程序中使用 cookie 并仍使用会话状态，则可以将应用程序配置为在 URL 而不是 cookie 中存储会话标识符，方法是 `cookieless` `sessionState` `true` 在应用程序的 Web.config 文件中将元素的属性设置为。 有关更多信息，请参见 <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A> 属性。

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>您可以通过创建继承类的类 <see cref="T:System.Web.SessionState.SessionIDManager" /> 并 <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> 使用您自己的自定义实现来重写和方法，来将 ASP.NET 会话标识符替换为您自己的自定义会话标识符。 有关替代 <see cref="T:System.Web.SessionState.SessionIDManager" /> 类和实现这些方法的示例，请参阅为方法提供的示例 <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> 。

您可以 <see cref="T:System.Web.SessionState.SessionIDManager" /> 通过创建实现接口的类来将整个与自定义会话 ID 管理器替换 <see cref="T:System.Web.SessionState.ISessionIDManager" /> 。 如果自定义会话 ID 管理器支持无 cookie 会话标识符，你将需要实现用于在 URL 中发送和检索会话标识符的解决方案，如 ISAPI 筛选器。 有关创建自定义会话 ID 管理器的详细信息，请参阅 <see cref="T:System.Web.SessionState.ISessionIDManager" /> 。</para></block>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398986(v=vs.100)">HTTP 处理程序和 HTTP 模块概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionIDManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.SessionState.SessionIDManager" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此构造函数不应从应用程序代码调用。

 ASP.NET 调用此构造函数以创建类的实例 <xref:System.Web.SessionState.SessionIDManager> 。 调用构造函数后，ASP.NET 调用 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> 方法来初始化新的 <xref:System.Web.SessionState.SessionIDManager> 对象。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string&#xA;override this.CreateSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <summary>创建会话的唯一会话标识符。</summary>
        <returns>唯一会话标识符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法返回唯一会话标识符，该标识符是一个随机生成的数字，该数字编码为24个字符的字符串，其中包含从 a 到 z 的小写字符和从0到5的数字。



## Examples
 下面的代码示例演示一个类，该类继承 <xref:System.Web.SessionState.SessionIDManager> 类，并 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> <xref:System.Web.SessionState.SessionIDManager.Validate%2A> 使用提供并验证作为的方法来重写和方法 <xref:System.Guid> <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 。

 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]

 若要使用本示例中演示的自定义类，请将 SessionState 元素的 sessionIDManagerType 属性配置 [ (ASP.NET Settings Schema) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v=vs.100)) 元素，如下面的示例中所示。

```
<sessionState
  Mode="InProc"
  stateConnectionString="tcp=127.0.0.1:42424"
  stateNetworkTimeout="10"
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"
  sqlCommandTimeout="30"
  customProvider=""
  cookieless="false"
  regenerateExpiredSessionId="false"
  timeout="20"
  sessionIDManagerType="Your.ID.Manager.Type,
    CustomAssemblyNameInBinFolder"
/>
```

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>可以通过创建继承类的类 <see cref="T:System.Web.SessionState.SessionIDManager" /> 并将 <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> 和 <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> 方法替换为自己的自定义实现，来提供 ASP.NET 会话状态要使用的自定义会话标识符。 如果自定义会话 ID 不满足方法的默认实现所强制的字符约束 <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> ，则应重写 <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> 方法以提供自定义会话标识符的验证。 在这种情况下， <see cref="T:System.Web.SessionState.SessionIDManager" /> 类将确保自定义会话标识符在 http 响应中进行 url 编码，并分别使用和方法从 http 请求解码 url <see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" /> <see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" /> 。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Decode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Decode : string -&gt; string&#xA;override this.Decode : string -&gt; string" Usage="sessionIDManager.Decode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要解码的会话标识符。</param>
        <summary>对从 Cookie 或 URL 获取的 URL 编码会话标识符进行解码。</summary>
        <returns>已解码的会话标识符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 此方法由类在内部使用， <xref:System.Web.SessionState.SessionIDManager> 以对 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 继承类的类创建的自定义值进行解码 <xref:System.Web.SessionState.SessionIDManager> 并重写 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 和 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> 方法。 若要确保通过方法从 HTTP 请求中检索到的自定义会话标识符值的保真度 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> ，请 <xref:System.Web.SessionState.SessionIDManager> 使用方法对自定义值进行解码 <xref:System.Web.HttpUtility.UrlDecode%2A> 。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>有关继承 <see cref="T:System.Web.SessionState.SessionIDManager" /> 类并重写和方法的类的示例 <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> ，请参阅为方法提供的示例 <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> 。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="sessionIDManager.Encode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要编码的会话标识符。</param>
        <summary>对保存到 Cookie 或 URL 的会话标识符进行编码。</summary>
        <returns>已编码的会话标识符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 此方法由类在内部使用， <xref:System.Web.SessionState.SessionIDManager> 用于对 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 继承类的类创建的自定义值进行编码 <xref:System.Web.SessionState.SessionIDManager> ，并重写 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 和 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> 方法。 若要确保通过方法存储在 HTTP 响应中的自定义会话标识符值的保真度 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> ，请 <xref:System.Web.SessionState.SessionIDManager> 使用方法对自定义值进行编码 <xref:System.Web.HttpUtility.UrlEncode%2A> 。

 有关继承 <xref:System.Web.SessionState.SessionIDManager> 类并重写和方法的类的示例 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> <xref:System.Web.SessionState.SessionIDManager.Validate%2A> ，请参见 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 方法。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string&#xA;override this.GetSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <summary>从当前 Web 请求获取会话标识符值。</summary>
        <returns>当前的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 在 <xref:System.Web.SessionState.SessionStateModule> <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> 事件中调用方法 <xref:System.Web.HttpApplication.AcquireRequestState> ，以便 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 从当前检索 <xref:System.Web.HttpRequest> 。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">从 HTTP 请求检索到的会话标识符值的长度超过了 <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> 值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="sessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Initialize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用配置文件中的信息初始化 <see cref="T:System.Web.SessionState.SessionIDManager" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A>方法从配置文件的[sessionState 元素 (ASP.NET Settings Schema) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v=vs.100))配置元素读取会话配置数据。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool * bool -&gt; bool&#xA;override this.InitializeRequest : System.Web.HttpContext * bool * bool -&gt; bool" Usage="sessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">包含有关当前请求的信息的 <see cref="T:System.Web.HttpContext" /> 对象。</param>
        <param name="suppressAutoDetectRedirect"><see langword="true" /> 表示进行重定向以确定 Cookie 支持；否则为 <see langword="false" />，表示禁止自动重定向以确定 Cookie 支持。</param>
        <param name="supportSessionIDReissue">该方法返回时会包含一个布尔值，指示原始 ID 过期后 <see cref="T:System.Web.SessionState.SessionIDManager" /> 对象是否支持发出新的会话 ID。 此参数未经初始化即被传递。</param>
        <summary>针对每个请求执行 <see cref="T:System.Web.SessionState.SessionIDManager" /> 对象的初始化。</summary>
        <returns><see langword="true" /> 指示 <see cref="T:System.Web.SessionState.SessionIDManager" /> 对象已进行重定向以确定 Cookie 支持；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 `cookieless` 元素的属性 `sessionState` 设置为时 `AutoDetect` ， <xref:System.Web.SessionState.SessionIDManager> 对象将重定向到同一路径，以确定连接浏览器是否支持 cookie。 如果 `suppressAutoDetectRedirect` 参数为 `false` ，则服务器不会执行此重定向。

 `supportSessionIDReissue` `false` 如果请求使用 cookie 进行会话标识，则将返回参数。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit&#xA;override this.RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="sessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <summary>从 HTTP 响应中删除会话标识符 Cookie。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 在 <xref:System.Web.SessionState.SessionStateModule> <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> 事件中调用方法 <xref:System.Web.HttpApplication.ReleaseRequestState> ，以从的集合中移除会话标识符 <xref:System.Web.HttpResponse.Cookies%2A> （ <xref:System.Web.HttpResponse> 如果创建了新的会话但未使用）。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string * bool * bool -&gt; unit&#xA;override this.SaveSessionID : System.Web.HttpContext * string * bool * bool -&gt; unit" Usage="sessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">引用用于处理 HTTP 请求（例如，<see cref="T:System.Web.HttpContext" /> 和 <see cref="P:System.Web.HttpContext.Request" /> 属性）的服务器对象的当前 <see cref="P:System.Web.HttpContext.Response" /> 对象。</param>
        <param name="id">会话标识符。</param>
        <param name="redirected">该方法返回时，如果响应重定向到当前 URL（会话标识符已添加至该 URL），则包含布尔值 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="cookieAdded">该方法返回时，如果 Cookie 已添加至 HTTP 响应，则包含布尔值 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将新创建的会话标识符保存到 HTTP 响应。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 此 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> 方法在 <xref:System.Web.SessionState.SessionStateModule> 事件期间由对象调用 <xref:System.Web.HttpApplication.AcquireRequestState> 。 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>当使用无 cookie 会话状态时，该方法会将会话标识符存储在 URL (中) 或在未过期的会话 cookie 中。

 默认情况下，将 <xref:System.Web.SessionState.SessionIDManager> 唯一会话标识符放入非过期会话 cookie，并将参数设置 `cookieAdded` 为 `true` 。

 对于无 cookie 会话状态，对象会在 <xref:System.Web.SessionState.SessionIDManager> 当前 url 中插入唯一会话标识符，将浏览器重定向到包含会话标识符的新 url，然后将 `redirected` 参数设置为 `true` 。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">响应已发送。

 - 或 -

 传递给此方法的会话 ID 验证失败。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SessionIDMaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SessionIDMaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDMaxLength : int" Usage="System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有效会话标识符的最大长度。</summary>
        <value>有效会话标识符的最大长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 会话标识符的最大长度为80个字符。

 尽管方法创建的会话标识符 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 长度为24个字符，但类允许的会话标识符的最大长度 <xref:System.Web.SessionState.SessionIDManager> 为80个字符。 如果实现自定义，这一点特别重要 <xref:System.Web.SessionState.SessionIDManager> 。 此 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> 方法从当前检索会话标识符值 <xref:System.Web.HttpRequest> ，确保值不 <xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A> 会超出该值，并且会话标识符是一个24个字符的字符串，该字符串仅包含小写字符 a 到 z，而数字0到5（通过调用 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> 方法）。 如果实现的自定义 <xref:System.Web.SessionState.SessionIDManager> 类继承 <xref:System.Web.SessionState.SessionIDManager> 类并重写 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 方法，但不重写方法 <xref:System.Web.SessionState.SessionIDManager.Validate%2A> ，则自定义会话标识符值必须满足上述约束。 有关替代 <xref:System.Web.SessionState.SessionIDManager> 类和实现这些方法的示例，请参阅为方法提供的示例 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> 。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool&#xA;override this.Validate : string -&gt; bool" Usage="sessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Validate(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要验证的会话标识符。</param>
        <summary>获取一个值，该值指示会话标识符是否有效。</summary>
        <returns>如果会话标识符有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法不应从应用程序代码调用。

 <xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法验证所提供的 `id` 是否为24个字符的字符串，该字符串包含从 a 到 z 的小写字符和从0到5的数字，以及会话 ID 的最大长度不超过80个字符。

 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> <xref:System.Web.SessionState.SessionIDManager.Validate%2A> 从 HTTP 请求检索会话标识符时，方法会调用方法，以确保提供的会话标识符的格式正确。



## Examples
 下面的代码示例演示一个类，该类继承 <xref:System.Web.SessionState.SessionIDManager> 类，并 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> <xref:System.Web.SessionState.SessionIDManager.Validate%2A> 使用提供并验证作为的方法来重写和方法 <xref:System.Guid> <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 。

 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]

 若要使用此示例中演示的自定义类，请将 `SessionID` Web.config 文件中的 HTTP 模块替换为自定义类，如下面的示例中所示。

```
<httpModules>
  <remove name="SessionID" />
  <add name="SessionID"
       type="Samples.AspNet.Session.GuidSessionIDManager" />
</httpModules>
```

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>通过创建继承类的类 <see cref="T:System.Web.SessionState.SessionIDManager" /> ，并 <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> 使用自己的自定义实现重写和方法，可以提供要由 ASP.NET 会话状态使用的自定义会话标识符。 即使在创建自定义会话标识符时，此会话 ID 也会被类限制为80个字符 <see cref="T:System.Web.SessionState.SessionIDManager" /> 。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
