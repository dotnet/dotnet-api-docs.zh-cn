<Type Name="DequeEnumeratorBase&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.DequeEnumeratorBase&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0cdb7a2285c7ae1733cbd6775d2ea57bf8a7870" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86708030" /></Metadata><TypeSignature Language="C#" Value="public class DequeEnumeratorBase&lt;TValue&gt; : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DequeEnumeratorBase`1&lt;TValue&gt; extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DequeEnumeratorBase(Of TValue)&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class DequeEnumeratorBase : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type DequeEnumeratorBase&lt;'Value&gt; = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1038")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1038")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary><span data-ttu-id="1eb0a-101">支持对实现 <see cref="T:Microsoft.VisualC.StlClr.IDeque`1" /> 接口的任何 STL/CLR 对象执行简单迭代。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-101">Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IDeque`1" /> interface.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DequeEnumeratorBase (Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt; _Cont, int _First);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.IDeque`1&lt;!TValue&gt; _Cont, int32 _First) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Cont As IDeque(Of TValue), _First As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DequeEnumeratorBase(Microsoft::VisualC::StlClr::IDeque&lt;TValue&gt; ^ _Cont, int _First);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.DequeEnumeratorBase&lt;'Value&gt; : Microsoft.VisualC.StlClr.IDeque&lt;'Value&gt; * int -&gt; Microsoft.VisualC.StlClr.DequeEnumeratorBase&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.DequeEnumeratorBase&lt;'Value&gt; (_Cont, _First)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_Cont" Type="Microsoft.VisualC.StlClr.IDeque&lt;TValue&gt;" />
        <Parameter Name="_First" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Cont"><span data-ttu-id="1eb0a-102">要进行循环访问的容器。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-102">The container over which to iterate.</span></span></param>
        <param name="_First"><span data-ttu-id="1eb0a-103">容器中当前第一个元素的偏移量。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-103">The offset of the current first element in the container.</span></span></param>
        <summary><span data-ttu-id="1eb0a-104">分配并初始化新的 <see cref="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-104">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual object Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Current { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj with get, set" Usage="Microsoft.VisualC.StlClr.DequeEnumeratorBase&lt;'Value&gt;.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eb0a-105">获取或设置集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-105">Gets or sets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="1eb0a-106">集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-106">The current element in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="dequeEnumeratorBase.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eb0a-107">将枚举数前移到集合中的下一个元素。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-107">Advances the enumerator to the next element in the collection.</span></span></summary>
        <returns><span data-ttu-id="1eb0a-108">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-108"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dequeEnumeratorBase.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eb0a-109">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="1eb0a-109">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
