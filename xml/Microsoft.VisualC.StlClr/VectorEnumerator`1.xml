<Type Name="VectorEnumerator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.VectorEnumerator&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f354fe7e7c1fa757bdae2140ca3fb7aa27a2793" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89966618" /></Metadata><TypeSignature Language="C#" Value="public class VectorEnumerator&lt;TValue&gt; : Microsoft.VisualC.StlClr.VectorEnumeratorBase&lt;TValue&gt;, System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VectorEnumerator`1&lt;TValue&gt; extends Microsoft.VisualC.StlClr.VectorEnumeratorBase`1&lt;!TValue&gt; implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Class VectorEnumerator(Of TValue)&#xA;Inherits VectorEnumeratorBase(Of TValue)&#xA;Implements IEnumerator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class VectorEnumerator : Microsoft::VisualC::StlClr::VectorEnumeratorBase&lt;TValue&gt;, System::Collections::Generic::IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="F#" Value="type VectorEnumerator&lt;'Value&gt; = class&#xA;    inherit VectorEnumeratorBase&lt;'Value&gt;&#xA;    interface IEnumerator&lt;'Value&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.VisualC.StlClr.VectorEnumeratorBase&lt;TValue&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TValue">TValue</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="bbb5f-101">受控序列中的元素的类型。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-101">The type of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="bbb5f-102">支持对实现 <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> 接口的任何 STL/CLR 对象执行简单迭代。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-102">Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VectorEnumerator (Microsoft.VisualC.StlClr.IVector&lt;TValue&gt; _Cont, int _First);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.IVector`1&lt;!TValue&gt; _Cont, int32 _First) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Cont As IVector(Of TValue), _First As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VectorEnumerator(Microsoft::VisualC::StlClr::IVector&lt;TValue&gt; ^ _Cont, int _First);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.VectorEnumerator&lt;'Value&gt; : Microsoft.VisualC.StlClr.IVector&lt;'Value&gt; * int -&gt; Microsoft.VisualC.StlClr.VectorEnumerator&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.VectorEnumerator&lt;'Value&gt; (_Cont, _First)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="_Cont" Type="Microsoft.VisualC.StlClr.IVector&lt;TValue&gt;" />
        <Parameter Name="_First" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Cont"><span data-ttu-id="bbb5f-103">要进行循环访问的容器。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-103">The container over which to iterate.</span></span></param>
        <param name="_First"><span data-ttu-id="bbb5f-104">容器中当前第一个元素的偏移量。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-104">The offset of the current first element in the container.</span></span></param>
        <summary><span data-ttu-id="bbb5f-105">分配并初始化新的 <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-105">Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual TValue Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Current As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TValue Current { TValue get(); void set(TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Current : 'Value with get, set" Usage="Microsoft.VisualC.StlClr.VectorEnumerator&lt;'Value&gt;.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbb5f-106">获取或设置集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-106">Gets or sets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="bbb5f-107">集合中的当前元素。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-107">The current element in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bbb5f-108">释放或重置 <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 对象使用的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-108">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="vectorEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbb5f-109">释放或重置 <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 对象使用的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-109">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool );" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="vectorEnumerator.Dispose " FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="vectorEnumerator.Dispose A_0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0" />
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="bbb5f-110">释放托管对象为 <see langword="true" />；释放非托管对象为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-110"><see langword="true" /> to dispose of managed objects; <see langword="false" /> to dispose of unmanaged objects.</span></span></param>
        <param name="A_0"><span data-ttu-id="bbb5f-111">释放托管对象为 <see langword="true" />；释放非托管对象为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-111"><see langword="true" /> to dispose of managed objects; <see langword="false" /> to dispose of unmanaged objects.</span></span></param>
        <summary><span data-ttu-id="bbb5f-112">释放或重置 <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> 对象使用的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-112">Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public override bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveNext();" />
      <MemberSignature Language="F#" Value="override this.MoveNext : unit -&gt; bool" Usage="vectorEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbb5f-113">将枚举数前移到集合中的下一个元素。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-113">Advances the enumerator to the next element in the collection.</span></span></summary>
        <returns><span data-ttu-id="bbb5f-114">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-114"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="vectorEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbb5f-115">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="bbb5f-115">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
