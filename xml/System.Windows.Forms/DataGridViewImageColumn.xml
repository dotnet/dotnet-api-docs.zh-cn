<Type Name="DataGridViewImageColumn" FullName="System.Windows.Forms.DataGridViewImageColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edc50d10f131e8f46a8185db829b7cd25119d8f3" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86703233" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewImageColumn : System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewImageColumn extends System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewImageColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewImageColumn&#xA;Inherits DataGridViewColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewImageColumn : System::Windows::Forms::DataGridViewColumn" />
  <TypeSignature Language="F#" Value="type DataGridViewImageColumn = class&#xA;    inherit DataGridViewColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewImageColumn), "DataGridViewImageColumn")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewImageColumn), "DataGridViewImageColumn")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewImageColumn), "DataGridViewImageColumn.bmp")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewImageColumn), "DataGridViewImageColumn.bmp")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>承载一个 <see cref="T:System.Windows.Forms.DataGridViewImageCell" /> 对象集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewImageColumn>类是类的专用类型， <xref:System.Windows.Forms.DataGridViewColumn> 用于以逻辑方式承载显示图像的单元格。 <xref:System.Windows.Forms.DataGridViewImageColumn> <xref:System.Windows.Forms.DataGridViewImageCell> 在中，每个都与 <xref:System.Windows.Forms.DataGridViewRow> 它相交。 每个单元格都可以包含 <xref:System.Drawing.Image> 或 <xref:System.Drawing.Icon> ，具体取决于属性的值 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A?displayProperty=nameWithType> 。 显示图标对于容纳具有透明度的图像很有用。  
  
 默认情况下，空单元格显示默认错误图。 若要防止此图形显示为等于或的单元 `null` 值 <xref:System.DBNull.Value?displayProperty=nameWithType> ，请将 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType> 属性返回的单元格样式对象的属性设置 <xref:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle%2A> 为， `null` 然后再将行添加到控件中。 但这不会影响新记录的行。 若要在控件属性值为时防止错误图形显示在新记录的行中 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> `true` ，还必须在控件事件的处理程序中将单元值显式设置为， `null` <xref:System.Windows.Forms.DataGridView.RowsAdded> 或将列 <xref:System.Windows.Forms.DataGridViewImageColumn.CellTemplate%2A> 属性设置为 <xref:System.Windows.Forms.DataGridViewImageCell> 具有返回的重写属性的派生类型的实例 <xref:System.Windows.Forms.DataGridViewImageCell.DefaultNewRowValue%2A> `null` 。  
  
 此列类型的默认排序模式为 <xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用图像创建 TicTacToe 游戏。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#0)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#0)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>当从 <see cref="T:System.Windows.Forms.DataGridViewImageColumn" /> 派生类派生并向其添加新属性时，请确保重写 <see cref="M:System.Windows.Forms.DataGridViewImageColumn.Clone" /> 方法以在克隆操作过程中复制新属性。 还应调用基类的 <see cref="M:System.Windows.Forms.DataGridViewImageColumn.Clone" /> 方法，以便将基类的属性复制到新单元。</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
    <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" />
    <altmember cref="T:System.Drawing.Image" />
    <altmember cref="T:System.Drawing.Icon" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewImageColumn" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewImageColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewImageColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewImageColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewImageColumn" /> 类的新实例，配置该实例以便用于类型 <see cref="T:System.Drawing.Image" /> 的单元格值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数 <xref:System.Windows.Forms.DataGridViewImageColumn.%23ctor%28System.Boolean%29> 使用 `valuesAreIcons` 参数值调用 `false` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewImageColumn (bool valuesAreIcons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool valuesAreIcons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewImageColumn.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valuesAreIcons As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewImageColumn(bool valuesAreIcons);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewImageColumn : bool -&gt; System.Windows.Forms.DataGridViewImageColumn" Usage="new System.Windows.Forms.DataGridViewImageColumn valuesAreIcons" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valuesAreIcons" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="valuesAreIcons"><see langword="true" /> 以指示此列单元格的 <see cref="P:System.Windows.Forms.DataGridViewCell.Value" /> 属性将被设置为类型 <see cref="T:System.Drawing.Icon" /> 的值；<see langword="false" /> 以指示它们将被设置为类型 <see cref="T:System.Drawing.Image" /> 的值。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewImageColumn" /> 类的新实例，可以选择配置它以用于 <see cref="T:System.Drawing.Icon" /> 单元格值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数通过设置以下属性来初始化列。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Windows.Forms.DataGridViewImageColumn.CellTemplate%2A>|一个新 <xref:System.Windows.Forms.DataGridViewImageCell> 的，其 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> 属性初始化为 `valuesAreIcons` 参数值。|  
|<xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A>|`valuesAreIcons` 参数的值。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A> <xref:System.Windows.Forms.DataGridViewCellStyle> 由属性返回的对象的属性 <xref:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle%2A> 。|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> <xref:System.Windows.Forms.DataGridViewCellStyle> 由属性返回的对象的属性 <xref:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle%2A> 。|类型为的标准错误图形，如果为 <xref:System.Drawing.Icon> `valuesAreIcons` ，则类型为 `true` <xref:System.Drawing.Bitmap> `valuesAreIcons` `false` 。|  
  
 若要确保 <xref:System.Drawing.Icon> 正确绘制单元格值的 alpha 通道，请将此构造函数与 `valuesAreIcons` 参数值一起使用 `true` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Alignment" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="T:System.Drawing.Icon" />
        <altmember cref="T:System.Drawing.Bitmap" />
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CellTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CellTemplate As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCell ^ CellTemplate { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellTemplate : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于创建新单元格的模板。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataGridViewCell" />，列中的所有其他单元格都以它为模型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 类的构造函数将 <xref:System.Windows.Forms.DataGridViewImageColumn> 此属性初始化为新创建的 <xref:System.Windows.Forms.DataGridViewImageCell> 。  
  
> [!CAUTION]
>  更改单元模板的属性不会立即影响用户界面 (列的现有单元的 UI) 。 这些更改仅在重新生成列后才明显 (例如，通过对列进行排序或通过对方法的调用 <xref:System.Windows.Forms.DataGridView.InvalidateColumn%2A?displayProperty=nameWithType>) 进行排序。  
  
   
  
## Examples  
 下面的代码示例演示 <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A?displayProperty=nameWithType> 如何使用属性，该属性类似于此属性。 此示例是 [如何：操作 Windows 窗体 DataGridView 控件](/dotnet/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control)中的列的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#120)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">所设置的类型与类型 <see cref="T:System.Windows.Forms.DataGridViewImageCell" /> 不兼容。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="Overload:System.Windows.Forms.DataGridViewImageColumn.#ctor" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewImageColumn.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewImageColumn.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此列的一个精确副本。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示克隆的 <see cref="T:System.Windows.Forms.DataGridViewImageColumn" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以复制单元格的列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列的默认单元格样式。</summary>
        <value>作为默认样式应用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCellStyle>此属性返回的默认值具有以下初始属性值：  
  
|`DataGridViewCellStyle` 属性|默认值|  
|--------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>|如果初始属性值为，则为类型的标准错误图形 <xref:System.Drawing.Icon> <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> `true` ; 否则为类型的标准错误图形 <xref:System.Drawing.Bitmap> 。|  
  
 这些值会重写在控件的属性中指定的值 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> <xref:System.Windows.Forms.DataGridView> ，但可以被其他单元格样式属性重写。 有关详细信息，请参阅 [Windows 窗体 DataGridView 控件中的单元格样式](/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control)。  
  
 若要阻止为或单元值显示标准错误图形 `null` <xref:System.DBNull.Value?displayProperty=nameWithType> ，请 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType> 在将行添加到控件之前，将此单元格样式对象的属性设置为 `null` 或自己的错误图形。 但这不会影响新记录的行。 若要在控件属性值为时防止错误图形显示在新记录的行中 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> `true` ，还必须在控件事件的处理程序中将单元格的值显式设置为 `null` 或自己的错误图形， <xref:System.Windows.Forms.DataGridView.RowsAdded> 或将列 <xref:System.Windows.Forms.DataGridViewImageColumn.CellTemplate%2A> 属性设置为具有可 <xref:System.Windows.Forms.DataGridViewImageCell> <xref:System.Windows.Forms.DataGridViewImageCell.DefaultNewRowValue%2A> 返回 `null` 或您自己的错误图形的重写属性的派生类型的实例。  
  
 如果 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 由属性返回的对象的属性的 <xref:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle%2A> 值与类型的标准错误图形相等 <xref:System.Drawing.Bitmap> ，则将 <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> 属性值更改为 `true` 自动设置 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 为类型的标准错误图形 <xref:System.Drawing.Icon> 。 如果的 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 值与类型的标准错误图形相等，则将 <xref:System.Drawing.Icon> <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> 属性值更改为 `false` 自动设置 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 为类型的标准错误图形 <xref:System.Drawing.Bitmap> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-csharp[System.Windows.Forms.GridViewContentAlignment#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/CS/changecolumnalignment.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewContentAlignment#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/VB/changecolumnalignment.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control">Windows 窗体 DataGridView 控件中的单元格样式</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置描述列图像的字符串。</summary>
        <value>列图像的文字描述。 默认为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Windows.Forms.DataGridViewImageColumn.Description%2A> 属性来描述或属性提供的映像 <xref:System.Windows.Forms.DataGridViewImageColumn.Image%2A> <xref:System.Windows.Forms.DataGridViewImageColumn.Icon%2A> 。 此描述提供了可访问的映像替代方法。 此外，在将单元值复制到剪贴板时，还会使用描述文本。  
  
 获取或设置此属性将获取或设置 <xref:System.Windows.Forms.DataGridViewImageCell.Description%2A> 由属性返回的对象的属性 <xref:System.Windows.Forms.DataGridViewImageColumn.CellTemplate%2A> 。 设置此属性还会设置 <xref:System.Windows.Forms.DataGridViewImageCell.Description%2A> 列中每个单元的属性。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewImageColumn.Description%2A> 属性来反映图像布局。 此示例摘自 [如何：在 Windows 窗体 DataGridView 控件中处理图像列](/dotnet/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" /> 属性的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.Image" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.Icon" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.Description" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当没有设置单元格的 <see cref="P:System.Windows.Forms.DataGridViewCell.Value" /> 属性，而且单元格的 <see cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" /> 属性被设置为 <see langword="true" /> 时，获取或设置在此列的单元格中显示的图标。</summary>
        <value>要显示的 <see cref="T:System.Drawing.Icon" />。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewImageColumn.Icon%2A>属性指定当列不是数据绑定，并且单元格的属性设置为时，在不含任何值的单元格中显示的图标 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> `true` 。 对于其单元格没有关联图像的数据绑定列，将显示标准错误图形。  
  
 使用 <xref:System.Windows.Forms.DataGridViewImageColumn.Icon%2A> 属性而非 <xref:System.Windows.Forms.DataGridViewImageColumn.Image%2A> 属性可以确保正确绘制图标中的 alpha 通道。 如果要显示 <xref:System.Drawing.Image> 而不是 <xref:System.Drawing.Icon> ，请设置 <xref:System.Windows.Forms.DataGridViewImageColumn.Image%2A> 属性，并将 <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> 属性设置为 `false` 。 还可以设置 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> 单个单元格的属性，以指示该单元格是否显示 <xref:System.Windows.Forms.DataGridViewImageColumn.Image%2A> 或 <xref:System.Windows.Forms.DataGridViewImageColumn.Icon%2A> 属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.Image" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="T:System.Drawing.Icon" />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.Image" />
      <MemberSignature Language="VB.NET" Value="Public Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当没有设置单元格的 <see cref="P:System.Windows.Forms.DataGridViewCell.Value" /> 属性，而且单元格的 <see cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" /> 属性被设置为 <see langword="false" /> 时，获取或设置在此列的单元格中显示的图像。</summary>
        <value>要显示的 <see cref="T:System.Drawing.Image" />。 默认为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewImageColumn.Image%2A>属性指定当列不是数据绑定，并且单元格的属性设置为时，不包含任何值的单元格中显示的图像 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> `false` 。 对于其单元格没有关联图像的数据绑定列，将显示标准错误图形。  
  
 如果要显示 <xref:System.Drawing.Icon> 而不是 <xref:System.Drawing.Image> ，请设置 <xref:System.Windows.Forms.DataGridViewImageColumn.Icon%2A> 属性，并将 <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> 属性设置为 `true` 。 这可确保正确绘制的 alpha 通道 <xref:System.Drawing.Icon> 。 还可以设置 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> 单个单元格的属性，以指示在没有单元格值时单元格是否显示 <xref:System.Windows.Forms.DataGridViewImageColumn.Image%2A> 或 <xref:System.Windows.Forms.DataGridViewImageColumn.Icon%2A> 属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何设置默认图像。 此示例摘自 [如何：在 Windows 窗体 DataGridView 控件中处理图像列](/dotnet/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#5)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.Icon" />
        <altmember cref="T:System.Drawing.Icon" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" />
      </Docs>
    </Member>
    <Member MemberName="ImageLayout">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewImageCellLayout ImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewImageCellLayout ImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.ImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageLayout As DataGridViewImageCellLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewImageCellLayout ImageLayout { System::Windows::Forms::DataGridViewImageCellLayout get(); void set(System::Windows::Forms::DataGridViewImageCellLayout value); };" />
      <MemberSignature Language="F#" Value="member this.ImageLayout : System.Windows.Forms.DataGridViewImageCellLayout with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.ImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewImageCellLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此列的单元格中的图像布局。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewImageCellLayout" />，指定单元格布局。 默认为 <see cref="F:System.Windows.Forms.DataGridViewImageCellLayout.Normal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取或设置此属性将获取或设置 <xref:System.Windows.Forms.DataGridViewImageCell.ImageLayout%2A> 由属性返回的对象的属性 <xref:System.Windows.Forms.DataGridViewImageColumn.CellTemplate%2A> 。 设置此属性还会设置 <xref:System.Windows.Forms.DataGridViewImageCell.ImageLayout%2A> 列中每个单元格的属性，并刷新列显示。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。  
  
   
  
## Examples  
 下面的代码示例演示如何拉伸和缩放图像以适合单元格。 此示例摘自 [如何：在 Windows 窗体 DataGridView 控件中处理图像列](/dotnet/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" /> 属性的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCellLayout" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.ImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewImageColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewImageColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个描述该列的字符串。</summary>
        <returns>用于描述列的 <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ValuesAreIcons">
      <MemberSignature Language="C#" Value="public bool ValuesAreIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValuesAreIcons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons" />
      <MemberSignature Language="VB.NET" Value="Public Property ValuesAreIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValuesAreIcons { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValuesAreIcons : bool with get, set" Usage="System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指示此列中的单元格是否显示 <see cref="T:System.Drawing.Icon" /> 值。</summary>
        <value>如果单元格显示类型 <see cref="T:System.Drawing.Icon" /> 的值，则为 <see langword="true" />；如果单元格显示类型 <see cref="T:System.Drawing.Image" /> 的值，则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要确保 <xref:System.Drawing.Icon> 正确绘制值的 alpha 通道，请将此属性设置为 `true` 。  
  
 获取或设置此属性将获取或设置 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> 由属性返回的对象的属性 <xref:System.Windows.Forms.DataGridViewImageColumn.CellTemplate%2A> 。 设置此属性还会设置 <xref:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon%2A> 列中每个单元格的属性，并刷新列显示。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。  
  
 如果 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 由属性返回的对象的属性的 <xref:System.Windows.Forms.DataGridViewImageColumn.DefaultCellStyle%2A> 值与类型的标准错误图形相等 <xref:System.Drawing.Bitmap> ，则将 <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> 属性值更改为 `true` 自动设置 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 为类型的标准错误图形 <xref:System.Drawing.Icon> 。 如果的 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 值与类型的标准错误图形相等，则将 <xref:System.Drawing.Icon> <xref:System.Windows.Forms.DataGridViewImageColumn.ValuesAreIcons%2A> 属性值更改为 `false` 自动设置 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 为类型的标准错误图形 <xref:System.Drawing.Bitmap> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" /> 属性的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.Icon" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.Image" />
        <altmember cref="T:System.Drawing.Icon" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewImageCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.ValueIsIcon" />
      </Docs>
    </Member>
  </Members>
</Type>
