<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ce15aa7c13deddddc09cbb5b657c00c8b96df8f" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86993520" /></Metadata><TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="45471-101">为 <see cref="E:System.Windows.Forms.Control.DragDrop" />、<see cref="E:System.Windows.Forms.Control.DragEnter" /> 或 <see cref="E:System.Windows.Forms.Control.DragOver" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="45471-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45471-102"><xref:System.Windows.Forms.Control.DragDrop>当用户通过将对象拖到控件上并通过释放鼠标按钮将其放到控件上来完成拖放操作时发生该事件。</span><span class="sxs-lookup"><span data-stu-id="45471-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="45471-103"><xref:System.Windows.Forms.Control.DragEnter>当用户将鼠标指针移到控件上并使用鼠标拖动对象时，会发生该事件。</span><span class="sxs-lookup"><span data-stu-id="45471-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="45471-104"><xref:System.Windows.Forms.Control.DragOver>当用户将鼠标指针移到控件上并使用鼠标拖动对象时，会发生该事件。</span><span class="sxs-lookup"><span data-stu-id="45471-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="45471-105"><xref:System.Windows.Forms.DragEventArgs>对象指定与此事件相关联的任何数据、SHIFT、CTRL 和 ALT 键的当前状态、鼠标指针的位置以及拖动事件的源和目标所允许的拖放效果。</span><span class="sxs-lookup"><span data-stu-id="45471-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="45471-106">有关事件模型的信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="45471-106">For information about the event model, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45471-107">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-108">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-109">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-110"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-111">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-112">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-113">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-114">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-115">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-116">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-117">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-118">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-119">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-120">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-121">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-122"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="45471-123">下面的示例演示如何在 <xref:System.Windows.Forms.DragEventArgs> 拖放操作的源和目标之间传递。</span><span class="sxs-lookup"><span data-stu-id="45471-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="45471-124">在此示例中， <xref:System.Windows.Forms.ListBox> 控件是数据源， <xref:System.Windows.Forms.RichTextBox> 控件是目标。</span><span class="sxs-lookup"><span data-stu-id="45471-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="45471-125">该示例假设已 <xref:System.Windows.Forms.ListBox> 使用有效文件名的列表填充了控件。</span><span class="sxs-lookup"><span data-stu-id="45471-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="45471-126">当用户将其中一个显示的文件名从控件拖动 <xref:System.Windows.Forms.ListBox> 到控件上时 <xref:System.Windows.Forms.RichTextBox> ，将打开文件名中引用的文件。</span><span class="sxs-lookup"><span data-stu-id="45471-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="45471-127">在 <xref:System.Windows.Forms.ListBox> 控件的 MouseDown 事件中启动该操作。</span><span class="sxs-lookup"><span data-stu-id="45471-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="45471-128">在 <xref:System.Windows.Forms.RichTextBox.DragEnter> 事件处理程序中，该示例使用 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 方法来验证数据是否为控件可以显示的格式， <xref:System.Windows.Forms.RichTextBox> 然后设置 <xref:System.Windows.Forms.DragDropEffects> 属性以指定应将数据从源控件复制到目标控件。</span><span class="sxs-lookup"><span data-stu-id="45471-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="45471-129">最后， <xref:System.Windows.Forms.RichTextBox> 控件的 system.windows.dragdrop.drop> 事件处理程序使用 <xref:System.Windows.Forms.IDataObject.GetData%2A> 方法来检索要打开的文件名。</span><span class="sxs-lookup"><span data-stu-id="45471-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="45471-130">与此事件关联的数据。</span><span class="sxs-lookup"><span data-stu-id="45471-130">The data associated with this event.</span></span></param>
        <param name="keyState"><span data-ttu-id="45471-131">Shift、Ctrl 和 Alt 键的当前状态。</span><span class="sxs-lookup"><span data-stu-id="45471-131">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="x"><span data-ttu-id="45471-132">鼠标光标的 X 坐标（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="45471-132">The x-coordinate of the mouse cursor in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="45471-133">鼠标光标的 Y 坐标（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="45471-133">The y-coordinate of the mouse cursor in pixels.</span></span></param>
        <param name="allowedEffect"><span data-ttu-id="45471-134"><see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="45471-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <param name="effect"><span data-ttu-id="45471-135"><see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="45471-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <summary><span data-ttu-id="45471-136">初始化 <see cref="T:System.Windows.Forms.DragEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="45471-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45471-137">获取拖动事件的发起方（或源）所允许的拖放操作。</span><span class="sxs-lookup"><span data-stu-id="45471-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span></span></summary>
        <value><span data-ttu-id="45471-138"><see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="45471-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45471-139">当控件通过调用方法启动拖放操作时 <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> ，它指定操作的允许效果。</span><span class="sxs-lookup"><span data-stu-id="45471-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="45471-140">例如，当您从源拖动某个文件时，如果该文件是只读的 (或从只读存储介质（如 CD) ），则源将指示可以将该文件复制到目标，但不能将其传输到目标。</span><span class="sxs-lookup"><span data-stu-id="45471-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="45471-141">尝试对拖动的数据执行操作之前，应检查此属性以确保允许该操作。</span><span class="sxs-lookup"><span data-stu-id="45471-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45471-142">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-143">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-144">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-145"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-146">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-147">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-148">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-149">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-150">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-151">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-152">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-153">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-154">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-155">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-156">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-157"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45471-158">获取 <see cref="T:System.Windows.Forms.IDataObject" />，它包含与此事件关联的数据。</span><span class="sxs-lookup"><span data-stu-id="45471-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span></span></summary>
        <value><span data-ttu-id="45471-159">与此事件关联的数据。</span><span class="sxs-lookup"><span data-stu-id="45471-159">The data associated with this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45471-160">在事件处理程序的正文中，可以使用 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> 方法来确定数据是否与要将数据拖动到的控件的格式要求相匹配。</span><span class="sxs-lookup"><span data-stu-id="45471-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="45471-161">还可以指定是否想要尝试转换数据以满足格式要求。</span><span class="sxs-lookup"><span data-stu-id="45471-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="45471-162">如果拖动的数据满足格式要求，请使用 <xref:System.Windows.Forms.IDataObject.GetData%2A> 方法检索数据。</span><span class="sxs-lookup"><span data-stu-id="45471-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45471-163">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-164">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-165">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-166"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-167">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-168">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-169">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-170">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-171">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-172">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-173">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-174">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-175">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-176">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-177">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-178"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45471-179">获取或设置拖放操作中目标放置效果。</span><span class="sxs-lookup"><span data-stu-id="45471-179">Gets or sets the target drop effect in a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="45471-180"><see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="45471-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45471-181">默认情况下，应用的效果将决定拖放操作目标的鼠标光标。</span><span class="sxs-lookup"><span data-stu-id="45471-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="45471-182">这对于向用户提供有关将发生的操作的反馈非常有用。</span><span class="sxs-lookup"><span data-stu-id="45471-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="45471-183">例如，如果在从源拖动文件时按下 CTRL 键，则指定 <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> 以指示目标将尝试执行复制操作。</span><span class="sxs-lookup"><span data-stu-id="45471-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="45471-184">若要将自定义游标用于拖动操作，请参阅 <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45471-185">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-186">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-187">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-188"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-189">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-190">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-191">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-192">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-193">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-194">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-195">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-196">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-197">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-198">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-199">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-200"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45471-201">获取 Shift、Ctrl 和 Alt 键的当前状态以及鼠标按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span></span></summary>
        <value><span data-ttu-id="45471-202">Shift、Ctrl、Alt 键以及鼠标按钮的当前状态。</span><span class="sxs-lookup"><span data-stu-id="45471-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45471-203">您可以使拖放操作的效果依赖于特定键的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="45471-204">例如，你可以根据在拖放操作期间是否按下 CTRL 或 SHIFT 键来决定复制或移动数据。</span><span class="sxs-lookup"><span data-stu-id="45471-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="45471-205">属性中设置的位标识在 <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> 操作过程中按下的键或鼠标按钮。</span><span class="sxs-lookup"><span data-stu-id="45471-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="45471-206">例如，如果按下鼠标左键，则会设置属性中的第一位 <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> 。</span><span class="sxs-lookup"><span data-stu-id="45471-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="45471-207">可以使用按位 "与" 运算符来测试给定的键状态。</span><span class="sxs-lookup"><span data-stu-id="45471-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="45471-208">下表列出了用于指定事件的值。</span><span class="sxs-lookup"><span data-stu-id="45471-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="45471-209">值</span><span class="sxs-lookup"><span data-stu-id="45471-209">Value</span></span>|<span data-ttu-id="45471-210">密钥</span><span class="sxs-lookup"><span data-stu-id="45471-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="45471-211">1 (位 0) </span><span class="sxs-lookup"><span data-stu-id="45471-211">1 (bit 0)</span></span>|<span data-ttu-id="45471-212">鼠标左按钮。</span><span class="sxs-lookup"><span data-stu-id="45471-212">The left mouse button.</span></span>|  
|<span data-ttu-id="45471-213">2 (位 1) </span><span class="sxs-lookup"><span data-stu-id="45471-213">2 (bit 1)</span></span>|<span data-ttu-id="45471-214">鼠标右按钮。</span><span class="sxs-lookup"><span data-stu-id="45471-214">The right mouse button.</span></span>|  
|<span data-ttu-id="45471-215">4 (位 2) </span><span class="sxs-lookup"><span data-stu-id="45471-215">4 (bit 2)</span></span>|<span data-ttu-id="45471-216">Shift 键。</span><span class="sxs-lookup"><span data-stu-id="45471-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="45471-217">8 (位 3) </span><span class="sxs-lookup"><span data-stu-id="45471-217">8 (bit 3)</span></span>|<span data-ttu-id="45471-218">CTRL 键。</span><span class="sxs-lookup"><span data-stu-id="45471-218">The CTRL key.</span></span>|  
|<span data-ttu-id="45471-219">16 (位 4) </span><span class="sxs-lookup"><span data-stu-id="45471-219">16 (bit 4)</span></span>|<span data-ttu-id="45471-220">鼠标中键。</span><span class="sxs-lookup"><span data-stu-id="45471-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="45471-221">32 (位 5) </span><span class="sxs-lookup"><span data-stu-id="45471-221">32 (bit 5)</span></span>|<span data-ttu-id="45471-222">Alt 键。</span><span class="sxs-lookup"><span data-stu-id="45471-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="45471-223">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-224">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-225">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-226"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-227">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-228">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-229">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-230">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-231">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-232">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-233">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-234">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-235">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-236">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-237">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-238"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45471-239">获取鼠标指针在屏幕坐标系中的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="45471-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="45471-240">鼠标指针的 X 坐标（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="45471-240">The x-coordinate of the mouse pointer in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45471-241">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-242">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-243">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-244"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-245">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-246">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-247">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-248">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-249">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-250">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-251">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-252">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-253">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-254">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-255">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-256"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45471-257">获取鼠标指针在屏幕坐标系中的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="45471-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="45471-258">鼠标指针的 Y 坐标（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="45471-258">The y-coordinate of the mouse pointer in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45471-259">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="45471-260">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="45471-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="45471-261">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="45471-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="45471-262"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="45471-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="45471-263">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="45471-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="45471-264">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="45471-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="45471-265">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="45471-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="45471-266">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="45471-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="45471-267">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="45471-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="45471-268">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="45471-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="45471-269">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="45471-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="45471-270">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="45471-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="45471-271">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="45471-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="45471-272">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="45471-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="45471-273">此代码摘录演示了如何使用 <xref:System.Windows.Forms.DragEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="45471-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="45471-274"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="45471-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>
