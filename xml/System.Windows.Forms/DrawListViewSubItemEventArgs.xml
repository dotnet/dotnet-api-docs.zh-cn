<Type Name="DrawListViewSubItemEventArgs" FullName="System.Windows.Forms.DrawListViewSubItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9d8a18a32c8abb79d06af7ecb909ae268304c52" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86729064" /></Metadata><TypeSignature Language="C#" Value="public class DrawListViewSubItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawListViewSubItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawListViewSubItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawListViewSubItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawListViewSubItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.ListView.DrawSubItem" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType>事件使你可以 <xref:System.Windows.Forms.ListView> 在详细信息视图中自定义 (或所有者描述) 控件的外观。  
  
 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> <xref:System.Windows.Forms.ListView> 当控件的 <xref:System.Windows.Forms.ListView.OwnerDraw%2A?displayProperty=nameWithType> 属性设置为 `true` 并且其 <xref:System.Windows.Forms.ListView.View%2A> 属性设置为时，控件将引发该事件 <xref:System.Windows.Forms.View.Details> 。 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs>传递给事件处理程序的包含有关要绘制的的信息 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> ，还提供可帮助您绘制子项的方法。  
  
 使用 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> 或 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Item%2A> 属性检索有关要绘制的子项的父项的信息。 若要检索 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> 自身，请使用 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> 属性。 使用 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Header%2A> 属性可检索 <xref:System.Windows.Forms.ColumnHeader> 表示子项的列标题的。  
  
 使用 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics%2A> 属性可以在由属性指定的区域内执行实际绘图 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds%2A> 。 若要绘制 <xref:System.Windows.Forms.ListView> 不需要自定义的标准元素，请使用 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground%2A> 、 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText%2A> 和 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle%2A> 方法。  
  
 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault%2A>如果希望操作系统绘制子项，请使用属性。 如果你只想要自定义特定子项，这会很有用。  
  
> [!NOTE]
>  若要避免在所有者绘制时图形闪烁的问题，请重写 <xref:System.Windows.Forms.ListView> 控件并将 <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> 属性设置为 `true` 。 当应用程序调用方法时，此功能仅在 Windows XP 和 Windows Server 2003 家族上可用 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何为控件提供自定义绘图 <xref:System.Windows.Forms.ListView> 。 <xref:System.Windows.Forms.ListView>该示例中的控件具有渐变背景。 具有负值的子项具有红色的前景和黑色背景。  
  
 事件的处理程序 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> 绘制整个项的背景。 事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制文本值以及具有负值的子项的文本和背景。 事件的处理程序 <xref:System.Windows.Forms.ListView.DrawColumnHeader> 绘制每个列标题。  
  
 <xref:System.Windows.Forms.ContextMenu>组件提供一种在详细信息视图和列表视图之间切换的方法。 在列表视图中，只 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> 会触发事件。 在这种情况下，会在事件处理程序中绘制文本和背景 <xref:System.Windows.Forms.ListView.DrawItem?displayProperty=nameWithType> 。  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
    <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
    <altmember cref="P:System.Windows.Forms.ListView.View" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.View" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawListViewSubItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Windows.Forms.ListViewItem item, System.Windows.Forms.ListViewItem.ListViewSubItem subItem, int itemIndex, int columnIndex, System.Windows.Forms.ColumnHeader header, System.Windows.Forms.ListViewItemStates itemState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.ListViewItem item, class System.Windows.Forms.ListViewItem/ListViewSubItem subItem, int32 itemIndex, int32 columnIndex, class System.Windows.Forms.ColumnHeader header, valuetype System.Windows.Forms.ListViewItemStates itemState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ListViewItem,System.Windows.Forms.ListViewItem.ListViewSubItem,System.Int32,System.Int32,System.Windows.Forms.ColumnHeader,System.Windows.Forms.ListViewItemStates)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphics As Graphics, bounds As Rectangle, item As ListViewItem, subItem As ListViewItem.ListViewSubItem, itemIndex As Integer, columnIndex As Integer, header As ColumnHeader, itemState As ListViewItemStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawListViewSubItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Windows::Forms::ListViewItem ^ item, System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem, int itemIndex, int columnIndex, System::Windows::Forms::ColumnHeader ^ header, System::Windows::Forms::ListViewItemStates itemState);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawListViewSubItemEventArgs : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ListViewItem * System.Windows.Forms.ListViewItem.ListViewSubItem * int * int * System.Windows.Forms.ColumnHeader * System.Windows.Forms.ListViewItemStates -&gt; System.Windows.Forms.DrawListViewSubItemEventArgs" Usage="new System.Windows.Forms.DrawListViewSubItemEventArgs (graphics, bounds, item, subItem, itemIndex, columnIndex, header, itemState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="header" Type="System.Windows.Forms.ColumnHeader" />
        <Parameter Name="itemState" Type="System.Windows.Forms.ListViewItemStates" />
      </Parameters>
      <Docs>
        <param name="graphics">要在其上进行绘制的 <see cref="T:System.Drawing.Graphics" /> 表面。</param>
        <param name="bounds">要在其中进行绘制的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="item">要绘制的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的父级 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</param>
        <param name="subItem">要绘制的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</param>
        <param name="itemIndex"><see cref="T:System.Windows.Forms.ListViewItem" /> 集合中父级 <see cref="P:System.Windows.Forms.ListView.Items" /> 的索引。</param>
        <param name="columnIndex"><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 集合中 <see cref="P:System.Windows.Forms.ListView.Columns" /> 列的索引。</param>
        <param name="header">显示 <see cref="T:System.Windows.Forms.ColumnHeader" /> 的列的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</param>
        <param name="itemState"><see cref="T:System.Windows.Forms.ListViewItemStates" /> 值的按位组合，指示要绘制的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的父级 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的当前状态。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的大小和位置。</summary>
        <value>表示要绘制的 <see cref="T:System.Drawing.Rectangle" /> 的界限的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性指定的位置相对于控件的左上角 <xref:System.Windows.Forms.ListView> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds%2A> 在为控件提供自定义绘图的应用程序中使用属性 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取显示 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 列的索引。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 集合中 <see cref="P:System.Windows.Forms.ListView.Columns" /> 列的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A> 在为控件提供自定义绘图的应用程序中使用属性 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Header" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.Columns" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.SubItems" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的当前背景色绘制它的背景。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法绘制使用属性的当前值的标准背景 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType> 。 绘制背景以填充属性指定的区域 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>父项的属性 <xref:System.Windows.Forms.ListViewItem> 必须设置为 `false` ，以防止 <xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> 父项的值重写子项值。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground%2A> 在为控件提供自定义绘图的应用程序中使用方法 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否应由操作系统绘制而不是由所有者描述 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</summary>
        <value>如果该子项应由操作系统绘制，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType>为不希望自定义的子项处理事件时，请使用此属性。 如果将此属性设置为 `true` ，则会使用 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType> 和 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType> 属性的当前值以正常方式绘制子项  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>父项的属性 <xref:System.Windows.Forms.ListViewItem> 必须设置为 `false` ，以防止 <xref:System.Windows.Forms.ListViewItem.BackColor%2A?displayProperty=nameWithType> 父项的值重写子项值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.ListView> `ListView1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#472](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#472)]
 [!code-vb[System.Windows.Forms.EventExamples#472](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#472)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public void DrawFocusRectangle (System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawFocusRectangle(valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawFocusRectangle (bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawFocusRectangle(System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.DrawFocusRectangle : System.Drawing.Rectangle -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawFocusRectangle bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bounds">要绘制聚焦框的区域。</param>
        <summary>如果父级 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 具有焦点，则为 <see cref="T:System.Windows.Forms.ListViewItem" /> 绘制一个聚焦框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可在子项周围绘制标准聚焦框。 聚焦框在参数指定的区域内绘制一个像素 `bounds` 。 仅当父项具有焦点时才绘制，因此在调用此方法之前无需检查项的焦点状态。  
  
 你可能希望仅围绕第一个子项 (即父项，该父项显示在第一) 列中，而不是围绕项的每个子项进行绘制。 <xref:System.Windows.Forms.ListView>当 <xref:System.Windows.Forms.ListView.FullRowSelect%2A?displayProperty=nameWithType> 属性设置为时，这对应于控件的正常行为 `false` 。 若要在第一个子项周围绘制聚焦框，请 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle%2A> 仅当该值为0时才调用方法 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A> 。  
  
 <xref:System.Windows.Forms.ListView>控件不提供选择各个子项的功能，但如果您要自行实现子项选择，则可以使用此方法来围绕第一个子项绘制聚焦框。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的当前前景色和默认格式设置绘制它的文本。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的当前前景色绘制它的文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以使用和属性的当前值绘制子项文本 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType> 。 文本在属性指定的区域内绘制 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>父项的属性 <xref:System.Windows.Forms.ListViewItem> 必须设置为 `false` ，以防止 <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> 父项的和 <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> 值重写子项值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawListViewSubItemEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags"><see cref="T:System.Windows.Forms.TextFormatFlags" /> 值的按位组合。</param>
        <summary>使用 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的当前前景色以及由指定的 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 值设置的格式绘制它的文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以使用和属性的当前值绘制子项文本 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A?displayProperty=nameWithType> 。 文本在属性指定的区域内绘制 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Bounds%2A> 。 通过 <xref:System.Windows.Forms.TextFormatFlags> 在参数中指定的值 `flags` ，您可以为节点标签提供格式设置属性，如文本对齐。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A>父项的属性 <xref:System.Windows.Forms.ListViewItem> 必须设置为 `false` ，以防止 <xref:System.Windows.Forms.ListViewItem.ForeColor%2A?displayProperty=nameWithType> 父项的和 <xref:System.Windows.Forms.ListViewItem.Font%2A?displayProperty=nameWithType> 值重写子项值。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText%2A> 在为控件提供自定义绘图的应用程序中使用方法 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Bounds" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
        <altmember cref="T:System.Drawing.StringFormat" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</summary>
        <value>用于绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Graphics>类提供的属性和方法可用于在显示设备上进行绘制。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics%2A> 在为控件提供自定义绘图的应用程序中使用属性 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeader Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ColumnHeader Header" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeader ^ Header { System::Windows::Forms::ColumnHeader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Header : System.Windows.Forms.ColumnHeader" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取显示 <see cref="T:System.Windows.Forms.ListView" /> 的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 列的标题。</summary>
        <value>显示 <see cref="T:System.Windows.Forms.ColumnHeader" /> 的列的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Header%2A> 在为控件提供自定义绘图的应用程序中使用属性 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ Item { System::Windows::Forms::ListViewItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的父级 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</summary>
        <value>表示要绘制的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的父级的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可访问 <xref:System.Windows.Forms.ListViewItem> 要绘制的的父级 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> 。 当 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> 属性没有提供足够的信息来满足您的需求时，这非常有用。 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A>属性仅提供可用于确定父项是选中、选中还是聚焦的基本状态信息。 另一方面 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.Item%2A> ，属性允许您访问父级的所有成员 <xref:System.Windows.Forms.ListViewItem> 。  
  
 若要访问 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> 正在绘制的，请使用 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.ListView> `ListView1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#472](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#472)]
 [!code-vb[System.Windows.Forms.EventExamples#472](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#472)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemIndex">
      <MemberSignature Language="C#" Value="public int ItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemIndex : int" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的父级 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的索引。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> 集合中父级 <see cref="P:System.Windows.Forms.ListView.Items" /> 的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.ListView> `ListView1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#472](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#472)]
 [!code-vb[System.Windows.Forms.EventExamples#472](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#472)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.Items" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItemStates ItemState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewItemStates ItemState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemState As ListViewItemStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItemStates ItemState { System::Windows::Forms::ListViewItemStates get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemState : System.Windows.Forms.ListViewItemStates" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.ListViewItem" /> 的父级 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> 的当前状态。</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItemStates" /> 值的按位组合，指示父级 <see cref="T:System.Windows.Forms.ListViewItem" /> 的当前状态。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性检查 <xref:System.Windows.Forms.ListViewItem> 要绘制的的父级是否 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> 处于某个特定状态。 此属性仅提供有关父项的基本状态信息。 例如，你可以使用此属性来确定父项是处于选中状态、选中状态还是焦点。 如果需要了解详细信息，请通过属性检索父项 <xref:System.Windows.Forms.DrawListViewItemEventArgs.Item%2A> 并直接检查其属性。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState%2A> 在为控件提供自定义绘图的应用程序中使用属性 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItemStates" />
        <altmember cref="P:System.Windows.Forms.DrawListViewItemEventArgs.Item" />
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="SubItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem SubItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem SubItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubItem As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ SubItem { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubItem : System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</summary>
        <value>要绘制的 <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当其他 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 属性没有提供足够的信息来满足您的需求时，此方法非常有用。 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A>属性允许您访问正在绘制的的所有成员 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> 。 例如，你必须直接访问此对象， <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Text%2A?displayProperty=nameWithType> 而不是使用方法来绘制值 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem%2A> 在为控件提供自定义绘图的应用程序中使用属性 <xref:System.Windows.Forms.ListView> 。 在此示例中，事件的处理程序 <xref:System.Windows.Forms.ListView.DrawSubItem?displayProperty=nameWithType> 绘制子项文本值以及具有负值的子项的文本和背景。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.DrawListViewSubItemEventArgs> 概述参考主题。  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.DrawListViewSubItemEventArgs.Item" />
      </Docs>
    </Member>
  </Members>
</Type>
