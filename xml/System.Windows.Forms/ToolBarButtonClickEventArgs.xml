<Type Name="ToolBarButtonClickEventArgs" FullName="System.Windows.Forms.ToolBarButtonClickEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0461d00706726406bed954a14b4786a20d401d11" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86653170" /></Metadata><TypeSignature Language="C#" Value="public class ToolBarButtonClickEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButtonClickEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButtonClickEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarButtonClickEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarButtonClickEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ToolBarButtonClickEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.ToolBar.ButtonClick" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每当用户单击控件上的某个按钮时，就会发生该事件 <xref:System.Windows.Forms.ToolBar> 。 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A>属性包含 <xref:System.Windows.Forms.ToolBarButton> 具有有关所单击按钮的信息的。  
  
   
  
## Examples  
 下面的示例实例化一个 <xref:System.Windows.Forms.ToolBar> 和三个 <xref:System.Windows.Forms.ToolBarButton> 控件。 工具栏按钮将分配给按钮集合，集合将分配给工具栏，并将工具栏添加到窗体中。 在 <xref:System.Windows.Forms.ToolBar.ButtonClick> 工具栏的事件中， <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> 计算的属性 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> ，并打开适当的对话框。 此代码假定 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.OpenFileDialog> <xref:System.Windows.Forms.SaveFileDialog> 已经实例化了、、、和 <xref:System.Windows.Forms.PrintDialog> 。  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.ToolBarButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButtonClickEventArgs (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButtonClickEventArgs.#ctor(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButtonClickEventArgs(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBarButtonClickEventArgs : System.Windows.Forms.ToolBarButton -&gt; System.Windows.Forms.ToolBarButtonClickEventArgs" Usage="new System.Windows.Forms.ToolBarButtonClickEventArgs button" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">被单击的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolBarButtonClickEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A>将属性设置为等于 `button` 参数。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButton Button { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButtonClickEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public Property Button As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBarButton ^ Button { System::Windows::Forms::ToolBarButton ^ get(); void set(System::Windows::Forms::ToolBarButton ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Button : System.Windows.Forms.ToolBarButton with get, set" Usage="System.Windows.Forms.ToolBarButtonClickEventArgs.Button" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置被单击的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</summary>
        <value>被单击的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A>属性最初设置为等于 `button` <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.%23ctor%2A> 构造函数的参数。  
  
   
  
## Examples  
 下面的示例实例化一个 <xref:System.Windows.Forms.ToolBar> 和三个 <xref:System.Windows.Forms.ToolBarButton> 控件。 工具栏按钮将分配给按钮集合，集合将分配给工具栏，并将工具栏添加到窗体中。 在 <xref:System.Windows.Forms.ToolBar.ButtonClick> 工具栏的事件中， <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> 计算的属性 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> ，并打开适当的对话框。 此代码假定 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.OpenFileDialog> <xref:System.Windows.Forms.SaveFileDialog> 已经实例化了、、、和 <xref:System.Windows.Forms.PrintDialog> 。  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
  </Members>
</Type>
