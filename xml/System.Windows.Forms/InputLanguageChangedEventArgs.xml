<Type Name="InputLanguageChangedEventArgs" FullName="System.Windows.Forms.InputLanguageChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78c6a55216b4de5f0407c18697208a16cc6250c7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86702154" /></Metadata><TypeSignature Language="C#" Value="public class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputLanguageChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class InputLanguageChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type InputLanguageChangedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用中的数据 <xref:System.Windows.Forms.InputLanguageChangedEventArgs> 来决定是否更改输入法编辑器 (ime) 或交换从右到左的值。 还可以更改 <xref:System.Threading.Thread.CurrentCulture%2A> 线程和属性的， <xref:System.Threading.Thread.CurrentUICulture%2A> 以便选取不同的资源。  
  
 <xref:System.Windows.Forms.InputLanguageChangedEventArgs>标识新输入语言的区域设置和字符集。  
  
 事件 <xref:System.Windows.Forms.Form.InputLanguageChanging> 位于事件之前 <xref:System.Windows.Forms.Form.InputLanguageChanged> 。
  
## Examples  
 下面的示例创建一个新的 <xref:System.Windows.Forms.Form> ，并将事件处理程序附加到 <xref:System.Windows.Forms.Form.InputLanguageChanged> 事件。 `IMEmode`当输入语言更改为日语时，此事件将更改。  
  
 [!code-cpp[InputLanguageChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/InputLanguageChanged/CPP/form1.cpp#1)]
 [!code-csharp[InputLanguageChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/InputLanguageChanged/CS/form1.cs#1)]
 [!code-vb[InputLanguageChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/InputLanguageChanged/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.InputLanguage" />
    <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Globalization.CultureInfo culture, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Globalization.CultureInfo,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo, charSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Globalization::CultureInfo ^ culture, System::Byte charSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Globalization.CultureInfo * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (culture, charSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="culture">获取输入语言的区域设置。</param>
        <param name="charSet">与新输入语言关联的字符集。</param>
        <summary>用指定的区域设置和字符集初始化 <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">.NET 5.0 和更高版本： <see cref="T:System.Windows.Forms.InputLanguage" /> 无法对进行检索 <paramref name="culture" /> 。</exception>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Windows.Forms.InputLanguage inputLanguage, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.InputLanguage inputLanguage, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Windows.Forms.InputLanguage,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputLanguage As InputLanguage, charSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Windows::Forms::InputLanguage ^ inputLanguage, System::Byte charSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Windows.Forms.InputLanguage * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (inputLanguage, charSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputLanguage" Type="System.Windows.Forms.InputLanguage" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="inputLanguage">输入语言。</param>
        <param name="charSet">与新输入语言关联的字符集。</param>
        <summary>用指定的输入语言和字符集初始化 <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 输入语言指定区域性/键盘布局对。  
  
 <xref:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet%2A>有关有效字符集的列表，请参见属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public byte CharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 CharSet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharSet As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte CharSet { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.CharSet : byte" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与新输入语言关联的字符集。</summary>
        <value>与字符集相对应的 8 位不带正负号的整数，如下表所示。  
  
 <list type="table"><listheader><term> 字符集  
  
 </term><description> 值  
  
 </description></listheader><item><term> ANSI_CHARSET  
  
 </term><description> 0  
  
 </description></item><item><term> DEFAULT_CHARSET  
  
 </term><description> 1  
  
 </description></item><item><term> SYMBOL_CHARSET  
  
 </term><description> 2  
  
 </description></item><item><term> MAC_CHARSET  
  
 </term><description> 77  
  
 </description></item><item><term> SHIFTJI_CHARSET  
  
 </term><description> 128  
  
 </description></item><item><term> HANGEUL_CHARSET  
  
 </term><description> 129  
  
 </description></item><item><term> HANGUL_CHARSET  
  
 </term><description> 129  
  
 </description></item><item><term> JOHAB_CHARSET  
  
 </term><description> 130  
  
 </description></item><item><term> GB2312_CHARSET  
  
 </term><description> 134  
  
 </description></item><item><term> CHINESEBIG5_CHARSET  
  
 </term><description> 136  
  
 </description></item><item><term> GREEK_CHARSET  
  
 </term><description> 161  
  
 </description></item><item><term> TURKISH_CHARSET  
  
 </term><description> 162  
  
 </description></item><item><term> VIETNAMESE_CHARSET  
  
 </term><description> 163  
  
 </description></item><item><term> HEBREW_CHARSET  
  
 </term><description> 177  
  
 </description></item><item><term> ARABIC_CHARSET  
  
 </term><description> 178  
  
 </description></item><item><term> BALTIC_CHARSET  
  
 </term><description> 186  
  
 </description></item><item><term> RUSSIAN_CHARSET  
  
 </term><description> 204  
  
 </description></item><item><term> THAI_CHARSET  
  
 </term><description> 222  
  
 </description></item><item><term> EASTEUROPE_CHARSET  
  
 </term><description> 238  
  
 </description></item><item><term> OEM_CHARSET  
  
 </term><description> 255  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是用户切换到的 Win32 字符集。 在 ANSI 系统上，此属性可用于创建可显示正确字符集的字体。 在 Unicode 系统上，您通常不需要使用此属性。 请改用 <xref:System.Globalization.CultureInfo> 这些功能的类。
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取输入语言的区域设置。</summary>
        <value><see cref="T:System.Globalization.CultureInfo" />，它指定输入语言的区域设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.InputLanguageChangedEventArgs.Culture%2A>属性指定一个 <xref:System.Globalization.CultureInfo> ，并定义一组与用户的语言、子语言、国家/地区和文化约定相关的用户首选项信息。
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InputLanguage InputLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.InputLanguage InputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InputLanguage ^ InputLanguage { System::Windows::Forms::InputLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputLanguage : System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示输入语言的值。</summary>
        <value>与该对象关联的输入语言。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
  </Members>
</Type>
