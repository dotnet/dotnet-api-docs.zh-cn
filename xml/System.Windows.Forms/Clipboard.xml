<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32e86181fc6f8ca2f7b50c114cb3112bc4799583" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102075870" /></Metadata><TypeSignature Language="C#" Value="public static class Clipboard" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Clipboard extends System.Object" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Clipboard" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard abstract sealed" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <TypeSignature Language="C#" Value="public sealed class Clipboard" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供将数据置于系统剪贴板中以及从中检索数据的方法。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关要用于类的预定义格式的列表 <xref:System.Windows.Forms.Clipboard> ，请参见 <xref:System.Windows.Forms.DataFormats> 类。  
  
 调用将 <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> 数据放置在剪贴板上，并替换其当前内容。 若要在剪贴板上放置数据的持久性副本，请将 `copy` 参数设置为 `true` 。  
  
> [!NOTE]
>  若要以多种格式将数据置于剪贴板中，请使用 <xref:System.Windows.Forms.DataObject> 类或 <xref:System.Windows.Forms.IDataObject> 实现。 将数据置于剪贴板中的多种格式，以最大程度地提高可能不知道其格式要求的目标应用程序可以成功检索数据的可能性。  
  
 调用 <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> 以从剪贴板检索数据。 数据返回为实现接口的对象 <xref:System.Windows.Forms.IDataObject> 。 使用中指定的方法 <xref:System.Windows.Forms.IDataObject> 和中的字段 <xref:System.Windows.Forms.DataFormats> 从对象中提取数据。 如果您不知道您检索的数据的格式，请调用接口的 <xref:System.Windows.Forms.IDataObject.GetFormats%2A> 方法， <xref:System.Windows.Forms.IDataObject> 以获取存储数据的所有格式的列表。 然后调用 <xref:System.Windows.Forms.IDataObject.GetData%2A> 接口的方法 <xref:System.Windows.Forms.IDataObject> ，并指定应用程序可以使用的格式。  
  
 在 .NET Framework 2.0 中， <xref:System.Windows.Forms.Clipboard> 类提供附加方法，使系统剪贴板更易于使用。 调用 <xref:System.Windows.Forms.Clipboard.Clear%2A> 方法以从剪贴板中删除所有数据。 若要向剪贴板添加特定格式的数据，并替换现有数据，请调用相应的 `Set` *格式* 方法（如 <xref:System.Windows.Forms.Clipboard.SetText%2A> ），或调用 <xref:System.Windows.Forms.Clipboard.SetData%2A> 方法来指定格式。 若要从剪贴板检索特定格式的数据，请首先调用适当的 `Contains` *格式* 方法 (如 <xref:System.Windows.Forms.Clipboard.ContainsText%2A>) 方法来确定剪贴板是否包含该格式的数据，然后调用适当的 `Get` *格式* 方法 (例如 <xref:System.Windows.Forms.Clipboard.GetText%2A>) 检索数据（如果剪贴板包含数据）。 若要指定这些操作中的格式，请 <xref:System.Windows.Forms.Clipboard.ContainsData%2A> 改为调用和 <xref:System.Windows.Forms.Clipboard.GetData%2A> 方法。  
  
> [!NOTE]
>  所有基于 Windows 的应用程序共享系统剪贴板，因此当你切换到另一个应用程序时，内容可能会更改。  
>   
>  对象必须是可序列化的，才能将其放在剪贴板上。 如果将非序列化对象传递到剪贴板方法，则该方法将失败，且不会引发异常。 <xref:System.Runtime.Serialization>有关序列化的详细信息，请参阅。 如果目标应用程序需要非常具体的数据格式，则在序列化过程中添加到数据的标头可能会阻止应用程序识别数据。 若要保留数据格式，请将数据作为 <xref:System.Byte> 数组添加到， <xref:System.IO.MemoryStream> 并将传递 <xref:System.IO.MemoryStream> 给 <xref:System.Windows.Forms.DataObject.SetData%2A> 方法。  
>   
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
>   
>  使用带有剪贴板的图元文件格式时，可能需要特别注意。 由于类的当前实现中存在限制，因此 <xref:System.Windows.Forms.DataObject> 使用较旧的图元文件格式的应用程序可能无法识别 .NET Framework 使用的图元文件格式。 在这种情况下，必须与 Win32 剪贴板应用程序编程接口)  (Api 进行互操作。
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Windows.Forms.Clipboard> 方法将数据放置在系统剪贴板上并从中检索数据。 此代码假定 `button1` `button2` 已创建、、和， `textBox1` `textBox2` 并将其放置在窗体上。  
  
 `button1_Click`方法调用 <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> 从文本框中选择文本并将其放入系统剪贴板。  
  
 `button2_Click`方法调用 <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> 从系统剪贴板检索数据。 此代码使用 <xref:System.Windows.Forms.IDataObject> 和 <xref:System.Windows.Forms.DataFormats> 提取返回的数据，并在中显示数据 `textBox2` 。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="/dotnet/framework/winforms/additional-security-considerations-in-windows-forms">Windows 窗体中额外的安全注意事项</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从剪贴板中移除所有数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于剪贴板由多个进程共享，因此调用此方法可能会影响这些进程。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示在剪贴板中是否存在 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的数据。</summary>
        <returns>如果剪贴板中有音频数据，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在使用方法检索音频数据之前，确定剪贴板是否包含音频数据 <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">要查找的数据格式。 请参见 <see cref="T:System.Windows.Forms.DataFormats" /> 以获取预定义的格式。</param>
        <summary>指示剪贴板中是否存在指定格式的数据，或可转换成此格式的数据。</summary>
        <returns>如果在剪贴板中存在指定 <paramref name="format" /> 或可以转换成该格式的数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats>类包含可用于此方法的预定义格式名称。  
  
 使用此方法来确定剪贴板是否包含指定格式的数据或兼容的格式，然后再使用方法检索数据 <xref:System.Windows.Forms.Clipboard.GetData%2A> 。  
  
> [!NOTE]
>  如果数据已存储，则可以将其转换为另一种格式，这种格式指定允许该转换，并且请求的格式与存储格式兼容。 例如，以 Unicode 形式存储的数据可以转换为文本。  
>   
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示剪贴板中是否存在 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式或可转换成此格式的数据。</summary>
        <returns>如果剪贴板中有文件放置列表，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件放置列表是包含文件的路径信息的字符串的集合。  
  
 使用此方法来确定剪贴板是否包含文件放置列表，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示剪贴板中是否存在 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式或可转换成此格式的数据。</summary>
        <returns>如果剪贴板中存在图像数据，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法来确定剪贴板是否包含图像数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetImage%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指示剪贴板中是否存在文本数据。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示剪贴板中是否存在 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的数据（取决于操作系统）。</summary>
        <returns>如果剪贴板中存在文本数据，则为 <see langword="true" />；否则为，<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法检查 <xref:System.Windows.Forms.TextDataFormat.UnicodeText> WINDOWS Xp Home Edition、WINDOWS Xp Professional、Windows Server 2003 和 windows 2000 上是否存在格式的数据。 否则，此方法将检查是否存在格式的数据 <xref:System.Windows.Forms.TextDataFormat.Text> 。  
  
 使用此方法来确定剪贴板是否包含文本数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetText%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.Forms.Clipboard.ContainsText%2A> 类似于此重载的方法的重载。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat" /> 值之一。</param>
        <summary>指示剪贴板中是否存在具有指定的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值所指示的格式的文本数据。</summary>
        <returns>如果剪贴板中存在格式值为指定 <paramref name="format" /> 的文本数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法来确定剪贴板是否包含文本数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetText%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索剪贴板上的音频流。</summary>
        <returns>包含音频数据的 <see cref="T:System.IO.Stream" />；如果剪贴板不包含任何 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式的数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> 方法来确定剪贴板是否包含音频数据，然后再使用此方法对其进行检索。  
  
 使用 <xref:System.Windows.Forms.Clipboard.SetAudio%2A> 方法将音频数据添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">要检索的数据的格式。 请参见 <see cref="T:System.Windows.Forms.DataFormats" /> 以获取预定义的格式。</param>
        <summary>从剪贴板中检索指定格式的数据。</summary>
        <returns>表示剪贴板数据的 <see cref="T:System.Object" />；如果剪贴板中包含的数据都不是指定 <paramref name="format" />，也无法转换为该格式，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.Clipboard.ContainsData%2A> 方法来确定剪贴板是否包含指定格式的数据或兼容的格式，然后再使用此方法检索数据。  
  
 如果此方法无法找到具有指定格式的数据，则会尝试将数据转换为格式。 如果数据无法转换为指定的格式，或者，如果数据是通过自动转换设置为存储的 `false` ，则此方法将返回 `null` 。  
  
> [!NOTE]
>  如果数据已存储，则可以将其转换为另一种格式，这种格式指定允许该转换，并且请求的格式与存储格式兼容。 例如，以 Unicode 形式存储的数据可以转换为文本。  
>   
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
 使用 <xref:System.Windows.Forms.Clipboard.SetData%2A> 方法可将数据以特定格式添加到剪贴板。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前位于系统剪贴板中的数据。</summary>
        <returns><see cref="T:System.Windows.Forms.IDataObject" />，表示系统剪贴板中当前的数据；如果剪贴板中没有数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于从剪贴板返回的对象的数据类型可能会有所不同，因此此方法返回中的数据 <xref:System.Windows.Forms.IDataObject> 。 然后，可以使用接口的方法 <xref:System.Windows.Forms.IDataObject> ，以正确的数据类型来提取数据。  
  
 此方法尝试以100毫秒为间隔10次获取数据，并在 <xref:System.Runtime.InteropServices.ExternalException> 所有尝试均失败时引发。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Windows.Forms.Clipboard> 方法将数据放置在系统剪贴板上并从中检索数据。 此代码假定 `button1` `button2` `textBox1` 已将、、和 `textBox2` 放置在窗体上。  
  
 `button1_Click`方法调用 <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> 从文本框中选择文本并将其放入系统剪贴板。  
  
 `button2_Click`方法调用 <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> 从系统剪贴板检索数据。 此代码使用 <xref:System.Windows.Forms.IDataObject> 和 <xref:System.Windows.Forms.DataFormats> 提取返回的数据。 数据显示在中 `textBox2` 。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能从剪贴板中检索到数据。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下，且 <see cref="P:System.Windows.Forms.Application.MessageLoop" /> 属性值为 <see langword="true" />。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从剪贴板中检索文件名的集合。</summary>
        <returns>包含文件名的 <see cref="T:System.Collections.Specialized.StringCollection" />；如果剪贴板中不包含任何格式为 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 或可转换为该格式的数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件放置列表是包含文件的路径信息的字符串的集合。  
  
 文件放置列表以数组的形式存储在剪贴板上 <xref:System.String> 。 此方法将此数组转换为 <xref:System.Collections.Specialized.StringCollection> 并返回集合。  
  
 使用 <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> 方法来确定剪贴板是否包含文件放置列表，然后再使用此方法对其进行检索。  
  
 使用 <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> 方法可将文件放置列表添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索剪贴板上的图像。</summary>
        <returns>表示剪贴板图像数据的 <see cref="T:System.Drawing.Image" />；如果剪贴板中不包含任何 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 格式或可转换成该格式的数据，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> 方法来确定剪贴板是否包含图像数据，然后再使用此方法对其进行检索。  
  
 使用 <xref:System.Windows.Forms.Clipboard.SetImage%2A> 方法将图像数据添加到剪贴板。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从剪贴板中检索文本数据。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从剪贴板中检索 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式的文本数据（取决于操作系统）。</summary>
        <returns>剪贴板文本数据；如果剪贴板中不包含 <see cref="F:System.String.Empty" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 格式的数据（取决于操作系统），则为 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回 <xref:System.Windows.Forms.TextDataFormat.UnicodeText> WINDOWS Xp Home Edition、WINDOWS Xp Professional、Windows Server 2003 和 windows 2000 上格式的文本数据。 否则，此方法返回格式的文本数据 <xref:System.Windows.Forms.TextDataFormat.Text> 。  
  
 使用 <xref:System.Windows.Forms.Clipboard.ContainsText%2A> 方法来确定剪贴板是否包含文本数据，然后再使用此方法对其进行检索。  
  
 使用 <xref:System.Windows.Forms.Clipboard.SetText%2A> 方法向剪贴板添加文本数据。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.Forms.Clipboard.GetText%2A> 类似于此重载的方法的重载。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat" /> 值之一。</param>
        <summary>从剪贴板中检索由指定的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值表示的格式的文本数据。</summary>
        <returns>剪贴板文本数据；如果剪贴板中不包含指定格式的数据，则为 <see cref="F:System.String.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.Clipboard.ContainsText%2A> 方法来确定剪贴板是否包含文本数据，然后再使用此方法对其进行检索。  
  
 使用 <xref:System.Windows.Forms.Clipboard.SetText%2A> 方法向剪贴板添加文本数据。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪贴板，然后以 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 格式添加数据，替换现有数据。</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes">包含音频数据的 <see cref="T:System.Byte" /> 数组。</param>
        <summary>清除剪贴板然后以 <see cref="T:System.Byte" /> 格式添加 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 数组，这种情况发生在将其转换为 <see cref="T:System.IO.Stream" /> 之后。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索音频数据，请首先使用 <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> 方法来确定剪贴板是否包含音频数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.Forms.Clipboard.SetAudio%2A> 类似于此重载的方法的重载。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" /> 为 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream">包含音频数据的 <see cref="T:System.IO.Stream" />。</param>
        <summary>清除剪贴板然后以 <see cref="T:System.IO.Stream" /> 格式添加 <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索音频数据，请首先使用 <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> 方法来确定剪贴板是否包含音频数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" /> 为 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">要设置的数据格式。 请参见 <see cref="T:System.Windows.Forms.DataFormats" /> 以获取预定义的格式。</param>
        <param name="data">表示要添加的数据的 <see cref="T:System.Object" />。</param>
        <summary>清除剪贴板然后以所指定的格式添加数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您不知道目标应用程序的格式，则可以使用此方法以多种格式存储数据。  
  
 在检索使用此方法存储的数据时，可以将其转换为兼容的格式。  
  
 若要以特定格式从剪贴板检索数据，请首先使用 <xref:System.Windows.Forms.Clipboard.ContainsData%2A> 方法来确定剪贴板是否包含格式的数据，然后再使用方法检索数据 <xref:System.Windows.Forms.Clipboard.GetData%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪贴板然后，然后在其中添加数据。</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">要置于剪贴板中的数据。</param>
        <summary>清除剪贴板然后，然后将非持久性数据置于其中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当应用程序退出时，将从系统剪贴板中删除数据。  
  
 此方法尝试以100毫秒间隔将数据设置为十次，并在 <xref:System.Runtime.InteropServices.ExternalException> 所有尝试均失败时引发。  
  
> [!NOTE]
>  对象必须是可序列化的，才能将其放在剪贴板上。 如果将不可序列化的对象传递给此方法，则它将失败，且不会引发异常。 <xref:System.Runtime.Serialization>有关序列化的详细信息，请参阅。  
>   
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的代码示例使用将非 <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> 持久性文本数据置于系统剪贴板上。 在 `button1_Click` 方法中，将从剪贴板中复制所选文本 `textBox1` ，并将其粘贴到剪贴板上。 在 `button2_Click` 方法中，从剪贴板检索信息，并将其显示在中 `textBox2` 。 此代码假定 `button1` `button2` 已创建、、和， `textBox1` `textBox2` 并将其放置在窗体上。  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能将数据置于剪贴板中。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">要置于剪贴板中的数据。</param>
        <param name="copy">如果想在退出应用程序后将数据保留在剪贴板中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>清除剪贴板并将数据置于系统剪贴板中，且指定在退出应用程序后是否将数据保留在剪贴板中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `copy` 参数为，则在 `false` 应用程序退出时将从系统剪贴板中删除数据。  
  
 此方法尝试以100毫秒间隔将数据设置为十次，并在 <xref:System.Runtime.InteropServices.ExternalException> 所有尝试均失败时引发。  
  
> [!NOTE]
>  对象必须是可序列化的，才能将其放在剪贴板上。 如果将不可序列化的对象传递给此方法，则它将失败，且不会引发异常。 <xref:System.Runtime.Serialization>有关序列化的详细信息，请参阅。  
>   
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的方法在应用程序中运行。 它在系统剪贴板上的文本框中放置所选文本数据的持久性副本。 此代码假定 `button1` `textBox1` 已创建、和， `textBox2` 并将其放置在窗体上。  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 在不同的应用程序中，以下方法检索系统剪贴板中的文本，并将文本粘贴到中 `textBox2` 。 此代码假定 `button2` `textBox2` 已创建并将其放置在窗体上。  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能将数据置于剪贴板中。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryTimes" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryDelay" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data">要置于剪贴板中的数据。</param>
        <param name="copy">如果想在退出应用程序后将数据保留在剪贴板中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="retryTimes">尝试将数据置于剪贴板中的次数。</param>
        <param name="retryDelay">两次尝试之间暂停的毫秒数。</param>
        <summary>清除剪贴板并尝试指定的次数，以将数据置于系统剪贴板中，且两次尝试之间具有指定的延迟，可以选择在退出应用程序后将数据保留在剪贴板中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果剪贴板正忙于其他线程或应用程序，将数据添加到剪贴板有时会失败。 此方法可用于在使用繁重剪贴板的环境中解决此问题。  
  
 如果 `copy` 参数为，则在 `false` 应用程序退出时将从系统剪贴板中删除数据。  
  
> [!NOTE]
>  对象必须是可序列化的，才能将其放在剪贴板上。 如果将不可序列化的对象传递给此方法，则它将失败，且不会引发异常。 <xref:System.Runtime.Serialization>有关序列化的详细信息，请参阅。  
>   
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="retryTimes" /> 小于零。  
  
- 或 - 
 <paramref name="retryDelay" /> 小于零。</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能将数据置于剪贴板中。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">包含这些文件名的 <see cref="T:System.Collections.Specialized.StringCollection" />。</param>
        <summary>清除剪贴板，然后添加 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 格式中的文件名集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文件放置列表是包含文件的路径信息的字符串的集合。  
  
 文件放置列表以数组的形式存储在剪贴板上 <xref:System.String> 。 `filePaths` <xref:System.String> 在将此方法添加到剪贴板之前，此方法将转换为数组。  
  
 若要从剪贴板检索文件放置列表，请首先使用 <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> 方法来确定剪贴板是否包含格式的数据，然后再使用方法检索数据 <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> 中不包含任何字符串。  
  
- 或 - 
在 <paramref name="filePaths" /> 中至少有一个字符串为以下情况之一：为 <see cref="F:System.String.Empty" />、仅包含空白、包含一个或多个 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符、值为 <see langword="null" />、包含冒号 (:)、或超出系统定义的最大长度。  
  
有关更多信息，请参见 <see cref="P:System.Exception.InnerException" /> 的 <see cref="T:System.ArgumentException" /> 属性。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetImage (image As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image">要添加到剪贴板中的 <see cref="T:System.Drawing.Image" />。</param>
        <summary>清除剪贴板然后以 <see cref="T:System.Drawing.Image" /> 格式添加 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索图像数据，请首先使用 <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> 方法来确定剪贴板是否包含图像数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetImage%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> 为 <see langword="null" />。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>清除剪贴板然后，然后在其中添加文本数据。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">要添加到剪贴板中的文本。</param>
        <summary>清除剪贴板然后，然后以 <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式添加文本数据，这取决于操作系统。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法在 <xref:System.Windows.Forms.TextDataFormat.UnicodeText> WINDOWS Xp Home Edition、WINDOWS Xp Professional、Windows Server 2003 和 windows 2000 上以格式添加文本数据。 否则，此方法将添加格式的文本数据 <xref:System.Windows.Forms.TextDataFormat.Text> 。  
  
 若要从剪贴板检索文本数据，请先使用 <xref:System.Windows.Forms.Clipboard.ContainsText%2A> 方法来确定剪贴板是否包含文本数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetText%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.Forms.Clipboard.SetText%2A> 类似于此重载的方法的重载。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 是 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">要添加到剪贴板中的文本。</param>
        <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat" /> 值之一。</param>
        <summary>除剪贴板然后，然后以所指定 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值指示的格式添加文本数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从剪贴板检索文本数据，请先使用 <xref:System.Windows.Forms.Clipboard.ContainsText%2A> 方法来确定剪贴板是否包含文本数据，然后再使用方法对其进行检索 <xref:System.Windows.Forms.Clipboard.GetText%2A> 。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Clipboard>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的示例演示了此成员。  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">未能清空剪贴板。 这种情况通常发生在剪贴板正在被其他进程使用的时候。</exception>
        <exception cref="T:System.Threading.ThreadStateException">当前线程未处于单线程单元 (STA) 模式下。 请将 <see cref="T:System.STAThreadAttribute" /> 添加到应用程序的 <see langword="Main" /> 方法中。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 是 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> 不是有效的 <see cref="T:System.Windows.Forms.TextDataFormat" /> 值。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>
