<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bec38ebe7f27b06dba0ed682e3757f640478944c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89968378" /></Metadata><TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b5800-101">显示一个标准对话框，提示用户打开文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="b5800-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b5800-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-103">此类可用于检查文件是否存在并打开它。</span><span class="sxs-lookup"><span data-stu-id="b5800-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="b5800-104"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>属性确定是否在对话框中出现只读复选框。</span><span class="sxs-lookup"><span data-stu-id="b5800-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="b5800-105"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>属性指示是否选中只读复选框。</span><span class="sxs-lookup"><span data-stu-id="b5800-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="b5800-106">此类的大部分核心功能都可在类中找到 <xref:System.Windows.Forms.FileDialog> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="b5800-107">在从右到左的操作系统上，设置包含窗体的 <xref:System.Windows.Forms.Control.RightToLeft> 属性以设置 <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> 对话框的 **文件名**、 **打开**和 **取消** 按钮的外观。</span><span class="sxs-lookup"><span data-stu-id="b5800-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="b5800-108">如果该属性未设置为 <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> ，则改为使用英语文本。</span><span class="sxs-lookup"><span data-stu-id="b5800-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="b5800-109">如果要使用户能够选择文件夹而不是文件，请改用 <xref:System.Windows.Forms.FolderBrowserDialog> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5800-110">下面的代码示例创建一个 <xref:System.Windows.Forms.OpenFileDialog> ，设置多个属性以定义文件扩展名筛选器和对话框行为，并使用方法显示对话框 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b5800-111">该示例要求在窗体 <xref:System.Windows.Forms.Button> 上放置了一个并对 <xref:System.IO> 其添加了命名空间的引用。</span><span class="sxs-lookup"><span data-stu-id="b5800-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="b5800-112">如何：从文件中读取文本</span><span class="sxs-lookup"><span data-stu-id="b5800-112">How to: Read Text from a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5800-113">初始化 <see cref="T:System.Windows.Forms.OpenFileDialog" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="b5800-113">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-114">这是编译器为类提供的默认构造函数 <xref:System.Windows.Forms.OpenFileDialog> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-114">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5800-115">获取或设置一个值，该值指示如果用户指定不存在的文件名，对话框是否显示警告。</span><span class="sxs-lookup"><span data-stu-id="b5800-115">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value><span data-ttu-id="b5800-116">如果对话框在用户指定的文件名不存在时显示警告，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-116"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b5800-117">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-117">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5800-118">获取或设置一个值，该值指示对话框是否允许选择多个文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-118">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value><span data-ttu-id="b5800-119">如果对话框允许同时选定多个文件，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-119"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b5800-120">默认值是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-121">使用 <xref:System.Windows.Forms.FileDialog.FileNames%2A> 属性可以访问所选文件名的完整列表。</span><span class="sxs-lookup"><span data-stu-id="b5800-121">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5800-122">下面的代码示例允许用户选择多个图像，并将其显示在 <xref:System.Windows.Forms.PictureBox> 窗体上的控件中。</span><span class="sxs-lookup"><span data-stu-id="b5800-122">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="b5800-123">它演示如何初始化 <xref:System.Windows.Forms.OpenFileDialog> 、设置 <xref:System.Windows.Forms.FileDialog.Title%2A> 和 <xref:System.Windows.Forms.FileDialog.Filter%2A> 属性，并允许用户通过将属性设置为 true 来选择多个文件 <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-123">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="b5800-124">此代码示例假定您的窗体已具有一个名为的 <xref:System.Windows.Forms.OpenFileDialog> 控件、一个名为的控件 `openFileDialog1` <xref:System.Windows.Forms.Button> `SelectFileButton` 和一个 <xref:System.Windows.Forms.FlowLayoutPanel> 名为的控件 `flowLayoutPanel1` 。</span><span class="sxs-lookup"><span data-stu-id="b5800-124">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5800-125">打开用户选定的具有只读权限的文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-125">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="b5800-126">该文件由 <see cref="P:System.Windows.Forms.FileDialog.FileName" /> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="b5800-126">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="b5800-127">指定用户所选定的只读文件的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-127">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-128"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用于提供一种从对话框快速打开文件的工具。</span><span class="sxs-lookup"><span data-stu-id="b5800-128">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="b5800-129">出于安全目的，将在只读模式下打开该文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-129">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="b5800-130">若要以读/写模式打开文件，必须使用其他方法，例如 <xref:System.IO.FileStream> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-130">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5800-131">下面的代码示例演示如何使用 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b5800-131">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5800-132">文件名为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-132">The file name is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5800-133">获取或设置一个值，该值指示是否选定只读复选框。</span><span class="sxs-lookup"><span data-stu-id="b5800-133">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value><span data-ttu-id="b5800-134">如果选中了只读复选框，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-134"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b5800-135">默认值是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-135">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-136">该 <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 状态不影响用于 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> 打开对话框中选定的文件的读/写模式。</span><span class="sxs-lookup"><span data-stu-id="b5800-136">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="b5800-137"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 将始终在只读模式下打开文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-137"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="b5800-138"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>必须先设置属性，然后才能使只读复选框显示在对话框中。</span><span class="sxs-lookup"><span data-stu-id="b5800-138">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5800-139">下面的代码示例演示属性的用法 <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-139">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="b5800-140">此示例显示 <xref:System.Windows.Forms.OpenFileDialog> <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 属性设置为的框 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b5800-140">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="b5800-141">如果用户单击该选项以只读模式打开文件，则 <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 属性的计算结果为 `true` ，并 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 使用方法打开文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-141">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="b5800-142">否则， <xref:System.IO.FileStream> 类用于在读/写模式下打开文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-142">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5800-143">将所有属性重新设置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="b5800-143">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5800-144">获取对话框中所选文件的文件名和扩展名。</span><span class="sxs-lookup"><span data-stu-id="b5800-144">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="b5800-145">文件名不包含路径。</span><span class="sxs-lookup"><span data-stu-id="b5800-145">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="b5800-146">对话框中所选文件的文件名和扩展名。</span><span class="sxs-lookup"><span data-stu-id="b5800-146">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="b5800-147">文件名不包含路径。</span><span class="sxs-lookup"><span data-stu-id="b5800-147">The file name does not include the path.</span></span> <span data-ttu-id="b5800-148">默认值为一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="b5800-148">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-149">安全文件名 (不包含路径的文件的名称和扩展名) 可用于提高应用程序的安全性，因为它不会公开路径信息。</span><span class="sxs-lookup"><span data-stu-id="b5800-149">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="b5800-150">对于以受限信任级别运行的代码，此属性应该是可访问的。</span><span class="sxs-lookup"><span data-stu-id="b5800-150">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5800-151">获取对话框中所有选定文件的文件名和扩展名的数组。</span><span class="sxs-lookup"><span data-stu-id="b5800-151">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="b5800-152">文件名不包含路径。</span><span class="sxs-lookup"><span data-stu-id="b5800-152">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="b5800-153">对话框中所有选定文件的文件名和扩展名的数组。</span><span class="sxs-lookup"><span data-stu-id="b5800-153">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="b5800-154">文件名不包含路径。</span><span class="sxs-lookup"><span data-stu-id="b5800-154">The file names do not include the path.</span></span> <span data-ttu-id="b5800-155">如果未选择任何文件，则返回空数组。</span><span class="sxs-lookup"><span data-stu-id="b5800-155">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5800-156">安全文件名 (不包含路径的文件的名称和扩展名) 可用于提高应用程序的安全性，因为它不会公开路径信息。</span><span class="sxs-lookup"><span data-stu-id="b5800-156">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="b5800-157">对于以受限信任级别运行的代码，此属性应该是可访问的。</span><span class="sxs-lookup"><span data-stu-id="b5800-157">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5800-158">获取或设置一个值，该值指示对话框是否包含只读复选框。</span><span class="sxs-lookup"><span data-stu-id="b5800-158">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value><span data-ttu-id="b5800-159">如果对话框包含只读复选框，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-159"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b5800-160">默认值是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5800-160">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5800-161">下面的代码示例演示属性的用法 <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b5800-161">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="b5800-162">此示例显示 <xref:System.Windows.Forms.OpenFileDialog> <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 属性设置为的框 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b5800-162">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="b5800-163">如果用户单击该选项以只读模式打开文件，则 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 使用方法打开文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-163">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="b5800-164">否则， <xref:System.IO.FileStream> 类用于在读/写模式下打开文件。</span><span class="sxs-lookup"><span data-stu-id="b5800-164">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>
