<Type Name="ToolBar+ToolBarButtonCollection" FullName="System.Windows.Forms.ToolBar+ToolBarButtonCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cc750c287c0469fc2119e6ae745830afee60e10" /><Meta Name="ms.sourcegitcommit" Value="61571e7daf68b836515ede4868702c1f1ed4ae8b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/05/2020" /><Meta Name="ms.locfileid" Value="93402978" /></Metadata><TypeSignature Language="C#" Value="public class ToolBar.ToolBarButtonCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ToolBar/ToolBarButtonCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBar.ToolBarButtonCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ToolBar::ToolBarButtonCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolBar.ToolBarButtonCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>封装 <see cref="T:System.Windows.Forms.ToolBarButton" /> 控件的集合以供 <see cref="T:System.Windows.Forms.ToolBar" /> 类使用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>是由类使用的从零开始的索引集合，用于 <xref:System.Windows.Forms.ToolBar> 保存 <xref:System.Windows.Forms.ToolBarButton> 分配给工具栏的所有控件。 使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 方法可添加各个按钮，并使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> 方法来删除它们。 调用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法可从集合中移除所有按钮。  
  
   
  
## Examples  
 下面的代码示例创建并初始化一个 <xref:System.Windows.Forms.ToolBar> 和三个 <xref:System.Windows.Forms.ToolBarButton> 控件。 工具栏按钮将分配给工具栏，工具栏将添加到窗体中。 此代码需要已 <xref:System.Windows.Forms.Form> 创建的。  
  
 [!code-cpp[Classic ToolBar.Buttons Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.Buttons Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.Buttons Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.ToolBarButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButtonCollection (System.Windows.Forms.ToolBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.#ctor(System.Windows.Forms.ToolBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ToolBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButtonCollection(System::Windows::Forms::ToolBar ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBar.ToolBarButtonCollection : System.Windows.Forms.ToolBar -&gt; System.Windows.Forms.ToolBar.ToolBarButtonCollection" Usage="new System.Windows.Forms.ToolBar.ToolBarButtonCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ToolBar" />，它是 <see cref="T:System.Windows.Forms.ToolBarButton" /> 控件集合的父项。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> 类的新实例，并将其分配给指定的工具栏。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常不会创建 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 并显式调用其构造函数。 通过引用 <xref:System.Windows.Forms.ToolBar.Buttons%2A> 控件的属性 <xref:System.Windows.Forms.ToolBar> ，创建了 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。 然后，你可以访问其属性和方法，然后将 <xref:System.Windows.Forms.ToolBarButton> 控件分配给集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将新的工具栏按钮添加到工具栏按钮集合的末尾。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; int" Usage="toolBarButtonCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要在新的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 上显示的文本。</param>
        <summary>使用指定的 <see cref="P:System.Windows.Forms.ToolBarButton.Text" /> 属性值将一个新工具栏按钮添加到工具栏按钮集合的末尾。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的从零开始的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你还可以使用或方法将新 <xref:System.Windows.Forms.ToolBarButton> 对象添加到集合 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> ，或者使用方法的其他版本添加 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.ToolBarButton> 先前添加的，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (button As ToolBarButton) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ToolBarButton -&gt; int" Usage="toolBarButtonCollection.Add button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">将添加到所有现有按钮之后的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>将指定的工具栏按钮添加到工具栏按钮集合的末尾。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的从零开始的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你还可以使用或方法将新 <xref:System.Windows.Forms.ToolBarButton> 对象添加到集合 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> ，或者使用方法的其他版本添加 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.ToolBarButton> 先前添加的，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例将一个新 <xref:System.Windows.Forms.ToolBarButton> 控件添加到现有 <xref:System.Windows.Forms.ToolBar> 按钮的现有按钮。 工具栏按钮将添加到集合的末尾 <xref:System.Windows.Forms.ToolBar.Buttons%2A?displayProperty=nameWithType> 。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ToolBarButton[] buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ToolBarButton[] buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (buttons As ToolBarButton())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ToolBarButton ^&gt; ^ buttons);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ToolBarButton[] -&gt; unit" Usage="toolBarButtonCollection.AddRange buttons" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttons" Type="System.Windows.Forms.ToolBarButton[]" />
      </Parameters>
      <Docs>
        <param name="buttons">要添加到此 <see cref="T:System.Windows.Forms.ToolBarButton" />（包含在数组中）中的 <see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> 控件的集合。</param>
        <summary>将一个工具栏按钮集合添加到此工具栏按钮集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton>数组中包含的对象 `nodes` 将追加到集合的末尾。  
  
 可以使用方法将一组以前创建的对象快速添加 <xref:System.Windows.Forms.ToolBarButton> 到集合，而不是使用方法手动将它们添加 <xref:System.Windows.Forms.ToolBarButton> 到集合中 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.ToolBarButton> 先前添加的，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolBarButtonCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从工具栏按钮集合中移除所有按钮。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A>方法循环访问集合，并删除分配给的所有工具栏按钮 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。  
  
 若要从集合中删除单个工具栏按钮，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 方法。  
  
 若要将新 <xref:System.Windows.Forms.ToolBarButton> 对象添加到集合，请 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 使用、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例显示在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> <xref:System.Windows.Forms.ToolBar.Buttons%2A> 调用方法之前和之后的 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 。 此代码要求 <xref:System.Windows.Forms.ToolBar> 创建至少具有一个的 <xref:System.Windows.Forms.ToolBarButton> 。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Contains(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (button As ToolBarButton) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ToolBarButton -&gt; bool" Usage="toolBarButtonCollection.Contains button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">要在集合中查找的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>确定指定的工具栏按钮是否是集合的成员。</summary>
        <returns>如果 <see cref="T:System.Windows.Forms.ToolBarButton" /> 是集合的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使你可以在尝试对 <xref:System.Windows.Forms.ToolBarButton> 执行操作之前确定是否为集合的成员 <xref:System.Windows.Forms.ToolBarButton> 。 您可以使用此方法确认已 <xref:System.Windows.Forms.ToolBarButton> 添加到或的仍是集合的成员。  
  
   
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="toolBarButtonCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的名称。</param>
        <summary>确定集合中是否包含具有指定键的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</summary>
        <returns>如果找到了具有指定键的 <see cref="T:System.Windows.Forms.ToolBarButton" />，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 参数为 `null` 或空字符串，则 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> 返回 `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取工具栏按钮集合中的按钮数。</summary>
        <value>分配给工具栏的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 控件数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>属性包含分配给集合的控件的实际数量 <xref:System.Windows.Forms.ToolBarButton> 。 通常使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 属性值作为循环的上限来循环访问集合。 集合的索引值是从零开始的索引，因此必须从循环变量中减去一个，否则会超出集合的上限并引发异常。  
  
   
  
## Examples  
 下面的代码示例显示在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> <xref:System.Windows.Forms.ToolBar.Buttons%2A> 调用方法之前和之后的 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 。 此代码要求 <xref:System.Windows.Forms.ToolBar> 创建至少具有一个的 <xref:System.Windows.Forms.ToolBarButton> 。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="toolBarButtonCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个可用于循环访问工具栏按钮集合的枚举数。</summary>
        <returns>表示树节点集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (button As ToolBarButton) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ToolBarButton -&gt; int" Usage="toolBarButtonCollection.IndexOf button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">要在集合中查找的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>检索集合中指定工具栏按钮的索引。</summary>
        <returns>集合中项的从零开始的索引（如果找到）；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可让你轻松访问集合中的索引值 <xref:System.Windows.Forms.ToolBarButton> 。 利用索引值，你可以轻松确定单击了哪个 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 <xref:System.Windows.Forms.ToolBarButton>可以通过计算属性的值来确定单击的 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf%2A> 值 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例创建一个 <xref:System.Windows.Forms.ToolBar> 和三个 <xref:System.Windows.Forms.ToolBarButton> 控件。 工具栏按钮将分配给按钮集合，集合将分配给工具栏，并将工具栏添加到窗体中。 在 <xref:System.Windows.Forms.ToolBar.ButtonClick> 工具栏的事件上， <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> 计算的属性 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> ，并打开相应的对话框。 此代码要求 <xref:System.Windows.Forms.Form> 已创建、、 <xref:System.Windows.Forms.OpenFileDialog> <xref:System.Windows.Forms.SaveFileDialog> 和的 <xref:System.Windows.Forms.PrintDialog> 。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="toolBarButtonCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的名称。</param>
        <summary>检索具有指定键的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的第一个匹配项的索引。</summary>
        <returns>如果找到了具有指定键的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的第一个匹配项的索引，为该索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey%2A> 连续调用，最后返回的索引将首先检查键匹配项，如果没有匹配项，则从集合的开头开始搜索。  
  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 参数为 `null` 或空字符串，则 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> 返回-1。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert(System.Int32,System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ToolBarButton -&gt; unit" Usage="toolBarButtonCollection.Insert (index, button)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入工具栏按钮的索引位置。</param>
        <param name="button">要插入的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>在指定位置插入工具栏按钮集合中的现有工具栏按钮。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你还可以 <xref:System.Windows.Forms.ToolBarButton> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 中 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.ToolBarButton> 先前添加的，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否为只读。</summary>
        <value>如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置集合中的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolBarButton ^ default[int] { System::Windows::Forms::ToolBarButton ^ get(int index); void set(int index, System::Windows::Forms::ToolBarButton ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ToolBarButton with get, set" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的索引位置。</param>
        <summary>获取或设置工具栏按钮集合中指定索引位置的工具栏按钮。</summary>
        <value><see cref="T:System.Windows.Forms.ToolBarButton" />，它表示指定索引位置的工具栏按钮。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要将 <xref:System.Windows.Forms.ToolBarButton> 控件分配到特定位置，或从中检索它们 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> ，可以引用具有特定索引值的集合对象。 的索引值 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 是从零开始的索引。  
  
   
  
## Examples  
 下面的代码示例将替换工具栏上的最后一个工具栏按钮。 此代码要求 <xref:System.Windows.Forms.ToolBar> 至少 <xref:System.Windows.Forms.ToolBarButton> 创建一个。 该示例获取工具栏上的按钮数，并将最后一个按钮替换为新创建的按钮。 `index` <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 因为 <xref:System.Windows.Forms.ToolBarButton> 集合是从零开始的索引，所以被替换的工具栏按钮的值被设置为减一。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="index" /> 值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 值小于零。  
  
- 或 - 
<paramref name="index" /> 值大于集合中的按钮数，并且按钮集合不为 <see langword="null" />。</exception>
        <altmember cref="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolBarButton ^ default[System::String ^] { System::Windows::Forms::ToolBarButton ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ToolBarButton" Usage="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要检索的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的名称。</param>
        <summary>从集合中获取具有指定键的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</summary>
        <value><see cref="T:System.Windows.Forms.ToolBarButton" />，其 <see cref="P:System.Windows.Forms.ToolBarButton.Name" /> 属性与指定键匹配。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 参数为 `null` 或空字符串，则 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> 返回 `null` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ToolBarButton -&gt; unit" Usage="toolBarButtonCollection.Remove button" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button">要从该集合中移除的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>从工具栏按钮集合中移除给定按钮。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从集合中移除工具栏按钮，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法。  
  
 若要将新 <xref:System.Windows.Forms.ToolBarButton> 对象添加到集合，请 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 使用、 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 或 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例从控件中删除现有的（ <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 如果存在），并向添加四个新对象并将其插入 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 此示例要求具有 <xref:System.Windows.Forms.Form> 具有 <xref:System.Windows.Forms.ToolBar> 控件的。  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="toolBarButtonCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的索引位置。</param>
        <summary>从工具栏按钮集合中移除给定按钮。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>方法移除 <xref:System.Windows.Forms.ToolBarButton> 中指定位置的 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。 如果要删除集合中的所有 <xref:System.Windows.Forms.ToolBarButton> 控件，请使用 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例移除中的最后一个 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar> 。 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A>由于 <xref:System.Windows.Forms.ToolBarButton> 集合是从零开始的索引，因此要移除的工具栏按钮的索引值被设置为等于属性减一。  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 值小于零或大于集合中按钮的数目。</exception>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="toolBarButtonCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要从集合中移除的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的名称。</param>
        <summary>从集合中移除具有指定键的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.ToolBarButton> <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="toolBarButtonCollection.System.Collections.ICollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
        <param name="index"><paramref name="dest" /> 中从零开始的索引，从此处开始复制。</param>
        <summary>从特定的 <see cref="T:System.Collections.ICollection" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.ICollection> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.ICollection> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可用于同步访问按钮集合的对象。</summary>
        <value>用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.ICollection> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (button As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ button) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="toolBarButtonCollection.System.Collections.IList.Add button" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">将添加到所有现有按钮之后的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>将指定的工具栏按钮添加到工具栏按钮集合的末尾。</summary>
        <returns>添加到集合中的 <see cref="T:System.Windows.Forms.ToolBarButton" /> 的从零开始的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="button" /> 不是 <see cref="T:System.Windows.Forms.ToolBarButton" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (button As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ button) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="toolBarButtonCollection.System.Collections.IList.Contains button" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">要在集合中定位的项。</param>
        <summary>确定集合中是否包含特定值。</summary>
        <returns>如果在集合中找到该项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (button As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ button) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="toolBarButtonCollection.System.Collections.IList.IndexOf button" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">要在集合中定位的项。</param>
        <summary>确定集合中特定项的索引。</summary>
        <returns>如果在列表中找到，则为 <paramref name="button" /> 的索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, button As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ button) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="toolBarButtonCollection.System.Collections.IList.Insert (index, button)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入工具栏按钮的索引位置。</param>
        <param name="button">要插入的 <see cref="T:System.Windows.Forms.ToolBarButton" />。</param>
        <summary>在指定位置插入工具栏按钮集合中的现有工具栏按钮。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="button" /> 不是 <see cref="T:System.Windows.Forms.ToolBarButton" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否具有固定大小。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">要获取或设置的元素的从零开始的索引。</param>
        <summary>获取或设置指定索引处的项。</summary>
        <value>指定索引处的元素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (button As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ button) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="toolBarButtonCollection.System.Collections.IList.Remove button" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</param>
        <summary>从集合中移除某项的第一个匹配项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 被强制转换为 <xref:System.Collections.IList> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
