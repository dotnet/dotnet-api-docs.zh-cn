<Type Name="MaskInputRejectedEventHandler" FullName="System.Windows.Forms.MaskInputRejectedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a114c2aa4bfda4a271b973d184d01ac5668256f8" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90797609" /></Metadata><TypeSignature Language="C#" Value="public delegate void MaskInputRejectedEventHandler(object? sender, MaskInputRejectedEventArgs e);" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MaskInputRejectedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MaskInputRejectedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MaskInputRejectedEventHandler(sender As Object, e As MaskInputRejectedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void MaskInputRejectedEventHandler(System::Object ^ sender, MaskInputRejectedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type MaskInputRejectedEventHandler = delegate of obj * MaskInputRejectedEventArgs -&gt; unit" />
  <TypeSignature Language="C#" Value="public delegate void MaskInputRejectedEventHandler(object sender, MaskInputRejectedEventArgs e);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.MaskInputRejectedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MaskInputRejectedEventArgs" />。</param>
    <summary>表示将处理 <see cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" /> 控件的 <see cref="T:System.Windows.Forms.MaskedTextBox" /> 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> <xref:System.Windows.Forms.MaskedTextBox> 当输入字符与输入掩码中的相应元素不匹配时，将引发类的事件。 有关详细信息，请参阅 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> 事件。  
  
 创建 <xref:System.Windows.Forms.MaskInputRejectedEventHandler> 委托时，需要标识将处理该事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。 有关事件处理程序委托的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
    <altmember cref="T:System.Windows.Forms.MaskInputRejectedEventArgs" />
    <altmember cref="T:System.Windows.Forms.MaskedTextBox" />
  </Docs>
</Type>
