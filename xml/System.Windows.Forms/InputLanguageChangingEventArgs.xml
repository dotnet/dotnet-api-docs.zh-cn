<Type Name="InputLanguageChangingEventArgs" FullName="System.Windows.Forms.InputLanguageChangingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37de4e8b429076ed0cfc66bcff64d36c3e499652" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89831441" /></Metadata><TypeSignature Language="C#" Value="public class InputLanguageChangingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputLanguageChangingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class InputLanguageChangingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputLanguageChangingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type InputLanguageChangingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用类中的数据 <xref:System.Windows.Forms.InputLanguageChangingEventArgs> 准备更改输入法编辑器 (IME) 或交换从右到左的值。 还可以更改线程的 <xref:System.Threading.Thread.CurrentCulture%2A> 和属性， <xref:System.Threading.Thread.CurrentUICulture%2A> 以便选取不同的资源。 若要防止输入语言发生更改，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true` 。  
  
 <xref:System.Windows.Forms.InputLanguageChangingEventArgs>标识所请求的输入语言和新输入语言的字符集。 <xref:System.Windows.Forms.InputLanguageChangingEventArgs.Culture%2A>属性标识所请求语言的区域设置。  
  
 事件 <xref:System.Windows.Forms.Form.InputLanguageChanging> 位于事件之前 <xref:System.Windows.Forms.Form.InputLanguageChanged> 。  
  
 有关处理事件的信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此类型。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanging> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanging> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.InputLanguage" />
    <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangingEventArgs (System.Globalization.CultureInfo culture, bool sysCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture, bool sysCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangingEventArgs.#ctor(System.Globalization.CultureInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo, sysCharSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangingEventArgs(System::Globalization::CultureInfo ^ culture, bool sysCharSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangingEventArgs : System.Globalization.CultureInfo * bool -&gt; System.Windows.Forms.InputLanguageChangingEventArgs" Usage="new System.Windows.Forms.InputLanguageChangingEventArgs (culture, sysCharSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="sysCharSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">请求的输入语言的区域设置。</param>
        <param name="sysCharSet">如果系统默认字体支持请求的输入语言要求的字符集，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>使用指定的区域设置、字符集和接受性初始化 <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangingEventArgs (System.Windows.Forms.InputLanguage inputLanguage, bool sysCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.InputLanguage inputLanguage, bool sysCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangingEventArgs.#ctor(System.Windows.Forms.InputLanguage,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputLanguage As InputLanguage, sysCharSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangingEventArgs(System::Windows::Forms::InputLanguage ^ inputLanguage, bool sysCharSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangingEventArgs : System.Windows.Forms.InputLanguage * bool -&gt; System.Windows.Forms.InputLanguageChangingEventArgs" Usage="new System.Windows.Forms.InputLanguageChangingEventArgs (inputLanguage, sysCharSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputLanguage" Type="System.Windows.Forms.InputLanguage" />
        <Parameter Name="sysCharSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputLanguage">请求的输入语言。</param>
        <param name="sysCharSet">如果系统默认字体支持请求的输入语言要求的字符集，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>用指定的输入语言、字符集和接受对语言的更改来初始化 <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="inputLanguage" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangingEventArgs.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.InputLanguageChangingEventArgs.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取请求的输入语言的区域设置。</summary>
        <value><see cref="T:System.Globalization.CultureInfo" />，它指定请求的输入语言的区域设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.InputLanguageChangedEventArgs.Culture%2A>属性指定一个 <xref:System.Globalization.CultureInfo> ，它定义一组与用户的语言、子语言、国家/地区和文化约定相关的用户首选项信息。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanging?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanging?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InputLanguage InputLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.InputLanguage InputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangingEventArgs.InputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InputLanguage ^ InputLanguage { System::Windows::Forms::InputLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputLanguage : System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguageChangingEventArgs.InputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示输入语言的值。</summary>
        <value>输入语言。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanging?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanging?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
    <Member MemberName="SysCharSet">
      <MemberSignature Language="C#" Value="public bool SysCharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SysCharSet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangingEventArgs.SysCharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SysCharSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SysCharSet { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SysCharSet : bool" Usage="System.Windows.Forms.InputLanguageChangingEventArgs.SysCharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示系统默认字体是否支持请求的输入语言所要求的字符集。</summary>
        <value>如果系统默认字体支持请求的输入语言要求的字符集，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Form.InputLanguageChanging?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Form> `Form1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Form.InputLanguageChanging?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
