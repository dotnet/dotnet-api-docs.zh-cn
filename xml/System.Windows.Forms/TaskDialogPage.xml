<Type Name="TaskDialogPage" FullName="System.Windows.Forms.TaskDialogPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cb3425b90bdb314e5f8792f73f4b07e7f2e2e78" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100303434" /></Metadata><TypeSignature Language="C#" Value="public class TaskDialogPage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskDialogPage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TaskDialogPage" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskDialogPage" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskDialogPage" />
  <TypeSignature Language="F#" Value="type TaskDialogPage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示任务对话框的一页内容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 通过调用具有目标实例的方法，可以在显示任务对话框时进行导航 <xref:System.Windows.Forms.TaskDialogPage.Navigate(System.Windows.Forms.TaskDialogPage)> <xref:System.Windows.Forms.TaskDialogPage> 。

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskDialogPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskDialogPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.TaskDialogPage" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCancel">
      <MemberSignature Language="C#" Value="public bool AllowCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.AllowCancel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCancel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCancel : bool with get, set" Usage="System.Windows.Forms.TaskDialogPage.AllowCancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以将 <see cref="P:System.Windows.Forms.TaskDialogButton.Cancel" /> 作为结果按钮来通过按 ESC 或 Alt+F4 或单击标题栏的“关闭”按钮关闭任务对话框，即使 <see cref="P:System.Windows.Forms.TaskDialogButton.Cancel" /> 按钮未添加到 <see cref="P:System.Windows.Forms.TaskDialogPage.Buttons" /> 集合中也是如此。</summary>
        <value><see langword="true" /> 若要允许通过按 ESC 或 Alt + F4 或单击标题栏的 "关闭" 按钮来关闭对话框，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 您可以通过添加 <xref:System.Windows.Forms.TaskDialogButton.Cancel> 其属性设置为的按钮来截获取消对话框，而不显示 "取消" 按钮 <xref:System.Windows.Forms.TaskDialogButton.Visible> `false` 。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowMinimize">
      <MemberSignature Language="C#" Value="public bool AllowMinimize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMinimize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.AllowMinimize" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMinimize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMinimize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMinimize : bool with get, set" Usage="System.Windows.Forms.TaskDialogPage.AllowMinimize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在以无模式显示任务对话框时是否可以将其最小化。</summary>
        <value><see langword="true" /> 指定可以最小化任务对话框;否则为 <see langword="false" /> 。
默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 将此属性设置为时 `true` ， <xref:System.Windows.Forms.TaskDialogPage.AllowCancel> 将自动隐含。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="BoundDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialog? BoundDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialog BoundDialog" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.BoundDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundDialog As TaskDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialog ^ BoundDialog { System::Windows::Forms::TaskDialog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundDialog : System.Windows.Forms.TaskDialog" Usage="System.Windows.Forms.TaskDialogPage.BoundDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此页当前绑定到的 <see cref="T:System.Windows.Forms.TaskDialog" /> 实例。</summary>
        <value><see cref="T:System.Windows.Forms.TaskDialog" />此页绑定到的实例，或者 <see langword="null" /> 如果当前未绑定此页，则为。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 显示页面时，将对其进行绑定，这会由事件 <xref:System.Windows.Forms.TaskDialogPage.Created> 和指示 <xref:System.Windows.Forms.TaskDialogPage.Destroyed> 。

 页面绑定到任务对话框时，您不能同时使用不同的实例来显示该页实例 <xref:System.Windows.Forms.TaskDialog> 。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogButtonCollection Buttons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogButtonCollection Buttons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Buttons" />
      <MemberSignature Language="VB.NET" Value="Public Property Buttons As TaskDialogButtonCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogButtonCollection ^ Buttons { System::Windows::Forms::TaskDialogButtonCollection ^ get(); void set(System::Windows::Forms::TaskDialogButtonCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Buttons : System.Windows.Forms.TaskDialogButtonCollection with get, set" Usage="System.Windows.Forms.TaskDialogPage.Buttons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButtonCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在此页中显示的推送按钮的集合。</summary>
        <value>要在此页中显示的自定义按钮的集合。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string? Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Windows.Forms.TaskDialogPage.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在任务对话框的标题栏中显示的文本。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 显示对话框时可以设置此属性。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且任务对话框已开始导航到此页面实例，但尚未引发 <see cref="E:System.Windows.Forms.TaskDialogPage.Created" /> 事件。
- 或 - 该属性是在当前绑定到任务对话框的页面实例上设置的，但该对话框刚刚开始导航到另一个页面。</exception>
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public event EventHandler? Created;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Created" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TaskDialogPage.Created" />
      <MemberSignature Language="VB.NET" Value="Public Event Created As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Created;" />
      <MemberSignature Language="F#" Value="member this.Created : EventHandler " Usage="member this.Created : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在将此实例绑定到任务对话框并且任务对话框已创建由此 <see cref="T:System.Windows.Forms.TaskDialogPage" /> 实例表示的 GUI 元素之后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 这将在显示或导航对话框之后发生。

 发生此事件时， <xref:System.Windows.Forms.TaskDialogPage.BoundDialog> 属性将返回 <xref:System.Windows.Forms.TaskDialog> 此页绑定到的实例。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogButton? DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogButton DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As TaskDialogButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogButton ^ DefaultButton { System::Windows::Forms::TaskDialogButton ^ get(); void set(System::Windows::Forms::TaskDialogButton ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : System.Windows.Forms.TaskDialogButton with get, set" Usage="System.Windows.Forms.TaskDialogPage.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置任务对话框中的默认按钮。</summary>
        <value>任务对话框中的默认按钮。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destroyed">
      <MemberSignature Language="C#" Value="public event EventHandler? Destroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Destroyed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TaskDialogPage.Destroyed" />
      <MemberSignature Language="VB.NET" Value="Public Event Destroyed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Destroyed;" />
      <MemberSignature Language="F#" Value="member this.Destroyed : EventHandler " Usage="member this.Destroyed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在任务对话框即将销毁此 <see cref="T:System.Windows.Forms.TaskDialogPage" /> 实例所表示的 GUI 元素并且即将从任务对话框中解除绑定时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 关闭或导航对话框时会发生这种情况。

 此事件发生后， <xref:System.Windows.Forms.TaskDialogPage.BoundDialog> 属性将返回 `null` 。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expander">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogExpander? Expander { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogExpander Expander" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Expander" />
      <MemberSignature Language="VB.NET" Value="Public Property Expander As TaskDialogExpander" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogExpander ^ Expander { System::Windows::Forms::TaskDialogExpander ^ get(); void set(System::Windows::Forms::TaskDialogExpander ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expander : System.Windows.Forms.TaskDialogExpander with get, set" Usage="System.Windows.Forms.TaskDialogPage.Expander" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogExpander</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在此页中显示的对话框扩展器。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 展开按钮 (仅在其 <xref:System.Windows.Forms.TaskDialogExpander.Text> 属性不为或空字符串时才会显示扩展的区域) `null` 。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="Footnote">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogFootnote? Footnote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogFootnote Footnote" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Footnote" />
      <MemberSignature Language="VB.NET" Value="Public Property Footnote As TaskDialogFootnote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogFootnote ^ Footnote { System::Windows::Forms::TaskDialogFootnote ^ get(); void set(System::Windows::Forms::TaskDialogFootnote ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Footnote : System.Windows.Forms.TaskDialogFootnote with get, set" Usage="System.Windows.Forms.TaskDialogPage.Footnote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogFootnote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在此页中显示的脚注。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 脚注仅在其 <xref:System.Windows.Forms.TaskDialogFootnote.Text> 属性不为或空字符串时才会显示 `null` 。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="Heading">
      <MemberSignature Language="C#" Value="public string? Heading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Heading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Heading" />
      <MemberSignature Language="VB.NET" Value="Public Property Heading As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Heading { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Heading : string with get, set" Usage="System.Windows.Forms.TaskDialogPage.Heading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题（主指令）。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 显示对话框时可以设置此属性。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该属性是在当前绑定到任务对话框的页面实例上设置的，但该对话框刚刚开始导航到另一个页面。</exception>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler? HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TaskDialogPage.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当用户在任务对话框具有焦点时按 F1，或当用户单击 <see cref="P:System.Windows.Forms.TaskDialogButton.Help" /> 按钮时发生。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogIcon? Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogIcon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As TaskDialogIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogIcon ^ Icon { System::Windows::Forms::TaskDialogIcon ^ get(); void set(System::Windows::Forms::TaskDialogIcon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Forms.TaskDialogIcon with get, set" Usage="System.Windows.Forms.TaskDialogPage.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主图标。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 此属性可在显示对话框时进行设置，但不能在从 (创建的实例之间切换，也不能在 <xref:System.Drawing.Icon>) 和标准图标实例创建的实例之间切换。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且任务对话框已开始导航到此页面实例，但尚未引发 <see cref="E:System.Windows.Forms.TaskDialogPage.Created" /> 事件。
- 或 - 该属性是在当前绑定到任务对话框的页面实例上设置的，但该对话框刚刚开始导航到另一个页面。</exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (System.Windows.Forms.TaskDialogPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Windows.Forms.TaskDialogPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogPage.Navigate(System.Windows.Forms.TaskDialogPage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (page As TaskDialogPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::Windows::Forms::TaskDialogPage ^ page);" />
      <MemberSignature Language="F#" Value="member this.Navigate : System.Windows.Forms.TaskDialogPage -&gt; unit" Usage="taskDialogPage.Navigate page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TaskDialogPage" />
      </Parameters>
      <Docs>
        <param name="page">页面实例，其中包含此任务对话框将显示的内容。</param>
        <summary>显示当前任务对话框中的新内容。
            <paramref name="page" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 在导航过程中，对话框将通过指定的及其控件重新创建对话框 `page` ，并取消绑定并销毁当前显示的页面。

 导航对话框后，不能立即操作此页或其控件 (除了调用 <xref:System.Windows.Forms.TaskDialog.Close> 或再次导航对话框) 。
你将需要等待 <xref:System.Windows.Forms.TaskDialogPage.Created> 事件发生，然后才能操作页或其控件。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">页面实例当前未绑定到对话框，<see cref="P:System.Windows.Forms.TaskDialogPage.BoundDialog" /> 为 <see langword="null" />。
- 或 - 此页面实例包含无效配置。
- 或 - 此方法是从当前任务对话框的某个单选按钮的 <see cref="E:System.Windows.Forms.TaskDialogRadioButton.CheckedChanged" /> 事件内调用的。
- 或 - 任务对话框已关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnCreated">
      <MemberSignature Language="C#" Value="protected internal void OnCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogPage.OnCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCreated : EventArgs -&gt; unit" Usage="taskDialogPage.OnCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.TaskDialogPage.Created" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDestroyed">
      <MemberSignature Language="C#" Value="protected internal void OnDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogPage.OnDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDestroyed : EventArgs -&gt; unit" Usage="taskDialogPage.OnDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.TaskDialogPage.Destroyed" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequest">
      <MemberSignature Language="C#" Value="protected internal void OnHelpRequest (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnHelpRequest(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TaskDialogPage.OnHelpRequest(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnHelpRequest (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnHelpRequest(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnHelpRequest : EventArgs -&gt; unit" Usage="taskDialogPage.OnHelpRequest e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.TaskDialogPage.HelpRequest" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogProgressBar? ProgressBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogProgressBar ProgressBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.ProgressBar" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressBar As TaskDialogProgressBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogProgressBar ^ ProgressBar { System::Windows::Forms::TaskDialogProgressBar ^ get(); void set(System::Windows::Forms::TaskDialogProgressBar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressBar : System.Windows.Forms.TaskDialogProgressBar with get, set" Usage="System.Windows.Forms.TaskDialogPage.ProgressBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogProgressBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在此页中显示的进度栏。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 仅当进度栏的 <xref:System.Windows.Forms.TaskDialogProgressBar.State> 属性为 not 时才会显示 <xref:System.Windows.Forms.TaskDialogProgressBarState.None> 。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="RadioButtons">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogRadioButtonCollection RadioButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogRadioButtonCollection RadioButtons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.RadioButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property RadioButtons As TaskDialogRadioButtonCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogRadioButtonCollection ^ RadioButtons { System::Windows::Forms::TaskDialogRadioButtonCollection ^ get(); void set(System::Windows::Forms::TaskDialogRadioButtonCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RadioButtons : System.Windows.Forms.TaskDialogRadioButtonCollection with get, set" Usage="System.Windows.Forms.TaskDialogPage.RadioButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogRadioButtonCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在此页中显示的单选按钮的集合。</summary>
        <value>要在此页中显示的单选按钮的集合。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.TaskDialogPage.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示文本和控件是否按从右至左读取的方式显示。</summary>
        <value><see langword="true" /> 若要显示从右向左阅读的文本和控件，则为; <see langword="false" /> 显示从左到右读取的控件。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 请注意，当使用或导航到在其中设置了此标志的任务对话框后 <xref:System.Windows.Forms.TaskDialogPage> ， <xref:System.Windows.Forms.TaskDialogPage> 即使在未设置此标志的情况下，也会将后续导航保留到新的中。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public bool SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SizeToContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : bool with get, set" Usage="System.Windows.Forms.TaskDialogPage.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示任务对话框的宽度取决于其内容区域的宽度（类似于消息框大小调整行为）。</summary>
        <value><see langword="true" /> 若要按内容区域的宽度确定任务对话框的宽度，则为; 否则为。否则为 <see langword="false" /> 。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string? Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TaskDialogPage.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对话框的主文本内容。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 显示对话框时可以设置此属性。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">该属性是在当前绑定到任务对话框的页面实例上设置的，但该对话框刚刚开始导航到另一个页面。</exception>
      </Docs>
    </Member>
    <Member MemberName="Verification">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TaskDialogVerificationCheckBox? Verification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TaskDialogVerificationCheckBox Verification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TaskDialogPage.Verification" />
      <MemberSignature Language="VB.NET" Value="Public Property Verification As TaskDialogVerificationCheckBox" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TaskDialogVerificationCheckBox ^ Verification { System::Windows::Forms::TaskDialogVerificationCheckBox ^ get(); void set(System::Windows::Forms::TaskDialogVerificationCheckBox ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verification : System.Windows.Forms.TaskDialogVerificationCheckBox with get, set" Usage="System.Windows.Forms.TaskDialogPage.Verification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TaskDialogVerificationCheckBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在此页中显示的验证复选框。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 仅当其 <xref:System.Windows.Forms.TaskDialogVerificationCheckBox.Text> 属性不为或空字符串时，才会显示 "验证" 复选框 `null` 。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">属性已设置，且此页面实例当前已绑定到任务对话框。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
