<Type Name="IDataGridViewEditingCell" FullName="System.Windows.Forms.IDataGridViewEditingCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2748de7d86865ca37e72d1a871f96fc7689f3728" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83903997" /></Metadata><TypeSignature Language="C#" Value="public interface IDataGridViewEditingCell" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingCell" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingCell" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingCell" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingCell = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>为允许操作它的值的单元格定义常用功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口由派生自 <xref:System.Windows.Forms.DataGridViewCell> 的类（如 <xref:System.Windows.Forms.DataGridViewCheckBoxCell>）实现，并提供一个用户界面（UI）用于指定值，而无需承载编辑控件。 如果该单元格处于编辑模式，则显示此示例中的 UI。  
  
 其他单元类型（如 <xref:System.Windows.Forms.DataGridViewButtonCell>）提供 UI，但不存储用户指定的值。 在这种情况下，单元类型不实现 <xref:System.Windows.Forms.IDataGridViewEditingCell> 或承载编辑控件。  
  
 当单元格处于编辑模式（如 <xref:System.Windows.Forms.DataGridViewTextBoxCell>）时，显示编辑控件的单元格类型不实现 <xref:System.Windows.Forms.IDataGridViewEditingCell>，而是提供实现 <xref:System.Windows.Forms.IDataGridViewEditingControl>的伴生类。 例如，<xref:System.Windows.Forms.DataGridViewTextBoxCell> 提供从 <xref:System.Windows.Forms.TextBox> 控件派生并实现 <xref:System.Windows.Forms.IDataGridViewEditingControl>的 <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>。 在这种情况下，单元 <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> 属性设置为表示编辑控件类型的 <xref:System.Type> 对象。 有关实现 <xref:System.Windows.Forms.IDataGridViewEditingControl>的信息，请参阅[如何：在 Windows 窗体 DataGridView 单元格中承载控件](/dotnet/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
  </Docs>
  <Members>
    <Member MemberName="EditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingCellFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingCellFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingCellFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingCellFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingCellFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的格式化值。</summary>
        <value>一个包含单元格值的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 格式化值表示该值，因为它显示在单元格的用户界面中。 格式化值可能不同于绝对值，甚至是数据类型，而不是单元中包含的实际值。  
  
 此属性的实现通常通过调用 <xref:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue%2A> 方法并传入 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Formatting> 值来返回检索到的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingCellValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingCellValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingCellValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingCellValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingCellValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingCellValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示单元格的值是否已更改的值。</summary>
        <value>如果单元格的值已更改，为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性设置为 "`true`"，以指示单元格值已修改并且其用户界面（UI）可能需要更新以反映值的更改。 在更新后，所属单元或表应将此属性重置为 `false`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingCellFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingCellFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingCellFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingCellFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingCellFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingCell.GetEditingCellFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，它指定需要数据的上下文。</param>
        <summary>检索单元格的格式化值。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示单元格内容的格式化版本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 格式化值表示该值，因为它显示在单元格的用户界面中。 格式化值可能不同于绝对值，甚至是数据类型，而不是单元中包含的实际值。  
  
 若要设置单元格的格式化值，请使用 <xref:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue%2A> 属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingCellForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingCellForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingCellForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingCell.PrepareEditingCellForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingCellForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingCellForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingCellForEdit : bool -&gt; unit" Usage="iDataGridViewEditingCell.PrepareEditingCellForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">如果要选择单元格内容，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>准备当前选中的单元格以进行编辑。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的目的是准备要编辑的单元格及其内容。 例如，您可能希望将插入点放置在单元格内容的末尾，或者更改内容的对齐方式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>
