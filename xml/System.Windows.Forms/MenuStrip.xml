<Type Name="MenuStrip" FullName="System.Windows.Forms.MenuStrip">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aea9121b28c98597bc5a350b9df06e11173d253" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86991544" /></Metadata><TypeSignature Language="C#" Value="public class MenuStrip : System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuStrip extends System.Windows.Forms.ToolStrip" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuStrip" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuStrip&#xA;Inherits ToolStrip" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuStrip : System::Windows::Forms::ToolStrip" />
  <TypeSignature Language="F#" Value="type MenuStrip = class&#xA;    inherit ToolStrip" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStrip</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为窗体提供菜单系统。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MenuStrip> 是取代的顶级容器 <xref:System.Windows.Forms.MainMenu> 。 它还提供了键处理和多个文档界面 (MDI) 功能。 功能 <xref:System.Windows.Forms.ToolStripDropDownItem> 和一起 <xref:System.Windows.Forms.ToolStripMenuItem> 工作， <xref:System.Windows.Forms.MenuStrip> 尽管它们是从派生的 <xref:System.Windows.Forms.ToolStripItem> 。  
  
 以下各项专用于 <xref:System.Windows.Forms.ToolStripSystemRenderer> 在所有方向上无缝使用和 <xref:System.Windows.Forms.ToolStripProfessionalRenderer> 。 默认情况下，它们在设计时可用于 <xref:System.Windows.Forms.MenuStrip> 控件：  
  
-   <xref:System.Windows.Forms.ToolStripMenuItem> 
  
-   <xref:System.Windows.Forms.ToolStripTextBox> 
  
-   <xref:System.Windows.Forms.ToolStripComboBox> 
  
 <xref:System.Windows.Forms.MenuStrip>控件表示窗体的菜单结构的容器。 您可以将 <xref:System.Windows.Forms.ToolStripMenuItem> 对象添加到 <xref:System.Windows.Forms.MenuStrip> 表示菜单结构中各个菜单命令的。 每个 <xref:System.Windows.Forms.ToolStripMenuItem> 可以是应用程序的命令或其他子菜单项的父菜单。  
  
<xref:System.Windows.Forms.MenuStrip>替换并扩展了 <xref:System.Windows.Forms.MainMenu> 在 .net Core 3.1 中移除的控件。

## Examples  
 下面的代码示例演示了 <xref:System.Windows.Forms.MenuStrip> (MDI) 方案的多文档界面中的。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#10)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripMenuItem" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
    <related type="Article" href="/dotnet/framework/winforms/controls/menustrip-control-windows-forms">MenuStrip 控件（Windows 窗体）</related>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-configure-menustrip-check-margins-and-image-margins">如何：配置 MenuStrip 选中边距和图像边距</related>
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-provide-standard-menu-items-to-a-form">如何：向窗体提供标准菜单项</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuStrip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuStrip();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.MenuStrip" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数创建 <xref:System.Windows.Forms.MenuStrip> 可向其中添加对象的 <xref:System.Windows.Forms.ToolStripMenuItem> 。

## Examples  
 下面的代码示例演示了 <xref:System.Windows.Forms.MenuStrip.%23ctor%2A> 构造函数。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Forms.ToolStripPanel> 。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanOverflow">
      <MemberSignature Language="C#" Value="public bool CanOverflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanOverflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.CanOverflow" />
      <MemberSignature Language="VB.NET" Value="Public Property CanOverflow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanOverflow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanOverflow : bool with get, set" Usage="System.Windows.Forms.MenuStrip.CanOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.MenuStrip" /> 是否支持溢出功能。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.MenuStrip" /> 支持溢出功能，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果没有足够空间在中显示菜单项，溢出功能会将菜单项移动到下拉菜单 <xref:System.Windows.Forms.MenuStrip> 。 将 <xref:System.Windows.Forms.MenuStrip.CanOverflow%2A> 属性设置为时 `true` ，还必须通过设置属性来启用特定菜单项的溢出 <xref:System.Windows.Forms.ToolStripMenuItem.Overflow%2A?displayProperty=nameWithType> 。 默认情况下，如果菜单项无法在可用空间内容纳，则不会显示它们。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="menuStrip.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为该控件创建一个新的辅助功能对象。</summary>
        <returns>控件的新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不显式调用 <xref:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance%2A> 方法，则在引用 <xref:System.Windows.Forms.Control.AccessibilityObject%2A?displayProperty=nameWithType> 属性时将会调用此方法。  
  
> [!NOTE]
> 若要获取或设置 <xref:System.Windows.Forms.Control.AccessibilityObject%2A?displayProperty=nameWithType> 属性，必须添加对 `Accessibility` 与 .NET Framework 一起安装的程序集的引用。  
  
 有关使用的代码示例 <xref:System.Windows.Forms.MenuStrip.CreateAccessibilityInstance%2A> ，请参见 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultItem">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Forms.ToolStripItem CreateDefaultItem (string text, System.Drawing.Image image, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.Forms.ToolStripItem CreateDefaultItem(string text, class System.Drawing.Image image, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.CreateDefaultItem(System.String,System.Drawing.Image,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateDefaultItem (text As String, image As Image, onClick As EventHandler) As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::Forms::ToolStripItem ^ CreateDefaultItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="override this.CreateDefaultItem : string * System.Drawing.Image * EventHandler -&gt; System.Windows.Forms.ToolStripItem" Usage="menuStrip.CreateDefaultItem (text, image, onClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">要用于 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 的文本。 如果 <paramref name="text" /> 参数是连字符 (-)，此方法将创建 <see cref="T:System.Windows.Forms.ToolStripSeparator" />。</param>
        <param name="image">要在 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 上显示的 <see cref="T:System.Drawing.Image" />。</param>
        <param name="onClick">单击 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 时引发 <see cref="E:System.Windows.Forms.Control.Click" /> 事件的事件处理程序。</param>
        <summary>在新的 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 上创建带有指定文本、图像和事件处理程序的 <see cref="T:System.Windows.Forms.MenuStrip" />。</summary>
        <returns>一个 <see cref="M:System.Windows.Forms.ToolStripMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)" />，或者如果 <paramref name="text" /> 参数为连字符 (-)，则为 <see cref="T:System.Windows.Forms.ToolStripSeparator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.MenuStrip.CreateDefaultItem%2A> 方法可将 <xref:System.Windows.Forms.ToolStripMenuItem> 具有常用特征的添加到 <xref:System.Windows.Forms.MenuStrip> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGripMargin">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultGripMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultGripMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultGripMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultGripMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultGripMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultGripMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.MenuStrip.DefaultGripMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取大小调整手柄和 <see cref="T:System.Windows.Forms.MenuStrip" /> 的边缘之间的默认间距（以像素为单位）。</summary>
        <value>表示间距的 <see cref="T:System.Windows.Forms.Padding" /> 值（以像素为单位）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.MenuStrip.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.MenuStrip" /> 的左边缘、右边缘、上边缘、下边缘与窗体的左边缘、右边缘、上边缘、下边缘之间的间距（以像素为单位）。</summary>
        <value>一个表示间隔的 <see cref="T:System.Windows.Forms.Padding" />。 默认值为 <c>{Left = 6，Top = 2，Right = 0，底端 = 2}</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.MenuStrip.DefaultPadding%2A> 属性设置控件之间的内部空间。 如果控件是项的容器，则填充表示容器边缘的空间。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultShowItemToolTips">
      <MemberSignature Language="C#" Value="protected override bool DefaultShowItemToolTips { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DefaultShowItemToolTips { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultShowItemToolTips : bool" Usage="System.Windows.Forms.MenuStrip.DefaultShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值表示是否为 <see cref="T:System.Windows.Forms.MenuStrip" /> 默认显示工具提示。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MenuStrip.DefaultShowItemToolTips%2A?displayProperty=nameWithType>属性总是返回 `false` ，这是因为工具提示通常不用于菜单或菜单项。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.MenuStrip.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取首次创建 <see cref="T:System.Windows.Forms.MenuStrip" /> 时它的水平和垂直尺寸（以像素为单位）。</summary>
        <value><see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> 值，该值表示 <see cref="T:System.Windows.Forms.MenuStrip" /> 的水平和垂直尺寸（以像素为单位）。 默认为 200 x 21 像素。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripGripStyle GripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripGripStyle GripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.GripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GripStyle As ToolStripGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripGripStyle GripStyle { System::Windows::Forms::ToolStripGripStyle get(); void set(System::Windows::Forms::ToolStripGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GripStyle : System.Windows.Forms.ToolStripGripStyle with get, set" Usage="System.Windows.Forms.MenuStrip.GripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用作重新定位控件的手柄的可见性。</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripGripStyle" /> 值之一。 默认值为 <see cref="F:System.Windows.Forms.ToolStripGripStyle.Hidden" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiWindowListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripMenuItem MdiWindowListItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripMenuItem MdiWindowListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.MdiWindowListItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiWindowListItem As ToolStripMenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripMenuItem ^ MdiWindowListItem { System::Windows::Forms::ToolStripMenuItem ^ get(); void set(System::Windows::Forms::ToolStripMenuItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MdiWindowListItem : System.Windows.Forms.ToolStripMenuItem with get, set" Usage="System.Windows.Forms.MenuStrip.MdiWindowListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.MdiWindowListItemConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.MdiWindowListItemConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripMenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于显示多文档界面 (MDI) 子窗体列表的 <see cref="T:System.Windows.Forms.ToolStripMenuItem" />。</summary>
        <value>表示菜单项（显示应用程序中打开的 MDI 子窗体列表）的 <see cref="T:System.Windows.Forms.ToolStripMenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> 属性可以指定或发现哪些 <xref:System.Windows.Forms.ToolStripMenuItem> 显示 MDI 子级。  
  
 使用 <xref:System.Windows.Forms.MenuStrip.MenuActivate> <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> 子菜单上的和事件来反映对值的更改 <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> 。

## Examples  
 下面的代码示例演示了 <xref:System.Windows.Forms.MenuStrip.MdiWindowListItem%2A> 属性。 此示例是为类提供的更大示例的一部分 <xref:System.Windows.Forms.ToolStripPanel> 。  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MenuActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuStrip.MenuActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuActivate;" />
      <MemberSignature Language="F#" Value="member this.MenuActivate : EventHandler " Usage="member this.MenuActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>用户使用键盘或鼠标访问菜单时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当通过 ALT 键激活时， <xref:System.Windows.Forms.MenuStrip> 或 <xref:System.Windows.Forms.ToolStrip> 通常不会从当前具有焦点的控件中执行焦点，也不会删除焦点。 如果在或的下拉控件中承载了一个控件 <xref:System.Windows.Forms.MenuStrip> <xref:System.Windows.Forms.MenuStrip> ，则当用户按 TAB 键时，控件将获得焦点。 通常， <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.MenuStrip> 当键盘激活时，可能不会引发、、和事件。 在这种情况下， <xref:System.Windows.Forms.MenuStrip.MenuActivate> 请 <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> 改用和事件。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.MenuStrip.MenuActivate> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.MenuStrip> `MenuStrip1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.MenuStrip.MenuActivate> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#489](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#489)]
 [!code-vb[System.Windows.Forms.EventExamples#489](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#489)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuDeactivate">
      <MemberSignature Language="C#" Value="public event EventHandler MenuDeactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuDeactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuStrip.MenuDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuDeactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuDeactivate;" />
      <MemberSignature Language="F#" Value="member this.MenuDeactivate : EventHandler " Usage="member this.MenuDeactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当停用 <see cref="T:System.Windows.Forms.MenuStrip" /> 时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当通过 ALT 键激活时， <xref:System.Windows.Forms.MenuStrip> 或 <xref:System.Windows.Forms.ToolStrip> 通常不会从当前具有焦点的控件中执行焦点，也不会删除焦点。 如果在或的下拉控件中承载了一个控件 <xref:System.Windows.Forms.MenuStrip> <xref:System.Windows.Forms.MenuStrip> ，则当用户按 TAB 键时，控件将获得焦点。 通常， <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.MenuStrip> 当键盘激活时，可能不会引发、、和事件。 在这种情况下， <xref:System.Windows.Forms.MenuStrip.MenuActivate> 请 <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> 改用和事件。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。

## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.MenuStrip> `MenuStrip1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.MenuStrip.MenuDeactivate> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#490](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#490)]
 [!code-vb[System.Windows.Forms.EventExamples#490](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#490)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMenuActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuActivate : EventArgs -&gt; unit&#xA;override this.OnMenuActivate : EventArgs -&gt; unit" Usage="menuStrip.OnMenuActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.MenuStrip.MenuActivate" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.MenuStrip.OnMenuActivate%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.MenuStrip.OnMenuActivate(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuDeactivate : EventArgs -&gt; unit&#xA;override this.OnMenuDeactivate : EventArgs -&gt; unit" Usage="menuStrip.OnMenuDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.MenuStrip.MenuDeactivate" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.MenuStrip.OnMenuDeactivate%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.MenuStrip.OnMenuDeactivate(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="menuStrip.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</param>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的键。</param>
        <summary>处理命令键。</summary>
        <returns>如果字符已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.MenuStrip.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否显示 <see cref="T:System.Windows.Forms.MenuStrip" /> 的工具提示。</summary>
        <value>如果显示 <see cref="T:System.Windows.Forms.MenuStrip" /> 的工具提示，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MenuStrip.ShowItemToolTips%2A?displayProperty=nameWithType>默认情况下，属性将返回 `false` ，原因是通常情况下，工具提示不用于菜单或菜单项。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public bool Stretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuStrip.Stretch" />
      <MemberSignature Language="VB.NET" Value="Public Property Stretch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Stretch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Stretch : bool with get, set" Usage="System.Windows.Forms.MenuStrip.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.MenuStrip" /> 是否在它的容器中从一端拉伸到另一端。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.MenuStrip" /> 在容器中从一端拉伸到另一端，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuStrip.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="menuStrip.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>处理 Windows 消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过方法进行筛选后，所有消息都将发送到 <xref:System.Windows.Forms.Control.WndProc%2A> 方法 <xref:System.Windows.Forms.Control.PreProcessMessage%2A> 。  
  
 <xref:System.Windows.Forms.Control.WndProc%2A> 方法与 Windows `WindowProc` 函数完全对应。 有关处理 Windows 消息的详细信息，请参阅 [WindowProc 回调函数](https://msdn.microsoft.com/library/windows/desktop/ms633573)。
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Windows.Forms.Control.WndProc%2A> 方法以处理结构中标识的操作系统消息 <xref:System.Windows.Forms.Message> 。 在此示例中处理 WM_ACTIVATEAPP 操作系统消息，以了解其他应用程序何时变为活动状态。 请参阅位于的平台 SDK 文档参考， <https://docs.microsoft.com> 了解可用的 <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType> 和 <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> 值。 可以在 "平台 SDK (Core SDK" 部分中包含的 windows .h 标头文件中找到实际常数值，) 下载，也可以在文档中找到该文件。  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>继承控件应调用基类的 <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> 方法来处理其不处理的所有消息。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
