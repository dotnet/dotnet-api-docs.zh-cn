<Type Name="MenuItem" FullName="System.Windows.Forms.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6485db5b8fb1df830f42a571da5c4f0dccdd37d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727608" /></Metadata><TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuItem extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Click")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Click")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Text")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DesignTimeVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DesignTimeVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9dc3-101">表示在 <see cref="T:System.Windows.Forms.MainMenu" /> 或 <see cref="T:System.Windows.Forms.ContextMenu" /> 内显示的单个项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-101">Represents an individual item that is displayed within a <see cref="T:System.Windows.Forms.MainMenu" /> or <see cref="T:System.Windows.Forms.ContextMenu" />.</span></span>
    
<span data-ttu-id="b9dc3-102">此类在 .NET Core 3.1 及更高版本中不可用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-102">This class is not available in .NET Core 3.1 and later versions.</span></span> <span data-ttu-id="b9dc3-103"><see cref="T:System.Windows.Forms.ToolStripMenuItem" />改用来替换 <see cref="T:System.Windows.Forms.MenuItem" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-103">Use <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> instead, which replaces the <see cref="T:System.Windows.Forms.MenuItem" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="b9dc3-104">此类在 .NET Core 3.1 及更高版本中不可用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-104">This class is not available in .NET Core 3.1 and later versions.</span></span> <span data-ttu-id="b9dc3-105">请改用 <see cref="T:System.Windows.Forms.ToolStripMenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-105">Use <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> instead.</span></span>

 <span data-ttu-id="b9dc3-106">为了 <xref:System.Windows.Forms.MenuItem> 显示，您必须将其添加到 <xref:System.Windows.Forms.MainMenu> 或 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-106">In order for a <xref:System.Windows.Forms.MenuItem> to be displayed, you must add it to a <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="b9dc3-107">若要创建子菜单，可以将 <xref:System.Windows.Forms.MenuItem> 对象添加到 <xref:System.Windows.Forms.Menu.MenuItems%2A> 父级的属性 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-107">To create submenus, you can add <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.Menu.MenuItems%2A> property of the parent <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 <span data-ttu-id="b9dc3-108"><xref:System.Windows.Forms.MenuItem>类提供使您能够配置菜单项的外观和功能的属性。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-108">The <xref:System.Windows.Forms.MenuItem> class provides properties that enable you to configure the appearance and functionality of a menu item.</span></span> <span data-ttu-id="b9dc3-109">若要在菜单项旁显示复选标记，请使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-109">To display a check mark next to a menu item, use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property.</span></span> <span data-ttu-id="b9dc3-110">您可以使用此功能来标识在互斥菜单项列表中选择的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-110">You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</span></span> <span data-ttu-id="b9dc3-111">例如，如果您有一组菜单项用于设置控件中文本的颜色 <xref:System.Windows.Forms.TextBox> ，则可以使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性来识别当前选定的颜色。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-111">For example, if you have a set of menu items for setting the color of text in a <xref:System.Windows.Forms.TextBox> control, you can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify which color is currently selected.</span></span> <span data-ttu-id="b9dc3-112"><xref:System.Windows.Forms.MenuItem.Shortcut%2A>属性可用于定义可以按下以选择菜单项的键盘组合。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-112">The <xref:System.Windows.Forms.MenuItem.Shortcut%2A> property can be used to define a keyboard combination that can be pressed to select the menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-113">对于 <xref:System.Windows.Forms.MenuItem> 在多文档界面 (mdi) 应用程序中显示的对象，可以使用 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法将 mdi 父级的菜单与其子窗体的菜单合并，以创建合并的菜单结构。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-113">For <xref:System.Windows.Forms.MenuItem> objects displayed in a Multiple Document Interface (MDI) application, you can use the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</span></span> <span data-ttu-id="b9dc3-114">由于 <xref:System.Windows.Forms.MenuItem> 不能同时在多个位置重复使用（如在和中），因此 <xref:System.Windows.Forms.MainMenu> <xref:System.Windows.Forms.ContextMenu> 可以使用 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 方法创建的副本， <xref:System.Windows.Forms.MenuItem> 以便在其他位置使用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-114">Because a <xref:System.Windows.Forms.MenuItem> cannot be reused in multiple locations at the same time, such as in a <xref:System.Windows.Forms.MainMenu> and a <xref:System.Windows.Forms.ContextMenu>, you can use the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> for use in another location.</span></span>  
  
 <span data-ttu-id="b9dc3-115"><xref:System.Windows.Forms.MenuItem.Popup>事件使您能够在显示菜单之前执行任务。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-115">The <xref:System.Windows.Forms.MenuItem.Popup> event enables you to perform tasks before a menu is displayed.</span></span> <span data-ttu-id="b9dc3-116">例如，可以为此事件创建事件处理程序，以根据代码的状态显示或隐藏菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-116">For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</span></span> <span data-ttu-id="b9dc3-117"><xref:System.Windows.Forms.MenuItem.Select>当用户将鼠标指针放在菜单项上时，可以使用事件来执行任务，例如，提供应用程序菜单项的详细帮助。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-117">The <xref:System.Windows.Forms.MenuItem.Select> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-118">下面的代码示例创建窗体的菜单结构。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-118">The following code example creates a menu structure for a form.</span></span> <span data-ttu-id="b9dc3-119">示例代码添加一个 <xref:System.Windows.Forms.MenuItem> 来表示顶级菜单项，将一个子菜单项添加到其中，以选择字体大小，然后将两个子菜单项添加到表示应用程序中的大型和小字体选择的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-119">The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</span></span> <span data-ttu-id="b9dc3-120">该示例要求有一个名为的 <xref:System.Windows.Forms.MainMenu> 对象 `mainMenu1` 和四个 <xref:System.Windows.Forms.MenuItem> 名为、、和的对象 `menuItem1` `menuItem2` `menuItem3` `menuItem4` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-120">The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span>  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuMerge" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9dc3-121">初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9dc3-122">使用空白标题初始化 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-122">Initializes a <see cref="T:System.Windows.Forms.MenuItem" /> with a blank caption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-123"><xref:System.Windows.Forms.MenuItem>使用此构造函数创建空白后，可以使用类的属性和方法 <xref:System.Windows.Forms.MenuItem> 来指定的外观和行为 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-123">Once you have created a blank <xref:System.Windows.Forms.MenuItem> using this constructor, you can use the properties and methods of the <xref:System.Windows.Forms.MenuItem> class to specify the appearance and behavior of your <xref:System.Windows.Forms.MenuItem>.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-124">下面的代码示例 <xref:System.Windows.Forms.MenuItem> 使用此版本的构造函数创建一个。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-124">The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b9dc3-125">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-125">The caption for the menu item.</span></span></param>
        <summary><span data-ttu-id="b9dc3-126">使用菜单项的指定标题初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-126">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-127">使用参数为菜单项指定标题时 `text` ，还可以通过在要用作访问键的字符前放置 "&" 字符来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-127">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' character before the character to be used as the access key.</span></span> <span data-ttu-id="b9dc3-128">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "&文件"。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-128">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="b9dc3-129">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-129">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="b9dc3-130">如果将 `text` 参数设置为 ""，则 `-` 会将菜单项作为分隔符显示 (水平线) 而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-130">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-131">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem> ，它在构造时指定菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-131">The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b9dc3-132">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-132">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="b9dc3-133">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-133">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <summary><span data-ttu-id="b9dc3-134">用指定标题和菜单项的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件的事件处理程序初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-134">Initializes a new instance of the class with a specified caption and event handler for the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event of the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-135">使用参数为菜单项指定标题时 `text` ，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-135">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="b9dc3-136">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "&文件"。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-136">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="b9dc3-137">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-137">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="b9dc3-138">如果将 `text` 参数设置为 ""，则 `-` 会将菜单项作为分隔符显示 (水平线) 而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-138">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-139">此外，还可以使用此构造函数指定一个委托，该委托将处理所 <xref:System.Windows.Forms.MenuItem.Click> 创建的菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-139">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="b9dc3-140"><xref:System.EventHandler>传递给此构造函数的必须配置为调用可处理事件的事件处理程序 <xref:System.Windows.Forms.MenuItem.Click> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-140">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="b9dc3-141">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-141">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-142">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem> 对象，该对象具有指定的标题和一个 <xref:System.EventHandler> 连接到将处理菜单项的事件的事件处理程序的委托 <xref:System.Windows.Forms.MenuItem.Click> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-142">The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b9dc3-143">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-143">The caption for the menu item.</span></span></param>
        <param name="items"><span data-ttu-id="b9dc3-144">包含该菜单项的子菜单项的一组 <see cref="T:System.Windows.Forms.MenuItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-144">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="b9dc3-145">用指定标题和为菜单项定义的一组子菜单项初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-145">Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-146">使用参数为菜单项指定标题时 `text` ，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-146">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="b9dc3-147">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "&文件"。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-147">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="b9dc3-148">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-148">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="b9dc3-149">如果将 `text` 参数设置为 ""，则 `-` 会将菜单项作为分隔符显示 (水平线) 而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-149">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-150">使用 `items` 参数可以分配菜单项的数组，以定义此菜单项的子菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-150">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="b9dc3-151">数组中的每一项还可以有一个分配给它的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-151">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="b9dc3-152">这使您可以创建完整的菜单结构，并将其分配给菜单项的构造函数。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-152">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-153">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-153">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-154">下面的代码示例创建一个具有指定标题的对象，该事件处理程序连接到将处理子菜单项数组中的每个菜单项的事件的方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-154">The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick, valuetype System.Windows.Forms.Shortcut shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler, shortcut As Shortcut)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick, System::Windows::Forms::Shortcut shortcut);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler * System.Windows.Forms.Shortcut -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick, shortcut)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b9dc3-155">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-155">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="b9dc3-156">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-156">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="shortcut"><span data-ttu-id="b9dc3-157"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-157">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <summary><span data-ttu-id="b9dc3-158">用指定标题、事件处理程序和菜单项的关联快捷键初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-158">Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-159">使用参数为菜单项指定标题时 `text` ，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-159">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="b9dc3-160">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "&文件"。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-160">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="b9dc3-161">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-161">You can use this feature to provide keyboard navigation for your menus.</span></span> <span data-ttu-id="b9dc3-162">使用此构造函数还可以指定快捷键，以及访问密钥来提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-162">This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</span></span> <span data-ttu-id="b9dc3-163">快捷键允许您指定可用于激活菜单项的键的组合。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-163">Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-164">如果将 `text` 参数设置为 ""，则 `-` 会将菜单项作为分隔符显示 (水平线) 而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-164">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-165">此外，还可以使用此构造函数指定一个委托，该委托将处理所 <xref:System.Windows.Forms.MenuItem.Click> 创建的菜单项的事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-165">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="b9dc3-166"><xref:System.EventHandler>传递给此构造函数的必须配置为调用可处理事件的事件处理程序 <xref:System.Windows.Forms.MenuItem.Click> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-166">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="b9dc3-167">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-167">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-168">下面的代码示例创建一个对象，该对象具有指定的标题、快捷键和一个连接到将处理菜单项的事件的方法的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-168">The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MenuMerge mergeType, int32 mergeOrder, valuetype System.Windows.Forms.Shortcut shortcut, string text, class System.EventHandler onClick, class System.EventHandler onPopup, class System.EventHandler onSelect, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mergeType As MenuMerge, mergeOrder As Integer, shortcut As Shortcut, text As String, onClick As EventHandler, onPopup As EventHandler, onSelect As EventHandler, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::Windows::Forms::MenuMerge mergeType, int mergeOrder, System::Windows::Forms::Shortcut shortcut, System::String ^ text, EventHandler ^ onClick, EventHandler ^ onPopup, EventHandler ^ onSelect, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : System.Windows.Forms.MenuMerge * int * System.Windows.Forms.Shortcut * string * EventHandler * EventHandler * EventHandler * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (mergeType, mergeOrder, shortcut, text, onClick, onPopup, onSelect, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeType" Type="System.Windows.Forms.MenuMerge" />
        <Parameter Name="mergeOrder" Type="System.Int32" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="onPopup" Type="System.EventHandler" />
        <Parameter Name="onSelect" Type="System.EventHandler" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="mergeType"><span data-ttu-id="b9dc3-169"><see cref="T:System.Windows.Forms.MenuMerge" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-169">One of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></param>
        <param name="mergeOrder"><span data-ttu-id="b9dc3-170">此菜单项在合并菜单中将占有的相对位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-170">The relative position that this menu item will take in a merged menu.</span></span></param>
        <param name="shortcut"><span data-ttu-id="b9dc3-171"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-171">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <param name="text"><span data-ttu-id="b9dc3-172">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-172">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="b9dc3-173">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-173">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="onPopup"><span data-ttu-id="b9dc3-174">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Popup" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-174">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event for this menu item.</span></span></param>
        <param name="onSelect"><span data-ttu-id="b9dc3-175">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Select" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-175">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></param>
        <param name="items"><span data-ttu-id="b9dc3-176">包含该菜单项的子菜单项的一组 <see cref="T:System.Windows.Forms.MenuItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-176">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="b9dc3-177">用指定标题、为（<see cref="T:System.Windows.Forms.MenuItem" />、<see cref="E:System.Windows.Forms.MenuItem.Click" /> 和 <see cref="E:System.Windows.Forms.MenuItem.Select" />）事件定义的事件处理程序、快捷键、合并类型和为菜单项指定的顺序来初始化 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-177">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption; defined event-handlers for the <see cref="E:System.Windows.Forms.MenuItem.Click" />, <see cref="E:System.Windows.Forms.MenuItem.Select" /> and <see cref="E:System.Windows.Forms.MenuItem.Popup" /> events; a shortcut key; a merge type; and order specified for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-178">使用参数为菜单项指定标题时 `text` ，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-178">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="b9dc3-179">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "&文件"。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-179">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="b9dc3-180">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-180">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="b9dc3-181">如果将 `text` 参数设置为 ""，则 `-` 会将菜单项作为分隔符显示 (水平线) 而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-181">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-182">使用 `items` 参数可以分配菜单项的数组，以定义此菜单项的子菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-182">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="b9dc3-183">数组中的每一项还可以有一个分配给它的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-183">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="b9dc3-184">这使您可以创建完整的菜单结构，并将其分配给菜单项的构造函数。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-184">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="b9dc3-185">`mergeType`通过和 `mergeOrder` 参数，您可以确定在菜单项与另一个菜单合并时该菜单项的行为方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-185">The `mergeType` and `mergeOrder` parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</span></span> <span data-ttu-id="b9dc3-186">根据为参数指定的值 `mergeType` ，可以添加、移除、替换菜单项及其子菜单项，也可以将其与要合并的菜单合并。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-186">Depending on the value you specify for the `mergeType` parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</span></span> <span data-ttu-id="b9dc3-187">`mergeOrder`参数确定当菜单合并时，所创建的菜单项将放置的位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-187">The `mergeOrder` parameter determines where the menu item being created will be positioned when the menu is merged.</span></span>  
  
 <span data-ttu-id="b9dc3-188">此外，还可以使用此构造函数创建 <xref:System.Windows.Forms.MenuItem> ，并将其连接到代码中将处理菜单项单击的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-188">In addition, you can use this constructor to create a <xref:System.Windows.Forms.MenuItem> and have it connected to an event handler in your code that will process the click of the menu item.</span></span> <span data-ttu-id="b9dc3-189"><xref:System.EventHandler>传递到此构造函数的应配置为调用可处理事件的事件处理程序 <xref:System.Windows.Forms.MenuItem.Click> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-189">The <xref:System.EventHandler> that you pass into this constructor should be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="b9dc3-190">使用此构造函数版本，还可以连接 <xref:System.Windows.Forms.MenuItem.Popup> 和 <xref:System.Windows.Forms.MenuItem.Select> 事件以确定此菜单项的选择时间。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-190">By using this constructor version, you can also connect the <xref:System.Windows.Forms.MenuItem.Popup> and <xref:System.Windows.Forms.MenuItem.Select> events to determine when this menu item is selected.</span></span> <span data-ttu-id="b9dc3-191">您可以使用这些事件来执行任务，例如确定是否在子菜单项旁显示复选标记，或启用或禁用基于应用程序状态的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-191">You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</span></span> <span data-ttu-id="b9dc3-192"><xref:System.Windows.Forms.MenuItem.Select> <xref:System.Windows.Forms.MenuItem.Click> 仅对 <xref:System.Windows.Forms.MenuItem> 非父菜单项的对象引发和事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-192">The <xref:System.Windows.Forms.MenuItem.Select> and <xref:System.Windows.Forms.MenuItem.Click> events are raised only for <xref:System.Windows.Forms.MenuItem> objects that are not parent menu items.</span></span> <span data-ttu-id="b9dc3-193">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-193">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-194">下面的代码示例创建一个具有标题和快捷键的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-194">The following code example creates a menu item that has a caption and shortcut key.</span></span> <span data-ttu-id="b9dc3-195">菜单项还具有为 <xref:System.Windows.Forms.MenuItem.Popup> 、和事件定义的事件处理程序 <xref:System.Windows.Forms.MenuItem.Click> <xref:System.Windows.Forms.MenuItem.Select> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-195">The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events.</span></span> <span data-ttu-id="b9dc3-196">如果此菜单项已合并，它会将菜单项添加到合并顺序为零的菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-196">If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Popup" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Select" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="BarBreak">
      <MemberSignature Language="C#" Value="public bool BarBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BarBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.BarBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property BarBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BarBreak { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BarBreak : bool with get, set" Usage="System.Windows.Forms.MenuItem.BarBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-197">获取或设置一个值，通过该值指示是将 <see cref="T:System.Windows.Forms.MenuItem" /> 放在新行上（对于添加到 <see cref="T:System.Windows.Forms.MainMenu" /> 对象的菜单项），还是放在新列中（对于 <see cref="T:System.Windows.Forms.ContextMenu" /> 中显示的子菜单项或菜单项）。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-197">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" /> is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a submenu item or menu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="b9dc3-198">如果菜单项放在新行上或新列中，则为 <see langword="true" />；如果菜单项保持在其默认位置，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-198"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="b9dc3-199">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-199">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-200">您可以使用 <xref:System.Windows.Forms.MenuItem.BarBreak%2A> 属性来创建一个菜单，其中每个菜单项在水平旁放置，而不是在垂直列表中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-200">You can use the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="b9dc3-201">你还可以使用此属性来创建包含多行顶级菜单项的菜单栏。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-201">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
 <span data-ttu-id="b9dc3-202">此属性与属性的不同之处在于 <xref:System.Windows.Forms.MenuItem.Break%2A> ，条形显示在 <xref:System.Windows.Forms.MenuItem.Break%2A> 属性设置为的每个菜单项的左边缘 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-202">This property differs from the <xref:System.Windows.Forms.MenuItem.Break%2A> property in that a bar is displayed on the left edge of each menu item that has the <xref:System.Windows.Forms.MenuItem.Break%2A> property set to `true`.</span></span> <span data-ttu-id="b9dc3-203">仅当菜单项不是顶级菜单项时，才会显示此栏。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-203">The bar is only displayed when the menu item is not a top-level menu item.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-204">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem> 具有两个子菜单项的。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-204">The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items.</span></span> <span data-ttu-id="b9dc3-205">使用属性水平显示两个子菜单项，而不是垂直显示 <xref:System.Windows.Forms.MenuItem.BarBreak%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-205">The two submenu items are displayed horizontally instead of vertically using the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.BarBreak Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Break" />
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public bool Break { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Break" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Break" />
      <MemberSignature Language="VB.NET" Value="Public Property Break As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Break { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Break : bool with get, set" Usage="System.Windows.Forms.MenuItem.Break" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-206">获取或设置一个值，通过该值指示是将该项放在新行上（对于添加到 <see cref="T:System.Windows.Forms.MainMenu" /> 对象的菜单项），还是放在新列中（对于 <see cref="T:System.Windows.Forms.ContextMenu" /> 中显示的菜单项或子菜单项）。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-206">Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a menu item or submenu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="b9dc3-207">如果菜单项放在新行上或新列中，则为 <see langword="true" />；如果菜单项保持在其默认位置，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-207"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="b9dc3-208">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-208">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-209">您可以使用 <xref:System.Windows.Forms.MenuItem.Break%2A> 属性来创建一个菜单，其中每个菜单沿水平相邻放置，而不是垂直列表。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-209">You can use the <xref:System.Windows.Forms.MenuItem.Break%2A> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="b9dc3-210">你还可以使用此属性来创建包含多行顶级菜单项的菜单栏。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-210">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-211">下面的代码示例创建一个菜单，该菜单的顶部行上有两个顶级菜单项，最后一行上有一个菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-211">The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</span></span>  
  
 [!code-cpp[Classic MenuItem.Break Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Break Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Break Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Break Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.BarBreak" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.MenuItem.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-212">获取或设置一个值，通过该值指示选中标记是否出现在菜单项文本的旁边。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-212">Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-213">如果菜单项旁边有一个选中标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-213"><see langword="true" /> if there is a check mark next to the menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9dc3-214">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-214">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-215">可以将 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性与菜单中的其他菜单项结合使用，以提供应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-215">You can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property in combination with other menu items in a menu to provide state for an application.</span></span> <span data-ttu-id="b9dc3-216">例如，您可以对一组项中的菜单项设置一个选中标记，以确定要为应用程序中的文本显示的字体大小。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-216">For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</span></span> <span data-ttu-id="b9dc3-217">你还可以使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性来标识一组互斥菜单项中的选定菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-217">You can also use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify the selected menu item in a group of mutually exclusive menu items.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="b9dc3-218">对于顶级菜单项，不能将此属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-218">This property cannot be set to `true` for top-level menu items.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-219">下面的代码示例使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性提供应用程序中的状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-219">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to provide the state in an application.</span></span> <span data-ttu-id="b9dc3-220">在此示例中，一组菜单项用于指定控件中文本的颜色 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-220">In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="b9dc3-221">提供的事件处理程序由 <xref:System.Windows.Forms.MenuItem.Click> 三个菜单项的事件使用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-221">The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items.</span></span> <span data-ttu-id="b9dc3-222">每个菜单项都指定文本颜色、 `menuItemRed` (红色) 、 `menuItemGreen` (绿色) 或 `menuItemBlue` (蓝色) 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-222">Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue).</span></span> <span data-ttu-id="b9dc3-223">事件处理程序确定单击的菜单项，将复选标记置于所选菜单项上，并更改窗体控件的文本颜色 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-223">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="b9dc3-224">该示例要求已将 <xref:System.Drawing> 命名空间添加到此代码所放置的窗体中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-224">The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in.</span></span> <span data-ttu-id="b9dc3-225">该示例还要求已将 <xref:System.Windows.Forms.TextBox> 添加到此示例代码所在的窗体中 `textBox1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-225">The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Checked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Checked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Checked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Checked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9dc3-226"><see cref="T:System.Windows.Forms.MenuItem" /> 是顶级菜单，或有子级。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-226">The <see cref="T:System.Windows.Forms.MenuItem" /> is a top-level menu or has children.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-227">当单击菜单项或使用为该菜单项定义的快捷键或访问键选择菜单项时发生。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-227">Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-228"><xref:System.Windows.Forms.MenuItem.Click>当用户单击此时，会发生该事件 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-228">The <xref:System.Windows.Forms.MenuItem.Click> event occurs when this <xref:System.Windows.Forms.MenuItem> is clicked by the user.</span></span> <span data-ttu-id="b9dc3-229">如果用户使用键盘选择菜单项并按下 Enter 键，则也会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-229">This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</span></span> <span data-ttu-id="b9dc3-230">如果按下了与相关联的访问密钥或快捷键，也会发生这种情况 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-230">It can also occur if an access key or shortcut key is pressed that is associated with the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="b9dc3-231">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-231">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
> [!NOTE]
> <span data-ttu-id="b9dc3-232">如果 <xref:System.Windows.Forms.Menu.MenuItems%2A> 的属性 <xref:System.Windows.Forms.MenuItem> 包含任何项，则不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-232">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="b9dc3-233">父菜单项不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-233">This event is not raised for parent menu items.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-234">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Click> 事件在单击时执行任务 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-234">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="b9dc3-235">该示例创建一个 <xref:System.Windows.Forms.MainMenu> 名为的 `mainMenu1` ，并将两个 <xref:System.Windows.Forms.MenuItem> 对象 `topMenuItem` (`File`) 和 `menuItem1` (`Open`) 中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-235">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="b9dc3-236">然后，它会将 `Click` 事件连接到 `menuItem1_Click` 事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-236">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="b9dc3-237">当用户单击 `Open` 菜单项时， <xref:System.Windows.Forms.OpenFileDialog> 将初始化并显示。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-237">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="b9dc3-238">该示例要求您已经创建了一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-238">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloneMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9dc3-239">创建 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-239">Creates a copy of a <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem CloneMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem CloneMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloneMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ CloneMenu();" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.CloneMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9dc3-240">创建当前 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-240">Creates a copy of the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="b9dc3-241">表示重复菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-241">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the duplicated menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-242"><xref:System.Windows.Forms.MenuItem> 除非你获取的副本，否则不能在多个位置中使用对象 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-242"><xref:System.Windows.Forms.MenuItem> objects cannot be used in more than one place unless you obtain a copy of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="b9dc3-243">您可以调用此方法来创建此菜单项的副本，以便在 <xref:System.Windows.Forms.ContextMenu> <xref:System.Windows.Forms.MainMenu> 应用程序中的、或其他项中使用 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-243">You can call this method to create a copy of this menu item for use in a <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, or other <xref:System.Windows.Forms.MenuItem> within your application.</span></span> <span data-ttu-id="b9dc3-244">克隆菜单项时，原始菜单项中指定的任何事件处理程序都将继续在该菜单项的克隆版本中运行。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-244">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="b9dc3-245">例如，如果创建了并将 <xref:System.Windows.Forms.MenuItem> 其事件连接 <xref:System.Windows.Forms.MenuItem.Click> 到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-245">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="b9dc3-246">当克隆菜单项时，克隆的菜单项将调用同一事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-246">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-247">下面的代码示例克隆 <xref:System.Windows.Forms.MenuItem> 并将其显示在中 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-247">The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="b9dc3-248">该示例要求 <xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MainMenu> 具有名称为的窗体上存在 `menuItem1` ，并且 <xref:System.Windows.Forms.ContextMenu> `contextMenu1` 窗体上还存在名为的对象。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-248">The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.CloneMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="b9dc3-249">表示要复制的菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-249">The <see cref="T:System.Windows.Forms.MenuItem" /> that represents the menu item to copy.</span></span></param>
        <summary><span data-ttu-id="b9dc3-250">创建指定 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-250">Creates a copy of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-251">调用此方法以创建您已创建的菜单项的副本，以便在快捷菜单或应用程序中的其他菜单结构中使用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-251">Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</span></span> <span data-ttu-id="b9dc3-252">使用此版本的 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 可以指定 <xref:System.Windows.Forms.MenuItem> 要复制的特定，而不是调用方法的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-252">This version of <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> allows you to specify a specific <xref:System.Windows.Forms.MenuItem> to copy instead of the menu item that is calling the method.</span></span> <span data-ttu-id="b9dc3-253">您可以使用此方法来初始化 <xref:System.Windows.Forms.MenuItem> 具有其他副本的新对象 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-253">You can use this method to initialize a new <xref:System.Windows.Forms.MenuItem> object with a copy of another <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="b9dc3-254">克隆菜单项时，原始菜单项中指定的任何事件处理程序都将继续在该菜单项的克隆版本中运行。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-254">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="b9dc3-255">例如，如果创建了并将 <xref:System.Windows.Forms.MenuItem> 其事件连接 <xref:System.Windows.Forms.MenuItem.Click> 到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-255">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="b9dc3-256">当克隆菜单项时，克隆的菜单项将调用同一事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-256">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-257">下面的代码示例 <xref:System.Windows.Forms.MenuItem> 使用在 <xref:System.Windows.Forms.MenuItem> 窗体上使用的现有的副本初始化新的 <xref:System.Windows.Forms.MainMenu> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-257">The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form.</span></span> <span data-ttu-id="b9dc3-258">然后，该代码将克隆的添加 <xref:System.Windows.Forms.MenuItem> 到 <xref:System.Windows.Forms.ContextMenu> 窗体上的。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-258">The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form.</span></span> <span data-ttu-id="b9dc3-259">此示例要求 <xref:System.Windows.Forms.MenuItem> 已创建并命名了一个控件并且已 `menuItem1` <xref:System.Windows.Forms.ContextMenu> 创建并命名了该控件 `contextMenu1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-259">This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItem">
      <MemberSignature Language="C#" Value="public bool DefaultItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultItem : bool with get, set" Usage="System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-260">获取或设置一个值，通过该值指示菜单项是否为默认菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-260">Gets or sets a value indicating whether the menu item is the default menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-261">如果菜单项是菜单中的默认菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-261"><see langword="true" /> if the menu item is the default item in a menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9dc3-262">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-262">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-263">菜单的默认菜单项为粗体。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-263">The default menu item for a menu is boldfaced.</span></span> <span data-ttu-id="b9dc3-264">当用户双击包含默认项的子菜单时，将选择默认项，并关闭子菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-264">When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</span></span> <span data-ttu-id="b9dc3-265">您可以使用 <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> 属性来指示菜单或快捷菜单中预期的默认操作。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-265">You can use the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property to indicate, the default action that is expected in a menu or shortcut menu.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-266">下面的代码示例创建一个具有两个子菜单项的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-266">The following code example creates a menu item with two submenu items.</span></span> <span data-ttu-id="b9dc3-267">该示例 `menuItem2` 使用属性将设置为默认菜单项 <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-267">The example sets `menuItem2` as the default menu item using the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="menuItem.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b9dc3-268">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-268"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b9dc3-269">处置由 <see cref="T:System.Windows.Forms.MenuItem" /> 占用的资源（内存除外）。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-269">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-270">在完成使用 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 后，应调用 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-270">Call <xref:System.Windows.Forms.MenuItem.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="b9dc3-271"><xref:System.Windows.Forms.MenuItem.Dispose%2A> 方法使 <xref:System.Windows.Forms.MenuItem> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-271">The <xref:System.Windows.Forms.MenuItem.Dispose%2A> method leaves the <xref:System.Windows.Forms.MenuItem> in an unusable state.</span></span> <span data-ttu-id="b9dc3-272">调用后 <xref:System.Windows.Forms.MenuItem.Dispose%2A> ，必须释放对的所有引用， <xref:System.Windows.Forms.MenuItem> 以使其占用的内存可通过垃圾回收进行回收。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-272">After calling <xref:System.Windows.Forms.MenuItem.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.MenuItem> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="b9dc3-273">每次释放对 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-273">Always call <xref:System.Windows.Forms.MenuItem.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="b9dc3-274">否则，在垃圾回收 <xref:System.Windows.Forms.MenuItem> 调用 <xref:System.Windows.Forms.MenuItem> 对象的析构函数之前，将不会释放正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-274">Otherwise, the resources the <xref:System.Windows.Forms.MenuItem> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.MenuItem> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-275">当菜单项的 <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> 属性设置为 <see langword="true" /> 并且发出绘制菜单项的请求时发生。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-275">Occurs when the <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> property of a menu item is set to <see langword="true" /> and a request is made to draw the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-276"><xref:System.Windows.Forms.DrawItemEventArgs>传递给 <xref:System.Windows.Forms.MenuItem.DrawItem> 事件处理程序的参数提供了一个 <xref:System.Drawing.Graphics> 对象，该对象使您能够在菜单项的图面上执行绘图和其他图形操作。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-276">The <xref:System.Windows.Forms.DrawItemEventArgs> argument passed to a <xref:System.Windows.Forms.MenuItem.DrawItem> event handler provides a <xref:System.Drawing.Graphics> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</span></span> <span data-ttu-id="b9dc3-277">您可以使用此事件处理程序创建满足您的应用程序需求的自定义菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-277">You can use this event handler to create custom menus that meet the needs of your application.</span></span> <span data-ttu-id="b9dc3-278">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-278">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-279">下面的代码示例演示如何处理 <xref:System.Windows.Forms.MenuItem.DrawItem> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-279">The following code example demonstrates how to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="b9dc3-280">此示例使用和绘制菜单项 <xref:System.Drawing.Brush> <xref:System.Drawing.Font> ，然后在 <xref:System.Drawing.Rectangle> 菜单项的周围绘制一个。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-280">This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item.</span></span> <span data-ttu-id="b9dc3-281">绘图是通过对象执行的 <xref:System.Drawing.Graphics> ，该对象被传递给参数中的事件处理程序 <xref:System.Windows.Forms.DrawItemEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-281">The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter.</span></span> <span data-ttu-id="b9dc3-282">此示例要求您已将该项的 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性初始化为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-282">This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`.</span></span> <span data-ttu-id="b9dc3-283">对于 c # 示例，请在窗体的构造函数中添加以下代码，然后将该 `InitializeComponent` 事件挂钩：</span><span class="sxs-lookup"><span data-stu-id="b9dc3-283">For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:</span></span>  
  
 `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  
  
 [!code-cpp[OwnerDraw example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/OwnerDraw example/CPP/form1.cpp#1)]
 [!code-csharp[OwnerDraw example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/OwnerDraw example/CS/form1.cs#1)]
 [!code-vb[OwnerDraw example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/OwnerDraw example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-284">获取或设置一个值，通过该值指示菜单项是否启用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-284">Gets or sets a value indicating whether the menu item is enabled.</span></span></summary>
        <value><span data-ttu-id="b9dc3-285">如果启用菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-285"><see langword="true" /> if the menu item is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9dc3-286">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-286">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-287">禁用的将以 <xref:System.Windows.Forms.MenuItem> 灰色显示，以指示其状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-287">A <xref:System.Windows.Forms.MenuItem> that is disabled is displayed in a gray color to indicate its state.</span></span> <span data-ttu-id="b9dc3-288">禁用父菜单项时，不显示所有子菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-288">When a parent menu item is disabled, all submenu items are not displayed.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-289">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Popup> 事件来确定是否在显示 <xref:System.Windows.Forms.MenuItem> 为剪切、复制和删除操作提供支持的对象之前，这些对象是否处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-289">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="b9dc3-290">该示例确定 `textBox1` <xref:System.Windows.Forms.TextBox> 窗体上的控件是否已启用、是否具有输入焦点，以及是否在启用对象之前选择了文本 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-290">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="b9dc3-291">此示例需要创建 <xref:System.Windows.Forms.MenuItem> 名为、和的三个对象 `menuCut` `menuCopy` `menuDelete` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-291">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.MenuItem.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-292">获取或设置一个值，通过该值指示菜单项在其父菜单中的位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-292">Gets or sets a value indicating the position of the menu item in its parent menu.</span></span></summary>
        <value><span data-ttu-id="b9dc3-293">表示菜单项在其父菜单中位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-293">The zero-based index representing the position of the menu item in its parent menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-294">此属性提供菜单项在其父菜单的菜单项集合中的索引位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-294">This property provides the indexed position of a menu item in the menu item collection of its parent menu.</span></span> <span data-ttu-id="b9dc3-295">您可以使用此属性将菜单项重新定位到其菜单中的不同位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-295">You can use this property to reposition a menu item to a different location within its menu.</span></span> <span data-ttu-id="b9dc3-296">创建时，还可以使用此属性 <xref:System.Windows.Forms.MenuItem> 来指定其在菜单结构中的位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-296">You can also use this property when creating a <xref:System.Windows.Forms.MenuItem> to specify its position in a menu structure at the time of creation.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-297">下面的代码示例在菜单中切换两个菜单项的位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-297">The following code example switches the position of two menu items in a menu.</span></span> <span data-ttu-id="b9dc3-298">下面的代码示例要求创建两个 <xref:System.Windows.Forms.MenuItem> 名为和的对象 `menuItem1` `menuItem2` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-298">The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`.</span></span> <span data-ttu-id="b9dc3-299">`menuItem1`菜单项在菜单中向下移动一个位置，同时 `menuItem2` 上移一个位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-299">The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.</span></span>  
  
 [!code-cpp[Classic MenuItem.Index Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Index Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Index Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Index Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9dc3-300">赋值小于零或大于项的数目。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-300">The assigned value is less than zero or greater than the item count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public override bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.MenuItem.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-301">获取一个值，通过该值指示菜单项是否包含子菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-301">Gets a value indicating whether the menu item contains child menu items.</span></span></summary>
        <value><span data-ttu-id="b9dc3-302">如果菜单项包含子菜单项，则为 <see langword="true" />；如果菜单为独立菜单项，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-302"><see langword="true" /> if the menu item contains child menu items; <see langword="false" /> if the menu is a standalone menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-303">可以将此属性与属性结合使用， <xref:System.Windows.Forms.MenuItem.Parent%2A> 以通过整个菜单结构在代码中导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-303">You can use this property with the <xref:System.Windows.Forms.MenuItem.Parent%2A> property to navigate in code through an entire menu structure.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-304">下面的代码示例确定是否存在与指定的关联的子 <xref:System.Windows.Forms.MenuItem> 菜单 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-304">The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`.</span></span> <span data-ttu-id="b9dc3-305">如果存在任何子菜单，它会通过将 <xref:System.Windows.Forms.MenuItem.Enabled%2A> 属性设置为来禁用它们 `false` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-305">If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="b9dc3-306">该示例要求有一个 <xref:System.Windows.Forms.MenuItem> 名为的创建的 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-306">The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.IsParent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.IsParent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.IsParent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiList">
      <MemberSignature Language="C#" Value="public bool MdiList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MdiList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MdiList" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MdiList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MdiList : bool with get, set" Usage="System.Windows.Forms.MenuItem.MdiList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-307">获取或设置一个值，通过该值指示是否使用在关联窗体内显示的多文档界面 (MDI) 子窗口列表来填充菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-307">Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</span></span></summary>
        <value><span data-ttu-id="b9dc3-308">如果要在此菜单项中显示 MDI 子窗口列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-308"><see langword="true" /> if a list of the MDI child windows is displayed in this menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9dc3-309">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-309">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-310">选择菜单项以显示 MDI 子窗口列表时，该列表显示为菜单项的子菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-310">When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</span></span> <span data-ttu-id="b9dc3-311">只有定义为 MDI 子窗体的窗体才会显示在窗口列表中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-311">Only forms that are defined as MDI child forms are displayed in the window list.</span></span> <span data-ttu-id="b9dc3-312">一次只能显示9个子窗口。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-312">Only nine child windows can be displayed at a time.</span></span> <span data-ttu-id="b9dc3-313">如果显示9个以上的子窗口，则为 "更多窗口 ..."菜单项显示在窗口列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-313">If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</span></span> <span data-ttu-id="b9dc3-314">单击此菜单项将显示一个对话框，其中包含当前处于活动状态的子窗口的完整列表。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-314">Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-315">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem> ，用于显示 mdi 窗体中当前打开的 mdi 子窗体的列表。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-315">The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.</span></span>  
  
 [!code-cpp[Classic MenuItem.MdiList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MdiList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MdiList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-316">当菜单在绘制菜单项之前需要知道菜单项大小时发生。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-316">Occurs when the menu needs to know the size of a menu item before drawing it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-317">若要引发此事件，必须将 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 菜单项的属性设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-317">In order for this event to be raised, you must have the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property of the menu item set to `true`.</span></span> <span data-ttu-id="b9dc3-318">在绘制所有者描述的菜单以允许指定要绘制的菜单项大小时，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-318">This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</span></span> <span data-ttu-id="b9dc3-319">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-319">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-320">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-320">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b9dc3-321">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.MenuItem.MeasureItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-321">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span> <span data-ttu-id="b9dc3-322">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-322">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="b9dc3-323">若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.MenuItem> `MenuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-323">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`.</span></span> <span data-ttu-id="b9dc3-324">然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.MenuItem.MeasureItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-324">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#499](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#499)]
 [!code-vb[System.Windows.Forms.EventExamples#499](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#499)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="MenuID">
      <MemberSignature Language="C#" Value="protected int MenuID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MenuID" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MenuID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property MenuID As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int MenuID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuID : int" Usage="System.Windows.Forms.MenuItem.MenuID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-325">获取一个值，通过该值指示此菜单项的 Windows 标识符。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-325">Gets a value indicating the Windows identifier for this menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-326">此菜单项的 Windows 标识符。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-326">The Windows identifier for this menu item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9dc3-327">将此 <see cref="T:System.Windows.Forms.MenuItem" /> 与另一个 <see cref="T:System.Windows.Forms.MenuItem" /> 合并。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-327">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem MergeMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem MergeMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ MergeMenu();" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.MergeMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9dc3-328">将此 <see cref="T:System.Windows.Forms.MenuItem" /> 与另一个 <see cref="T:System.Windows.Forms.MenuItem" /> 合并并返回合并后的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-328">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" /> and returns the resulting merged <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="b9dc3-329">表示合并菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-329">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the merged menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-330">当你调用此版本的时 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> ， <xref:System.Windows.Forms.MenuItem> 返回的是当前菜单项的副本，可与其他菜单项合并，而不会影响当前项的功能。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-330">When you call this version of <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>, the <xref:System.Windows.Forms.MenuItem> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</span></span> <span data-ttu-id="b9dc3-331">此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法类似于调用 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 不包含参数的方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-331">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method is similar to calling the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method that contains no parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.MergeMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="b9dc3-332">指定要与该菜单项合并的菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-332">A <see cref="T:System.Windows.Forms.MenuItem" /> that specifies the menu item to merge with this one.</span></span></param>
        <summary><span data-ttu-id="b9dc3-333">将另一菜单项与该菜单项合并。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-333">Merges another menu item with this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-334">根据菜单项的和属性的值合并菜单项 <xref:System.Windows.Forms.MenuItem.MergeType%2A> <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-334">Menu items are merged according to the value of the menu item's <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> properties.</span></span> <span data-ttu-id="b9dc3-335">此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法使您能够将 <xref:System.Windows.Forms.MenuItem> (及其子菜单) 的两个对象合并为一个菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-335">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method enables you to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenus) into a single menu.</span></span> <span data-ttu-id="b9dc3-336">当多个文档界面 (MDI) 父窗体并且子菜单都具有菜单时，将自动处理菜单合并。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-336">Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</span></span> <span data-ttu-id="b9dc3-337">您可以使用此版本的方法将 <xref:System.Windows.Forms.MenuItem> (及其子菜单项) 中的两个对象合并 <xref:System.Windows.Forms.MainMenu> 到中的单个菜单中 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-337">You can use this version of the method to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenu items) located in a <xref:System.Windows.Forms.MainMenu> control into a single menu within a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="b9dc3-338">例如，你可以调用此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法将文件的菜单项和编辑菜单合并为单个 <xref:System.Windows.Forms.MenuItem> ，然后可以将其添加到中并由其显示 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-338">For example, you can call this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menu items of a File and Edit menu into a single <xref:System.Windows.Forms.MenuItem> that can then be added to and displayed by a <xref:System.Windows.Forms.ContextMenu>.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-339">下面的代码示例使用此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法创建的副本 <xref:System.Windows.Forms.MenuItem> ，并将其与另一个合并。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-339">The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another.</span></span> <span data-ttu-id="b9dc3-340">合并 <xref:System.Windows.Forms.MenuItem> 后将添加到 <xref:System.Windows.Forms.ContextMenu> 控件中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-340">The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control.</span></span> <span data-ttu-id="b9dc3-341">此示例要求有两个名为的菜单项， `menuItem1` `menuItem2` 其中包含其中的子菜单项，并将一个名为的菜单项 <xref:System.Windows.Forms.ContextMenu> `contextMenu1` 显示菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-341">This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items.</span></span> <span data-ttu-id="b9dc3-342">`menuItem1` 和 `menuItem2` 中包含不同的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-342">`menuItem1` and `menuItem2` have different menu items contained within them.</span></span> <span data-ttu-id="b9dc3-343">调用完成后 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> ，将创建一个合并菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-343">After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrder">
      <MemberSignature Language="C#" Value="public int MergeOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeOrder { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOrder : int with get, set" Usage="System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-344">获取或设置一个值，通过该值指示菜单项与另一个项合并时的相对位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-344">Gets or sets a value indicating the relative position of the menu item when it is merged with another.</span></span></summary>
        <value><span data-ttu-id="b9dc3-345">表示该菜单项的合并顺序位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-345">A zero-based index representing the merge order position for this menu item.</span></span> <span data-ttu-id="b9dc3-346">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-346">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-347">菜单项的合并顺序指定了当 <xref:System.Windows.Forms.MenuItem> 包含在中的菜单结构与另一个合并时，此菜单项将采用的相对位置。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-347">The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <xref:System.Windows.Forms.MenuItem> is contained in is merged with another.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-348">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> 属性来控制合并菜单的显示方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-348">The following code example demonstrates using the <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> property to control the way a merged menu is displayed.</span></span> <span data-ttu-id="b9dc3-349">这是一个完整示例，将其添加到项目后即可运行。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-349">This is a complete example, ready to run once you add it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="M:System.Windows.Forms.MenuItem.MergeMenu" />
      </Docs>
    </Member>
    <Member MemberName="MergeType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuMerge MergeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MenuMerge MergeType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeType" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeType As MenuMerge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuMerge MergeType { System::Windows::Forms::MenuMerge get(); void set(System::Windows::Forms::MenuMerge value); };" />
      <MemberSignature Language="F#" Value="member this.MergeType : System.Windows.Forms.MenuMerge with get, set" Usage="System.Windows.Forms.MenuItem.MergeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-350">获取或设置一个值，通过该值指示该菜单项的菜单与另一个菜单合并时该菜单项的行为。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-350">Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</span></span></summary>
        <value><span data-ttu-id="b9dc3-351">一个 <see cref="T:System.Windows.Forms.MenuMerge" /> 值，该值表示菜单项的合并类型。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-351">A <see cref="T:System.Windows.Forms.MenuMerge" /> value that represents the menu item's merge type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-352">菜单项的合并类型指示菜单项与另一个要合并的菜单项的合并顺序相同的行为方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-352">The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</span></span> <span data-ttu-id="b9dc3-353">您可以根据两个或更多现有菜单，使用合并菜单来创建合并菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-353">You can use merged menus to create a consolidated menu based on two or more existing menus.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-354">下面的代码示例使用和指定的创建一个， <xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MenuItem.MergeType%2A> 以便在 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> 第一个位置将菜单项添加到合并菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-354">The following code example creates a <xref:System.Windows.Forms.MenuItem> with the <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b9dc3-355">分配的值不是 <see cref="T:System.Windows.Forms.MenuMerge" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-355">The assigned value is not one of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.MenuMerge" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Mnemonic">
      <MemberSignature Language="C#" Value="public char Mnemonic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Mnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mnemonic As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char Mnemonic { char get(); };" />
      <MemberSignature Language="F#" Value="member this.Mnemonic : char" Usage="System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-356">获取一个值，通过该值指示与此菜单项关联的助记字符。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-356">Gets a value indicating the mnemonic character that is associated with this menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-357">表示与此菜单项关联的助记字符的字符。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-357">A character that represents the mnemonic character associated with this menu item.</span></span> <span data-ttu-id="b9dc3-358">如果在 <see cref="T:System.Windows.Forms.MenuItem" /> 的文本中没有指定助记字符，则返回空字符（ASCII 值为 0）。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-358">Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-359">助记符是的文本中 ( # A0) 后面的第一个字符 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-359">The mnemonic character is the first character after an ampersand character (&) in the text of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="b9dc3-360">如果将两个 "与" 符号一起使用，则此属性将不会返回助记键，因为 "&" 用于在的文本中显示与号， <xref:System.Windows.Forms.MenuItem> 而不是定义助记键字符。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-360">This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <xref:System.Windows.Forms.MenuItem> instead of defining a mnemonic character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Text" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="menuItem.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9dc3-361">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-361">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b9dc3-362">引发 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-362">Raises the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-363">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-363">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b9dc3-364">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-364">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-365">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Click> 事件在单击时执行任务 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-365">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="b9dc3-366">该示例创建一个 <xref:System.Windows.Forms.MainMenu> 名为的 `mainMenu1` ，并将两个 <xref:System.Windows.Forms.MenuItem> 对象 `topMenuItem` (`File`) 和 `menuItem1` (`Open`) 中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-366">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="b9dc3-367">然后，它会将 `Click` 事件连接到 `menuItem1_Click` 事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-367">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="b9dc3-368">当用户单击 `Open` 菜单项时， <xref:System.Windows.Forms.OpenFileDialog> 将初始化并显示。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-368">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="b9dc3-369">该示例要求您已经创建了一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-369">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9dc3-370">当 <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-370">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="menuItem.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9dc3-371">包含事件数据的 <see cref="T:System.Windows.Forms.DrawItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-371">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b9dc3-372">引发 <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-372">Raises the <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-373">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-373">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b9dc3-374">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-374">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9dc3-375">当 <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-375">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInitMenuPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInitMenuPopup (EventArgs e);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInitMenuPopup (e As EventArgs)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnInitMenuPopup : EventArgs -&gt; unit&#xA;override this.OnInitMenuPopup : EventArgs -&gt; unit" Usage="menuItem.OnInitMenuPopup e" />
      <MemberSignature Language="C#" Value="protected virtual void OnInitMenuPopup (EventArgs e);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitMenuPopup (e As EventArgs)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9dc3-376">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-376">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b9dc3-377">引发 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-377">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="menuItem.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9dc3-378">包含事件数据的 <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-378">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b9dc3-379">引发 <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-379">Raises the <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-380">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-380">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b9dc3-381">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-381">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9dc3-382">当 <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-382">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPopup : EventArgs -&gt; unit&#xA;override this.OnPopup : EventArgs -&gt; unit" Usage="menuItem.OnPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9dc3-383">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-383">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b9dc3-384">引发 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-384">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-385">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-385">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b9dc3-386">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-386">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-387">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Popup> 事件来确定是否在显示 <xref:System.Windows.Forms.MenuItem> 为剪切、复制和删除操作提供支持的对象之前，这些对象是否处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-387">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="b9dc3-388">该示例确定 `textBox1` <xref:System.Windows.Forms.TextBox> 窗体上的控件是否已启用、是否具有输入焦点，以及是否在启用对象之前选择了文本 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-388">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="b9dc3-389">此示例需要创建 <xref:System.Windows.Forms.MenuItem> 名为、和的三个对象 `menuCut` `menuCopy` `menuDelete` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-389">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9dc3-390">当 <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-390">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnSelect (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelect(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelect (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelect(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelect : EventArgs -&gt; unit&#xA;override this.OnSelect : EventArgs -&gt; unit" Usage="menuItem.OnSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9dc3-391">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-391">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b9dc3-392">引发 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-392">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-393">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-393">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b9dc3-394">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-394">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-395">下面的代码示例演示如何使用类的 <xref:System.Windows.Forms.MenuItem.Select> 事件 <xref:System.Windows.Forms.MenuItem> 将帮助文本分配给 <xref:System.Windows.Forms.StatusBarPanel> 控件的 <xref:System.Windows.Forms.StatusBar> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-395">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="b9dc3-396">此示例要求 <xref:System.Windows.Forms.MenuItem> 将名为 `menuOpen` 、 `menuSave` 和的对象 `menuExit` 添加到 <xref:System.Windows.Forms.MainMenu> 窗体上的控件中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-396">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="b9dc3-397">该示例还要求将 <xref:System.Windows.Forms.StatusBar> 名为的控件 `statusBar1` 添加到窗体中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-397">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="b9dc3-398"><xref:System.Windows.Forms.StatusBar>控件应包含 <xref:System.Windows.Forms.StatusBarPanel> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-398">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9dc3-399">当 <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-399">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-400">获取或设置一个字值，通过该值指示是由所提供的代码绘制菜单项还是由 Windows 绘制菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-400">Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-401">如果使用代码绘制菜单项，则为 <see langword="true" />；如果由 Windows 绘制菜单项，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-401"><see langword="true" /> if the menu item is to be drawn using code; <see langword="false" /> if the menu item is to be drawn by Windows.</span></span> <span data-ttu-id="b9dc3-402">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-402">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-403">当 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性设置为时 `true` ，需要处理菜单项的所有绘图。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-403">When the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property is set to `true`, you need to handle all drawing of the menu item.</span></span> <span data-ttu-id="b9dc3-404">您可以使用此功能来创建您自己的特殊菜单显示。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-404">You can use this capability to create your own special menu displays.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-405">下面的代码示例演示一个具有所有者描述的菜单项的菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-405">The following code example demonstrates a menu with an owner-drawn menu item.</span></span> <span data-ttu-id="b9dc3-406">此示例设置 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性，并使用 `AddHandler` 语句和 `AddressOf` 运算符来指定用于处理事件的委托 <xref:System.Windows.Forms.MenuItem.DrawItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-406">This example set the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="b9dc3-407">若要运行该示例，请将其粘贴到导入 <xref:System> 、 <xref:System.Windows.Forms> 和命名空间的窗体中 <xref:System.Drawing> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-407">To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="b9dc3-408">`InitializeMenu`从窗体的构造函数或 `Load` 方法调用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-408">Call `InitializeMenu` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ Parent { System::Windows::Forms::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Menu" Usage="System.Windows.Forms.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-409">获取一个值，该值指示包含此菜单项的菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-409">Gets a value indicating the menu that contains this menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-410">表示包含此菜单项的菜单的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-410">A <see cref="T:System.Windows.Forms.Menu" /> that represents the menu that contains this menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-411">您可以使用此属性来获取 <xref:System.Windows.Forms.Menu> 子菜单的对象。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-411">You can use this property to obtain the <xref:System.Windows.Forms.Menu> object for a submenu.</span></span> <span data-ttu-id="b9dc3-412">可以将 <xref:System.Windows.Forms.Menu> 此属性返回的对象强制转换为 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-412">You can cast the <xref:System.Windows.Forms.Menu> object returned by this property to a <xref:System.Windows.Forms.MenuItem> object to manipulate it.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-413">在此示例中，您将创建一个主菜单和一个顶级菜单项， `menuItem1` (`File`) 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-413">In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`).</span></span> <span data-ttu-id="b9dc3-414">还会创建两个菜单项， `menuItem2` (`New`) 和 `menuItem3` (`Open`) ，并将其添加到的菜单项列表 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-414">You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`.</span></span> <span data-ttu-id="b9dc3-415">然后，查看是否 `menuItem3` 有父菜单，该菜单为 true，并在 messagebox 中显示此父菜单的信息。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-415">Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box.</span></span> <span data-ttu-id="b9dc3-416">此示例要求您已创建一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-416">This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[ParentMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ParentMenu/CPP/form1.cpp#1)]
 [!code-csharp[ParentMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ParentMenu/CS/form1.cs#1)]
 [!code-vb[ParentMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ParentMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="menuItem.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9dc3-417">为 <see cref="E:System.Windows.Forms.Control.Click" /> 生成一个 <see cref="T:System.Windows.Forms.MenuItem" /> 事件，模拟用户的单击操作。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-417">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the <see cref="T:System.Windows.Forms.MenuItem" />, simulating a click by a user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-418">您可以使用此菜单通过代码激活菜单项，而无需传递任何事件信息。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-418">You can use this menu to activate a menu item through code without passing any event information.</span></span> <span data-ttu-id="b9dc3-419">例如，如果想要根据应用程序中发生的操作激活菜单项，则可 <xref:System.Windows.Forms.MenuItem.PerformClick%2A> 为该操作调用方法 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-419">For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <xref:System.Windows.Forms.MenuItem.PerformClick%2A> method for that <xref:System.Windows.Forms.MenuItem>.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-420">在此示例中，使用方法以编程方式单击菜单项 `PerformClick` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-420">In this example you programmatically click a menu item by using the `PerformClick` method.</span></span> <span data-ttu-id="b9dc3-421">首先，创建一个主菜单 (`mainMenu1`) 并向其中添加两个菜单项， `menuItem1` (`File`) 和 `menuItem2` (`Edit`) 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-421">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="b9dc3-422"><xref:System.Windows.Forms.MenuItem.Click>当单击菜单项时，还可以使用事件将数据发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-422">You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked.</span></span> <span data-ttu-id="b9dc3-423">然后，使用 `PerformClick` 方法单击 `File` 菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-423">Then you use the `PerformClick` method to click the `File` menu item.</span></span> <span data-ttu-id="b9dc3-424">启动应用程序时， `File` 会激活菜单项，并在其中包含文本 "文件菜单" 的消息框。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-424">When you start the application, the `File` menu item is activated, and a message box that contains the text "The File menu is clicked."</span></span> <span data-ttu-id="b9dc3-425">出现在屏幕上。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-425">appears on the screen.</span></span> <span data-ttu-id="b9dc3-426">该示例要求您已经创建了一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-426">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformClick/CPP/form1.cpp#1)]
 [!code-csharp[PerformClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformClick/CS/form1.cs#1)]
 [!code-vb[PerformClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="public virtual void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformSelect();" />
      <MemberSignature Language="F#" Value="abstract member PerformSelect : unit -&gt; unit&#xA;override this.PerformSelect : unit -&gt; unit" Usage="menuItem.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9dc3-427">引发该菜单项的 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-427">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-428">此方法允许引发 <xref:System.Windows.Forms.MenuItem.Select> 事件，而无需将任何事件信息传递给事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-428">This method allows you to raise the <xref:System.Windows.Forms.MenuItem.Select> event without passing any event information to the event handler.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-429">在此示例中，使用方法以编程方式选择菜单项 `PerformSelect` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-429">In this example you programmatically select a menu item by using the `PerformSelect` method.</span></span> <span data-ttu-id="b9dc3-430">首先，创建一个主菜单 (`mainMenu1`) 并向其中添加两个菜单项， `menuItem1` (`File`) 和 `menuItem2` (`Edit`) 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-430">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="b9dc3-431"><xref:System.Windows.Forms.MenuItem.Select>选择菜单项时，还可以使用事件将数据发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-431">You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected.</span></span> <span data-ttu-id="b9dc3-432">然后，使用 `PerformSelect` 方法选择 `File` 菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-432">Then you use the `PerformSelect` method to select the `File` menu item.</span></span> <span data-ttu-id="b9dc3-433">当你启动应用程序时，将 `File` 选择菜单项，并在其中包含文本 "文件菜单已选中" 的消息框。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-433">When you start the application, the `File` menu item is selected, and a message box that contains the text "The File menu is selected."</span></span> <span data-ttu-id="b9dc3-434">出现在屏幕上。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-434">appears on the screen.</span></span> <span data-ttu-id="b9dc3-435">该示例要求您已经创建了一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-435">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformSelect/CPP/form1.cpp#1)]
 [!code-csharp[PerformSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformSelect/CS/form1.cs#1)]
 [!code-vb[PerformSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformSelect/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MenuItem.PerformClick" />
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : EventHandler " Usage="member this.Popup : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-436">在显示菜单项的菜单项列表之前发生。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-436">Occurs before a menu item's list of menu items is displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-437">仅当菜单项具有子菜单项显示时，才会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-437">This event only occurs when a menu item has submenu items to display.</span></span> <span data-ttu-id="b9dc3-438">在显示菜单项之前，可以使用此事件处理程序根据应用程序的状态添加、删除、启用、禁用、选中或取消选中菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-438">You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</span></span> <span data-ttu-id="b9dc3-439">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-439">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-440">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Popup> 事件来确定是否在显示 <xref:System.Windows.Forms.MenuItem> 为剪切、复制和删除操作提供支持的对象之前，这些对象是否处于启用状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-440">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="b9dc3-441">该示例确定 `textBox1` <xref:System.Windows.Forms.TextBox> 窗体上的控件是否已启用、是否具有输入焦点，以及是否在启用对象之前选择了文本 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-441">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="b9dc3-442">此示例需要创建 <xref:System.Windows.Forms.MenuItem> 名为、和的三个对象 `menuCut` `menuCopy` `menuDelete` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-442">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioCheck">
      <MemberSignature Language="C#" Value="public bool RadioCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RadioCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property RadioCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RadioCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RadioCheck : bool with get, set" Usage="System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-443">获取或设置一个值，通过该值指示 <see cref="T:System.Windows.Forms.MenuItem" />（如果已选中）是否显示单选按钮而不是选中标记。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-443">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" />, if checked, displays a radio-button instead of a check mark.</span></span></summary>
        <value><span data-ttu-id="b9dc3-444">如果要使用的是单选按钮而不是选中标记，则为 <see langword="true" />；如果菜单项选中时要显示的是标准选中标记，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-444"><see langword="true" /> if a radio-button is to be used instead of a check mark; <see langword="false" /> if the standard check mark is to be displayed when the menu item is checked.</span></span> <span data-ttu-id="b9dc3-445">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-445">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-446">对于一组菜单项，复选标记不一定表示一组互斥状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-446">Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</span></span> <span data-ttu-id="b9dc3-447">您可以使用此属性向用户指示菜单项的选中标记是互斥的。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-447">You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-448">下面的代码示例使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性来更改应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-448">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application.</span></span> <span data-ttu-id="b9dc3-449">在此示例中，提供了一组菜单项，这些菜单项用于指定控件中文本的颜色 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-449">In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="b9dc3-450">在此示例中，提供的事件处理程序由 <xref:System.Windows.Forms.MenuItem.Click> 三个菜单项的事件使用。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-450">In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items.</span></span> <span data-ttu-id="b9dc3-451">每个菜单项指定颜色、 `menuItemRed` 、 `menuItemGreen` 或 `menuItemBlue` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-451">Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`.</span></span> <span data-ttu-id="b9dc3-452">事件处理程序确定单击的菜单项，将复选标记置于所选菜单项，并更改窗体控件的文本颜色 <xref:System.Windows.Forms.TextBox> （名为） `textBox1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-452">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`.</span></span> <span data-ttu-id="b9dc3-453">该示例还使用 <xref:System.Windows.Forms.MenuItem.RadioCheck%2A> 属性来演示如何使用单选按钮来显示互斥的菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-453">The example also uses the <xref:System.Windows.Forms.MenuItem.RadioCheck%2A> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</span></span> <span data-ttu-id="b9dc3-454">此示例要求已将 <xref:System.Drawing?displayProperty=nameWithType> 命名空间添加到包含此代码的窗体中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-454">This example requires that the <xref:System.Drawing?displayProperty=nameWithType> namespace has been added to the form that contains this code.</span></span>  
  
 [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Checked" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public event EventHandler Select;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Select" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Select As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Select;" />
      <MemberSignature Language="F#" Value="member this.Select : EventHandler " Usage="member this.Select : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-455">当用户将指针放在菜单项上时发生。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-455">Occurs when the user places the pointer over a menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-456">当用户将鼠标指针放在菜单项上时，通常会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-456">This event is typically raised when the user places the mouse pointer over the menu item.</span></span> <span data-ttu-id="b9dc3-457">用户通过使用键盘滚动到菜单项来突出显示菜单项时，还可能会引发事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-457">The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</span></span> <span data-ttu-id="b9dc3-458">可以使用此事件在应用程序状态栏中显示与此菜单项相关的详细帮助字符串。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-458">You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</span></span> <span data-ttu-id="b9dc3-459">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-459">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
> [!NOTE]
> <span data-ttu-id="b9dc3-460">如果 <xref:System.Windows.Forms.Menu.MenuItems%2A> 的属性 <xref:System.Windows.Forms.MenuItem> 包含任何项，则不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-460">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="b9dc3-461">父菜单项不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-461">This event is not raised for parent menu items.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-462">下面的代码示例演示如何使用类的 <xref:System.Windows.Forms.MenuItem.Select> 事件 <xref:System.Windows.Forms.MenuItem> 将帮助文本分配给 <xref:System.Windows.Forms.StatusBarPanel> 控件的 <xref:System.Windows.Forms.StatusBar> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-462">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="b9dc3-463">此示例要求 <xref:System.Windows.Forms.MenuItem> 将名为 `menuOpen` 、 `menuSave` 和的对象 `menuExit` 添加到 <xref:System.Windows.Forms.MainMenu> 窗体上的控件中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-463">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="b9dc3-464">该示例还要求将 <xref:System.Windows.Forms.StatusBar> 名为的控件 `statusBar1` 添加到窗体中。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-464">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="b9dc3-465"><xref:System.Windows.Forms.StatusBar>控件应包含 <xref:System.Windows.Forms.StatusBarPanel> 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-465">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
      </Docs>
    </Member>
    <Member MemberName="Shortcut">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Shortcut Shortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Shortcut Shortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Shortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property Shortcut As Shortcut" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Shortcut Shortcut { System::Windows::Forms::Shortcut get(); void set(System::Windows::Forms::Shortcut value); };" />
      <MemberSignature Language="F#" Value="member this.Shortcut : System.Windows.Forms.Shortcut with get, set" Usage="System.Windows.Forms.MenuItem.Shortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Shortcut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-466">获取或设置一个值，通过该值指示与菜单项关联的快捷键。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-466">Gets or sets a value indicating the shortcut key associated with the menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-467"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-467">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span> <span data-ttu-id="b9dc3-468">默认值为 <see langword="Shortcut.None" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-468">The default is <see langword="Shortcut.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-469">快捷键为用户提供了一种方法，用于在菜单系统中激活常用菜单项，并为没有鼠标或其他指针设备访问权限的用户提供对应用程序的键盘访问权限。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-469">Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-470">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-470">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="b9dc3-471">该示例要求创建了 <xref:System.Windows.Forms.MenuItem> 名为的 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-471">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b9dc3-472">分配的值不是 <see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-472">The assigned value is not one of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="ShowShortcut">
      <MemberSignature Language="C#" Value="public bool ShowShortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowShortcut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowShortcut { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowShortcut : bool with get, set" Usage="System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-473">获取或设置一个值，通过该值指示与菜单项关联的快捷键是否在菜单项标题的旁边显示。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-473">Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</span></span></summary>
        <value><span data-ttu-id="b9dc3-474">如果快捷组合键在菜单项标题的旁边显示，则为 <see langword="true" />；如果不显示快捷组合键，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-474"><see langword="true" /> if the shortcut key combination is displayed next to the menu item caption; <see langword="false" /> if the shortcut key combination is not to be displayed.</span></span> <span data-ttu-id="b9dc3-475">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-475">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-476">您可以使用此属性为用户提供用于隐藏菜单快捷方式的选项，以节省菜单空间或隐藏快捷键。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-476">You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-477">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-477">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="b9dc3-478">该示例要求创建了 <xref:System.Windows.Forms.MenuItem> 名为的 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-478">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-479">获取或设置一个值，通过该值指示菜单项标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-479">Gets or sets a value indicating the caption of the menu item.</span></span></summary>
        <value><span data-ttu-id="b9dc3-480">菜单项的文本标题。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-480">The text caption of the menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-481">为菜单项指定标题时，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-481">When you specify a caption for your menu item, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="b9dc3-482">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "&文件"。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-482">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="b9dc3-483">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-483">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="b9dc3-484">如果将此属性设置为 ""，则 `-` 会将菜单项作为分隔符显示 (横线) 而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-484">Setting this property to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-485">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-485">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="b9dc3-486">该示例要求创建了 <xref:System.Windows.Forms.MenuItem> 名为的 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-486">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Mnemonic" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="menuItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9dc3-487">返回表示 <see cref="T:System.Windows.Forms.MenuItem" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-487">Returns a string that represents the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="b9dc3-488">表示当前 <see cref="T:System.Windows.Forms.MenuItem" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-488">A string that represents the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span> <span data-ttu-id="b9dc3-489">该字符串包括该控件的类型和 <see cref="P:System.Windows.Forms.MenuItem.Text" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-489">The string includes the type and the <see cref="P:System.Windows.Forms.MenuItem.Text" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.MenuItem.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9dc3-490">获取或设置一个值，通过该值指示菜单项是否可见。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-490">Gets or sets a value indicating whether the menu item is visible.</span></span></summary>
        <value><span data-ttu-id="b9dc3-491">如果菜单项在菜单上为可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-491"><see langword="true" /> if the menu item will be made visible on the menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9dc3-492">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-492">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9dc3-493">您可以使用此属性修改菜单结构，而无需合并菜单或禁用菜单。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-493">You can use this property to modify a menu structure without having to merge menus or disable menus.</span></span> <span data-ttu-id="b9dc3-494">例如，如果你想要从应用程序的菜单中隐藏一整段功能，则可以通过将此属性设置为来隐藏用户 `false` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-494">For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to `false`.</span></span>
  
## Examples  
 <span data-ttu-id="b9dc3-495">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-495">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="b9dc3-496">该示例要求创建了 <xref:System.Windows.Forms.MenuItem> 名为的 `menuItem1` 。</span><span class="sxs-lookup"><span data-stu-id="b9dc3-496">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
