<Type Name="MenuItem" FullName="System.Windows.Forms.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b404487e23ec7d16de8b788ba04f220462ac8409" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83977417" /></Metadata><TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuItem extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1731-101">表示在 <see cref="T:System.Windows.Forms.MainMenu" /> 或 <see cref="T:System.Windows.Forms.ContextMenu" /> 内显示的单个项。</span><span class="sxs-lookup"><span data-stu-id="d1731-101">Represents an individual item that is displayed within a <see cref="T:System.Windows.Forms.MainMenu" /> or <see cref="T:System.Windows.Forms.ContextMenu" />.</span></span> <span data-ttu-id="d1731-102">尽管 <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> 替换了早期版本的 <see cref="T:System.Windows.Forms.MenuItem" /> 控件并添加了功能；但是也可选择保留 <see cref="T:System.Windows.Forms.MenuItem" /> 以备向后兼容和将来使用。</span><span class="sxs-lookup"><span data-stu-id="d1731-102">Although <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> replaces and adds functionality to the <see cref="T:System.Windows.Forms.MenuItem" /> control of previous versions, <see cref="T:System.Windows.Forms.MenuItem" /> is retained for both backward compatibility and future use if you choose.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-103">若要显示 <xref:System.Windows.Forms.MenuItem>，必须将其添加到 <xref:System.Windows.Forms.MainMenu> 或 <xref:System.Windows.Forms.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="d1731-103">In order for a <xref:System.Windows.Forms.MenuItem> to be displayed, you must add it to a <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d1731-104">若要创建子菜单，可以将 <xref:System.Windows.Forms.MenuItem> 对象添加到父 <xref:System.Windows.Forms.MenuItem>的 <xref:System.Windows.Forms.Menu.MenuItems%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d1731-104">To create submenus, you can add <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.Menu.MenuItems%2A> property of the parent <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 <span data-ttu-id="d1731-105"><xref:System.Windows.Forms.MenuItem> 类提供属性，使您能够配置菜单项的外观和功能。</span><span class="sxs-lookup"><span data-stu-id="d1731-105">The <xref:System.Windows.Forms.MenuItem> class provides properties that enable you to configure the appearance and functionality of a menu item.</span></span> <span data-ttu-id="d1731-106">若要在菜单项旁显示复选标记，请使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="d1731-106">To display a check mark next to a menu item, use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property.</span></span> <span data-ttu-id="d1731-107">您可以使用此功能来标识在互斥菜单项列表中选择的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-107">You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</span></span> <span data-ttu-id="d1731-108">例如，如果您有一组菜单项用于设置 <xref:System.Windows.Forms.TextBox> 控件中的文本颜色，则可以使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性来识别当前选定的颜色。</span><span class="sxs-lookup"><span data-stu-id="d1731-108">For example, if you have a set of menu items for setting the color of text in a <xref:System.Windows.Forms.TextBox> control, you can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify which color is currently selected.</span></span> <span data-ttu-id="d1731-109"><xref:System.Windows.Forms.MenuItem.Shortcut%2A> 属性可用于定义可按下以选择菜单项的键盘组合。</span><span class="sxs-lookup"><span data-stu-id="d1731-109">The <xref:System.Windows.Forms.MenuItem.Shortcut%2A> property can be used to define a keyboard combination that can be pressed to select the menu item.</span></span>  
  
 <span data-ttu-id="d1731-110">对于在多文档界面（MDI）应用程序中显示的 <xref:System.Windows.Forms.MenuItem> 对象，您可以使用 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法将的 MDI 父级的菜单与其子窗体的菜单合并，以创建合并菜单结构。</span><span class="sxs-lookup"><span data-stu-id="d1731-110">For <xref:System.Windows.Forms.MenuItem> objects displayed in a Multiple Document Interface (MDI) application, you can use the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</span></span> <span data-ttu-id="d1731-111">由于不能同时在多个位置重复使用 <xref:System.Windows.Forms.MenuItem> （例如在 <xref:System.Windows.Forms.MainMenu> 和 <xref:System.Windows.Forms.ContextMenu>中），因此可以使用 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 方法创建 <xref:System.Windows.Forms.MenuItem> 的副本，以便在其他位置使用。</span><span class="sxs-lookup"><span data-stu-id="d1731-111">Because a <xref:System.Windows.Forms.MenuItem> cannot be reused in multiple locations at the same time, such as in a <xref:System.Windows.Forms.MainMenu> and a <xref:System.Windows.Forms.ContextMenu>, you can use the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> for use in another location.</span></span>  
  
 <span data-ttu-id="d1731-112"><xref:System.Windows.Forms.MenuItem.Popup> 事件使您能够在显示菜单之前执行任务。</span><span class="sxs-lookup"><span data-stu-id="d1731-112">The <xref:System.Windows.Forms.MenuItem.Popup> event enables you to perform tasks before a menu is displayed.</span></span> <span data-ttu-id="d1731-113">例如，可以为此事件创建事件处理程序，以根据代码的状态显示或隐藏菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-113">For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</span></span> <span data-ttu-id="d1731-114">当用户将鼠标指针放在菜单项上时，可以使用 <xref:System.Windows.Forms.MenuItem.Select> 事件来执行任务，例如，提供应用程序菜单项的详细帮助。</span><span class="sxs-lookup"><span data-stu-id="d1731-114">The <xref:System.Windows.Forms.MenuItem.Select> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-115">下面的代码示例创建窗体的菜单结构。</span><span class="sxs-lookup"><span data-stu-id="d1731-115">The following code example creates a menu structure for a form.</span></span> <span data-ttu-id="d1731-116">示例代码添加了一个用于表示顶级菜单项的 <xref:System.Windows.Forms.MenuItem>，向其中添加了一个子菜单项用于选择字体大小，然后将两个子菜单项添加到了应用程序中表示大和小字体选择的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-116">The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</span></span> <span data-ttu-id="d1731-117">该示例要求有一个名为 `mainMenu1` 的 <xref:System.Windows.Forms.MainMenu> 对象和一个名为 `menuItem1`、`menuItem2`、`menuItem3`和 `menuItem4`的四个 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-117">The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span>  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuMerge" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1731-118">初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d1731-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1731-119">使用空白标题初始化 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-119">Initializes a <see cref="T:System.Windows.Forms.MenuItem" /> with a blank caption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-120">使用此构造函数创建空白 <xref:System.Windows.Forms.MenuItem> 后，可以使用 <xref:System.Windows.Forms.MenuItem> 类的属性和方法来指定 <xref:System.Windows.Forms.MenuItem>的外观和行为。</span><span class="sxs-lookup"><span data-stu-id="d1731-120">Once you have created a blank <xref:System.Windows.Forms.MenuItem> using this constructor, you can use the properties and methods of the <xref:System.Windows.Forms.MenuItem> class to specify the appearance and behavior of your <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-121">下面的代码示例使用此版本的构造函数创建 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-121">The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d1731-122">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-122">The caption for the menu item.</span></span></param>
        <summary><span data-ttu-id="d1731-123">使用菜单项的指定标题初始化 <see cref="T:System.Windows.Forms.MenuItem" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="d1731-123">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-124">使用 `text` 参数为菜单项指定标题时，还可以通过在要用作访问键的字符前放置 "&" 字符来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="d1731-124">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' character before the character to be used as the access key.</span></span> <span data-ttu-id="d1731-125">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "& 文件"。</span><span class="sxs-lookup"><span data-stu-id="d1731-125">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="d1731-126">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-126">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="d1731-127">将 `text` 参数设置为 "`-`" 会导致菜单项显示为分隔符（水平线）而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-127">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-128">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem>，它指定菜单项在构造时的标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-128">The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d1731-129">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-129">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="d1731-130">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-130">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <summary><span data-ttu-id="d1731-131">用指定标题和菜单项的 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件的事件处理程序初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="d1731-131">Initializes a new instance of the class with a specified caption and event handler for the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event of the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-132">使用 `text` 参数为菜单项指定标题时，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="d1731-132">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="d1731-133">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "& 文件"。</span><span class="sxs-lookup"><span data-stu-id="d1731-133">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="d1731-134">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-134">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="d1731-135">将 `text` 参数设置为 "`-`" 会导致菜单项显示为分隔符（水平线）而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-135">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="d1731-136">此外，还可以使用此构造函数指定一个委托，该委托将处理所创建菜单项的 <xref:System.Windows.Forms.MenuItem.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-136">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="d1731-137">传递给此构造函数的 <xref:System.EventHandler> 必须配置为调用可处理 <xref:System.Windows.Forms.MenuItem.Click> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-137">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="d1731-138">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-138">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-139">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem> 对象，该对象具有指定的标题和一个连接到将处理菜单项的 <xref:System.Windows.Forms.MenuItem.Click> 事件的事件处理程序的 <xref:System.EventHandler> 委托。</span><span class="sxs-lookup"><span data-stu-id="d1731-139">The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d1731-140">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-140">The caption for the menu item.</span></span></param>
        <param name="items"><span data-ttu-id="d1731-141">包含该菜单项的子菜单项的一组 <see cref="T:System.Windows.Forms.MenuItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-141">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="d1731-142">用指定标题和为菜单项定义的一组子菜单项初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="d1731-142">Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-143">使用 `text` 参数为菜单项指定标题时，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="d1731-143">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="d1731-144">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "& 文件"。</span><span class="sxs-lookup"><span data-stu-id="d1731-144">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="d1731-145">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-145">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="d1731-146">将 `text` 参数设置为 "`-`" 会导致菜单项显示为分隔符（水平线）而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-146">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="d1731-147">使用 `items` 参数可以分配一组菜单项来定义此菜单项的子菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-147">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="d1731-148">数组中的每一项还可以有一个分配给它的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="d1731-148">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="d1731-149">这使您可以创建完整的菜单结构，并将其分配给菜单项的构造函数。</span><span class="sxs-lookup"><span data-stu-id="d1731-149">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="d1731-150">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-150">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-151">下面的代码示例创建一个具有指定标题的对象，该事件处理程序连接到将处理子菜单项数组中的每个菜单项的事件的方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-151">The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick, valuetype System.Windows.Forms.Shortcut shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler, shortcut As Shortcut)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick, System::Windows::Forms::Shortcut shortcut);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler * System.Windows.Forms.Shortcut -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick, shortcut)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d1731-152">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-152">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="d1731-153">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-153">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="shortcut"><span data-ttu-id="d1731-154"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d1731-154">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <summary><span data-ttu-id="d1731-155">用指定标题、事件处理程序和菜单项的关联快捷键初始化该类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="d1731-155">Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-156">使用 `text` 参数为菜单项指定标题时，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="d1731-156">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="d1731-157">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "& 文件"。</span><span class="sxs-lookup"><span data-stu-id="d1731-157">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="d1731-158">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-158">You can use this feature to provide keyboard navigation for your menus.</span></span> <span data-ttu-id="d1731-159">使用此构造函数还可以指定快捷键，以及访问密钥来提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-159">This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</span></span> <span data-ttu-id="d1731-160">快捷键允许您指定可用于激活菜单项的键的组合。</span><span class="sxs-lookup"><span data-stu-id="d1731-160">Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</span></span>  
  
 <span data-ttu-id="d1731-161">将 `text` 参数设置为 "`-`" 会导致菜单项显示为分隔符（水平线）而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-161">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="d1731-162">此外，还可以使用此构造函数指定一个委托，该委托将处理所创建菜单项的 <xref:System.Windows.Forms.MenuItem.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-162">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="d1731-163">传递给此构造函数的 <xref:System.EventHandler> 必须配置为调用可处理 <xref:System.Windows.Forms.MenuItem.Click> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-163">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="d1731-164">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-164">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-165">下面的代码示例创建一个对象，该对象具有指定的标题、快捷键和一个连接到将处理菜单项的事件的方法的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-165">The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MenuMerge mergeType, int32 mergeOrder, valuetype System.Windows.Forms.Shortcut shortcut, string text, class System.EventHandler onClick, class System.EventHandler onPopup, class System.EventHandler onSelect, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mergeType As MenuMerge, mergeOrder As Integer, shortcut As Shortcut, text As String, onClick As EventHandler, onPopup As EventHandler, onSelect As EventHandler, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::Windows::Forms::MenuMerge mergeType, int mergeOrder, System::Windows::Forms::Shortcut shortcut, System::String ^ text, EventHandler ^ onClick, EventHandler ^ onPopup, EventHandler ^ onSelect, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : System.Windows.Forms.MenuMerge * int * System.Windows.Forms.Shortcut * string * EventHandler * EventHandler * EventHandler * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (mergeType, mergeOrder, shortcut, text, onClick, onPopup, onSelect, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeType" Type="System.Windows.Forms.MenuMerge" />
        <Parameter Name="mergeOrder" Type="System.Int32" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="onPopup" Type="System.EventHandler" />
        <Parameter Name="onSelect" Type="System.EventHandler" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="mergeType"><span data-ttu-id="d1731-166"><see cref="T:System.Windows.Forms.MenuMerge" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d1731-166">One of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></param>
        <param name="mergeOrder"><span data-ttu-id="d1731-167">此菜单项在合并菜单中将占有的相对位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-167">The relative position that this menu item will take in a merged menu.</span></span></param>
        <param name="shortcut"><span data-ttu-id="d1731-168"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d1731-168">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <param name="text"><span data-ttu-id="d1731-169">菜单项的标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-169">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="d1731-170">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-170">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="onPopup"><span data-ttu-id="d1731-171">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Popup" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-171">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event for this menu item.</span></span></param>
        <param name="onSelect"><span data-ttu-id="d1731-172">处理该菜单项的 <see cref="T:System.EventHandler" /> 事件的 <see cref="E:System.Windows.Forms.MenuItem.Select" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-172">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></param>
        <param name="items"><span data-ttu-id="d1731-173">包含该菜单项的子菜单项的一组 <see cref="T:System.Windows.Forms.MenuItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-173">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="d1731-174">用指定标题、为（<see cref="T:System.Windows.Forms.MenuItem" />、<see cref="E:System.Windows.Forms.MenuItem.Click" /> 和 <see cref="E:System.Windows.Forms.MenuItem.Select" />）事件定义的事件处理程序、快捷键、合并类型和为菜单项指定的顺序来初始化 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="d1731-174">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption; defined event-handlers for the <see cref="E:System.Windows.Forms.MenuItem.Click" />, <see cref="E:System.Windows.Forms.MenuItem.Select" /> and <see cref="E:System.Windows.Forms.MenuItem.Popup" /> events; a shortcut key; a merge type; and order specified for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-175">使用 `text` 参数为菜单项指定标题时，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="d1731-175">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="d1731-176">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "& 文件"。</span><span class="sxs-lookup"><span data-stu-id="d1731-176">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="d1731-177">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-177">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="d1731-178">将 `text` 参数设置为 "`-`" 会导致菜单项显示为分隔符（水平线）而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-178">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="d1731-179">使用 `items` 参数可以分配一组菜单项来定义此菜单项的子菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-179">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="d1731-180">数组中的每一项还可以有一个分配给它的菜单项的数组。</span><span class="sxs-lookup"><span data-stu-id="d1731-180">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="d1731-181">这使您可以创建完整的菜单结构，并将其分配给菜单项的构造函数。</span><span class="sxs-lookup"><span data-stu-id="d1731-181">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="d1731-182">`mergeType` 和 `mergeOrder` 参数可用于确定当菜单项与另一个菜单合并时该菜单项的行为方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-182">The `mergeType` and `mergeOrder` parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</span></span> <span data-ttu-id="d1731-183">根据为 `mergeType` 参数指定的值，可以添加、移除、替换菜单项及其子菜单项，也可以将其与要合并的菜单一起添加。</span><span class="sxs-lookup"><span data-stu-id="d1731-183">Depending on the value you specify for the `mergeType` parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</span></span> <span data-ttu-id="d1731-184">`mergeOrder` 参数确定当菜单合并时要创建的菜单项的位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-184">The `mergeOrder` parameter determines where the menu item being created will be positioned when the menu is merged.</span></span>  
  
 <span data-ttu-id="d1731-185">此外，还可以使用此构造函数创建 <xref:System.Windows.Forms.MenuItem>，并将其连接到代码中将处理菜单项单击操作的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-185">In addition, you can use this constructor to create a <xref:System.Windows.Forms.MenuItem> and have it connected to an event handler in your code that will process the click of the menu item.</span></span> <span data-ttu-id="d1731-186">传递到此构造函数的 <xref:System.EventHandler> 应配置为调用可处理 <xref:System.Windows.Forms.MenuItem.Click> 事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-186">The <xref:System.EventHandler> that you pass into this constructor should be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="d1731-187">使用此构造函数版本，还可以连接 <xref:System.Windows.Forms.MenuItem.Popup> 和 <xref:System.Windows.Forms.MenuItem.Select> 事件以确定此菜单项的选择时间。</span><span class="sxs-lookup"><span data-stu-id="d1731-187">By using this constructor version, you can also connect the <xref:System.Windows.Forms.MenuItem.Popup> and <xref:System.Windows.Forms.MenuItem.Select> events to determine when this menu item is selected.</span></span> <span data-ttu-id="d1731-188">您可以使用这些事件来执行任务，例如确定是否在子菜单项旁显示复选标记，或启用或禁用基于应用程序状态的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-188">You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</span></span> <span data-ttu-id="d1731-189">仅对非父菜单项的 <xref:System.Windows.Forms.MenuItem> 对象引发 <xref:System.Windows.Forms.MenuItem.Select> 和 <xref:System.Windows.Forms.MenuItem.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-189">The <xref:System.Windows.Forms.MenuItem.Select> and <xref:System.Windows.Forms.MenuItem.Click> events are raised only for <xref:System.Windows.Forms.MenuItem> objects that are not parent menu items.</span></span> <span data-ttu-id="d1731-190">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-190">For more information on handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-191">下面的代码示例创建一个具有标题和快捷键的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-191">The following code example creates a menu item that has a caption and shortcut key.</span></span> <span data-ttu-id="d1731-192">菜单项还具有为 <xref:System.Windows.Forms.MenuItem.Popup>、<xref:System.Windows.Forms.MenuItem.Click>和 <xref:System.Windows.Forms.MenuItem.Select> 事件定义的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-192">The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events.</span></span> <span data-ttu-id="d1731-193">如果此菜单项已合并，它会将菜单项添加到合并顺序为零的菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-193">If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Popup" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Select" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="BarBreak">
      <MemberSignature Language="C#" Value="public bool BarBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BarBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.BarBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property BarBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BarBreak { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BarBreak : bool with get, set" Usage="System.Windows.Forms.MenuItem.BarBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-194">获取或设置一个值，通过该值指示是将 <see cref="T:System.Windows.Forms.MenuItem" /> 放在新行上（对于添加到 <see cref="T:System.Windows.Forms.MainMenu" /> 对象的菜单项），还是放在新列中（对于 <see cref="T:System.Windows.Forms.ContextMenu" /> 中显示的子菜单项或菜单项）。</span><span class="sxs-lookup"><span data-stu-id="d1731-194">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" /> is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a submenu item or menu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="d1731-195">如果菜单项放在新行上或新列中，则为 <see langword="true" />；如果菜单项保持在其默认位置，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-195"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="d1731-196">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-196">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-197">您可以使用 "<xref:System.Windows.Forms.MenuItem.BarBreak%2A>" 属性创建一个菜单，其中每个菜单项在水平位置相邻放置，而不是在垂直列表中放置。</span><span class="sxs-lookup"><span data-stu-id="d1731-197">You can use the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="d1731-198">你还可以使用此属性来创建包含多行顶级菜单项的菜单栏。</span><span class="sxs-lookup"><span data-stu-id="d1731-198">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
 <span data-ttu-id="d1731-199">此属性与 <xref:System.Windows.Forms.MenuItem.Break%2A> 属性的不同之处在于，条形显示在将 <xref:System.Windows.Forms.MenuItem.Break%2A> 属性设置为 `true`的每个菜单项的左边缘。</span><span class="sxs-lookup"><span data-stu-id="d1731-199">This property differs from the <xref:System.Windows.Forms.MenuItem.Break%2A> property in that a bar is displayed on the left edge of each menu item that has the <xref:System.Windows.Forms.MenuItem.Break%2A> property set to `true`.</span></span> <span data-ttu-id="d1731-200">仅当菜单项不是顶级菜单项时，才会显示此栏。</span><span class="sxs-lookup"><span data-stu-id="d1731-200">The bar is only displayed when the menu item is not a top-level menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-201">下面的代码示例创建一个包含两个子菜单项的 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-201">The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items.</span></span> <span data-ttu-id="d1731-202">两个子菜单项在水平方向上显示，而不是使用 <xref:System.Windows.Forms.MenuItem.BarBreak%2A> 属性垂直显示。</span><span class="sxs-lookup"><span data-stu-id="d1731-202">The two submenu items are displayed horizontally instead of vertically using the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.BarBreak Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Break" />
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public bool Break { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Break" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Break" />
      <MemberSignature Language="VB.NET" Value="Public Property Break As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Break { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Break : bool with get, set" Usage="System.Windows.Forms.MenuItem.Break" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-203">获取或设置一个值，通过该值指示是将该项放在新行上（对于添加到 <see cref="T:System.Windows.Forms.MainMenu" /> 对象的菜单项），还是放在新列中（对于 <see cref="T:System.Windows.Forms.ContextMenu" /> 中显示的菜单项或子菜单项）。</span><span class="sxs-lookup"><span data-stu-id="d1731-203">Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a menu item or submenu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="d1731-204">如果菜单项放在新行上或新列中，则为 <see langword="true" />；如果菜单项保持在其默认位置，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-204"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="d1731-205">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-206">您可以使用 "<xref:System.Windows.Forms.MenuItem.Break%2A>" 属性来创建一个菜单，其中每个菜单都在每个水平相邻放置，而不是在垂直列表中。</span><span class="sxs-lookup"><span data-stu-id="d1731-206">You can use the <xref:System.Windows.Forms.MenuItem.Break%2A> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="d1731-207">你还可以使用此属性来创建包含多行顶级菜单项的菜单栏。</span><span class="sxs-lookup"><span data-stu-id="d1731-207">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-208">下面的代码示例创建一个菜单，该菜单的顶部行上有两个顶级菜单项，最后一行上有一个菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-208">The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</span></span>  
  
 [!code-cpp[Classic MenuItem.Break Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Break Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Break Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Break Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.BarBreak" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.MenuItem.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-209">获取或设置一个值，通过该值指示选中标记是否出现在菜单项文本的旁边。</span><span class="sxs-lookup"><span data-stu-id="d1731-209">Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-210">如果菜单项旁边有一个选中标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-210"><see langword="true" /> if there is a check mark next to the menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1731-211">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-211">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-212">可以将 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性与菜单中的其他菜单项结合使用，以提供应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="d1731-212">You can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property in combination with other menu items in a menu to provide state for an application.</span></span> <span data-ttu-id="d1731-213">例如，您可以对一组项中的菜单项设置一个选中标记，以确定要为应用程序中的文本显示的字体大小。</span><span class="sxs-lookup"><span data-stu-id="d1731-213">For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</span></span> <span data-ttu-id="d1731-214">你还可以使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性来标识一组互斥菜单项中的选定菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-214">You can also use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify the selected menu item in a group of mutually exclusive menu items.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1731-215">对于顶级菜单项，不能将此属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="d1731-215">This property cannot be set to `true` for top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-216">下面的代码示例使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性来提供应用程序中的状态。</span><span class="sxs-lookup"><span data-stu-id="d1731-216">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to provide the state in an application.</span></span> <span data-ttu-id="d1731-217">在此示例中，一组菜单项用于指定 <xref:System.Windows.Forms.TextBox> 控件中的文本的颜色。</span><span class="sxs-lookup"><span data-stu-id="d1731-217">In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="d1731-218">提供的事件处理程序由三个菜单项的 <xref:System.Windows.Forms.MenuItem.Click> 事件使用。</span><span class="sxs-lookup"><span data-stu-id="d1731-218">The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items.</span></span> <span data-ttu-id="d1731-219">每个菜单项指定文本颜色、`menuItemRed` （红色）、`menuItemGreen` （绿色）或 `menuItemBlue` （蓝色）。</span><span class="sxs-lookup"><span data-stu-id="d1731-219">Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue).</span></span> <span data-ttu-id="d1731-220">事件处理程序确定单击的菜单项，将复选标记置于所选菜单项上，并更改窗体 <xref:System.Windows.Forms.TextBox> 控件的文本颜色。</span><span class="sxs-lookup"><span data-stu-id="d1731-220">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="d1731-221">该示例要求将 <xref:System.Drawing> 命名空间添加到了此代码所放置到的窗体中。</span><span class="sxs-lookup"><span data-stu-id="d1731-221">The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in.</span></span> <span data-ttu-id="d1731-222">该示例还要求将 <xref:System.Windows.Forms.TextBox> 添加到此示例代码所在的窗体中，该窗体名为 `textBox1`。</span><span class="sxs-lookup"><span data-stu-id="d1731-222">The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Checked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Checked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Checked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Checked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1731-223"><see cref="T:System.Windows.Forms.MenuItem" /> 是顶级菜单，或有子级。</span><span class="sxs-lookup"><span data-stu-id="d1731-223">The <see cref="T:System.Windows.Forms.MenuItem" /> is a top-level menu or has children.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-224">当单击菜单项或使用为该菜单项定义的快捷键或访问键选择菜单项时发生。</span><span class="sxs-lookup"><span data-stu-id="d1731-224">Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-225">当用户单击此 <xref:System.Windows.Forms.MenuItem> 时，将发生 <xref:System.Windows.Forms.MenuItem.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-225">The <xref:System.Windows.Forms.MenuItem.Click> event occurs when this <xref:System.Windows.Forms.MenuItem> is clicked by the user.</span></span> <span data-ttu-id="d1731-226">如果用户使用键盘选择菜单项并按下 Enter 键，则也会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-226">This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</span></span> <span data-ttu-id="d1731-227">如果按下了与 <xref:System.Windows.Forms.MenuItem>相关联的访问密钥或快捷键，也会发生此问题。</span><span class="sxs-lookup"><span data-stu-id="d1731-227">It can also occur if an access key or shortcut key is pressed that is associated with the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="d1731-228">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-228">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1731-229">如果 <xref:System.Windows.Forms.MenuItem> 的 <xref:System.Windows.Forms.Menu.MenuItems%2A> 属性包含任何项，则不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-229">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="d1731-230">父菜单项不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-230">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-231">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Click> 事件在单击 <xref:System.Windows.Forms.MenuItem> 时执行任务。</span><span class="sxs-lookup"><span data-stu-id="d1731-231">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="d1731-232">该示例创建一个名为 `mainMenu1` 的 <xref:System.Windows.Forms.MainMenu>，并添加两个 <xref:System.Windows.Forms.MenuItem> 对象： `topMenuItem` （`File`）和 `menuItem1` （`Open`）。</span><span class="sxs-lookup"><span data-stu-id="d1731-232">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="d1731-233">然后，它将 `Click` 事件连接到 `menuItem1_Click` 事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-233">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="d1731-234">当用户单击 "`Open`" 菜单项时，将初始化并显示 <xref:System.Windows.Forms.OpenFileDialog>。</span><span class="sxs-lookup"><span data-stu-id="d1731-234">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="d1731-235">该示例要求您已创建一个名为 `Form1`的 <xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="d1731-235">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloneMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1731-236">创建 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="d1731-236">Creates a copy of a <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem CloneMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem CloneMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloneMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ CloneMenu();" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.CloneMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1731-237">创建当前 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="d1731-237">Creates a copy of the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="d1731-238">表示重复菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-238">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the duplicated menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-239"><xref:System.Windows.Forms.MenuItem> 对象不能用于多个位置，除非你获取了 <xref:System.Windows.Forms.MenuItem>的副本。</span><span class="sxs-lookup"><span data-stu-id="d1731-239"><xref:System.Windows.Forms.MenuItem> objects cannot be used in more than one place unless you obtain a copy of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="d1731-240">可以调用此方法来创建此菜单项的副本，以便在应用程序内的 <xref:System.Windows.Forms.ContextMenu>、<xref:System.Windows.Forms.MainMenu>或其他 <xref:System.Windows.Forms.MenuItem> 中使用。</span><span class="sxs-lookup"><span data-stu-id="d1731-240">You can call this method to create a copy of this menu item for use in a <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, or other <xref:System.Windows.Forms.MenuItem> within your application.</span></span> <span data-ttu-id="d1731-241">克隆菜单项时，原始菜单项中指定的任何事件处理程序都将继续在该菜单项的克隆版本中运行。</span><span class="sxs-lookup"><span data-stu-id="d1731-241">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="d1731-242">例如，如果创建了一个 <xref:System.Windows.Forms.MenuItem>，并将其 <xref:System.Windows.Forms.MenuItem.Click> 事件连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-242">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="d1731-243">当克隆菜单项时，克隆的菜单项将调用同一事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-243">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-244">下面的代码示例克隆一个 <xref:System.Windows.Forms.MenuItem> 并将其显示在 <xref:System.Windows.Forms.ContextMenu>中。</span><span class="sxs-lookup"><span data-stu-id="d1731-244">The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d1731-245">该示例要求 <xref:System.Windows.Forms.MenuItem> 存在于窗体上的 <xref:System.Windows.Forms.MainMenu> 中，其名称为 `menuItem1`，并且窗体上还存在一个名为 `contextMenu1` 的 <xref:System.Windows.Forms.ContextMenu> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-245">The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.CloneMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="d1731-246">表示要复制的菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-246">The <see cref="T:System.Windows.Forms.MenuItem" /> that represents the menu item to copy.</span></span></param>
        <summary><span data-ttu-id="d1731-247">创建指定 <see cref="T:System.Windows.Forms.MenuItem" /> 的副本。</span><span class="sxs-lookup"><span data-stu-id="d1731-247">Creates a copy of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-248">调用此方法以创建您已创建的菜单项的副本，以便在快捷菜单或应用程序中的其他菜单结构中使用。</span><span class="sxs-lookup"><span data-stu-id="d1731-248">Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</span></span> <span data-ttu-id="d1731-249">此版本的 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 允许你指定要复制的特定 <xref:System.Windows.Forms.MenuItem>，而不是调用方法的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-249">This version of <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> allows you to specify a specific <xref:System.Windows.Forms.MenuItem> to copy instead of the menu item that is calling the method.</span></span> <span data-ttu-id="d1731-250">您可以使用此方法来初始化具有其他 <xref:System.Windows.Forms.MenuItem>的副本的新 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-250">You can use this method to initialize a new <xref:System.Windows.Forms.MenuItem> object with a copy of another <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="d1731-251">克隆菜单项时，原始菜单项中指定的任何事件处理程序都将继续在该菜单项的克隆版本中运行。</span><span class="sxs-lookup"><span data-stu-id="d1731-251">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="d1731-252">例如，如果创建了一个 <xref:System.Windows.Forms.MenuItem>，并将其 <xref:System.Windows.Forms.MenuItem.Click> 事件连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-252">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="d1731-253">当克隆菜单项时，克隆的菜单项将调用同一事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-253">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-254">下面的代码示例使用窗体上的 <xref:System.Windows.Forms.MainMenu> 中的现有 <xref:System.Windows.Forms.MenuItem> 的副本初始化新 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-254">The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form.</span></span> <span data-ttu-id="d1731-255">然后，该代码将克隆的 <xref:System.Windows.Forms.MenuItem> 添加到窗体上的 <xref:System.Windows.Forms.ContextMenu> 中。</span><span class="sxs-lookup"><span data-stu-id="d1731-255">The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form.</span></span> <span data-ttu-id="d1731-256">此示例要求已创建了一个 <xref:System.Windows.Forms.MenuItem> 并将其命名为 `menuItem1` 并且已创建 `contextMenu1`的 <xref:System.Windows.Forms.ContextMenu> 控件。</span><span class="sxs-lookup"><span data-stu-id="d1731-256">This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItem">
      <MemberSignature Language="C#" Value="public bool DefaultItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultItem : bool with get, set" Usage="System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-257">获取或设置一个值，通过该值指示菜单项是否为默认菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-257">Gets or sets a value indicating whether the menu item is the default menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-258">如果菜单项是菜单中的默认菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-258"><see langword="true" /> if the menu item is the default item in a menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1731-259">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-259">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-260">菜单的默认菜单项为粗体。</span><span class="sxs-lookup"><span data-stu-id="d1731-260">The default menu item for a menu is boldfaced.</span></span> <span data-ttu-id="d1731-261">当用户双击包含默认项的子菜单时，将选择默认项，并关闭子菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-261">When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</span></span> <span data-ttu-id="d1731-262">您可以使用 <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> 属性来指示菜单或快捷菜单中预期的默认操作。</span><span class="sxs-lookup"><span data-stu-id="d1731-262">You can use the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property to indicate, the default action that is expected in a menu or shortcut menu.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-263">下面的代码示例创建一个具有两个子菜单项的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-263">The following code example creates a menu item with two submenu items.</span></span> <span data-ttu-id="d1731-264">该示例使用 <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> 属性将 `menuItem2` 设置为默认菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-264">The example sets `menuItem2` as the default menu item using the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="menuItem.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d1731-265">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="d1731-265"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d1731-266">处置由 <see cref="T:System.Windows.Forms.MenuItem" /> 占用的资源（内存除外）。</span><span class="sxs-lookup"><span data-stu-id="d1731-266">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-267">在完成使用 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 后，应调用 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-267">Call <xref:System.Windows.Forms.MenuItem.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="d1731-268"><xref:System.Windows.Forms.MenuItem.Dispose%2A> 方法使 <xref:System.Windows.Forms.MenuItem> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="d1731-268">The <xref:System.Windows.Forms.MenuItem.Dispose%2A> method leaves the <xref:System.Windows.Forms.MenuItem> in an unusable state.</span></span> <span data-ttu-id="d1731-269">调用 <xref:System.Windows.Forms.MenuItem.Dispose%2A>后，必须释放对 <xref:System.Windows.Forms.MenuItem> 的所有引用，以便垃圾回收将其占用的内存回收。</span><span class="sxs-lookup"><span data-stu-id="d1731-269">After calling <xref:System.Windows.Forms.MenuItem.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.MenuItem> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1731-270">每次释放对 <xref:System.Windows.Forms.MenuItem.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-270">Always call <xref:System.Windows.Forms.MenuItem.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="d1731-271">否则，在垃圾回收调用 <xref:System.Windows.Forms.MenuItem> 对象的析构函数之前，将不会释放 <xref:System.Windows.Forms.MenuItem> 正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="d1731-271">Otherwise, the resources the <xref:System.Windows.Forms.MenuItem> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.MenuItem> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-272">当菜单项的 <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> 属性设置为 <see langword="true" /> 并且发出绘制菜单项的请求时发生。</span><span class="sxs-lookup"><span data-stu-id="d1731-272">Occurs when the <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> property of a menu item is set to <see langword="true" /> and a request is made to draw the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-273">传递到 <xref:System.Windows.Forms.MenuItem.DrawItem> 事件处理程序的 <xref:System.Windows.Forms.DrawItemEventArgs> 参数提供了一个 <xref:System.Drawing.Graphics> 对象，使你能够在菜单项的图面上执行绘图和其他图形操作。</span><span class="sxs-lookup"><span data-stu-id="d1731-273">The <xref:System.Windows.Forms.DrawItemEventArgs> argument passed to a <xref:System.Windows.Forms.MenuItem.DrawItem> event handler provides a <xref:System.Drawing.Graphics> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</span></span> <span data-ttu-id="d1731-274">您可以使用此事件处理程序创建满足您的应用程序需求的自定义菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-274">You can use this event handler to create custom menus that meet the needs of your application.</span></span> <span data-ttu-id="d1731-275">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-275">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-276">下面的代码示例演示如何处理 <xref:System.Windows.Forms.MenuItem.DrawItem> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-276">The following code example demonstrates how to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="d1731-277">此示例使用 <xref:System.Drawing.Brush> 和 <xref:System.Drawing.Font>绘制菜单项，然后在菜单项的周围绘制一个 <xref:System.Drawing.Rectangle>。</span><span class="sxs-lookup"><span data-stu-id="d1731-277">This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item.</span></span> <span data-ttu-id="d1731-278">绘图是通过 <xref:System.Drawing.Graphics> 对象执行的，该对象被传递到 <xref:System.Windows.Forms.DrawItemEventArgs> 参数中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-278">The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter.</span></span> <span data-ttu-id="d1731-279">此示例要求您已将项的 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性初始化为 `true`。</span><span class="sxs-lookup"><span data-stu-id="d1731-279">This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`.</span></span> <span data-ttu-id="d1731-280">在此 C# 示例中，在 `InitializeComponent`后，在窗体的构造函数中添加以下代码，以挂钩该事件：</span><span class="sxs-lookup"><span data-stu-id="d1731-280">For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:</span></span>  
  
 `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  
  
 [!code-cpp[OwnerDraw example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/OwnerDraw example/CPP/form1.cpp#1)]
 [!code-csharp[OwnerDraw example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/OwnerDraw example/CS/form1.cs#1)]
 [!code-vb[OwnerDraw example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/OwnerDraw example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-281">获取或设置一个值，通过该值指示菜单项是否启用。</span><span class="sxs-lookup"><span data-stu-id="d1731-281">Gets or sets a value indicating whether the menu item is enabled.</span></span></summary>
        <value><span data-ttu-id="d1731-282">如果启用菜单项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-282"><see langword="true" /> if the menu item is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1731-283">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-283">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-284">禁用的 <xref:System.Windows.Forms.MenuItem> 以灰色显示，以指示其状态。</span><span class="sxs-lookup"><span data-stu-id="d1731-284">A <xref:System.Windows.Forms.MenuItem> that is disabled is displayed in a gray color to indicate its state.</span></span> <span data-ttu-id="d1731-285">禁用父菜单项时，不显示所有子菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-285">When a parent menu item is disabled, all submenu items are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-286">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Popup> 事件来确定是否在显示为剪切、复制和删除操作提供支持的 <xref:System.Windows.Forms.MenuItem> 对象之前是否启用它们。</span><span class="sxs-lookup"><span data-stu-id="d1731-286">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="d1731-287">该示例确定是否 `textBox1`、窗体上的 <xref:System.Windows.Forms.TextBox> 控件是否已启用、是否具有输入焦点，以及是否在启用 <xref:System.Windows.Forms.MenuItem> 对象之前选择了文本。</span><span class="sxs-lookup"><span data-stu-id="d1731-287">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="d1731-288">此示例要求创建了三个名为 `menuCut`、`menuCopy`和 `menuDelete` 的 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-288">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.MenuItem.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-289">获取或设置一个值，通过该值指示菜单项在其父菜单中的位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-289">Gets or sets a value indicating the position of the menu item in its parent menu.</span></span></summary>
        <value><span data-ttu-id="d1731-290">表示菜单项在其父菜单中位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="d1731-290">The zero-based index representing the position of the menu item in its parent menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-291">此属性提供菜单项在其父菜单的菜单项集合中的索引位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-291">This property provides the indexed position of a menu item in the menu item collection of its parent menu.</span></span> <span data-ttu-id="d1731-292">您可以使用此属性将菜单项重新定位到其菜单中的不同位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-292">You can use this property to reposition a menu item to a different location within its menu.</span></span> <span data-ttu-id="d1731-293">在创建 <xref:System.Windows.Forms.MenuItem> 时，还可以使用此属性来指定其在菜单结构中的位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-293">You can also use this property when creating a <xref:System.Windows.Forms.MenuItem> to specify its position in a menu structure at the time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-294">下面的代码示例在菜单中切换两个菜单项的位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-294">The following code example switches the position of two menu items in a menu.</span></span> <span data-ttu-id="d1731-295">下面的代码示例要求创建两个名为 `menuItem1` 和 `menuItem2`的 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-295">The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`.</span></span> <span data-ttu-id="d1731-296">`menuItem1` 菜单项在菜单中向下移动一个位置，而 `menuItem2` 会向上移动一个位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-296">The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.</span></span>  
  
 [!code-cpp[Classic MenuItem.Index Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Index Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Index Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Index Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1731-297">赋值小于零或大于项的数目。</span><span class="sxs-lookup"><span data-stu-id="d1731-297">The assigned value is less than zero or greater than the item count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public override bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.MenuItem.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-298">获取一个值，通过该值指示菜单项是否包含子菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-298">Gets a value indicating whether the menu item contains child menu items.</span></span></summary>
        <value><span data-ttu-id="d1731-299">如果菜单项包含子菜单项，则为 <see langword="true" />；如果菜单为独立菜单项，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-299"><see langword="true" /> if the menu item contains child menu items; <see langword="false" /> if the menu is a standalone menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-300">可以将此属性与 <xref:System.Windows.Forms.MenuItem.Parent%2A> 属性结合使用，以通过整个菜单结构在代码中导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-300">You can use this property with the <xref:System.Windows.Forms.MenuItem.Parent%2A> property to navigate in code through an entire menu structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-301">下面的代码示例确定是否存在与名为 `menuItem1`的 <xref:System.Windows.Forms.MenuItem> 关联的任何子菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-301">The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`.</span></span> <span data-ttu-id="d1731-302">如果存在任何子菜单，它会通过将 <xref:System.Windows.Forms.MenuItem.Enabled%2A> 属性设置为 `false`来禁用它们。</span><span class="sxs-lookup"><span data-stu-id="d1731-302">If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="d1731-303">该示例要求创建一个名为 `menuItem1`的 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-303">The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.IsParent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.IsParent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.IsParent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiList">
      <MemberSignature Language="C#" Value="public bool MdiList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MdiList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MdiList" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MdiList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MdiList : bool with get, set" Usage="System.Windows.Forms.MenuItem.MdiList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-304">获取或设置一个值，通过该值指示是否使用在关联窗体内显示的多文档界面 (MDI) 子窗口列表来填充菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-304">Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</span></span></summary>
        <value><span data-ttu-id="d1731-305">如果要在此菜单项中显示 MDI 子窗口列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-305"><see langword="true" /> if a list of the MDI child windows is displayed in this menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1731-306">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-306">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-307">选择菜单项以显示 MDI 子窗口列表时，该列表显示为菜单项的子菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-307">When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</span></span> <span data-ttu-id="d1731-308">只有定义为 MDI 子窗体的窗体才会显示在窗口列表中。</span><span class="sxs-lookup"><span data-stu-id="d1731-308">Only forms that are defined as MDI child forms are displayed in the window list.</span></span> <span data-ttu-id="d1731-309">一次只能显示9个子窗口。</span><span class="sxs-lookup"><span data-stu-id="d1731-309">Only nine child windows can be displayed at a time.</span></span> <span data-ttu-id="d1731-310">如果显示9个以上的子窗口，则为 "更多窗口 ..."菜单项显示在窗口列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="d1731-310">If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</span></span> <span data-ttu-id="d1731-311">单击此菜单项将显示一个对话框，其中包含当前处于活动状态的子窗口的完整列表。</span><span class="sxs-lookup"><span data-stu-id="d1731-311">Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-312">下面的代码示例创建一个 <xref:System.Windows.Forms.MenuItem>，该用于以 MDI 形式显示当前打开的 MDI 子窗体的列表。</span><span class="sxs-lookup"><span data-stu-id="d1731-312">The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.</span></span>  
  
 [!code-cpp[Classic MenuItem.MdiList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MdiList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MdiList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-313">当菜单在绘制菜单项之前需要知道菜单项大小时发生。</span><span class="sxs-lookup"><span data-stu-id="d1731-313">Occurs when the menu needs to know the size of a menu item before drawing it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-314">若要引发此事件，必须将菜单项的 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="d1731-314">In order for this event to be raised, you must have the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property of the menu item set to `true`.</span></span> <span data-ttu-id="d1731-315">在绘制所有者描述的菜单以允许指定要绘制的菜单项大小时，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-315">This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</span></span> <span data-ttu-id="d1731-316">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-316">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-317">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="d1731-317">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d1731-318">在此示例中，事件处理程序报告 <xref:System.Windows.Forms.MenuItem.MeasureItem> 事件的发生。</span><span class="sxs-lookup"><span data-stu-id="d1731-318">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span> <span data-ttu-id="d1731-319">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="d1731-319">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="d1731-320">若要运行示例代码，请将其粘贴到包含名为 `MenuItem1`<xref:System.Windows.Forms.MenuItem> 类型实例的项目中。</span><span class="sxs-lookup"><span data-stu-id="d1731-320">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`.</span></span> <span data-ttu-id="d1731-321">然后，确保事件处理程序与 <xref:System.Windows.Forms.MenuItem.MeasureItem> 事件关联。</span><span class="sxs-lookup"><span data-stu-id="d1731-321">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#499](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#499)]
 [!code-vb[System.Windows.Forms.EventExamples#499](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#499)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="MenuID">
      <MemberSignature Language="C#" Value="protected int MenuID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MenuID" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MenuID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property MenuID As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int MenuID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuID : int" Usage="System.Windows.Forms.MenuItem.MenuID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-322">获取一个值，通过该值指示此菜单项的 Windows 标识符。</span><span class="sxs-lookup"><span data-stu-id="d1731-322">Gets a value indicating the Windows identifier for this menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-323">此菜单项的 Windows 标识符。</span><span class="sxs-lookup"><span data-stu-id="d1731-323">The Windows identifier for this menu item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1731-324">将此 <see cref="T:System.Windows.Forms.MenuItem" /> 与另一个 <see cref="T:System.Windows.Forms.MenuItem" /> 合并。</span><span class="sxs-lookup"><span data-stu-id="d1731-324">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem MergeMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem MergeMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ MergeMenu();" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.MergeMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1731-325">将此 <see cref="T:System.Windows.Forms.MenuItem" /> 与另一个 <see cref="T:System.Windows.Forms.MenuItem" /> 合并并返回合并后的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-325">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" /> and returns the resulting merged <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="d1731-326">表示合并菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-326">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the merged menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-327">在调用此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>时，返回的 <xref:System.Windows.Forms.MenuItem> 是当前菜单项的副本，可与其他菜单项合并，而不会影响当前项的功能。</span><span class="sxs-lookup"><span data-stu-id="d1731-327">When you call this version of <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>, the <xref:System.Windows.Forms.MenuItem> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</span></span> <span data-ttu-id="d1731-328">此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法类似于调用不包含任何参数的 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-328">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method is similar to calling the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method that contains no parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.MergeMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="d1731-329">指定要与该菜单项合并的菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-329">A <see cref="T:System.Windows.Forms.MenuItem" /> that specifies the menu item to merge with this one.</span></span></param>
        <summary><span data-ttu-id="d1731-330">将另一菜单项与该菜单项合并。</span><span class="sxs-lookup"><span data-stu-id="d1731-330">Merges another menu item with this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-331">菜单项根据菜单项的 <xref:System.Windows.Forms.MenuItem.MergeType%2A> 值和 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> 属性合并。</span><span class="sxs-lookup"><span data-stu-id="d1731-331">Menu items are merged according to the value of the menu item's <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> properties.</span></span> <span data-ttu-id="d1731-332">利用此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法，您可以将两个 <xref:System.Windows.Forms.MenuItem> 对象（及其子菜单）合并为一个菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-332">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method enables you to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenus) into a single menu.</span></span> <span data-ttu-id="d1731-333">当多文档界面（MDI）父窗体和子级都具有菜单时，将自动处理菜单合并。</span><span class="sxs-lookup"><span data-stu-id="d1731-333">Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</span></span> <span data-ttu-id="d1731-334">您可以使用此版本的方法将位于 <xref:System.Windows.Forms.MainMenu> 控件中的两个 <xref:System.Windows.Forms.MenuItem> 对象（及其子菜单项）合并为 <xref:System.Windows.Forms.ContextMenu>内的单个菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-334">You can use this version of the method to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenu items) located in a <xref:System.Windows.Forms.MainMenu> control into a single menu within a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="d1731-335">例如，可以调用此版本的 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法，将文件的菜单项和编辑菜单合并为单个 <xref:System.Windows.Forms.MenuItem>，然后可以将该文件添加到 <xref:System.Windows.Forms.ContextMenu>并将其显示出来。</span><span class="sxs-lookup"><span data-stu-id="d1731-335">For example, you can call this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menu items of a File and Edit menu into a single <xref:System.Windows.Forms.MenuItem> that can then be added to and displayed by a <xref:System.Windows.Forms.ContextMenu>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-336">下面的代码示例使用 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 方法的此版本创建 <xref:System.Windows.Forms.MenuItem> 的副本并将其与另一个合并。</span><span class="sxs-lookup"><span data-stu-id="d1731-336">The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another.</span></span> <span data-ttu-id="d1731-337">然后将合并的 <xref:System.Windows.Forms.MenuItem> 添加到 <xref:System.Windows.Forms.ContextMenu> 控件。</span><span class="sxs-lookup"><span data-stu-id="d1731-337">The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control.</span></span> <span data-ttu-id="d1731-338">此示例要求有两个名为 `menuItem1` 和 `menuItem2` 的菜单项，其中包含其中的子菜单项和一个名为 `contextMenu1` 的 <xref:System.Windows.Forms.ContextMenu> 以显示菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-338">This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items.</span></span> <span data-ttu-id="d1731-339">`menuItem1` 和 `menuItem2` 中包含不同的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-339">`menuItem1` and `menuItem2` have different menu items contained within them.</span></span> <span data-ttu-id="d1731-340">对 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> 的调用完成后，将创建一个合并菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-340">After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrder">
      <MemberSignature Language="C#" Value="public int MergeOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeOrder { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOrder : int with get, set" Usage="System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-341">获取或设置一个值，通过该值指示菜单项与另一个项合并时的相对位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-341">Gets or sets a value indicating the relative position of the menu item when it is merged with another.</span></span></summary>
        <value><span data-ttu-id="d1731-342">表示该菜单项的合并顺序位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="d1731-342">A zero-based index representing the merge order position for this menu item.</span></span> <span data-ttu-id="d1731-343">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="d1731-343">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-344">菜单项的合并顺序指定了当包含 <xref:System.Windows.Forms.MenuItem> 的菜单结构与另一个合并时，此菜单项将采用的相对位置。</span><span class="sxs-lookup"><span data-stu-id="d1731-344">The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <xref:System.Windows.Forms.MenuItem> is contained in is merged with another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-345">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> 属性控制合并菜单的显示方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-345">The following code example demonstrates using the <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> property to control the way a merged menu is displayed.</span></span> <span data-ttu-id="d1731-346">这是一个完整示例，将其添加到项目后即可运行。</span><span class="sxs-lookup"><span data-stu-id="d1731-346">This is a complete example, ready to run once you add it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="M:System.Windows.Forms.MenuItem.MergeMenu" />
      </Docs>
    </Member>
    <Member MemberName="MergeType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuMerge MergeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MenuMerge MergeType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeType" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeType As MenuMerge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuMerge MergeType { System::Windows::Forms::MenuMerge get(); void set(System::Windows::Forms::MenuMerge value); };" />
      <MemberSignature Language="F#" Value="member this.MergeType : System.Windows.Forms.MenuMerge with get, set" Usage="System.Windows.Forms.MenuItem.MergeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-347">获取或设置一个值，通过该值指示该菜单项的菜单与另一个菜单合并时该菜单项的行为。</span><span class="sxs-lookup"><span data-stu-id="d1731-347">Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</span></span></summary>
        <value><span data-ttu-id="d1731-348">一个 <see cref="T:System.Windows.Forms.MenuMerge" /> 值，该值表示菜单项的合并类型。</span><span class="sxs-lookup"><span data-stu-id="d1731-348">A <see cref="T:System.Windows.Forms.MenuMerge" /> value that represents the menu item's merge type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-349">菜单项的合并类型指示菜单项与另一个要合并的菜单项的合并顺序相同的行为方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-349">The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</span></span> <span data-ttu-id="d1731-350">您可以根据两个或更多现有菜单，使用合并菜单来创建合并菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-350">You can use merged menus to create a consolidated menu based on two or more existing menus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-351">下面的代码示例使用指定的 <xref:System.Windows.Forms.MenuItem.MergeType%2A> 和 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> 创建 <xref:System.Windows.Forms.MenuItem>，以便将菜单项添加到第一个位置的合并菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-351">The following code example creates a <xref:System.Windows.Forms.MenuItem> with the <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d1731-352">分配的值不是 <see cref="T:System.Windows.Forms.MenuMerge" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d1731-352">The assigned value is not one of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.MenuMerge" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Mnemonic">
      <MemberSignature Language="C#" Value="public char Mnemonic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Mnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mnemonic As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char Mnemonic { char get(); };" />
      <MemberSignature Language="F#" Value="member this.Mnemonic : char" Usage="System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-353">获取一个值，通过该值指示与此菜单项关联的助记字符。</span><span class="sxs-lookup"><span data-stu-id="d1731-353">Gets a value indicating the mnemonic character that is associated with this menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-354">表示与此菜单项关联的助记字符的字符。</span><span class="sxs-lookup"><span data-stu-id="d1731-354">A character that represents the mnemonic character associated with this menu item.</span></span> <span data-ttu-id="d1731-355">如果在 <see cref="T:System.Windows.Forms.MenuItem" /> 的文本中没有指定助记字符，则返回空字符（ASCII 值为 0）。</span><span class="sxs-lookup"><span data-stu-id="d1731-355">Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-356">助记键字符是 <xref:System.Windows.Forms.MenuItem>文本中的 "&" 字符（&）后面的第一个字符。</span><span class="sxs-lookup"><span data-stu-id="d1731-356">The mnemonic character is the first character after an ampersand character (&) in the text of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="d1731-357">如果将两个 "与" 符号一起使用，则此属性将不会返回助记键，因为 "&" 用于在 <xref:System.Windows.Forms.MenuItem> 的文本中显示与号，而不是定义助记键字符。</span><span class="sxs-lookup"><span data-stu-id="d1731-357">This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <xref:System.Windows.Forms.MenuItem> instead of defining a mnemonic character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Text" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="menuItem.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d1731-358">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-358">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d1731-359">引发 <see cref="E:System.Windows.Forms.MenuItem.Click" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-359">Raises the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-360">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-360">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d1731-361">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-361">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-362">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Click> 事件在单击 <xref:System.Windows.Forms.MenuItem> 时执行任务。</span><span class="sxs-lookup"><span data-stu-id="d1731-362">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="d1731-363">该示例创建一个名为 `mainMenu1` 的 <xref:System.Windows.Forms.MainMenu>，并添加两个 <xref:System.Windows.Forms.MenuItem> 对象： `topMenuItem` （`File`）和 `menuItem1` （`Open`）。</span><span class="sxs-lookup"><span data-stu-id="d1731-363">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="d1731-364">然后，它将 `Click` 事件连接到 `menuItem1_Click` 事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-364">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="d1731-365">当用户单击 "`Open`" 菜单项时，将初始化并显示 <xref:System.Windows.Forms.OpenFileDialog>。</span><span class="sxs-lookup"><span data-stu-id="d1731-365">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="d1731-366">该示例要求您已创建一个名为 `Form1`的 <xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="d1731-366">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1731-367">当在派生类中重写 <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-367">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="menuItem.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d1731-368">一个包含事件数据的 <see cref="T:System.Windows.Forms.DrawItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-368">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d1731-369">引发 <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-369">Raises the <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-370">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-370">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d1731-371">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-371">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1731-372">当在派生类中重写 <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-372">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInitMenuPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInitMenuPopup (EventArgs e);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInitMenuPopup (e As EventArgs)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnInitMenuPopup : EventArgs -&gt; unit&#xA;override this.OnInitMenuPopup : EventArgs -&gt; unit" Usage="menuItem.OnInitMenuPopup e" />
      <MemberSignature Language="C#" Value="protected virtual void OnInitMenuPopup (EventArgs e);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitMenuPopup (e As EventArgs)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d1731-373">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-373">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d1731-374">引发 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-374">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="menuItem.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d1731-375">一个包含事件数据的 <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-375">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d1731-376">引发 <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-376">Raises the <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-377">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-377">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d1731-378">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-378">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1731-379">当在派生类中重写 <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-379">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPopup : EventArgs -&gt; unit&#xA;override this.OnPopup : EventArgs -&gt; unit" Usage="menuItem.OnPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d1731-380">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-380">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d1731-381">引发 <see cref="E:System.Windows.Forms.MenuItem.Popup" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-381">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-382">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-382">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d1731-383">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-383">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-384">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Popup> 事件来确定是否在显示为剪切、复制和删除操作提供支持的 <xref:System.Windows.Forms.MenuItem> 对象之前是否启用它们。</span><span class="sxs-lookup"><span data-stu-id="d1731-384">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="d1731-385">该示例确定是否 `textBox1`、窗体上的 <xref:System.Windows.Forms.TextBox> 控件是否已启用、是否具有输入焦点，以及是否在启用 <xref:System.Windows.Forms.MenuItem> 对象之前选择了文本。</span><span class="sxs-lookup"><span data-stu-id="d1731-385">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="d1731-386">此示例要求创建了三个名为 `menuCut`、`menuCopy`和 `menuDelete` 的 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-386">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1731-387">当在派生类中重写 <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-387">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnSelect (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelect(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelect (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelect(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelect : EventArgs -&gt; unit&#xA;override this.OnSelect : EventArgs -&gt; unit" Usage="menuItem.OnSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d1731-388">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-388">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d1731-389">引发 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-389">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-390">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-390">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d1731-391">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-391">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-392">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem> 类的 <xref:System.Windows.Forms.MenuItem.Select> 事件将帮助文本分配给 <xref:System.Windows.Forms.StatusBar> 控件的 <xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="d1731-392">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="d1731-393">此示例要求将 <xref:System.Windows.Forms.MenuItem> 名为 `menuOpen`、`menuSave`和 `menuExit` 的对象添加到窗体上的 <xref:System.Windows.Forms.MainMenu> 控件中。</span><span class="sxs-lookup"><span data-stu-id="d1731-393">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="d1731-394">该示例还要求将名为 `statusBar1` <xref:System.Windows.Forms.StatusBar> 控件添加到窗体中。</span><span class="sxs-lookup"><span data-stu-id="d1731-394">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="d1731-395"><xref:System.Windows.Forms.StatusBar> 控件应包含一个 <xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="d1731-395">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1731-396">当在派生类中重写 <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-396">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-397">获取或设置一个字值，通过该值指示是由所提供的代码绘制菜单项还是由 Windows 绘制菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-397">Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-398">如果使用代码绘制菜单项，则为 <see langword="true" />；如果由 Windows 绘制菜单项，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-398"><see langword="true" /> if the menu item is to be drawn using code; <see langword="false" /> if the menu item is to be drawn by Windows.</span></span> <span data-ttu-id="d1731-399">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-399">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-400"><xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性设置为 `true`时，需要处理菜单项的所有绘图。</span><span class="sxs-lookup"><span data-stu-id="d1731-400">When the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property is set to `true`, you need to handle all drawing of the menu item.</span></span> <span data-ttu-id="d1731-401">您可以使用此功能来创建您自己的特殊菜单显示。</span><span class="sxs-lookup"><span data-stu-id="d1731-401">You can use this capability to create your own special menu displays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-402">下面的代码示例演示一个具有所有者描述的菜单项的菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-402">The following code example demonstrates a menu with an owner-drawn menu item.</span></span> <span data-ttu-id="d1731-403">此示例设置 <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 属性，并使用 `AddHandler` 语句和 `AddressOf` 运算符来指定用于处理 <xref:System.Windows.Forms.MenuItem.DrawItem> 事件的委托。</span><span class="sxs-lookup"><span data-stu-id="d1731-403">This example set the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="d1731-404">若要运行该示例，请将其粘贴到导入 <xref:System>、<xref:System.Windows.Forms>和 <xref:System.Drawing> 命名空间的窗体中。</span><span class="sxs-lookup"><span data-stu-id="d1731-404">To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="d1731-405">从窗体的构造函数或 `Load` 方法调用 `InitializeMenu`。</span><span class="sxs-lookup"><span data-stu-id="d1731-405">Call `InitializeMenu` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ Parent { System::Windows::Forms::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Menu" Usage="System.Windows.Forms.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-406">获取一个值，该值指示包含此菜单项的菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-406">Gets a value indicating the menu that contains this menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-407">表示包含此菜单项的菜单的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-407">A <see cref="T:System.Windows.Forms.Menu" /> that represents the menu that contains this menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-408">您可以使用此属性来获取子菜单的 <xref:System.Windows.Forms.Menu> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-408">You can use this property to obtain the <xref:System.Windows.Forms.Menu> object for a submenu.</span></span> <span data-ttu-id="d1731-409">可以将此属性返回的 <xref:System.Windows.Forms.Menu> 对象转换为 <xref:System.Windows.Forms.MenuItem> 的对象，以对其进行操作。</span><span class="sxs-lookup"><span data-stu-id="d1731-409">You can cast the <xref:System.Windows.Forms.Menu> object returned by this property to a <xref:System.Windows.Forms.MenuItem> object to manipulate it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-410">在此示例中，您将创建一个主菜单和一个顶级菜单项，`menuItem1` （`File`）。</span><span class="sxs-lookup"><span data-stu-id="d1731-410">In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`).</span></span> <span data-ttu-id="d1731-411">还会创建两个菜单项，`menuItem2` （`New`）和 `menuItem3` （`Open`），然后将它们添加到 `menuItem1`的菜单项列表。</span><span class="sxs-lookup"><span data-stu-id="d1731-411">You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`.</span></span> <span data-ttu-id="d1731-412">然后，查看 `menuItem3` 是否有父菜单，该菜单为 true，并在 messagebox 中显示此父菜单的信息。</span><span class="sxs-lookup"><span data-stu-id="d1731-412">Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box.</span></span> <span data-ttu-id="d1731-413">此示例需要你创建了一个名为 `Form1`的 <xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="d1731-413">This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[ParentMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ParentMenu/CPP/form1.cpp#1)]
 [!code-csharp[ParentMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ParentMenu/CS/form1.cs#1)]
 [!code-vb[ParentMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ParentMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="menuItem.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1731-414">为 <see cref="E:System.Windows.Forms.Control.Click" /> 生成一个 <see cref="T:System.Windows.Forms.MenuItem" /> 事件，模拟用户的单击操作。</span><span class="sxs-lookup"><span data-stu-id="d1731-414">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the <see cref="T:System.Windows.Forms.MenuItem" />, simulating a click by a user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-415">您可以使用此菜单通过代码激活菜单项，而无需传递任何事件信息。</span><span class="sxs-lookup"><span data-stu-id="d1731-415">You can use this menu to activate a menu item through code without passing any event information.</span></span> <span data-ttu-id="d1731-416">例如，如果想要根据应用程序中发生的操作激活菜单项，则可以为该 <xref:System.Windows.Forms.MenuItem>调用 <xref:System.Windows.Forms.MenuItem.PerformClick%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d1731-416">For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <xref:System.Windows.Forms.MenuItem.PerformClick%2A> method for that <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-417">在此示例中，通过使用 `PerformClick` 方法以编程方式单击菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-417">In this example you programmatically click a menu item by using the `PerformClick` method.</span></span> <span data-ttu-id="d1731-418">首先，创建一个主菜单（`mainMenu1`）并向其中添加两个菜单项，`menuItem1` （`File`）和 `menuItem2` （`Edit`）。</span><span class="sxs-lookup"><span data-stu-id="d1731-418">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="d1731-419">当单击菜单项时，还可以使用 <xref:System.Windows.Forms.MenuItem.Click> 事件将数据发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-419">You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked.</span></span> <span data-ttu-id="d1731-420">然后，使用 `PerformClick` 方法单击 "`File`" 菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-420">Then you use the `PerformClick` method to click the `File` menu item.</span></span> <span data-ttu-id="d1731-421">启动应用程序时，将激活 `File` 菜单项，并在其中包含文本 "文件菜单" 被单击的消息框。</span><span class="sxs-lookup"><span data-stu-id="d1731-421">When you start the application, the `File` menu item is activated, and a message box that contains the text "The File menu is clicked."</span></span> <span data-ttu-id="d1731-422">出现在屏幕上。</span><span class="sxs-lookup"><span data-stu-id="d1731-422">appears on the screen.</span></span> <span data-ttu-id="d1731-423">该示例要求您已创建一个名为 `Form1`的 <xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="d1731-423">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformClick/CPP/form1.cpp#1)]
 [!code-csharp[PerformClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformClick/CS/form1.cs#1)]
 [!code-vb[PerformClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="public virtual void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformSelect();" />
      <MemberSignature Language="F#" Value="abstract member PerformSelect : unit -&gt; unit&#xA;override this.PerformSelect : unit -&gt; unit" Usage="menuItem.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1731-424">引发该菜单项的 <see cref="E:System.Windows.Forms.MenuItem.Select" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-424">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-425">此方法允许你引发 <xref:System.Windows.Forms.MenuItem.Select> 事件，而无需将任何事件信息传递给事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-425">This method allows you to raise the <xref:System.Windows.Forms.MenuItem.Select> event without passing any event information to the event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-426">在此示例中，通过使用 `PerformSelect` 方法以编程方式选择菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-426">In this example you programmatically select a menu item by using the `PerformSelect` method.</span></span> <span data-ttu-id="d1731-427">首先，创建一个主菜单（`mainMenu1`）并向其中添加两个菜单项，`menuItem1` （`File`）和 `menuItem2` （`Edit`）。</span><span class="sxs-lookup"><span data-stu-id="d1731-427">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="d1731-428">选择菜单项时，还可以使用 <xref:System.Windows.Forms.MenuItem.Select> 事件将数据发送到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="d1731-428">You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected.</span></span> <span data-ttu-id="d1731-429">然后，使用 `PerformSelect` 方法选择 `File` 菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-429">Then you use the `PerformSelect` method to select the `File` menu item.</span></span> <span data-ttu-id="d1731-430">启动应用程序时，将选择 "`File`" 菜单项，并在其中包含文本 "文件菜单已选中" 的消息框。</span><span class="sxs-lookup"><span data-stu-id="d1731-430">When you start the application, the `File` menu item is selected, and a message box that contains the text "The File menu is selected."</span></span> <span data-ttu-id="d1731-431">出现在屏幕上。</span><span class="sxs-lookup"><span data-stu-id="d1731-431">appears on the screen.</span></span> <span data-ttu-id="d1731-432">该示例要求您已创建一个名为 `Form1`的 <xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="d1731-432">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformSelect/CPP/form1.cpp#1)]
 [!code-csharp[PerformSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformSelect/CS/form1.cs#1)]
 [!code-vb[PerformSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformSelect/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MenuItem.PerformClick" />
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : EventHandler " Usage="member this.Popup : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-433">在显示菜单项的菜单项列表之前发生。</span><span class="sxs-lookup"><span data-stu-id="d1731-433">Occurs before a menu item's list of menu items is displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-434">仅当菜单项具有子菜单项显示时，才会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-434">This event only occurs when a menu item has submenu items to display.</span></span> <span data-ttu-id="d1731-435">在显示菜单项之前，可以使用此事件处理程序根据应用程序的状态添加、删除、启用、禁用、选中或取消选中菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-435">You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</span></span> <span data-ttu-id="d1731-436">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-436">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-437">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem.Popup> 事件来确定是否在显示为剪切、复制和删除操作提供支持的 <xref:System.Windows.Forms.MenuItem> 对象之前是否启用它们。</span><span class="sxs-lookup"><span data-stu-id="d1731-437">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="d1731-438">该示例确定是否 `textBox1`、窗体上的 <xref:System.Windows.Forms.TextBox> 控件是否已启用、是否具有输入焦点，以及是否在启用 <xref:System.Windows.Forms.MenuItem> 对象之前选择了文本。</span><span class="sxs-lookup"><span data-stu-id="d1731-438">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="d1731-439">此示例要求创建了三个名为 `menuCut`、`menuCopy`和 `menuDelete` 的 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="d1731-439">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioCheck">
      <MemberSignature Language="C#" Value="public bool RadioCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RadioCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property RadioCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RadioCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RadioCheck : bool with get, set" Usage="System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-440">获取或设置一个值，通过该值指示 <see cref="T:System.Windows.Forms.MenuItem" />（如果已选中）是否显示单选按钮而不是选中标记。</span><span class="sxs-lookup"><span data-stu-id="d1731-440">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" />, if checked, displays a radio-button instead of a check mark.</span></span></summary>
        <value><span data-ttu-id="d1731-441">如果要使用的是单选按钮而不是选中标记，则为 <see langword="true" />；如果菜单项选中时要显示的是标准选中标记，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-441"><see langword="true" /> if a radio-button is to be used instead of a check mark; <see langword="false" /> if the standard check mark is to be displayed when the menu item is checked.</span></span> <span data-ttu-id="d1731-442">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-442">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-443">对于一组菜单项，复选标记不一定表示一组互斥状态。</span><span class="sxs-lookup"><span data-stu-id="d1731-443">Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</span></span> <span data-ttu-id="d1731-444">您可以使用此属性向用户指示菜单项的选中标记是互斥的。</span><span class="sxs-lookup"><span data-stu-id="d1731-444">You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-445">下面的代码示例使用 <xref:System.Windows.Forms.MenuItem.Checked%2A> 属性更改应用程序的状态。</span><span class="sxs-lookup"><span data-stu-id="d1731-445">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application.</span></span> <span data-ttu-id="d1731-446">在此示例中，提供了一组菜单项，这些菜单项用于指定 <xref:System.Windows.Forms.TextBox> 控件中的文本的颜色。</span><span class="sxs-lookup"><span data-stu-id="d1731-446">In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="d1731-447">在此示例中，提供的事件处理程序由三个菜单项的 <xref:System.Windows.Forms.MenuItem.Click> 事件使用。</span><span class="sxs-lookup"><span data-stu-id="d1731-447">In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items.</span></span> <span data-ttu-id="d1731-448">每个菜单项指定颜色、`menuItemRed`、`menuItemGreen`或 `menuItemBlue`。</span><span class="sxs-lookup"><span data-stu-id="d1731-448">Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`.</span></span> <span data-ttu-id="d1731-449">事件处理程序确定单击的菜单项，将复选标记置于所选菜单项，并更改窗体的 <xref:System.Windows.Forms.TextBox> 控件的文本颜色，名为 `textBox1`。</span><span class="sxs-lookup"><span data-stu-id="d1731-449">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`.</span></span> <span data-ttu-id="d1731-450">该示例还使用 "<xref:System.Windows.Forms.MenuItem.RadioCheck%2A>" 属性来演示如何使用单选按钮来显示互斥的菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-450">The example also uses the <xref:System.Windows.Forms.MenuItem.RadioCheck%2A> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</span></span> <span data-ttu-id="d1731-451">此示例要求将 <xref:System.Drawing?displayProperty=nameWithType> 命名空间添加到包含此代码的窗体中。</span><span class="sxs-lookup"><span data-stu-id="d1731-451">This example requires that the <xref:System.Drawing?displayProperty=nameWithType> namespace has been added to the form that contains this code.</span></span>  
  
 [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Checked" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public event EventHandler Select;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Select" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Select As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Select;" />
      <MemberSignature Language="F#" Value="member this.Select : EventHandler " Usage="member this.Select : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-452">当用户将指针放在菜单项上时发生。</span><span class="sxs-lookup"><span data-stu-id="d1731-452">Occurs when the user places the pointer over a menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-453">当用户将鼠标指针放在菜单项上时，通常会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-453">This event is typically raised when the user places the mouse pointer over the menu item.</span></span> <span data-ttu-id="d1731-454">用户通过使用键盘滚动到菜单项来突出显示菜单项时，还可能会引发事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-454">The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</span></span> <span data-ttu-id="d1731-455">可以使用此事件在应用程序状态栏中显示与此菜单项相关的详细帮助字符串。</span><span class="sxs-lookup"><span data-stu-id="d1731-455">You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</span></span> <span data-ttu-id="d1731-456">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="d1731-456">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1731-457">如果 <xref:System.Windows.Forms.MenuItem> 的 <xref:System.Windows.Forms.Menu.MenuItems%2A> 属性包含任何项，则不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-457">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="d1731-458">父菜单项不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d1731-458">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-459">下面的代码示例演示如何使用 <xref:System.Windows.Forms.MenuItem> 类的 <xref:System.Windows.Forms.MenuItem.Select> 事件将帮助文本分配给 <xref:System.Windows.Forms.StatusBar> 控件的 <xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="d1731-459">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="d1731-460">此示例要求将 <xref:System.Windows.Forms.MenuItem> 名为 `menuOpen`、`menuSave`和 `menuExit` 的对象添加到窗体上的 <xref:System.Windows.Forms.MainMenu> 控件中。</span><span class="sxs-lookup"><span data-stu-id="d1731-460">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="d1731-461">该示例还要求将名为 `statusBar1` <xref:System.Windows.Forms.StatusBar> 控件添加到窗体中。</span><span class="sxs-lookup"><span data-stu-id="d1731-461">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="d1731-462"><xref:System.Windows.Forms.StatusBar> 控件应包含一个 <xref:System.Windows.Forms.StatusBarPanel>。</span><span class="sxs-lookup"><span data-stu-id="d1731-462">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
      </Docs>
    </Member>
    <Member MemberName="Shortcut">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Shortcut Shortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Shortcut Shortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Shortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property Shortcut As Shortcut" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Shortcut Shortcut { System::Windows::Forms::Shortcut get(); void set(System::Windows::Forms::Shortcut value); };" />
      <MemberSignature Language="F#" Value="member this.Shortcut : System.Windows.Forms.Shortcut with get, set" Usage="System.Windows.Forms.MenuItem.Shortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Shortcut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-463">获取或设置一个值，通过该值指示与菜单项关联的快捷键。</span><span class="sxs-lookup"><span data-stu-id="d1731-463">Gets or sets a value indicating the shortcut key associated with the menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-464"><see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d1731-464">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span> <span data-ttu-id="d1731-465">默认为 <see langword="Shortcut.None" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-465">The default is <see langword="Shortcut.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-466">快捷键为用户提供了一种方法，用于在菜单系统中激活常用菜单项，并为没有鼠标或其他指针设备访问权限的用户提供对应用程序的键盘访问权限。</span><span class="sxs-lookup"><span data-stu-id="d1731-466">Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-467">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-467">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="d1731-468">该示例要求创建了名为 `menuItem1`的 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-468">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d1731-469">分配的值不是 <see cref="T:System.Windows.Forms.Shortcut" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="d1731-469">The assigned value is not one of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="ShowShortcut">
      <MemberSignature Language="C#" Value="public bool ShowShortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowShortcut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowShortcut { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowShortcut : bool with get, set" Usage="System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-470">获取或设置一个值，通过该值指示与菜单项关联的快捷键是否在菜单项标题的旁边显示。</span><span class="sxs-lookup"><span data-stu-id="d1731-470">Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</span></span></summary>
        <value><span data-ttu-id="d1731-471">如果快捷组合键在菜单项标题的旁边显示，则为 <see langword="true" />；如果不显示快捷组合键，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-471"><see langword="true" /> if the shortcut key combination is displayed next to the menu item caption; <see langword="false" /> if the shortcut key combination is not to be displayed.</span></span> <span data-ttu-id="d1731-472">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-472">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-473">您可以使用此属性为用户提供用于隐藏菜单快捷方式的选项，以节省菜单空间或隐藏快捷键。</span><span class="sxs-lookup"><span data-stu-id="d1731-473">You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-474">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-474">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="d1731-475">该示例要求创建了名为 `menuItem1`的 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-475">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-476">获取或设置一个值，通过该值指示菜单项标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-476">Gets or sets a value indicating the caption of the menu item.</span></span></summary>
        <value><span data-ttu-id="d1731-477">菜单项的文本标题。</span><span class="sxs-lookup"><span data-stu-id="d1731-477">The text caption of the menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-478">为菜单项指定标题时，还可以通过在用作访问键的字符前放置 "&" 来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="d1731-478">When you specify a caption for your menu item, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="d1731-479">例如，若要在 "File" 中将 "F" 指定为访问键，请将菜单项的标题指定为 "& 文件"。</span><span class="sxs-lookup"><span data-stu-id="d1731-479">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="d1731-480">可以使用此功能为菜单提供键盘导航。</span><span class="sxs-lookup"><span data-stu-id="d1731-480">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="d1731-481">如果将此属性设置为 "`-`"，则会将菜单项显示为分隔符（水平线）而不是标准菜单项。</span><span class="sxs-lookup"><span data-stu-id="d1731-481">Setting this property to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-482">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-482">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="d1731-483">该示例要求创建了名为 `menuItem1`的 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-483">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Mnemonic" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="menuItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1731-484">返回表示 <see cref="T:System.Windows.Forms.MenuItem" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="d1731-484">Returns a string that represents the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="d1731-485">表示当前 <see cref="T:System.Windows.Forms.MenuItem" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="d1731-485">A string that represents the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span> <span data-ttu-id="d1731-486">该字符串包括该控件的类型和 <see cref="P:System.Windows.Forms.MenuItem.Text" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="d1731-486">The string includes the type and the <see cref="P:System.Windows.Forms.MenuItem.Text" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.MenuItem.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1731-487">获取或设置一个值，通过该值指示菜单项是否可见。</span><span class="sxs-lookup"><span data-stu-id="d1731-487">Gets or sets a value indicating whether the menu item is visible.</span></span></summary>
        <value><span data-ttu-id="d1731-488">如果菜单项在菜单上为可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-488"><see langword="true" /> if the menu item will be made visible on the menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1731-489">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d1731-489">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1731-490">您可以使用此属性修改菜单结构，而无需合并菜单或禁用菜单。</span><span class="sxs-lookup"><span data-stu-id="d1731-490">You can use this property to modify a menu structure without having to merge menus or disable menus.</span></span> <span data-ttu-id="d1731-491">例如，如果你想要从应用程序的菜单中隐藏一整段功能，则可以通过将此属性设置为 `false`，将其从用户隐藏。</span><span class="sxs-lookup"><span data-stu-id="d1731-491">For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1731-492">下面的代码示例创建一个菜单项，设置标题，分配快捷键，使菜单项可见，并显示菜单项的快捷键显示方式。</span><span class="sxs-lookup"><span data-stu-id="d1731-492">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="d1731-493">该示例要求创建了名为 `menuItem1`的 <xref:System.Windows.Forms.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="d1731-493">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
