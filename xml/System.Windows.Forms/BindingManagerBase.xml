<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b40c35ded4d60c53c3fd1a60be3f1ca5431a8f60" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89850012" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <TypeSignature Language="F#" Value="type BindingManagerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3ef81-101">管理绑定到相同数据源和数据成员的所有 <see cref="T:System.Windows.Forms.Binding" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ef81-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span></span> <span data-ttu-id="3ef81-102">此类为抽象类。</span><span class="sxs-lookup"><span data-stu-id="3ef81-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-103"><xref:System.Windows.Forms.BindingManagerBase>允许对绑定到同一个数据源的 Windows 窗体上的数据绑定控件进行同步。</span><span class="sxs-lookup"><span data-stu-id="3ef81-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="3ef81-104"> (有关简单地将控件绑定到数据源的详细信息，请参阅 <xref:System.Windows.Forms.Binding> 类。 ) 例如，假设窗体包含两个 <xref:System.Windows.Forms.TextBox> 控件，这些控件绑定到同一个数据源，但不同列。</span><span class="sxs-lookup"><span data-stu-id="3ef81-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="3ef81-105">数据源可以是 <xref:System.Data.DataTable> 包含客户名称的，而列可能包含名字和姓氏。</span><span class="sxs-lookup"><span data-stu-id="3ef81-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="3ef81-106">必须同步两个控件，才能为同一客户显示正确的名字和姓氏。</span><span class="sxs-lookup"><span data-stu-id="3ef81-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="3ef81-107"><xref:System.Windows.Forms.CurrencyManager>继承自类的，它 <xref:System.Windows.Forms.BindingManagerBase> 通过保留指向数据源中的当前项的指针来完成此同步。</span><span class="sxs-lookup"><span data-stu-id="3ef81-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="3ef81-108"><xref:System.Windows.Forms.TextBox>控件绑定到当前项，因此它们显示同一行的信息。</span><span class="sxs-lookup"><span data-stu-id="3ef81-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="3ef81-109">当当前项发生更改时， <xref:System.Windows.Forms.CurrencyManager> 会通知所有绑定控件，以便它们可以刷新其数据。</span><span class="sxs-lookup"><span data-stu-id="3ef81-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="3ef81-110">此外，还可以设置 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 属性，以指定控件所指向的中的行 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="3ef81-111">若要确定数据源中存在的行数，请使用 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="3ef81-112"><xref:System.Windows.Forms.CurrencyManager>是必需的，因为数据源不必维护当前项指针。</span><span class="sxs-lookup"><span data-stu-id="3ef81-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="3ef81-113">例如，数组和 <xref:System.Collections.ArrayList> 对象可以是数据源，但它们没有返回当前项的属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="3ef81-114">若要获取当前项，请使用 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="3ef81-115"><xref:System.Windows.Forms.PropertyManager>还从继承 <xref:System.Windows.Forms.BindingManagerBase> ，并用于维护对象的当前属性，而不是数据源中当前对象的属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="3ef81-116">因此，尝试为 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> a 设置或 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 属性 <xref:System.Windows.Forms.PropertyManager> 不起作用。</span><span class="sxs-lookup"><span data-stu-id="3ef81-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="3ef81-117">若要创建 <xref:System.Windows.Forms.BindingManagerBase> ，请使用 <xref:System.Windows.Forms.BindingContext> 类，该类返回 <xref:System.Windows.Forms.CurrencyManager> 或 <xref:System.Windows.Forms.PropertyManager> ，具体取决于所管理的数据源。</span><span class="sxs-lookup"><span data-stu-id="3ef81-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="3ef81-118">鼓励程序员直接将控件绑定到 <xref:System.Windows.Forms.BindingSource> 组件，而该组件同时充当数据源和数据连接到实际目标数据源。</span><span class="sxs-lookup"><span data-stu-id="3ef81-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="3ef81-119"><xref:System.Windows.Forms.BindingSource> 极大地简化了简单和复杂的数据绑定，包括管理控件与其目标之间的货币。</span><span class="sxs-lookup"><span data-stu-id="3ef81-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-120">下面的代码示例使用 <xref:System.Windows.Forms.BindingContext> 返回 <xref:System.Windows.Forms.BindingManagerBase> 特定数据源的。</span><span class="sxs-lookup"><span data-stu-id="3ef81-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="3ef81-121"> (示例假设已 `myBindingManagerBase` 在模块的声明部分中声明了。 ) 该示例然后将事件委托添加到 <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 和 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="3ef81-122">最后，该示例包含四个 (`MoveNext` 、 `MovePrevious` 、 `MoveFirst` 和 `MoveLast`) 的方法，这些方法递增或递减 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 属性，并将设置 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 为列表中的第一行或最后一行。</span><span class="sxs-lookup"><span data-stu-id="3ef81-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="3ef81-123">使用属性确定列表中的最后一行 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="3ef81-124">当从继承时 <see cref="T:System.Windows.Forms.BindingManagerBase" /> ，必须重写以下抽象成员： <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" /> 、 <see cref="P:System.Windows.Forms.BindingManagerBase.Count" /> 、 <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" /> 、、 <see cref="P:System.Windows.Forms.BindingManagerBase.Current" /> <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" /> 、、 <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" /> <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" /> <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" /> <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" /> <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" /> 、、、、和。</span><span class="sxs-lookup"><span data-stu-id="3ef81-124">When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-125">初始化 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3ef81-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-126">无参数构造函数将 <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> 属性设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-126">The parameterless constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; unit" Usage="bindingManagerBase.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-127">当在派生类中被重写时，向基础列表添加一个新项。</span><span class="sxs-lookup"><span data-stu-id="3ef81-127">When overridden in a derived class, adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-128"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A>方法使用此项的类型的无参数构造函数向基础列表添加一个新项。</span><span class="sxs-lookup"><span data-stu-id="3ef81-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the parameterless constructor for that item's type.</span></span> <span data-ttu-id="3ef81-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 主要用于将复杂数据绑定支持添加到其自定义组件的程序员使用。</span><span class="sxs-lookup"><span data-stu-id="3ef81-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="3ef81-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 通常是使用以下模式实现的，应用程序编程人员可以使用它来注入自己的代码来创建自定义项：</span><span class="sxs-lookup"><span data-stu-id="3ef81-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="3ef81-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> 引发 <xref:System.Windows.Forms.BindingSource.AddingNew> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="3ef81-132">程序员可以通过处理 <xref:System.Windows.Forms.BindingSource.AddingNew> 事件并将 <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> 参数的属性设置 <xref:System.ComponentModel.AddingNewEventArgs> 为新项来提供自定义项。</span><span class="sxs-lookup"><span data-stu-id="3ef81-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="3ef81-133">否则，组件应使用无参数构造函数创建一个项。</span><span class="sxs-lookup"><span data-stu-id="3ef81-133">Otherwise, the component should create an item using the parameterless constructor.</span></span>  
  
3.  <span data-ttu-id="3ef81-134">如果数据源未实现 <xref:System.ComponentModel.IEditableObject> 接口，则该项将立即添加到数据源和基础列表中。</span><span class="sxs-lookup"><span data-stu-id="3ef81-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="3ef81-135">如果支持此接口，则添加由和方法进行事务处理 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-136">在数据绑定操作完成时发生。</span><span class="sxs-lookup"><span data-stu-id="3ef81-136">Occurs at the completion of a data-binding operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-137">此 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 事件在数据绑定操作完成之后发生，这可能包括以下内容：</span><span class="sxs-lookup"><span data-stu-id="3ef81-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="3ef81-138">将信息从数据源推送到其绑定控件的属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="3ef81-139">将信息从绑定控件提取到其关联的数据源中。</span><span class="sxs-lookup"><span data-stu-id="3ef81-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="3ef81-140">请注意，无论绑定操作的完成状态如何，都将引发此事件，不过，可以通过检查 <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> 与事件关联的参数的属性来确定此状态 <xref:System.Windows.Forms.BindingCompleteEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="3ef81-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> 还可能包含错误和异常信息。</span><span class="sxs-lookup"><span data-stu-id="3ef81-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="3ef81-142">例如，尝试将 null 值从数据源推送到控件的绑定操作 <xref:System.Windows.Forms.DateTimePicker> 将生成异常，因为 <xref:System.DateTime> 不能为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="3ef81-143">在这种情况下，尽管绑定操作没有成功完成，但 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 会引发事件，并且事件将包含有关失败的绑定尝试的信息。</span><span class="sxs-lookup"><span data-stu-id="3ef81-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-144">下面的代码示例演示如何处理 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 事件，并确保在更改其中一个控件值时，绑定到同一数据源的多个控件保持同步。</span><span class="sxs-lookup"><span data-stu-id="3ef81-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="3ef81-145">若要运行此示例，请将代码粘贴到 Windows 窗体中，并 `InitializeControlsAndData` 从窗体的构造函数或 <xref:System.Windows.Forms.Form.Load> 事件处理方法调用方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Windows.Forms.BindingsCollection" Usage="System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-146">获取所管理绑定的集合。</span><span class="sxs-lookup"><span data-stu-id="3ef81-146">Gets the collection of bindings being managed.</span></span></summary>
        <value><span data-ttu-id="3ef81-147">一个 <see cref="T:System.Windows.Forms.BindingsCollection" />，它包含该 <see cref="T:System.Windows.Forms.Binding" /> 所管理的 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ef81-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ef81-148">下面的代码示例获取 <xref:System.Windows.Forms.BindingManagerBase> 特定数据源的。</span><span class="sxs-lookup"><span data-stu-id="3ef81-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="3ef81-149">然后，该示例使用 <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> 属性打印有关绑定到同一个数据源的每个控件的信息。</span><span class="sxs-lookup"><span data-stu-id="3ef81-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-150">当在派生类中被重写时，取消当前编辑。</span><span class="sxs-lookup"><span data-stu-id="3ef81-150">When overridden in a derived class, cancels the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-151">仅当数据源实现接口时，才支持此方法 <xref:System.ComponentModel.IEditableObject> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="3ef81-152">如果对象未实现 <xref:System.ComponentModel.IEditableObject> 接口，则不会丢弃对数据所做的更改。</span><span class="sxs-lookup"><span data-stu-id="3ef81-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="3ef81-153">调用 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 方法会导致 <xref:System.Windows.Forms.Binding.Format> 事件发生。</span><span class="sxs-lookup"><span data-stu-id="3ef81-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-154">下面的代码示例演示了 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 和 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="3ef81-155">调用 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 方法时，对数据所做的更改将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="3ef81-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="3ef81-156">当你调用 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 方法时，将保留所做的更改。</span><span class="sxs-lookup"><span data-stu-id="3ef81-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingManagerBase.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-157">在派生类中重写时，获取 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 托管的行数。</span><span class="sxs-lookup"><span data-stu-id="3ef81-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <value><span data-ttu-id="3ef81-158"><see cref="T:System.Windows.Forms.BindingManagerBase" /> 托管的行数。</span><span class="sxs-lookup"><span data-stu-id="3ef81-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-159">使用 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 属性可确定由维护的行列表中的最后一项 <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="3ef81-160">若要跳到最后一项，请将 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 属性设置为 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 属性值减1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-161">下面的代码示例演示了设置属性的四个方法 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="3ef81-162">`MoveNext`方法将属性递增1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="3ef81-163">`MovePrevious`方法将属性递减1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="3ef81-164">`MoveFirst`方法将属性设置为0。</span><span class="sxs-lookup"><span data-stu-id="3ef81-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="3ef81-165">`MoveLast`方法将属性的值设置为 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 减1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingManagerBase.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-166">当在派生类中被重写时，获取当前对象。</span><span class="sxs-lookup"><span data-stu-id="3ef81-166">When overridden in a derived class, gets the current object.</span></span></summary>
        <value><span data-ttu-id="3ef81-167">代表当前对象的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-167">An <see cref="T:System.Object" /> that represents the current object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-168"><xref:System.Windows.Forms.BindingManagerBase.Current%2A>对象包含数据源中当前项的值。</span><span class="sxs-lookup"><span data-stu-id="3ef81-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="3ef81-169">若要使用当前项的值，必须将项强制转换为所 <xref:System.Type> 包含的对象的 <xref:System.Windows.Forms.Binding.DataSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="3ef81-170">例如， <xref:System.Data.DataTable> 包含 <xref:System.Data.DataRowView> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ef81-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="3ef81-171">若要确定当前对象的类型，请使用 <xref:System.Object.GetType%2A> 和 <xref:System.Type.ToString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ef81-172">当 <xref:System.Windows.Forms.Binding.DataSource%2A> 为 <xref:System.Data.DataSet> 、或时 <xref:System.Data.DataViewManager> <xref:System.Data.DataTable> ，实际上是绑定到 <xref:System.Data.DataView> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="3ef81-173">因此，每个 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 对象都是一个 <xref:System.Data.DataRowView> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ef81-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-174">下面的代码示例在事件的中输出 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 对象的值 <xref:System.Windows.Forms.BindingManagerBase> <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="3ef81-175">该示例假设数据源是 <xref:System.Data.DataTable> 包含一个 <xref:System.Data.DataColumn> 名为的 `CustName` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-176">在当前绑定项更改时发生。</span><span class="sxs-lookup"><span data-stu-id="3ef81-176">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-177"><xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>当 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 属性发生更改或发生事件时，将引发事件 <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="3ef81-178">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-178">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-179">下面的代码示例在事件的中输出 <xref:System.Windows.Forms.BindingManagerBase.Current%2A> 对象的值 <xref:System.Windows.Forms.BindingManagerBase> <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="3ef81-180">该示例假设数据源是 <xref:System.Data.DataTable> 包含一个 <xref:System.Data.DataColumn> 名为的 `CustName` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-181">在当前绑定项的状态更改时发生。</span><span class="sxs-lookup"><span data-stu-id="3ef81-181">Occurs when the state of the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-182"><xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>当当前绑定项中的状态发生更改时，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="3ef81-183">如果更改了此项的属性之一，或者替换或移动了项本身，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="3ef81-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-184">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="3ef81-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3ef81-185">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="3ef81-186">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="3ef81-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3ef81-187">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3ef81-188">若要运行示例代码，请将其粘贴到一个项目中，该项目包含从继承的类型的实例 <xref:System.Windows.Forms.BindingManagerBase> ，如 <xref:System.Windows.Forms.PropertyManager> 或 <xref:System.Windows.Forms.CurrencyManager> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="3ef81-189">然后命名该实例 `BindingManagerBase1` ，并确保事件处理程序与事件相关联 <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-190">当 <see cref="T:System.Exception" /> 被 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 处理而未给出任何提示时发生。</span><span class="sxs-lookup"><span data-stu-id="3ef81-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-191">此事件是信息性的，并报告公共语言规范 (符合 CLS) 兼容异常。</span><span class="sxs-lookup"><span data-stu-id="3ef81-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="3ef81-192">若要确定发生的异常类型，请处理此事件并检查的 <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> 属性 <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="3ef81-193">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-193">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-194">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="3ef81-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="3ef81-195">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.BindingManagerBase.DataError> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="3ef81-196">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="3ef81-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="3ef81-197">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="3ef81-198">若要运行示例代码，请将其粘贴到一个项目中，该项目包含从继承的类型的实例 <xref:System.Windows.Forms.BindingManagerBase> ，如 <xref:System.Windows.Forms.PropertyManager> 或 <xref:System.Windows.Forms.CurrencyManager> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="3ef81-199">然后命名该实例 `BindingManagerBase1` ，并确保事件处理程序与事件相关联 <xref:System.Windows.Forms.BindingManagerBase.DataError> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member EndCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-200">当在派生类中被重写时，结束当前编辑。</span><span class="sxs-lookup"><span data-stu-id="3ef81-200">When overridden in a derived class, ends the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-201">仅当数据源实现接口时，才支持此方法 <xref:System.ComponentModel.IEditableObject> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="3ef81-202">在这种情况下，将保存更改。</span><span class="sxs-lookup"><span data-stu-id="3ef81-202">In that case, changes will be saved.</span></span> <span data-ttu-id="3ef81-203">如果对象未实现 <xref:System.ComponentModel.IEditableObject> 接口，则不会保存对数据所做的更改。</span><span class="sxs-lookup"><span data-stu-id="3ef81-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-204">下面的代码示例演示了 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 和 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="3ef81-205">调用 <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> 方法时，对数据所做的更改将被丢弃。</span><span class="sxs-lookup"><span data-stu-id="3ef81-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="3ef81-206">当你调用 <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> 方法时，将保留所做的更改。</span><span class="sxs-lookup"><span data-stu-id="3ef81-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ef81-207">获取数据源的属性说明符列表。</span><span class="sxs-lookup"><span data-stu-id="3ef81-207">Gets the list of property descriptors for the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-208">当在派生类中被重写时，获取绑定的属性说明符集合。</span><span class="sxs-lookup"><span data-stu-id="3ef81-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span></span></summary>
        <returns><span data-ttu-id="3ef81-209">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它代表绑定的属性说明符。</span><span class="sxs-lookup"><span data-stu-id="3ef81-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ef81-210">下面的代码示例使用 <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> 方法返回 <xref:System.ComponentModel.PropertyDescriptorCollection> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="3ef81-211">该示例使用的 <xref:System.ComponentModel.MemberDescriptor.Name%2A> 方法输出当前的和值 <xref:System.Data.DataColumn> <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources"><span data-ttu-id="3ef81-212">包含数据源的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="3ef81-213">一个 <see cref="T:System.Collections.ArrayList" />，其中包含表的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="3ef81-214">使用指定的 <see cref="T:System.Collections.ArrayList" /> 获取绑定的属性说明符集合。</span><span class="sxs-lookup"><span data-stu-id="3ef81-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="3ef81-215">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它代表绑定的属性说明符。</span><span class="sxs-lookup"><span data-stu-id="3ef81-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-216">此方法由创建数据绑定控件的开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="3ef81-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (listType, offset, dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType"><span data-ttu-id="3ef81-217">绑定列表的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-217">The <see cref="T:System.Type" /> of the bound list.</span></span></param>
        <param name="offset"><span data-ttu-id="3ef81-218">用于递归调用该方法的计数器。</span><span class="sxs-lookup"><span data-stu-id="3ef81-218">A counter used to recursively call the method.</span></span></param>
        <param name="dataSources"><span data-ttu-id="3ef81-219">包含数据源的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="3ef81-220">一个 <see cref="T:System.Collections.ArrayList" />，其中包含表的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="3ef81-221">获取由此 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 管理的项的属性列表。</span><span class="sxs-lookup"><span data-stu-id="3ef81-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <returns><span data-ttu-id="3ef81-222">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它代表绑定的属性说明符。</span><span class="sxs-lookup"><span data-stu-id="3ef81-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-223">开发人员使用此重载来创建数据绑定控件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-224">下面的代码示例使用 <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> 方法返回的 <xref:System.ComponentModel.PropertyDescriptorCollection> <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="3ef81-225">然后，该示例将输出 <xref:System.ComponentModel.MemberDescriptor.Name%2A> <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 集合中的每个 <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.Collections.ArrayList -&gt; string" Usage="bindingManagerBase.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="3ef81-226">一个 <see cref="T:System.Collections.ArrayList" />，其中包含表的绑定属性。</span><span class="sxs-lookup"><span data-stu-id="3ef81-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="3ef81-227">当在派生类中被重写时，获取为绑定提供数据的列表的名称。</span><span class="sxs-lookup"><span data-stu-id="3ef81-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span></span></summary>
        <returns><span data-ttu-id="3ef81-228">为绑定提供数据的列表的名称。</span><span class="sxs-lookup"><span data-stu-id="3ef81-228">The name of the list supplying the data for the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-229">获取一个值，该值指示绑定是否已挂起。</span><span class="sxs-lookup"><span data-stu-id="3ef81-229">Gets a value indicating whether binding is suspended.</span></span></summary>
        <value><span data-ttu-id="3ef81-230">如果绑定已挂起，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-230"><see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingManagerBase.OnBindingComplete args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="3ef81-231">包含事件数据的 <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3ef81-232">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-233">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ef81-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3ef81-234">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-234">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="3ef81-235"><xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3ef81-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3ef81-236">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3ef81-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ef81-237">在派生类中重写 <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="3ef81-237">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ef81-238">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3ef81-239">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-240">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ef81-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3ef81-241">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-241">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="3ef81-242"><xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3ef81-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3ef81-243">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3ef81-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ef81-244">在派生类中重写 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="3ef81-244">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onCurrentChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-245">为 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 事件指定事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ef81-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ef81-246">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3ef81-247">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-248">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ef81-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3ef81-249">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-249">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="3ef81-250"><xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3ef81-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3ef81-251">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3ef81-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ef81-252">在派生类中重写 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="3ef81-252">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDataError : Exception -&gt; unit" Usage="bindingManagerBase.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ef81-253">导致发生 <see cref="T:System.Exception" /> 事件的 <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />。</span><span class="sxs-lookup"><span data-stu-id="3ef81-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span></span></param>
        <summary><span data-ttu-id="3ef81-254">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-255">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ef81-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3ef81-256">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-256">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="3ef81-257"><xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="3ef81-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="3ef81-258">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="3ef81-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3ef81-259">在派生类中重写 <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="3ef81-259">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onPositionChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-260">为 <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> 事件指定事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ef81-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingManagerBase.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-261">当在派生类中被重写时，获取或设置绑定到该数据源的控件所指向的基础列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="3ef81-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span></span></summary>
        <value><span data-ttu-id="3ef81-262">指定基础列表中某个位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3ef81-262">A zero-based index that specifies a position in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-263">使用 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 属性来循环访问由维护的基础列表 <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="3ef81-264">若要前往第一项，请将设置 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 为0。</span><span class="sxs-lookup"><span data-stu-id="3ef81-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="3ef81-265">若要前进到列表的末尾，请将设置 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 为属性的值 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 减1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="3ef81-266"><xref:System.Windows.Forms.BindingManagerBase.PositionChanged>当 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 属性值更改时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-267">下面的代码示例演示了设置属性的四个方法 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="3ef81-268">`MoveNext`方法将属性递增1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="3ef81-269">`MovePrevious`方法将属性递减1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="3ef81-270">`MoveFirst`方法将属性设置为0，方法将属性 `MoveLast` 设置为属性的值 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 减1。</span><span class="sxs-lookup"><span data-stu-id="3ef81-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ef81-271">在 <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> 属性的值更改后发生。</span><span class="sxs-lookup"><span data-stu-id="3ef81-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-272">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="3ef81-272">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ef81-273">下面的代码示例创建一个 <xref:System.Windows.Forms.Binding> ，然后将其添加到 <xref:System.Windows.Forms.Binding> 控件的对象集合 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="3ef81-274">然后，该示例获取 <xref:System.Windows.Forms.BindingManagerBase> 数据源的，并将委托添加到 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberSignature Language="F#" Value="member this.PullData : unit -&gt; unit" Usage="bindingManagerBase.PullData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-275">将数据从数据绑定控件拉入到数据源，不返回任何信息。</span><span class="sxs-lookup"><span data-stu-id="3ef81-275">Pulls data from the data-bound control into the data source, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-276"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A>方法是将数据绑定控件中的信息提取回数据源的编程方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="3ef81-277">它不是控件的标准操作所必需的，因为当焦点离开时，控件通常会自动更新其绑定数据源。</span><span class="sxs-lookup"><span data-stu-id="3ef81-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="3ef81-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A><xref:System.Windows.Forms.BindingManagerBase.BindingComplete>根据需要，对数据源引发事件和更改事件。</span><span class="sxs-lookup"><span data-stu-id="3ef81-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberSignature Language="F#" Value="member this.PushData : unit -&gt; unit" Usage="bindingManagerBase.PushData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-279">将数据从数据源推入到数据绑定控件，不返回任何信息。</span><span class="sxs-lookup"><span data-stu-id="3ef81-279">Pushes data from the data source into the data-bound control, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-280"><xref:System.Windows.Forms.BindingManagerBase.PushData%2A>方法是将信息从数据源推送到数据绑定控件的编程方式。</span><span class="sxs-lookup"><span data-stu-id="3ef81-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="3ef81-281">如果数据源实现了接口，则此方法不是必需的 <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> ，因为该 <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> 事件会自动使控件通过其货币管理器进行更新。</span><span class="sxs-lookup"><span data-stu-id="3ef81-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="3ef81-282">如果在执行操作时发出此方法 <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> ，则该 <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> 方法立即返回值为的 `true` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="bindingManagerBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3ef81-283">要删除行的索引。</span><span class="sxs-lookup"><span data-stu-id="3ef81-283">The index of the row to delete.</span></span></param>
        <summary><span data-ttu-id="3ef81-284">当在派生类中被重写时，从基础列表中删除指定索引处的行。</span><span class="sxs-lookup"><span data-stu-id="3ef81-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-285"><xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A>方法依赖于基础数据源来确定该方法的行为方式。</span><span class="sxs-lookup"><span data-stu-id="3ef81-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="3ef81-286"> (参见 <xref:System.Windows.Forms.Binding> 类以获取受支持的数据源的列表。 ) 对于实现、或的类以及 <xref:System.Collections.IList> 实现的 <xref:System.ComponentModel.IBindingList> <xref:System.ComponentModel.ITypedList> 强类型化类， <xref:System.Collections.IList> 该 <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> 方法实际上会删除基础列表中的行，而不是删除其内容。</span><span class="sxs-lookup"><span data-stu-id="3ef81-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="3ef81-287">如果基础列表实现了 <xref:System.ComponentModel.IBindingList> 接口，则 <xref:System.ComponentModel.IBindingList.AllowRemove%2A> 属性必须返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="3ef81-288">如果基础列表实现了 <xref:System.Collections.IList> 接口，则 <xref:System.Collections.IList.IsFixedSize%2A> 属性必须返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="3ef81-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="3ef81-289">指定的 <paramref name="index" /> 处没有行。</span><span class="sxs-lookup"><span data-stu-id="3ef81-289">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberSignature Language="F#" Value="abstract member ResumeBinding : unit -&gt; unit" Usage="bindingManagerBase.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-290">当在派生类中被重写时，恢复数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3ef81-290">When overridden in a derived class, resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 和 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 是允许数据绑定的临时挂起和恢复的两种方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="3ef81-292">如果在进行验证之前必须允许用户编辑数据字段，通常会挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3ef81-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="3ef81-293">例如，用户可能需要将字段更改为与第二个字段一致;否则，验证第一个字段将导致第二个字段出现错误。</span><span class="sxs-lookup"><span data-stu-id="3ef81-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberSignature Language="F#" Value="abstract member SuspendBinding : unit -&gt; unit" Usage="bindingManagerBase.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-294">当在派生类中被重写时，挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3ef81-294">When overridden in a derived class, suspends data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 和 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 是允许数据绑定的临时挂起和恢复的两种方法。</span><span class="sxs-lookup"><span data-stu-id="3ef81-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="3ef81-296">如果在进行验证之前必须允许用户编辑数据字段，通常会挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3ef81-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="3ef81-297">例如，用户可能需要将字段更改为与第二个字段一致;否则，验证第一个字段将导致第二个字段出现错误。</span><span class="sxs-lookup"><span data-stu-id="3ef81-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="abstract member UpdateIsBinding : unit -&gt; unit" Usage="bindingManagerBase.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ef81-298">当在派生类中被重写时，更新绑定。</span><span class="sxs-lookup"><span data-stu-id="3ef81-298">When overridden in a derived class, updates the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef81-299"><xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A>方法更新绑定控件与其数据源之间的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3ef81-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="3ef81-300">对于复杂的数据绑定方案，它还将当前位置重置为基础列表的开头。</span><span class="sxs-lookup"><span data-stu-id="3ef81-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>
