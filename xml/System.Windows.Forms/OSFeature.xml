<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ad4e5ccd9fb8dcb566e273fb5a2b73a913f65cc" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727478" /></Metadata><TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="87591-101">提供操作系统特定功能查询。</span><span class="sxs-lookup"><span data-stu-id="87591-101">Provides operating-system specific feature queries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87591-102">使用 `static` 属性中提供的此类的实例 <xref:System.Windows.Forms.OSFeature.Feature%2A> 来查询操作系统功能。</span><span class="sxs-lookup"><span data-stu-id="87591-102">Use the `static` instance of this class provided in the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to query for operating system features.</span></span> <span data-ttu-id="87591-103">不能创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="87591-103">You cannot create an instance of this class.</span></span>  
  
 <span data-ttu-id="87591-104">若要确定功能的版本，请调用 <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="87591-104">To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method.</span></span> <span data-ttu-id="87591-105">若要确定功能或特定版本是否存在，请调用方法， <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> 并指定要使用此类中提供的功能标识符查找的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-105">To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87591-106">下面的示例使用 <xref:System.Windows.Forms.OSFeature> 查询操作系统以确定是否安装了该 <xref:System.Windows.Forms.OSFeature.LayeredWindows> 功能。</span><span class="sxs-lookup"><span data-stu-id="87591-106">The following example uses <xref:System.Windows.Forms.OSFeature> to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed.</span></span> <span data-ttu-id="87591-107">该示例提供了两种不同的检查方法来查看该功能是否存在。</span><span class="sxs-lookup"><span data-stu-id="87591-107">The example presents two different ways of checking to see whether the feature is present.</span></span> <span data-ttu-id="87591-108">在第一个方法中， `myVersion` 将检查以确定它是否是 `null` 。</span><span class="sxs-lookup"><span data-stu-id="87591-108">In the first method, `myVersion` is checked to see if it is `null`.</span></span> <span data-ttu-id="87591-109">如果版本为 `null` ，则未安装该功能。</span><span class="sxs-lookup"><span data-stu-id="87591-109">If the version is `null`, the feature is not installed.</span></span> <span data-ttu-id="87591-110">在第二个方法中，该示例调用基类方法 <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> 以查看是否已安装该功能。</span><span class="sxs-lookup"><span data-stu-id="87591-110">In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed.</span></span> <span data-ttu-id="87591-111">结果显示在文本框中。</span><span class="sxs-lookup"><span data-stu-id="87591-111">The results are displayed in a text box.</span></span>  
  
 <span data-ttu-id="87591-112">此代码假定已 `textBox1` 创建并放置在窗体上。</span><span class="sxs-lookup"><span data-stu-id="87591-112">This code assumes `textBox1` has been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87591-113">初始化 <see cref="T:System.Windows.Forms.OSFeature" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="87591-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87591-114">此类无法实例化。</span><span class="sxs-lookup"><span data-stu-id="87591-114">This class cannot be instantiated.</span></span> <span data-ttu-id="87591-115">若要查询操作系统功能，请使用 `static` <xref:System.Windows.Forms.OSFeature> 此类中提供的实例。</span><span class="sxs-lookup"><span data-stu-id="87591-115">To query for operating system features, use the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87591-116">获取 <see cref="T:System.Windows.Forms.OSFeature" /> 类的 <see langword="static" /> 实例进行功能查询。</span><span class="sxs-lookup"><span data-stu-id="87591-116">Gets a <see langword="static" /> instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class to use for feature queries.</span></span> <span data-ttu-id="87591-117">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="87591-117">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="87591-118"><see cref="T:System.Windows.Forms.OSFeature" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="87591-118">An instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87591-119">使用此 `static` 属性可查询操作系统功能。</span><span class="sxs-lookup"><span data-stu-id="87591-119">Use this `static` property to query for operating system features.</span></span> <span data-ttu-id="87591-120">不能创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="87591-120">You cannot create an instance of this class.</span></span>  
  
 <span data-ttu-id="87591-121">若要确定功能的版本，请调用 <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="87591-121">To determine the version of a feature, call the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method.</span></span> <span data-ttu-id="87591-122">若要确定功能或特定版本是否存在，请调用方法， <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> 并指定要使用此类中提供的功能标识符查找的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-122">To determine if a feature or a specific version is present, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> method and specify the feature to look for with the feature identifiers provided in this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87591-123">下面的示例查询 <xref:System.Windows.Forms.OSFeature> 该 <xref:System.Windows.Forms.OSFeature.LayeredWindows> 功能。</span><span class="sxs-lookup"><span data-stu-id="87591-123">The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature.</span></span> <span data-ttu-id="87591-124">检查版本是否为 `null` ，以确定该功能是否存在。</span><span class="sxs-lookup"><span data-stu-id="87591-124">The version is checked to see if it is `null`, to determine whether the feature is present.</span></span> <span data-ttu-id="87591-125">结果将显示在文本框中。</span><span class="sxs-lookup"><span data-stu-id="87591-125">The result is displayed in a text box.</span></span> <span data-ttu-id="87591-126">此代码假定已 `textBox1` 创建并放置在窗体上。</span><span class="sxs-lookup"><span data-stu-id="87591-126">This code assumes `textBox1` has been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature"><span data-ttu-id="87591-127">请求其版本的功能，为 <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> 或 <see cref="F:System.Windows.Forms.OSFeature.Themes" />。</span><span class="sxs-lookup"><span data-stu-id="87591-127">The feature whose version is requested, either <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> or <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</span></span></param>
        <summary><span data-ttu-id="87591-128">检索当前系统上可用的指定功能的版本。</span><span class="sxs-lookup"><span data-stu-id="87591-128">Retrieves the version of the specified feature currently available on the system.</span></span></summary>
        <returns><span data-ttu-id="87591-129"><see cref="T:System.Version" /> 表示系统上当前可用的指定操作系统功能的版本；如果找不到该功能，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="87591-129">A <see cref="T:System.Version" /> representing the version of the specified operating system feature currently available on the system; or <see langword="null" /> if the feature cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87591-130">使用 <xref:System.Windows.Forms.OSFeature.Feature%2A> 属性（ `static` <xref:System.Windows.Forms.OSFeature> 在此类中提供的实例）来查询功能的版本号。</span><span class="sxs-lookup"><span data-stu-id="87591-130">Use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property, the `static` instance of <xref:System.Windows.Forms.OSFeature> provided in this class, to query for the version number of a feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87591-131">下面的示例查询 <xref:System.Windows.Forms.OSFeature> 该 <xref:System.Windows.Forms.OSFeature.LayeredWindows> 功能。</span><span class="sxs-lookup"><span data-stu-id="87591-131">The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature.</span></span> <span data-ttu-id="87591-132">检查版本是否为 `null` ，以确定该功能是否存在。</span><span class="sxs-lookup"><span data-stu-id="87591-132">The version is checked to see if it is `null`, to determine whether the feature is present.</span></span> <span data-ttu-id="87591-133">结果将显示在文本框中。</span><span class="sxs-lookup"><span data-stu-id="87591-133">The result is displayed in a text box.</span></span> <span data-ttu-id="87591-134">此代码假定已 `textBox1` 创建并放置在窗体上。</span><span class="sxs-lookup"><span data-stu-id="87591-134">This code assumes `textBox1` has been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumVal"><span data-ttu-id="87591-135"><see cref="T:System.Windows.Forms.SystemParameter" />，表示要搜索的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-135">A <see cref="T:System.Windows.Forms.SystemParameter" /> representing the feature to search for.</span></span></param>
        <summary><span data-ttu-id="87591-136">检索一个值，该值指示操作系统是否支持指定的功能或规格。</span><span class="sxs-lookup"><span data-stu-id="87591-136">Retrieves a value indicating whether the operating system supports the specified feature or metric.</span></span></summary>
        <returns><span data-ttu-id="87591-137">如果功能在系统中可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87591-137"><see langword="true" /> if the feature is available on the system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87591-138">通常，使用 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> 方法来确定操作系统是否支持由标识的特定功能或指标 `enumValue` 。</span><span class="sxs-lookup"><span data-stu-id="87591-138">Typically, you use the <xref:System.Windows.Forms.OSFeature.IsPresent%2A> method to determine if the operating system supports the specific feature or metric identified by `enumValue`.</span></span> <span data-ttu-id="87591-139">根据从返回的值 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> ，您可以在代码中执行条件操作。</span><span class="sxs-lookup"><span data-stu-id="87591-139">Based upon the value returned from <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, you would perform conditional actions in your code.</span></span> <span data-ttu-id="87591-140">例如，如果使用的参数值调用此方法 <xref:System.Windows.Forms.SystemParameter.FlatMenu> `true` ，则可以在应用程序中以平面样式创建所有者描述的菜单。</span><span class="sxs-lookup"><span data-stu-id="87591-140">For example, if calling this method with a parameter value of <xref:System.Windows.Forms.SystemParameter.FlatMenu> returns `true`, you could create owner-drawn menus in your application in a flat style.</span></span>  
  
 <span data-ttu-id="87591-141">如果在特定操作系统版本上不可用，则访问某些系统功能或指标可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="87591-141">Accessing some system features or metrics can raise exceptions if they are not available on a specific operating system version.</span></span> <span data-ttu-id="87591-142">在这种情况下，首先使用相应的 <xref:System.Windows.Forms.SystemParameter> 枚举值和 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> 来确定是否支持此指标。</span><span class="sxs-lookup"><span data-stu-id="87591-142">In this case, first use the corresponding <xref:System.Windows.Forms.SystemParameter> enumeration value, along with <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, to determine if the metric is supported.</span></span> <span data-ttu-id="87591-143">例如， <xref:System.Windows.Forms.OSFeature.IsPresent%2A> <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> 在获取属性值之前调用 <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="87591-143">For example, call <xref:System.Windows.Forms.OSFeature.IsPresent%2A> with <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> before getting the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87591-144">下面的代码示例演示如何将 <xref:System.Windows.Forms.OSFeature.IsPresent%2A> 方法与枚举一起使用 <xref:System.Windows.Forms.SystemParameter> 。</span><span class="sxs-lookup"><span data-stu-id="87591-144">The following code example demonstrates how to use the <xref:System.Windows.Forms.OSFeature.IsPresent%2A> method with the <xref:System.Windows.Forms.SystemParameter> enumeration.</span></span> <span data-ttu-id="87591-145">该示例在调用属性之前确定操作系统是否支持该 `CaretWidth` 度量值 <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="87591-145">The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87591-146">表示分层的、顶级窗口功能。</span><span class="sxs-lookup"><span data-stu-id="87591-146">Represents the layered, top-level windows feature.</span></span> <span data-ttu-id="87591-147">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="87591-147">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="87591-148">操作系统可以使分层窗口透明或半透明。</span><span class="sxs-lookup"><span data-stu-id="87591-148">A layered window can be made transparent or translucent by the operating system.</span></span> <span data-ttu-id="87591-149">Windows 2000 中首次引入了对分层窗口的支持。</span><span class="sxs-lookup"><span data-stu-id="87591-149">Support for layered windows was first introduced in Windows 2000.</span></span>
  
 <span data-ttu-id="87591-150">若要确定是否安装了分层窗口功能，请使用 <xref:System.Windows.Forms.OSFeature.Feature%2A> 属性来调用基类方法， <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> <xref:System.Windows.Forms.OSFeature.LayeredWindows> 作为要查找的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-150">To determine if the layered windows feature is installed, use the <xref:System.Windows.Forms.OSFeature.Feature%2A> property to call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with <xref:System.Windows.Forms.OSFeature.LayeredWindows> as the feature to look for.</span></span>  
  
 <span data-ttu-id="87591-151">或者，你可以通过调用方法来检查是否安装了该功能， <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> 并 <xref:System.Windows.Forms.OSFeature.LayeredWindows> 将作为要查找的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-151">Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with <xref:System.Windows.Forms.OSFeature.LayeredWindows> as the feature to find.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87591-152">下面的示例确定当前系统是否支持分层窗口。</span><span class="sxs-lookup"><span data-stu-id="87591-152">The following example determines whether the current system supports layered windows.</span></span> <span data-ttu-id="87591-153"><xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>用 <xref:System.Windows.Forms.OSFeature.LayeredWindows> 作为要查找的功能调用基类方法。</span><span class="sxs-lookup"><span data-stu-id="87591-153">The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with <xref:System.Windows.Forms.OSFeature.LayeredWindows> as the feature to look for.</span></span> <span data-ttu-id="87591-154">结果将显示在文本框中。</span><span class="sxs-lookup"><span data-stu-id="87591-154">The result is displayed in a text box.</span></span> <span data-ttu-id="87591-155">此代码假定已 `textBox1` 被实例化并放置在窗体上。</span><span class="sxs-lookup"><span data-stu-id="87591-155">This code assumes `textBox1` has been instantiated and placed on a form.</span></span>  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87591-156">表示操作系统的主题功能。</span><span class="sxs-lookup"><span data-stu-id="87591-156">Represents the operating system themes feature.</span></span> <span data-ttu-id="87591-157">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="87591-157">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87591-158">主题是可视界面设置的集合，其中包括在 Microsoft Plus 中首次引入的墙纸、光标、字体、声音和图标</span><span class="sxs-lookup"><span data-stu-id="87591-158">A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus!</span></span> <span data-ttu-id="87591-159">适用于 Windows 95。</span><span class="sxs-lookup"><span data-stu-id="87591-159">for Windows 95.</span></span> <span data-ttu-id="87591-160">.NET Framework 不直接支持操作主题，尽管它确实支持命名空间中的视觉样式 <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="87591-160">The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="87591-161">有关 Windows 主题的详细信息，请参阅 Win32 SDK 中的主题和视觉样式和视觉样式参考主题。</span><span class="sxs-lookup"><span data-stu-id="87591-161">For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.</span></span>  
  
 <span data-ttu-id="87591-162">若要确定是否已安装主题功能，请调用基类方法， <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> 将 <xref:System.Windows.Forms.OSFeature.Themes> 作为要查找的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-162">To determine if the themes feature is installed, call the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> with <xref:System.Windows.Forms.OSFeature.Themes> as the feature to look for.</span></span>  
  
 <span data-ttu-id="87591-163">或者，你可以通过调用方法来检查是否安装了该功能， <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> 并 <xref:System.Windows.Forms.OSFeature.Themes> 将作为要查找的功能。</span><span class="sxs-lookup"><span data-stu-id="87591-163">Alternatively, you can check to see if the feature is installed by calling the <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> method with <xref:System.Windows.Forms.OSFeature.Themes> as the feature to find.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>
