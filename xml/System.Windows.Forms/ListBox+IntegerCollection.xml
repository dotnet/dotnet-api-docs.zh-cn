<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e52b2beb4a7f8839425accfced837b732bc9989e" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89765840" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.IntegerCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ea854-101">表示 <see cref="T:System.Windows.Forms.ListBox" /> 中整数的集合。</span><span class="sxs-lookup"><span data-stu-id="ea854-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> 是使用和方法追加项的已排序集合 <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ea854-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="ea854-103">删除重复值。</span><span class="sxs-lookup"><span data-stu-id="ea854-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="ea854-104"><xref:System.Windows.Forms.ListBox.IntegerCollection>主要由 <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> 属性使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.IntegerCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.IntegerCollection" Usage="new System.Windows.Forms.ListBox.IntegerCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="ea854-105">拥有该集合的 <see cref="T:System.Windows.Forms.ListBox" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span></span></param>
        <summary><span data-ttu-id="ea854-106">初始化 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ea854-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-107">不能创建类的实例，也不能将 <xref:System.Windows.Forms.ListBox.IntegerCollection> 其与 <xref:System.Windows.Forms.ListBox> 控件相关联。</span><span class="sxs-lookup"><span data-stu-id="ea854-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea854-108">.NET 5.0 和更高版本：<paramref name="owner" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-108">.NET 5.0 and later: <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; int" Usage="integerCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-109">要添加到集合的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-109">The integer to add to the collection.</span></span></param>
        <summary><span data-ttu-id="ea854-110">按照排序顺序向集合添加一个唯一的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-110">Adds a unique integer to the collection in sorted order.</span></span></summary>
        <returns><span data-ttu-id="ea854-111">所添加的项的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-111">The index of the added item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="ea854-112">没有足够的可用空间来存储新项。</span><span class="sxs-lookup"><span data-stu-id="ea854-112">There is insufficient space available to store the new item.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ea854-113">向集合添加一组整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-113">Adds a group of integers to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int[] -&gt; unit" Usage="integerCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="ea854-114">要添加到集合的整数数组。</span><span class="sxs-lookup"><span data-stu-id="ea854-114">The array of integers to add to the collection.</span></span></param>
        <summary><span data-ttu-id="ea854-115">向集合添加整数数组。</span><span class="sxs-lookup"><span data-stu-id="ea854-115">Adds an array of integers to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-116">整数数组将追加到集合，并从集合中移除重复项。</span><span class="sxs-lookup"><span data-stu-id="ea854-116">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.IntegerCollection -&gt; unit" Usage="integerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ea854-117">要添加到另一集合的 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-117">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span></span></param>
        <summary><span data-ttu-id="ea854-118">将现有 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中的内容添加到另一集合。</span><span class="sxs-lookup"><span data-stu-id="ea854-118">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-119">现有的内容将 <xref:System.Windows.Forms.ListBox.IntegerCollection> 追加到当前集合，并从组合集合中删除重复项。</span><span class="sxs-lookup"><span data-stu-id="ea854-119">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="integerCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea854-120">从 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中移除所有整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-120">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="integerCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-121">要在集合中搜索的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-121">The integer to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="ea854-122">确定指定的整数是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="ea854-122">Determines whether the specified integer is in the collection.</span></span></summary>
        <returns><span data-ttu-id="ea854-123">如果指定的整数在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-123"><see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-124">使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> 方法来确定整数是否为的成员 <xref:System.Windows.Forms.ListBox.IntegerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="ea854-124">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="ea854-125">知道项位于集合内后，可以使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> 方法来确定项在集合中的位置。</span><span class="sxs-lookup"><span data-stu-id="ea854-125">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="integerCollection.CopyTo (destination, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="ea854-126">向其中复制 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="ea854-126">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span></span></param>
        <param name="index"><span data-ttu-id="ea854-127">将 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 复制到目标数组中的位置。</span><span class="sxs-lookup"><span data-stu-id="ea854-127">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-128">将整个 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 复制到现有整数数组的指定位置。</span><span class="sxs-lookup"><span data-stu-id="ea854-128">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-129">使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> 方法将多个集合中的整数合并到一个数组中。</span><span class="sxs-lookup"><span data-stu-id="ea854-129">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="ea854-130">然后，可以使用此数组使用方法填充另一控件的内容 <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ea854-130">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea854-131">.NET 5.0 和更高版本：<paramref name="destination" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-131">.NET 5.0 and later: <paramref name="destination" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea854-132">获取 <see cref="T:System.Windows.Forms.ListBox" /> 中选择的项的数目。</span><span class="sxs-lookup"><span data-stu-id="ea854-132">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="ea854-133"><see cref="T:System.Windows.Forms.ListBox" /> 中选择的项的数目。</span><span class="sxs-lookup"><span data-stu-id="ea854-133">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-134">使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> 属性确定中选定项的数目 <xref:System.Windows.Forms.ListBox.IntegerCollection> 。</span><span class="sxs-lookup"><span data-stu-id="ea854-134">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="ea854-135">然后，你可以在遍历项时使用此值，并且需要提供多个迭代来执行循环。</span><span class="sxs-lookup"><span data-stu-id="ea854-135">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="integerCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-136">要为其检索索引的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-136">The integer for which to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="ea854-137">检索指定的整数在 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-137">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span></span></summary>
        <returns><span data-ttu-id="ea854-138"><see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中整数的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="ea854-138">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-139">使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> 方法可确定项在集合中的位置。</span><span class="sxs-lookup"><span data-stu-id="ea854-139">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="ea854-140">若要在调用此方法之前确定项是否位于集合内，请使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ea854-140">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int with get, set" Usage="System.Windows.Forms.ListBox.IntegerCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ea854-141">元素在集合中的位置。</span><span class="sxs-lookup"><span data-stu-id="ea854-141">The position of the element in the collection.</span></span></param>
        <summary><span data-ttu-id="ea854-142">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="ea854-142">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="ea854-143">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="ea854-143">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ea854-144">.NET 5.0 和更高版本： <paramref name="index" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="ea854-144">.NET 5.0 and later: <paramref name="index" /> is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="integerCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-145">要从 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中移除的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-145">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-146">从 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中移除指定的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-146">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-147">从中移除整数时 <xref:System.Windows.Forms.ListBox.IntegerCollection> ，集合中的后续整数的索引会发生更改。</span><span class="sxs-lookup"><span data-stu-id="ea854-147">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="ea854-148">删除的整数的所有信息都将被删除。</span><span class="sxs-lookup"><span data-stu-id="ea854-148">All information about the removed integer is deleted.</span></span> <span data-ttu-id="ea854-149">您可以使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> 方法从列表中删除特定项，方法是指定要从列表中移除的实际项。</span><span class="sxs-lookup"><span data-stu-id="ea854-149">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="ea854-150">若要指定要删除的整数的索引而不是整数本身，请使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ea854-150">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="ea854-151">如果整数不在中，则 <xref:System.Windows.Forms.ListBox.IntegerCollection> 此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="ea854-151">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="integerCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ea854-152">要移除的整数的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-152">The zero-based index of the integer to remove.</span></span></param>
        <summary><span data-ttu-id="ea854-153">从 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中移除指定索引处的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-153">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-154">从中移除整数时 <xref:System.Windows.Forms.ListBox.IntegerCollection> ，集合中的后续整数的索引会发生更改。</span><span class="sxs-lookup"><span data-stu-id="ea854-154">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="ea854-155">删除的整数的所有信息都将被删除。</span><span class="sxs-lookup"><span data-stu-id="ea854-155">All information about the removed integer is deleted.</span></span> <span data-ttu-id="ea854-156">可以 <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> 通过指定要从列表中删除的整数的索引，使用方法从列表中删除特定的整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-156">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="ea854-157">若要指定要删除的项，而不是项的索引，请使用 <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ea854-157">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea854-158">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="ea854-158">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="ea854-159">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-159"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-160">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-160">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-161">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-161">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea854-162">获取可用于同步控件集合访问的对象。</span><span class="sxs-lookup"><span data-stu-id="ea854-162">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="ea854-163">用于与集合同步的对象。</span><span class="sxs-lookup"><span data-stu-id="ea854-163">The object used to synchronize to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-164">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-165">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-165">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="integerCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea854-166">检索 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中所有整数的枚举。</span><span class="sxs-lookup"><span data-stu-id="ea854-166">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <returns><span data-ttu-id="ea854-167"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-167">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-168">此方法创建一个枚举器，该枚举数包含集合的快照。</span><span class="sxs-lookup"><span data-stu-id="ea854-168">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="ea854-169">可以通过更改枚举器来更改集合;但是，多个枚举器可以同时访问同一个集合。</span><span class="sxs-lookup"><span data-stu-id="ea854-169">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="ea854-170"> (直接或通过其他枚举器更改集合) 会导致 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="ea854-170">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="ea854-171">同时从同一集合创建的两个枚举器可以包含不同的快照。</span><span class="sxs-lookup"><span data-stu-id="ea854-171">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="ea854-172">从枚举器中删除对象还会将它们从集合中删除。</span><span class="sxs-lookup"><span data-stu-id="ea854-172">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="integerCollection.System.Collections.IList.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-173">要添加到 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 的制表位。</span><span class="sxs-lookup"><span data-stu-id="ea854-173">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-174">将制表位添加到集合。</span><span class="sxs-lookup"><span data-stu-id="ea854-174">Adds a tab stop to the collection.</span></span></summary>
        <returns><span data-ttu-id="ea854-175">向集合添加整数的位置的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-175">The index at which the integer was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-176">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-176">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-177">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-177">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea854-178"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-178"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea854-179"><paramref name="item" /> 不是 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-179"><paramref name="item" /> is not an 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="ea854-180">集合中没有足够的空间来存储新项。</span><span class="sxs-lookup"><span data-stu-id="ea854-180">There is insufficient space to store the new item in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="integerCollection.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea854-181">从集合中清除所有制表位。</span><span class="sxs-lookup"><span data-stu-id="ea854-181">Clears all the tab stops from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-182">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-182">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-183">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-183">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="integerCollection.System.Collections.IList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-184">要在 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中定位的 Tab 制表位。</span><span class="sxs-lookup"><span data-stu-id="ea854-184">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-185">确定指定的制表位是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="ea854-185">Determines whether the specified tab stop is in the collection.</span></span></summary>
        <returns><span data-ttu-id="ea854-186">如果项是位于 IntegerCollection 中的整数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-186"><see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-187">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-187">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-188">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-188">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="integerCollection.System.Collections.IList.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ea854-189">要在 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中定位的 Tab 制表位。</span><span class="sxs-lookup"><span data-stu-id="ea854-189">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-190">返回集合中指定的制表位的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-190">Returns the index of the specified tab stop in the collection.</span></span></summary>
        <returns><span data-ttu-id="ea854-191">如果在 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中找到，则为项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="ea854-191">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-192">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-193">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-193">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="integerCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ea854-194">应将值插入到的位置的索引（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="ea854-194">The zero-based index at which value should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="ea854-195">要插入到 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中的对象。</span><span class="sxs-lookup"><span data-stu-id="ea854-195">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-196">将某个项插入到集合中的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="ea854-196">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-197">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-198">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-198">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ea854-199">始终引发。</span><span class="sxs-lookup"><span data-stu-id="ea854-199">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea854-200">获取一个值，该值指示集合是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="ea854-200">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="ea854-201">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-201"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-202">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-202">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-203">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-203">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea854-204">获取一个值，该值指示集合是否为只读。</span><span class="sxs-lookup"><span data-stu-id="ea854-204">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="ea854-205">在所有情况下均为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea854-205"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-206">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-207">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-207">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ea854-208">指定要获取的制表位的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-208">The zero-based index that specifies which tab stop to get.</span></span></param>
        <summary><span data-ttu-id="ea854-209">获取或设置指定索引位置的制表位。</span><span class="sxs-lookup"><span data-stu-id="ea854-209">Gets or sets the tab stop at the specified index.</span></span></summary>
        <value><span data-ttu-id="ea854-210">存储于 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 中指定位置的制表位。</span><span class="sxs-lookup"><span data-stu-id="ea854-210">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-211">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-212">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-212">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea854-213">该对象不是一个整数。</span><span class="sxs-lookup"><span data-stu-id="ea854-213">The object is not an integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="integerCollection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ea854-214">要添加到 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ea854-214">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="ea854-215">从集合中移除某项的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="ea854-215">Removes the first occurrence of an item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-216">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-217">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-217">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ea854-218">始终引发。</span><span class="sxs-lookup"><span data-stu-id="ea854-218">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="integerCollection.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ea854-219">要移除的项的索引。</span><span class="sxs-lookup"><span data-stu-id="ea854-219">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="ea854-220">移除指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="ea854-220">Removes the item at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea854-221">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ea854-221">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ea854-222">它只能在 <xref:System.Windows.Forms.ListBox.IntegerCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ea854-222">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ea854-223">始终引发。</span><span class="sxs-lookup"><span data-stu-id="ea854-223">Always thrown.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
