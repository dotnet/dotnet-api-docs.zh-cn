<Type Name="ComboBox+ChildAccessibleObject" FullName="System.Windows.Forms.ComboBox+ChildAccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e23d41b6285486695e60c41da2beb46ec653bed" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90793949" /></Metadata><TypeSignature Language="C#" Value="public class ComboBox.ChildAccessibleObject : System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ChildAccessibleObject extends System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ChildAccessibleObject&#xA;Inherits AccessibleObject" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ChildAccessibleObject : System::Windows::Forms::AccessibleObject" />
  <TypeSignature Language="F#" Value="type ComboBox.ChildAccessibleObject = class&#xA;    inherit AccessibleObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.AccessibleObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将 <see cref="T:System.Windows.Forms.ComboBox" /> 控件的相关信息提供给具有辅助功能的客户端应用程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 窗体内置了辅助功能支持，并提供了有关应用程序的信息，使其能够使用具有辅助功能的客户端应用程序。 辅助功能客户端应用程序的示例包括屏幕弱视和审阅者实用程序、语音输入实用程序、屏幕键盘、备用输入设备和键盘增强实用程序。 <xref:System.Windows.Forms.ComboBox.ChildAccessibleObject>类从 <xref:System.Windows.Forms.AccessibleObject> 类继承，以将有关控件的信息提供 <xref:System.Windows.Forms.ComboBox> 给具有辅助功能的客户端应用程序。  
  
 在某些情况下，你将需要向具有辅助功能的客户端应用程序提供自定义信息，如控件的名称或说明。 提供此信息的方法有两种。 若要为现有控件提供有限的辅助功能信息，请设置控件的 <xref:System.Windows.Forms.Control.AccessibleName%2A> 、、 <xref:System.Windows.Forms.Control.AccessibleDescription%2A> <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> 和 <xref:System.Windows.Forms.Control.AccessibleRole%2A> 属性值，这些值将报告给具有辅助功能的客户端应用程序。  
  
 如果需要将更多辅助功能信息包含在控件中，可以编写自己的类，该类派生自 <xref:System.Windows.Forms.AccessibleObject> 或 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 类。 例如，如果您要编写自己的控件，该控件不是从公共控件派生的，或者您需要在控件中进行命中测试，则应 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 通过调用方法为控件创建一个 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChildAccessibleObject (System.Windows.Forms.ComboBox owner, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ChildAccessibleObject.#ctor(System.Windows.Forms.ComboBox,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox, handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChildAccessibleObject(System::Windows::Forms::ComboBox ^ owner, IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ComboBox.ChildAccessibleObject : System.Windows.Forms.ComboBox * nativeint -&gt; System.Windows.Forms.ComboBox.ChildAccessibleObject" Usage="new System.Windows.Forms.ComboBox.ChildAccessibleObject (owner, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="owner">拥有 <see cref="T:System.Windows.Forms.ComboBox" /> 的 <see cref="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" /> 控件。</param>
        <param name="handle"><see cref="T:System.Windows.Forms.ComboBox" /> 的一部分的句柄。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ComboBox.ChildAccessibleObject" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ComboBox>控件在内部由多个控件组成。 <xref:System.Windows.Forms.ComboBox.ChildAccessibleObject>必须知道要使用的句柄。 由于单个控件的句柄是私有成员，因此使用者不应调用此构造函数。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ChildAccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Forms.ComboBox.ChildAccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对象的名称。</summary>
        <value><see cref="P:System.Windows.Forms.ComboBox.ChildAccessibleObject.Name" /> 属性的值与 <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> 的 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的 <see cref="T:System.Windows.Forms.ComboBox" /> 属性相同。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
