<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79f49a271f249661744954791a1829cec3c2422b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86701296" /></Metadata><TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02c98-101">提供有关 <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> 和 <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> 事件的数据。</span><span class="sxs-lookup"><span data-stu-id="02c98-101">Provides data for the <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> and <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c98-102"><xref:System.Windows.Forms.TreeView.AfterLabelEdit>当用户完成为树节点编辑文本时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="02c98-102">The <xref:System.Windows.Forms.TreeView.AfterLabelEdit> event occurs when the user finishes editing the text for a tree node.</span></span> <span data-ttu-id="02c98-103"><xref:System.Windows.Forms.TreeView.BeforeLabelEdit>当用户开始编辑树节点的文本时发生该事件。</span><span class="sxs-lookup"><span data-stu-id="02c98-103">The <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> event occurs when the user begins editing the text for a tree node.</span></span> <span data-ttu-id="02c98-104"><xref:System.Windows.Forms.NodeLabelEditEventArgs>对象指定要与树节点关联的新文本、包含要编辑的标签的树节点以及编辑操作是否已取消。</span><span class="sxs-lookup"><span data-stu-id="02c98-104">A <xref:System.Windows.Forms.NodeLabelEditEventArgs> object specifies the new text to associate with the tree node, the tree node that contains the label to edit, and whether the edit operation has been canceled.</span></span>  
  
 <span data-ttu-id="02c98-105">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="02c98-105">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02c98-106">下面的示例允许用户使用编辑 nonroot 树节点 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="02c98-106">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="02c98-107">当用户右键单击鼠标时， <xref:System.Windows.Forms.TreeNode> 位于该位置的将确定并存储在一个名为的变量中 `mySelectedNode` 。</span><span class="sxs-lookup"><span data-stu-id="02c98-107">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="02c98-108">如果选择了 nonroot 树节点，则会将其置于可编辑状态，从而允许用户编辑节点标签。</span><span class="sxs-lookup"><span data-stu-id="02c98-108">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="02c98-109">用户停止编辑树节点标签后，将计算并保存新的标签文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-109">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="02c98-110">在此示例中，多个字符在标签文本中被视为无效。</span><span class="sxs-lookup"><span data-stu-id="02c98-110">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="02c98-111">如果标签字符串中有一个无效字符，或者字符串为空，则会向用户发送错误通知，并将标签返回到其之前的文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-111">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02c98-112">初始化 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="02c98-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="02c98-113">包含待编辑文本的树节点。</span><span class="sxs-lookup"><span data-stu-id="02c98-113">The tree node containing the text to edit.</span></span></param>
        <summary><span data-ttu-id="02c98-114">为指定的 <see cref="T:System.Windows.Forms.TreeNode" /> 初始化 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="02c98-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c98-115"><xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A>为属性分配 `node` 参数值。</span><span class="sxs-lookup"><span data-stu-id="02c98-115">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="02c98-116">包含待编辑文本的树节点。</span><span class="sxs-lookup"><span data-stu-id="02c98-116">The tree node containing the text to edit.</span></span></param>
        <param name="label"><span data-ttu-id="02c98-117">与树节点关联的新文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-117">The new text to associate with the tree node.</span></span></param>
        <summary><span data-ttu-id="02c98-118">为指定的 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 以及用来更新树节点标签的指定文本初始化 <see cref="T:System.Windows.Forms.TreeNode" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="02c98-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" /> and the specified text with which to update the tree node label.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c98-119">为 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> 属性分配 `node` 参数值，并为 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> 属性分配 `label` 参数值。</span><span class="sxs-lookup"><span data-stu-id="02c98-119">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value, and the <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> property is assigned the `label` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02c98-120">获取或设置指示是否已取消编辑的值。</span><span class="sxs-lookup"><span data-stu-id="02c98-120">Gets or sets a value indicating whether the edit has been canceled.</span></span></summary>
        <value><span data-ttu-id="02c98-121">如果编辑已被取消，则为 <see langword="true" />；反之，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02c98-121"><see langword="true" /> if the edit has been canceled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02c98-122">下面的示例允许用户使用编辑 nonroot 树节点 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="02c98-122">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="02c98-123">当用户右键单击鼠标时， <xref:System.Windows.Forms.TreeNode> 位于该位置的将确定并存储在一个名为的变量中 `mySelectedNode` 。</span><span class="sxs-lookup"><span data-stu-id="02c98-123">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="02c98-124">如果选择了 nonroot 树节点，则会将其置于可编辑状态，从而允许用户编辑节点标签。</span><span class="sxs-lookup"><span data-stu-id="02c98-124">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="02c98-125">用户停止编辑树节点标签后，将计算并保存新的标签文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-125">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="02c98-126">在此示例中，多个字符在标签文本中被视为无效。</span><span class="sxs-lookup"><span data-stu-id="02c98-126">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="02c98-127">如果标签字符串中有一个无效字符，或者字符串为空，则会向用户发送错误通知，并将标签返回到其之前的文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-127">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02c98-128">获取与树节点关联的新文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-128">Gets the new text to associate with the tree node.</span></span></summary>
        <value><span data-ttu-id="02c98-129">表示新 <see cref="T:System.Windows.Forms.TreeNode" /> 标签的字符串值或 <see langword="null" />（如果用户取消编辑）。</span><span class="sxs-lookup"><span data-stu-id="02c98-129">The string value that represents the new <see cref="T:System.Windows.Forms.TreeNode" /> label or <see langword="null" /> if the user cancels the edit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02c98-130">此属性的值是： `null` 如果用户按 ESC 取消编辑，或按 ENTER 而不修改标签文本，则为。</span><span class="sxs-lookup"><span data-stu-id="02c98-130">The value of this property is `null` if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.</span></span> <span data-ttu-id="02c98-131">如果用户编辑标签文本，则此属性的值为新的标签文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-131">If the user edits the label text, the value of this property is the new label text.</span></span> <span data-ttu-id="02c98-132">即使已编辑标签文本的最终值与原始值相同，也是如此。</span><span class="sxs-lookup"><span data-stu-id="02c98-132">This is true even if the final value of edited label text is the same as its original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02c98-133">下面的示例允许用户使用编辑 nonroot 树节点 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="02c98-133">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="02c98-134">当用户右键单击鼠标时， <xref:System.Windows.Forms.TreeNode> 位于该位置的将确定并存储在一个名为的变量中 `mySelectedNode` 。</span><span class="sxs-lookup"><span data-stu-id="02c98-134">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="02c98-135">如果选择了 nonroot 树节点，则会将其置于可编辑状态，从而允许用户编辑节点标签。</span><span class="sxs-lookup"><span data-stu-id="02c98-135">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="02c98-136">用户停止编辑树节点标签后，将计算并保存新的标签文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-136">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="02c98-137">在此示例中，多个字符在标签文本中被视为无效。</span><span class="sxs-lookup"><span data-stu-id="02c98-137">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="02c98-138">如果标签字符串中有一个无效字符，或者字符串为空，则会向用户发送错误通知，并将标签返回到其之前的文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-138">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02c98-139">获取包含待编辑文本的树节点。</span><span class="sxs-lookup"><span data-stu-id="02c98-139">Gets the tree node containing the text to edit.</span></span></summary>
        <value><span data-ttu-id="02c98-140">表示包含待编辑文本的树节点的 <see cref="T:System.Windows.Forms.TreeNode" />。</span><span class="sxs-lookup"><span data-stu-id="02c98-140">A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the tree node containing the text to edit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02c98-141">下面的示例允许用户使用编辑 nonroot 树节点 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="02c98-141">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="02c98-142">当用户右键单击鼠标时， <xref:System.Windows.Forms.TreeNode> 位于该位置的将确定并存储在一个名为的变量中 `mySelectedNode` 。</span><span class="sxs-lookup"><span data-stu-id="02c98-142">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="02c98-143">如果选择了 nonroot 树节点，则会将其置于可编辑状态，从而允许用户编辑节点标签。</span><span class="sxs-lookup"><span data-stu-id="02c98-143">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="02c98-144">用户停止编辑树节点标签后，将计算并保存新的标签文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-144">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="02c98-145">在此示例中，多个字符在标签文本中被视为无效。</span><span class="sxs-lookup"><span data-stu-id="02c98-145">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="02c98-146">如果标签字符串中有一个无效字符，或者字符串为空，则会向用户发送错误通知，并将标签返回到其之前的文本。</span><span class="sxs-lookup"><span data-stu-id="02c98-146">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>
