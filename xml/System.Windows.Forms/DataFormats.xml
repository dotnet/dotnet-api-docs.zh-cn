<Type Name="DataFormats" FullName="System.Windows.Forms.DataFormats">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe95482d0e4c92afbb5a4b95c4121c633618ef8e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86783500" /></Metadata><TypeSignature Language="C#" Value="public static class DataFormats" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataFormats extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataFormats" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormats" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormats abstract sealed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type DataFormats = class" />
  <TypeSignature Language="C#" Value="public class DataFormats" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataFormats extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormats" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see langword="static" /> 预定义的 <see cref="T:System.Windows.Forms.Clipboard" /> 格式名称。 使用它们来标识存储在 <see cref="T:System.Windows.Forms.IDataObject" /> 中的数据的格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.IDataObject>和 <xref:System.Windows.Forms.DataObject> 类还使用 `static` 格式列表来确定从系统检索的数据类型 <xref:System.Windows.Forms.Clipboard> ，或者在拖放操作中传输的数据的类型。  
  
 <xref:System.Windows.Forms.DataFormats.GetFormat%2A>方法允许您：  
  
-   获取 <xref:System.Windows.Forms.DataFormats.Format> 格式名称或 ID 号的预定义的对象。  
  
-   在此类的列表中添加一个新的格式名/ID 号对 `static` ，并在向其传递格式名称时，使用 Windows 注册表将格式注册为 <xref:System.Windows.Forms.Clipboard> 格式。  
  
 可以 <xref:System.Windows.Forms.DataFormats.Format.Id%2A> <xref:System.Windows.Forms.DataFormats.Format.Name%2A> 从实例中的相应属性获取数字或格式 <xref:System.Windows.Forms.DataFormats.Format> 。  
  
   
  
## Examples  
 下面的代码示例创建一个名为的新数据格式 `myFormat` 。 然后，该代码创建一个 `MyNewObject` 存储在中的 <xref:System.Windows.Forms.DataObject> 。 将 <xref:System.Windows.Forms.DataObject> 复制到 <xref:System.Windows.Forms.Clipboard> 。  
  
 接下来， <xref:System.Windows.Forms.DataObject> 从检索， <xref:System.Windows.Forms.Clipboard> 并 `MyNewObject` 恢复。 的值将 `MyNewObject` 打印在文本框中。 此代码要求已 `textBox1` 创建并放置在窗体上。  
  
 [!code-cpp[Classic DataFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataFormats Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
    <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
  </Docs>
  <Members>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static readonly string Bitmap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Bitmap" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Bitmap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Bitmap As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Bitmap;" />
      <MemberSignature Language="F#" Value=" staticval mutable Bitmap : string" Usage="System.Windows.Forms.DataFormats.Bitmap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 位图格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 位图将计算机图形表示为内存中的位数组，这些位表示图像中单个像素的特性。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="CommaSeparatedValue">
      <MemberSignature Language="C#" Value="public static readonly string CommaSeparatedValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CommaSeparatedValue" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.CommaSeparatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommaSeparatedValue As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ CommaSeparatedValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommaSeparatedValue : string" Usage="System.Windows.Forms.DataFormats.CommaSeparatedValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定以逗号分隔值 (CSV) 的格式，这是电子表格常用的交换格式。 Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Dib">
      <MemberSignature Language="C#" Value="public static readonly string Dib;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dib" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Dib" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dib As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dib;" />
      <MemberSignature Language="F#" Value=" staticval mutable Dib : string" Usage="System.Windows.Forms.DataFormats.Dib" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 与设备无关的位图 (DIB) 格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DIB 是一种文件格式，旨在确保使用一个应用程序创建的位图图形可以在其他应用程序中加载和显示，就像它们在原始应用程序中出现的方式一样。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Dif">
      <MemberSignature Language="C#" Value="public static readonly string Dif;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dif" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Dif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dif As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dif;" />
      <MemberSignature Language="F#" Value=" staticval mutable Dif : string" Usage="System.Windows.Forms.DataFormats.Dif" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 数据交换格式 (DIF)，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DIF 是 ASCII 代码的一种格式，在该格式中，可以构造数据库、电子表格和类似的文档，以方便使用和传输到其他程序。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_CommaSeparatedValue#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_CommaSeparatedValue/CPP/dataformats_dif.cpp#1)]
 [!code-csharp[DataFormats_CommaSeparatedValue#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_CommaSeparatedValue/CS/dataformats_dif.cs#1)]
 [!code-vb[DataFormats_CommaSeparatedValue#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_CommaSeparatedValue/VB/dataformats_dif.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="EnhancedMetafile">
      <MemberSignature Language="C#" Value="public static readonly string EnhancedMetafile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string EnhancedMetafile" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.EnhancedMetafile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnhancedMetafile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ EnhancedMetafile;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnhancedMetafile : string" Usage="System.Windows.Forms.DataFormats.EnhancedMetafile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 增强型图元文件格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图元文件格式是一个 Windows 文件，它以图形对象而不是像素来存储图像。 调整大小时，图元文件会保持图像比位图更好。  
  
> [!NOTE]
>  使用带有剪贴板的图元文件格式时，可能需要特别注意。 由于类的当前实现中存在限制，因此 <xref:System.Windows.Forms.DataObject> 使用较旧的图元文件格式的应用程序可能无法识别 .NET Framework 使用的图元文件格式。 在这种情况下，必须与 Win32 剪贴板应用程序编程接口)  (Api 进行互操作。
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="FileDrop">
      <MemberSignature Language="C#" Value="public static readonly string FileDrop;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FileDrop" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.FileDrop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FileDrop As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FileDrop;" />
      <MemberSignature Language="F#" Value=" staticval mutable FileDrop : string" Usage="System.Windows.Forms.DataFormats.FileDrop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 文件放置格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在拖放操作过程中，可以使用此格式与 shell 文件拖动进行交互。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormat">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回带有 Windows 剪贴板数字 ID 和名称的 <see cref="T:System.Windows.Forms.DataFormats.Format" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DataFormats.Format GetFormat (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.DataFormats/Format GetFormat(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataFormats.GetFormat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFormat (id As Integer) As DataFormats.Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DataFormats::Format ^ GetFormat(int id);" />
      <MemberSignature Language="F#" Value="static member GetFormat : int -&gt; System.Windows.Forms.DataFormats.Format" Usage="System.Windows.Forms.DataFormats.GetFormat id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataFormats+Format</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">格式 ID。</param>
        <summary>为指定的 ID 返回带有 Windows 剪贴板数字 ID 和名称的 <see cref="T:System.Windows.Forms.DataFormats.Format" />。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.DataFormats.Format" />，它具有 Windows 剪贴板数字 ID 和格式的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员通常用于注册本机剪贴板格式。  
  
 <xref:System.Windows.Forms.DataFormats.GetFormat%2A>当要检索 <xref:System.Windows.Forms.DataFormats.Format> 包含 id/格式名称对的实例时，请使用 id 号调用。 通常，ID 名称和编号由你使用来与进行交互的应用程序的创建者发布 <xref:System.Windows.Forms.Clipboard> 。 例如，Visual Basic 中动态数据交换 (DDE) 会话信息的 ID 号为 `&HBF00` ，格式名为 `vbCFLink` 。  
  
 用任何唯一的 ID 号调用此方法，以将 ID/格式名称对添加到 `static` 类中的格式名称/ID 对列表中 <xref:System.Windows.Forms.DataFormats> 。 将通过串联 "Format" 和 ID 号来创建新名称。 由于未提供名称，此对未注册为新 <xref:System.Windows.Forms.Clipboard> 格式。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_GetFormat#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_GetFormat/CPP/dataformats_getformat.cpp#1)]
 [!code-csharp[DataFormats_GetFormat#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_GetFormat/CS/dataformats_getformat.cs#1)]
 [!code-vb[DataFormats_GetFormat#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_GetFormat/VB/dataformats_getformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DataFormats.Format GetFormat (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.DataFormats/Format GetFormat(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFormat (format As String) As DataFormats.Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DataFormats::Format ^ GetFormat(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetFormat : string -&gt; System.Windows.Forms.DataFormats.Format" Usage="System.Windows.Forms.DataFormats.GetFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataFormats+Format</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">格式名。</param>
        <summary>为指定的格式返回带有 Windows 剪贴板数字 ID 和名称的 <see cref="T:System.Windows.Forms.DataFormats.Format" />。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.DataFormats.Format" />，它具有 Windows 剪贴板数字 ID 和格式的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataFormats.GetFormat%2A>如果需要现有格式的 Windows 剪贴板数字 ID，请使用格式名称调用。  
  
 使用自己的格式名调用此方法以创建新的 <xref:System.Windows.Forms.Clipboard> 格式类型。 如果指定的格式不存在，此方法将使用 Windows 注册表将该名称注册为剪贴板格式，并获取唯一的格式标识符。 此新名称/ID 对将添加到 `static` 类中的格式名称/id 对列表中 <xref:System.Windows.Forms.DataFormats> 。  
  
   
  
## Examples  
 下面的代码示例演示如何检索 <xref:System.Windows.Forms.DataFormats.Format> 表示格式名称/ID 对的。 <xref:System.Windows.Forms.DataFormats.UnicodeText>请求格式，检索的内容将 <xref:System.Windows.Forms.DataFormats.Format> 显示在文本框中。  
  
 此代码要求已 `textBox1` 实例化。  
  
 [!code-cpp[Classic DataFormats.GetFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataFormats.GetFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DataFormats.GetFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataFormats.GetFormat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">仅适用于 .NET 5.0 和更高版本： <paramref name="format" /> 是 <see langword="null" /> 、 <see cref="T:System.String.Empty" /> 或空格。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">注册新的 <see cref="T:System.Windows.Forms.Clipboard" /> 格式失败。</exception>
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="Html">
      <MemberSignature Language="C#" Value="public static readonly string Html;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Html" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Html" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Html As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Html;" />
      <MemberSignature Language="F#" Value=" staticval mutable Html : string" Usage="System.Windows.Forms.DataFormats.Html" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 HTML 剪贴板格式中的文本。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指示 CF_HTML 剪贴板数据类型。 有关此格式的详细信息，请参阅 [HTML 剪贴板格式](https://go.microsoft.com/fwlink/?LinkId=198813)。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public static readonly string Locale;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Locale" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Locale As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Locale;" />
      <MemberSignature Language="F#" Value=" staticval mutable Locale : string" Usage="System.Windows.Forms.DataFormats.Locale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 区域性格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="MetafilePict">
      <MemberSignature Language="C#" Value="public static readonly string MetafilePict;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MetafilePict" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.MetafilePict" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MetafilePict As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MetafilePict;" />
      <MemberSignature Language="F#" Value=" staticval mutable MetafilePict : string" Usage="System.Windows.Forms.DataFormats.MetafilePict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 图元文件格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 图元文件格式是一个 Windows 文件，它以图形对象而不是像素来存储图像。 调整大小时，图元文件会保持图像比位图更好。  
  
> [!NOTE]
>  使用带有剪贴板的图元文件格式时，可能需要特别注意。 由于类的当前实现中存在限制，因此 <xref:System.Windows.Forms.DataObject> 使用较旧的图元文件格式的应用程序可能无法识别 .NET Framework 使用的图元文件格式。 在这种情况下，必须与 Win32 剪贴板应用程序编程接口)  (Api 进行互操作。
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="OemText">
      <MemberSignature Language="C#" Value="public static readonly string OemText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OemText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.OemText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OemText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OemText;" />
      <MemberSignature Language="F#" Value=" staticval mutable OemText : string" Usage="System.Windows.Forms.DataFormats.OemText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准 Windows 原始设备制造商 (OEM) 文本格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public static readonly string Palette;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Palette" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Palette As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Palette;" />
      <MemberSignature Language="F#" Value=" staticval mutable Palette : string" Usage="System.Windows.Forms.DataFormats.Palette" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 调色板格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此字段可以查询 <xref:System.Windows.Forms.DataObject> 它所包含的数据的格式。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="PenData">
      <MemberSignature Language="C#" Value="public static readonly string PenData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PenData" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.PenData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenData As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ PenData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PenData : string" Usage="System.Windows.Forms.DataFormats.PenData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 钢笔数据格式，它由书写软件所使用的笔画组成，Windows 窗体不使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Riff">
      <MemberSignature Language="C#" Value="public static readonly string Riff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Riff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Riff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Riff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Riff;" />
      <MemberSignature Language="F#" Value=" staticval mutable Riff : string" Usage="System.Windows.Forms.DataFormats.Riff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定资源交换文件格式 (RIFF) 音频格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RIFF 是一种基于广泛的规范，设计用于为不同类型的多媒体文件定义标准格式。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public static readonly string Rtf;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Rtf" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Rtf As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Rtf;" />
      <MemberSignature Language="F#" Value=" staticval mutable Rtf : string" Usage="System.Windows.Forms.DataFormats.Rtf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定由 RTF 数据组成的文本。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RTF 是用于在应用程序之间传输格式化文本文档的文档内容体系结构的改写。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="public static readonly string Serializable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Serializable" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Serializable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Serializable As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Serializable;" />
      <MemberSignature Language="F#" Value=" staticval mutable Serializable : string" Usage="System.Windows.Forms.DataFormats.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定封装任何类型的 Windows 窗体对象的格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
> [!NOTE]
>  可序列化格式特定于 Windows 窗体，并将不会被在 Windows 窗体之外创建的应用程序识别。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public static readonly string StringFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StringFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StringFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StringFormat;" />
      <MemberSignature Language="F#" Value=" staticval mutable StringFormat : string" Usage="System.Windows.Forms.DataFormats.StringFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 窗体字符串类格式，Windows 窗体使用此格式存储字符串对象。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
> [!NOTE]
>  String 类格式仅特定于 Windows 窗体，且不会被在 Windows 窗体之外创建的应用程序识别。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_StringFormat#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_StringFormat/CPP/dataformats_stringformat.cpp#1)]
 [!code-csharp[DataFormats_StringFormat#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_StringFormat/CS/dataformats_stringformat.cs#1)]
 [!code-vb[DataFormats_StringFormat#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_StringFormat/VB/dataformats_stringformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="SymbolicLink">
      <MemberSignature Language="C#" Value="public static readonly string SymbolicLink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SymbolicLink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.SymbolicLink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SymbolicLink As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SymbolicLink;" />
      <MemberSignature Language="F#" Value=" staticval mutable SymbolicLink : string" Usage="System.Windows.Forms.DataFormats.SymbolicLink" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 Windows 符号链接格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 符号链接是一个磁盘目录项，它取代了文件的目录条目，但实际上是对其他目录中的文件的引用。 符号链接也称为别名、快捷方式、软链接或符号链接。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly string Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Text;" />
      <MemberSignature Language="F#" Value=" staticval mutable Text : string" Usage="System.Windows.Forms.DataFormats.Text" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准 ANSI 文本格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_UnicodeText1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CPP/dataformats_unicodetext.cpp#2)]
 [!code-csharp[DataFormats_UnicodeText1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CS/dataformats_unicodetext.cs#2)]
 [!code-vb[DataFormats_UnicodeText1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_UnicodeText1/VB/dataformats_unicodetext.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="Tiff">
      <MemberSignature Language="C#" Value="public static readonly string Tiff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Tiff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.Tiff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tiff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Tiff;" />
      <MemberSignature Language="F#" Value=" staticval mutable Tiff : string" Usage="System.Windows.Forms.DataFormats.Tiff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标记图像文件格式 (TIFF)，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TIFF 是一种标准文件格式，通常用于扫描、存储和交换灰度图形图像。  
  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeText">
      <MemberSignature Language="C#" Value="public static readonly string UnicodeText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UnicodeText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.UnicodeText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnicodeText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UnicodeText;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnicodeText : string" Usage="System.Windows.Forms.DataFormats.UnicodeText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定标准 Windows Unicode 文本格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-cpp[DataFormats_UnicodeText1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CPP/dataformats_unicodetext.cpp#1)]
 [!code-csharp[DataFormats_UnicodeText1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataFormats_UnicodeText1/CS/dataformats_unicodetext.cs#1)]
 [!code-vb[DataFormats_UnicodeText1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataFormats_UnicodeText1/VB/dataformats_unicodetext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
    <Member MemberName="WaveAudio">
      <MemberSignature Language="C#" Value="public static readonly string WaveAudio;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WaveAudio" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataFormats.WaveAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WaveAudio As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ WaveAudio;" />
      <MemberSignature Language="F#" Value=" staticval mutable WaveAudio : string" Usage="System.Windows.Forms.DataFormats.WaveAudio" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 wave 音频格式，Windows 窗体不直接使用此格式。 此 <see langword="static" /> 字段是只读的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接口和类使用此字段 <xref:System.Windows.Forms.IDataObject> <xref:System.Windows.Forms.DataObject> 来指定数据类型。  
  
 将添加到 <xref:System.Windows.Forms.IDataObject> 或的实现时 <xref:System.Windows.Forms.DataObject> ，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.SetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType> 。  
  
 若要查看此类型的对象是否存在，请使用此字段作为 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType> 。  
  
 若要获取此类型的对象，请将此类型用作 <xref:System.Windows.Forms.IDataObject.GetData%2A?displayProperty=nameWithType> 和方法的格式 <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataFormats.GetFormat(System.String)" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Name" />
        <altmember cref="P:System.Windows.Forms.DataFormats.Format.Id" />
      </Docs>
    </Member>
  </Members>
</Type>
