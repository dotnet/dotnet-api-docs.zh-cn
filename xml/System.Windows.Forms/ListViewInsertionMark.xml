<Type Name="ListViewInsertionMark" FullName="System.Windows.Forms.ListViewInsertionMark">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a61975b23db9a9756736bca43a498230e4496bd6" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89899545" /></Metadata><TypeSignature Language="C#" Value="public sealed class ListViewInsertionMark" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ListViewInsertionMark extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewInsertionMark" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ListViewInsertionMark" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertionMark sealed" />
  <TypeSignature Language="F#" Value="type ListViewInsertionMark = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在 <see cref="T:System.Windows.Forms.ListView" /> 控件中将某项拖动到新位置时，用于指示期望的拖放位置。 此功能仅适用于 Windows XP 和更高版本。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以 <xref:System.Windows.Forms.ListViewInsertionMark> 从控件的属性中检索 <xref:System.Windows.Forms.ListView.InsertionMark%2A> ，并在将 <xref:System.Windows.Forms.ListView> 项拖动到新位置时，使用它直观地指示拖放操作中的预期放置位置。  
  
 此功能仅在以下情况下有效 <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=nameWithType> ：当属性设置为时 `true` ，如果 <xref:System.Windows.Forms.ListView> 控件未自动对项进行排序，则为。 若要防止自动排序， <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> 属性必须设置为 <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> ，并且属性必须设置为 <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType> 或 <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> 。 此外，插入标记功能不能用于 <xref:System.Windows.Forms.ListView> 分组功能，因为分组功能按组成员按顺序对项进行排序。  
  
 <xref:System.Windows.Forms.ListViewInsertionMark>类通常用于或事件的处理程序中，用于在 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> 拖动项时更新插入标记的位置。 它还在或事件的处理程序中用于将 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> 拖动的项插入到正确的位置。  
  
 若要更新插入标记的位置，请执行以下步骤：  
  
1.  在或事件的处理程序中 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> ，使用 <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=nameWithType> 属性访问 <xref:System.Windows.Forms.ListViewInsertionMark> 与该控件关联的对象 <xref:System.Windows.Forms.ListView> 。  
  
2.  使用 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 方法检索离鼠标指针最近的项的索引。  
  
3.  将索引值传递给 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> 方法以检索项的边框。  
  
4.  如果鼠标指针位于边界矩形中点的左侧，则将 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 属性设置为 `false` ; 否则，请将其设置为 `true` 。  
  
5.  将 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 属性设置为从方法检索到的索引值 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 。 插入标记将显示在具有指定索引的项的旁边，具体取决于 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 属性值。 如果将某个项拖动到其自身上，则索引为-1，并且插入标记处于隐藏状态。  
  
 若要将拖动的项插入到正确的位置，请执行以下步骤：  
  
1.  在或事件的处理程序中 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> ，使用 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 属性来确定插入标记的当前位置。 存储此值，以备稍后用作插入索引。  
  
2.  如果将 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 属性设置为 `true` ，则递增存储的插入索引值。  
  
3.  使用 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=nameWithType> 方法将拖动的项的克隆插入到 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 集合中存储的插入索引处。  
  
4.  使用 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=nameWithType> 方法可删除拖动项的原始副本。  
  
 在删除原始副本之前，必须先插入拖动项的复本，以便在 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 插入之前不更改集合中的索引值。  
  
 若要确保项的显示顺序与其索引值相同，必须将 <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=nameWithType> 属性设置为 <xref:System.Collections.IComparer> 按索引值对项进行排序的接口的实现。 有关详细信息，请参阅 "示例" 部分。  
  
 您可以使用属性修改插入标记的颜色 <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> 。 如果需要插入标记的大小或位置，可以通过属性获取其边框 <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A> 。  
  
> [!NOTE]
>  当应用程序调用方法时，插入标记功能仅在 Windows XP 和 Windows Server 2003 家族上可用 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 。 在早期的操作系统上，将忽略与插入标记相关的任何代码，并且不会显示插入标记。 因此，依赖于插入标记功能的任何代码可能无法正常工作。 你可能想要包含一个测试来确定插入标记功能是否可用，并在其不可用时提供其他功能。 例如，你可能想要在不支持插入标记的操作系统上运行时，绕过实现拖放项重定位的所有代码。  
>   
>  插入标记功能由提供操作系统主题功能的相同库提供。 若要检查此库的可用性，请调用 <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> 方法重载，并传入 <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> 值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListView> 插入标记功能并实现使用标准拖动事件的拖放项重新排序。 在事件的处理程序中更新插入标记的位置 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 。 在此处理程序中，将鼠标指针的位置与最近项的中点进行比较，并使用结果来确定插入标记是显示在项的左侧还是右侧。  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName="AppearsAfterItem">
      <MemberSignature Language="C#" Value="public bool AppearsAfterItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppearsAfterItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberSignature Language="VB.NET" Value="Public Property AppearsAfterItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppearsAfterItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppearsAfterItem : bool with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在项的右侧显示插入标记，该项带有 <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> 属性指定的索引。</summary>
        <value>如果在带有索引（由 <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> 属性指定）的项的右侧显示插入标记，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>方法可让你查找离鼠标指针最近的项，但你必须进行自己的计算，以确定插入标记应该出现在此项之前还是之后。  
  
 若要计算属性所需的值 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> ，请执行以下步骤：  
  
1.  使用 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 方法检索离鼠标指针最近的项的索引。  
  
2.  将索引值传递给 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> 方法以检索项的边框。  
  
3.  如果鼠标指针位于边界矩形中点的左侧，则将 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 属性设置为 `false` ; 否则，请将其设置为 `true` 。  
  
 有关详细信息，请参阅 <xref:System.Windows.Forms.ListViewInsertionMark> 概述参考主题。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListView> 插入标记功能并实现使用标准拖动事件的拖放项重新排序。 在事件的处理程序中更新插入标记的位置 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 。 在此处理程序中，将鼠标指针的位置与最近项的中点进行比较，并使用结果来确定插入标记是显示在项的左侧还是右侧。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.ListViewInsertionMark> 概述参考主题。  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取插入标记的边框。</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> 用于表示插入标记的位置和大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 插入标记边界矩形中的坐标相对于控件的左上角 <xref:System.Windows.Forms.ListView> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此插入标记的颜色。</summary>
        <value>一个 <see cref="T:System.Drawing.Color" /> 值，表示插入标记的颜色。 默认值为 <see cref="P:System.Windows.Forms.ListView.ForeColor" /> 属性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性将插入标记颜色设置为控件的前景色以外的值 <xref:System.Windows.Forms.ListView> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListView> 插入标记功能并实现使用标准拖动事件的拖放项重新排序。 在事件的处理程序中更新插入标记的位置 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 。 在此处理程序中，将鼠标指针的位置与最近项的中点进行比较，并使用结果来确定插入标记是显示在项的左侧还是右侧。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.ListViewInsertionMark> 概述参考主题。  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与插入标记旁边的项的索引。</summary>
        <value>插入标记旁边的项的索引；如果隐藏插入标记，则为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将属性设置为，则插入标记出现在具有指定索引的项的左侧 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> `false` ; 否则，它将显示在项的右侧。 将拖动的项插入到集合中时，插入标记会自动消失 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 。 若要手动删除插入标记，例如，将某个项拖动到其自身或拖放到控件外时，请将 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 值设置为-1。  
  
 使用 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 方法检索离指定位置最近的项的索引，如在拖放操作中定位项时鼠标指针的位置。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListView> 插入标记功能并实现使用标准拖动事件的拖放项重新排序。 在事件的处理程序中更新插入标记的位置 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 。 在此处理程序中，将鼠标指针的位置与最近项的中点进行比较，并使用结果来确定插入标记是显示在项的左侧还是右侧。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.ListViewInsertionMark> 概述参考主题。  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="NearestIndex">
      <MemberSignature Language="C#" Value="public int NearestIndex (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NearestIndex(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function NearestIndex (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NearestIndex(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.NearestIndex : System.Drawing.Point -&gt; int" Usage="listViewInsertionMark.NearestIndex pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">从 <see cref="T:System.Drawing.Point" /> 表示的位置找到最近的项。</param>
        <summary>检索距离指定点最近的项的索引。</summary>
        <returns>距离指定点最近的项的索引；如果最近的项就是当前被拖动的项，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法允许您在执行拖放操作时查找离鼠标指针最近的项。 使用返回的索引值设置 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 属性。 当最接近鼠标指针的项是要拖动的项时，此方法的返回值为-1。 在这种情况下，将属性设置为该值将 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 隐藏插入标记。  
  
 此方法查找最接近的项，而不考虑鼠标指针的位置，而 <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> 方法只返回指定位置的项，或者 `null` 如果该位置没有项，则为。 <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> `null` 例如，当鼠标指针位于两个项之间时，此方法将返回。 出于此原因，在 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 使用拖放操作来定位项时，应始终使用方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.ListView> 插入标记功能并实现使用标准拖动事件的拖放项重新排序。 在事件的处理程序中更新插入标记的位置 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 。 在此处理程序中，将鼠标指针的位置与最近项的中点进行比较，并使用结果来确定插入标记是显示在项的左侧还是右侧。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.ListViewInsertionMark> 概述参考主题。  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
  </Members>
</Type>
