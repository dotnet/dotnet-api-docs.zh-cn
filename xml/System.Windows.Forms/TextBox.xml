<Type Name="TextBox" FullName="System.Windows.Forms.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14ff0e13e53066b4686effec30e4622486a48365" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92084034" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="63767-101">表示 Windows 文本框控件。</span><span class="sxs-lookup"><span data-stu-id="63767-101">Represents a Windows text box control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-102">使用 <xref:System.Windows.Forms.TextBox> 控件，用户可以在应用程序中输入文本。</span><span class="sxs-lookup"><span data-stu-id="63767-102">With the <xref:System.Windows.Forms.TextBox> control, the user can enter text in an application.</span></span> <span data-ttu-id="63767-103">此控件具有在标准 Windows 文本框控件中找不到的其他功能，包括多行编辑和密码字符掩码。</span><span class="sxs-lookup"><span data-stu-id="63767-103">This control has additional functionality that is not found in the standard Windows text box control, including multiline editing and password character masking.</span></span>  
  
 <span data-ttu-id="63767-104">通常， <xref:System.Windows.Forms.TextBox> 控件用于显示或接受作为输入的一行文本。</span><span class="sxs-lookup"><span data-stu-id="63767-104">Typically, a <xref:System.Windows.Forms.TextBox> control is used to display, or accept as input, a single line of text.</span></span> <span data-ttu-id="63767-105">您可以使用 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 和 <xref:System.Windows.Forms.TextBox.ScrollBars%2A> 属性来启用要显示或输入的多个文本行。</span><span class="sxs-lookup"><span data-stu-id="63767-105">You can use the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBox.ScrollBars%2A> properties to enable multiple lines of text to be displayed or entered.</span></span> <span data-ttu-id="63767-106">将 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 和 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 属性设置为， `true` 以在多行控件中启用更大的文本操作 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-106">Set the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> and <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> properties to `true` to enable greater text manipulation in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63767-107">必须将属性设置 <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> 为以 `true` 调整控件的高度 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-107">You must set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true` to adjust the height of the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="63767-108">可以通过设置属性来调整高度 <xref:System.Windows.Forms.Control.Size%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-108">You can adjust the height by setting the <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 <span data-ttu-id="63767-109">可以 <xref:System.Windows.Forms.TextBox> 通过将 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 属性设置为特定数量的字符来限制输入到控件中的文本量。</span><span class="sxs-lookup"><span data-stu-id="63767-109">You can limit the amount of text entered into a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to a specific number of characters.</span></span> <span data-ttu-id="63767-110"><xref:System.Windows.Forms.TextBox> 控件也可用于接受密码和其他敏感信息。</span><span class="sxs-lookup"><span data-stu-id="63767-110"><xref:System.Windows.Forms.TextBox> controls can also be used to accept passwords and other sensitive information.</span></span> <span data-ttu-id="63767-111">您可以使用 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 属性来屏蔽在单行版本的控件中输入的字符。</span><span class="sxs-lookup"><span data-stu-id="63767-111">You can use the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property to mask characters entered in a single-line version of the control.</span></span> <span data-ttu-id="63767-112">使用 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 属性可使用户只键入大写、仅小写或将大写和小写字符组合到 <xref:System.Windows.Forms.TextBox> 控件中。</span><span class="sxs-lookup"><span data-stu-id="63767-112">Use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to enable the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="63767-113">若要将的内容滚动到 <xref:System.Windows.Forms.TextBox> 光标 (插入符号) 位于控件的可见区域内，可以使用 <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="63767-113">To scroll the contents of the <xref:System.Windows.Forms.TextBox> until the cursor (caret) is within the visible region of the control, you can use the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method.</span></span> <span data-ttu-id="63767-114">若要选择文本框中的文本范围，可以使用 <xref:System.Windows.Forms.TextBoxBase.Select%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="63767-114">To select a range of text in the text box, you can use the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span>  
  
 <span data-ttu-id="63767-115">若要限制在控件中输入文本 <xref:System.Windows.Forms.TextBox> ，可以为事件创建事件处理程序，以便 <xref:System.Windows.Forms.Control.KeyDown> 验证在控件中输入的每个字符。</span><span class="sxs-lookup"><span data-stu-id="63767-115">To restrict text from being entered in a <xref:System.Windows.Forms.TextBox> control, you can create an event handler for the <xref:System.Windows.Forms.Control.KeyDown> event in order to validate each character entered in the control.</span></span> <span data-ttu-id="63767-116">还可以 <xref:System.Windows.Forms.TextBox> 通过将属性设置为来限制控件中的所有数据输入 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="63767-116">You can also restrict all entry of data in a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63767-117">控件的大多数功能 <xref:System.Windows.Forms.TextBox> 都是从类继承的 <xref:System.Windows.Forms.TextBoxBase> 。</span><span class="sxs-lookup"><span data-stu-id="63767-117">Most of the functionality of the <xref:System.Windows.Forms.TextBox> control is inherited from the <xref:System.Windows.Forms.TextBoxBase> class.</span></span>  
>   
>  <span data-ttu-id="63767-118">使用 <xref:System.Windows.Forms.TextBox> 启用了视觉样式的控件将导致代理字体的错误处理。</span><span class="sxs-lookup"><span data-stu-id="63767-118">Using the <xref:System.Windows.Forms.TextBox> control with visual styles enabled will cause the incorrect handling of surrogate fonts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-119">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 具有垂直滚动条的多行控件。</span><span class="sxs-lookup"><span data-stu-id="63767-119">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="63767-120">此示例使用 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 和 <xref:System.Windows.Forms.Control.Dock%2A> 属性使 "多行文本框" 控件对创建文本文档有用。</span><span class="sxs-lookup"><span data-stu-id="63767-120">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.Control.Dock%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-csharp[Classic TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63767-121">初始化 <see cref="T:System.Windows.Forms.TextBox" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="63767-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.TextBox" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-122">父容器控件定义的颜色和字体设置 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-122">The parent container control defines the color and font settings for the <xref:System.Windows.Forms.TextBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-123">下面的代码示例创建控件的一个新实例 <xref:System.Windows.Forms.TextBox> ，并将一个字符串分配给控件的 <xref:System.Windows.Forms.TextBoxBase.Text%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="63767-123">The following code example creates a new instance of the <xref:System.Windows.Forms.TextBox> control and assigns a string to the control's <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
 [!code-cpp[Classic TextBox.TextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-124">获取或设置一个值，该值指示在多行 <see cref="T:System.Windows.Forms.TextBox" /> 控件中按 Enter 键时，是在控件中创建一行新文本还是激活窗体的默认按钮。</span><span class="sxs-lookup"><span data-stu-id="63767-124">Gets or sets a value indicating whether pressing ENTER in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control creates a new line of text in the control or activates the default button for the form.</span></span></summary>
        <value><span data-ttu-id="63767-125">如果按 Enter 键时在多行版本的控件中创建一行新文本，则为 <see langword="true" />；如果按 Enter 键时激活窗体的默认按钮，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-125"><see langword="true" /> if the ENTER key creates a new line of text in a multiline version of the control; <see langword="false" /> if the ENTER key activates the default button for the form.</span></span> <span data-ttu-id="63767-126">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-127">如果此属性的值为 `false` ，则用户必须按 CTRL + enter 在多行控件中创建新行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-127">If the value of this property is `false`, the user must press CTRL+ENTER to create a new line in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="63767-128">如果窗体没有默认按钮，则无论此属性的值如何，ENTER 键都将始终在控件中创建新的文本行。</span><span class="sxs-lookup"><span data-stu-id="63767-128">If there is no default button for the form, the ENTER key will always create a new line of text in the control, regardless of the value of this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-129">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 具有垂直滚动条的多行控件。</span><span class="sxs-lookup"><span data-stu-id="63767-129">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="63767-130">此示例使用 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 和 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 属性使 "多行文本框" 控件对创建文本文档有用。</span><span class="sxs-lookup"><span data-stu-id="63767-130">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteCustomSource : System.Windows.Forms.AutoCompleteStringCollection with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-131">获取或设置一个自定义 <see cref="T:System.Collections.Specialized.StringCollection" />，以便在 <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> 属性被设置为 <see langword="CustomSource" /> 时使用。</span><span class="sxs-lookup"><span data-stu-id="63767-131">Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span></span></summary>
        <value><span data-ttu-id="63767-132">一个与 <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> 一起使用的 <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="63767-132">A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-133">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 、 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 和 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性创建一个 <xref:System.Windows.Forms.TextBox> ，它通过将输入的前缀与维护的源中的所有字符串的前缀进行比较来自动完成输入字符串。</span><span class="sxs-lookup"><span data-stu-id="63767-133">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="63767-134">这对于 <xref:System.Windows.Forms.TextBox> 经常输入 url、地址、文件名或命令的控件很有用。</span><span class="sxs-lookup"><span data-stu-id="63767-134">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="63767-135">属性的使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 是可选的，但必须将 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性设置为才能 `CustomSource` 使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-135">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="63767-136">您必须同时使用 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 和 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="63767-136">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63767-137">操作系统可能会限制它可以同时显示的自定义字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="63767-137">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-138">下面的代码示例演示如何使用集合作为控件的自动完成自定义源 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-138">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="63767-139">此示例将执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="63767-139">This example does the following:</span></span>  
  
-   <span data-ttu-id="63767-140">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性使 <xref:System.Windows.Forms.TextBox> 控件可以接受自定义源来自动完成行为。</span><span class="sxs-lookup"><span data-stu-id="63767-140">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="63767-141">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 属性设置值的自定义列表。</span><span class="sxs-lookup"><span data-stu-id="63767-141">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="63767-142">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 属性设置自动完成候选项的显示方式。</span><span class="sxs-lookup"><span data-stu-id="63767-142">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteMode : System.Windows.Forms.AutoCompleteMode with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-143">获取或设置一个选项，该选项控制自动完成应用于 <see cref="T:System.Windows.Forms.TextBox" /> 的方式。</span><span class="sxs-lookup"><span data-stu-id="63767-143">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="63767-144"><see cref="T:System.Windows.Forms.AutoCompleteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="63767-144">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span> <span data-ttu-id="63767-145">以下为这些值。</span><span class="sxs-lookup"><span data-stu-id="63767-145">The following are the values.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />  
<span data-ttu-id="63767-146">将最可能的候选字符串的其余部分追加到现有的字符，并突出显示追加的字符。</span><span class="sxs-lookup"><span data-stu-id="63767-146">Appends the remainder of the most likely candidate string to the existing characters, highlighting the appended characters.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />  
<span data-ttu-id="63767-147">显示与编辑控件关联的辅助下拉列表。</span><span class="sxs-lookup"><span data-stu-id="63767-147">Displays the auxiliary drop-down list associated with the edit control.</span></span> <span data-ttu-id="63767-148">此下拉列表填充了一个或多个建议完成字符串。</span><span class="sxs-lookup"><span data-stu-id="63767-148">This drop-down is populated with one or more suggested completion strings.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />  
<span data-ttu-id="63767-149">追加 <see langword="Suggest" /> 和 <see langword="Append" /> 选项。</span><span class="sxs-lookup"><span data-stu-id="63767-149">Appends both <see langword="Suggest" /> and <see langword="Append" /> options.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />  
<span data-ttu-id="63767-150">禁用自动完成</span><span class="sxs-lookup"><span data-stu-id="63767-150">Disables automatic completion.</span></span> <span data-ttu-id="63767-151">这是默认设置。</span><span class="sxs-lookup"><span data-stu-id="63767-151">This is the default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-152">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 、 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 和 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性创建一个 <xref:System.Windows.Forms.TextBox> ，它通过将输入的前缀与维护的源中的所有字符串的前缀进行比较来自动完成输入字符串。</span><span class="sxs-lookup"><span data-stu-id="63767-152">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="63767-153">这对于 <xref:System.Windows.Forms.TextBox> 经常输入 url、地址、文件名或命令的控件很有用。</span><span class="sxs-lookup"><span data-stu-id="63767-153">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="63767-154">属性的使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 是可选的，但必须将 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性设置为才能 `CustomSource` 使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-154">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="63767-155">您必须同时使用 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 和 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="63767-155">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63767-156">操作系统可能会限制它可以同时显示的自定义字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="63767-156">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-157">下面的代码示例演示如何使用集合作为控件的自动完成自定义源 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-157">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="63767-158">此示例将执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="63767-158">This example does the following:</span></span>  
  
-   <span data-ttu-id="63767-159">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性使 <xref:System.Windows.Forms.TextBox> 控件可以接受自定义源来自动完成行为。</span><span class="sxs-lookup"><span data-stu-id="63767-159">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="63767-160">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 属性设置值的自定义列表。</span><span class="sxs-lookup"><span data-stu-id="63767-160">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="63767-161">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 属性设置自动完成候选项的显示方式。</span><span class="sxs-lookup"><span data-stu-id="63767-161">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="63767-162">指定的值不是 <see cref="T:System.Windows.Forms.AutoCompleteMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="63767-162">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteSource : System.Windows.Forms.AutoCompleteSource with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TextBoxAutoCompleteSourceConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TextBoxAutoCompleteSourceConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-163">获取或设置一个值，该值指定用于自动完成的完整字符串的源。</span><span class="sxs-lookup"><span data-stu-id="63767-163">Gets or sets a value specifying the source of complete strings used for automatic completion.</span></span></summary>
        <value><span data-ttu-id="63767-164"><see cref="T:System.Windows.Forms.AutoCompleteSource" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="63767-164">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span> <span data-ttu-id="63767-165">这些选项为 <see langword="AllSystemSources" />、<see langword="AllUrl" />、<see langword="FileSystem" />、<see langword="HistoryList" />、<see langword="RecentlyUsedList" />、<see langword="CustomSource" /> 和 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="63767-165">The options are <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" />, and <see langword="None" />.</span></span> <span data-ttu-id="63767-166">默认值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="63767-166">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-167">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 、 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 和 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性创建一个 <xref:System.Windows.Forms.TextBox> ，它通过将输入的前缀与维护的源中的所有字符串的前缀进行比较来自动完成输入字符串。</span><span class="sxs-lookup"><span data-stu-id="63767-167">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="63767-168">这对于 <xref:System.Windows.Forms.TextBox> 经常输入 url、地址、文件名或命令的控件很有用。</span><span class="sxs-lookup"><span data-stu-id="63767-168">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="63767-169">属性的使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 是可选的，但必须将 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性设置为才能 `CustomSource` 使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-169">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="63767-170">您必须同时使用 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 和 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="63767-170">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63767-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 不适用于多行 <xref:System.Windows.Forms.TextBox> 控件。</span><span class="sxs-lookup"><span data-stu-id="63767-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63767-172">操作系统可能会限制一次可显示的自定义字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="63767-172">The operating system might limit the number of custom strings that can be displayed at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-173">下面的代码示例演示如何使用集合作为控件的自动完成自定义源 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-173">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="63767-174">此示例将执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="63767-174">This example does the following:</span></span>  
  
-   <span data-ttu-id="63767-175">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 属性使 <xref:System.Windows.Forms.TextBox> 控件可以接受自定义源来自动完成行为。</span><span class="sxs-lookup"><span data-stu-id="63767-175">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="63767-176">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> 属性设置值的自定义列表。</span><span class="sxs-lookup"><span data-stu-id="63767-176">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="63767-177">使用 <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> 属性设置自动完成候选项的显示方式。</span><span class="sxs-lookup"><span data-stu-id="63767-177">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="63767-178">指定的值不是 <see cref="T:System.Windows.Forms.AutoCompleteSource" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="63767-178">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CharacterCasing CharacterCasing { System::Windows::Forms::CharacterCasing get(); void set(System::Windows::Forms::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Forms.CharacterCasing with get, set" Usage="System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-179">获取或设置 <see cref="T:System.Windows.Forms.TextBox" /> 控件是否在字符键入时修改其大小写格式。</span><span class="sxs-lookup"><span data-stu-id="63767-179">Gets or sets whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters as they are typed.</span></span></summary>
        <value><span data-ttu-id="63767-180"><see cref="T:System.Windows.Forms.CharacterCasing" /> 枚举值中的一个值，它指定 <see cref="T:System.Windows.Forms.TextBox" /> 控件是否修改字符的大小写格式。</span><span class="sxs-lookup"><span data-stu-id="63767-180">One of the <see cref="T:System.Windows.Forms.CharacterCasing" /> enumeration values that specifies whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters.</span></span> <span data-ttu-id="63767-181">默认值为 <see langword="CharacterCasing.Normal" />。</span><span class="sxs-lookup"><span data-stu-id="63767-181">The default is <see langword="CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-182">您可以使用 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 属性根据应用程序的需要更改字符的大小写。</span><span class="sxs-lookup"><span data-stu-id="63767-182">You can use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change the case of characters as required by your application.</span></span> <span data-ttu-id="63767-183">例如，可以将在用于密码输入的控件中输入的所有字符的大小写更改 <xref:System.Windows.Forms.TextBox> 为大写或小写来强制执行密码策略。</span><span class="sxs-lookup"><span data-stu-id="63767-183">For example, you could change the case of all characters entered in a <xref:System.Windows.Forms.TextBox> control used for password entry to uppercase or lowercase to enforce a policy for passwords.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-184">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 用于接受密码的控件。</span><span class="sxs-lookup"><span data-stu-id="63767-184">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="63767-185">此示例使用 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 属性将键入的所有字符更改为小写，并使用 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 属性将密码长度限制为8个字符。</span><span class="sxs-lookup"><span data-stu-id="63767-185">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="63767-186">此示例还使用 <xref:System.Windows.Forms.TextBox.TextAlign%2A> 属性使密码在控件中居中 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-186">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="63767-187">分配给该属性的值不在该枚举的有效值范围内。</span><span class="sxs-lookup"><span data-stu-id="63767-187">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-188">获取创建控件句柄时所需要的创建参数。</span><span class="sxs-lookup"><span data-stu-id="63767-188">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="63767-189"><see cref="T:System.Windows.Forms.CreateParams" />，包含创建控件的句柄时所需的创建参数。</span><span class="sxs-lookup"><span data-stu-id="63767-189">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.TextBox.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-190">获取控件支持的默认输入法编辑器 (IME) 模式。</span><span class="sxs-lookup"><span data-stu-id="63767-190">Gets the default Input Method Editor (IME) mode supported by the control.</span></span></summary>
        <value><span data-ttu-id="63767-191">控件支持的默认输入法模式。</span><span class="sxs-lookup"><span data-stu-id="63767-191">The default IME mode supported by the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textBox.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="63767-192">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-192"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="63767-193">释放由 <see cref="T:System.Windows.Forms.TextBox" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="63767-193">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.TextBox" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-194">此方法由公共 `Dispose` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="63767-194">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="63767-195">`Dispose` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="63767-195">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="63767-196"><xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。</span><span class="sxs-lookup"><span data-stu-id="63767-196"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="63767-197">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Windows.Forms.TextBox> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="63767-197">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.TextBox> references.</span></span> <span data-ttu-id="63767-198">此方法将调用每个被引用对象的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="63767-198">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63767-199">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="63767-199">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="63767-200">重写时 <see langword="Dispose(Boolean)" /> ，请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。</span><span class="sxs-lookup"><span data-stu-id="63767-200">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="63767-201">有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="63767-201">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="63767-202">有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="63767-202">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="63767-203">键的一个值。</span><span class="sxs-lookup"><span data-stu-id="63767-203">One of the key's values.</span></span></param>
        <summary><span data-ttu-id="63767-204">确定指定的键是输入键还是需要预处理的特殊键。</span><span class="sxs-lookup"><span data-stu-id="63767-204">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="63767-205">如果指定的键是输入键，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-205"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-206"><xref:System.Windows.Forms.TextBox.IsInputKey%2A> `true` 当 `keyData` 包含 <xref:System.Windows.Forms.Keys.Return> 值并且 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 属性为时，该方法返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="63767-206">The <xref:System.Windows.Forms.TextBox.IsInputKey%2A> method returns `true` when `keyData` includes the <xref:System.Windows.Forms.Keys.Return> value and the <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-207">获取或设置一个值，该值指示这是否为多行 <see cref="T:System.Windows.Forms.TextBox" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="63767-207">Gets or sets a value indicating whether this is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="63767-208">如果控件为多行 <see cref="T:System.Windows.Forms.TextBox" /> 控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-208"><see langword="true" /> if the control is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="63767-209">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-210"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 不适用于多行 <xref:System.Windows.Forms.TextBox> 控件。</span><span class="sxs-lookup"><span data-stu-id="63767-210"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
 <span data-ttu-id="63767-211">当字体更改时，将不会显示你定义的任何缩进。</span><span class="sxs-lookup"><span data-stu-id="63767-211">When the font is changed, any indentation that you have defined does not appear.</span></span> <span data-ttu-id="63767-212">若要获取缩进，请设置 <xref:System.Windows.Forms.TextBox.Multiline%2A> 为 `true` ，并在不调用基类的情况下重写 WM_SETFONT，这样就不会调用 SETMARGINS。</span><span class="sxs-lookup"><span data-stu-id="63767-212">To get indentation, set <xref:System.Windows.Forms.TextBox.Multiline%2A> to `true` and override WM_SETFONT without calling the base class so that SETMARGINS is not called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-213">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 具有垂直滚动条的多行控件。</span><span class="sxs-lookup"><span data-stu-id="63767-213">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="63767-214">此示例使用 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 和 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 属性使 "多行文本框" 控件对创建文本文档有用。</span><span class="sxs-lookup"><span data-stu-id="63767-214">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="textBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="63767-215">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="63767-215">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="63767-216">引发 <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-216">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-217">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="63767-217">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="63767-218">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="63767-218">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="63767-219"><xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="63767-219">The <xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="63767-220">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="63767-220">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63767-221">当 <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="63767-221">When overriding <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="63767-222">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="63767-222">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="63767-223">引发 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-223">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-224">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="63767-224">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="63767-225">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="63767-225">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="63767-226"><xref:System.Windows.Forms.TextBox.OnFontChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="63767-226">The <xref:System.Windows.Forms.TextBox.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="63767-227">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="63767-227">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63767-228">当 <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="63767-228">When overriding <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="textBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="63767-229">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="63767-229">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="63767-230">引发 <see cref="E:System.Windows.Forms.Control.GotFocus" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-230">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-231">当用户在控件中选择文本时 <xref:System.Windows.Forms.TextBox> ，控件将保存选定内容。</span><span class="sxs-lookup"><span data-stu-id="63767-231">When the user selects text in a <xref:System.Windows.Forms.TextBox> control, the control saves the selection.</span></span> <span data-ttu-id="63767-232">当 <xref:System.Windows.Forms.TextBox> 控件获得焦点时，所选内容与失去焦点时相同 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-232">When a <xref:System.Windows.Forms.TextBox> control gets focus, the selection is the same as when the <xref:System.Windows.Forms.TextBox> loses focus.</span></span> <span data-ttu-id="63767-233">当 <xref:System.Windows.Forms.TextBox> 首次获得焦点时，将选择整个文本。</span><span class="sxs-lookup"><span data-stu-id="63767-233">When the <xref:System.Windows.Forms.TextBox> gets focus for the first time, the entire text is selected.</span></span>  
  
 <span data-ttu-id="63767-234">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="63767-234">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="63767-235">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="63767-235">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="63767-236"><xref:System.Windows.Forms.TextBox.OnGotFocus%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="63767-236">The <xref:System.Windows.Forms.TextBox.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="63767-237">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="63767-237">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63767-238">当 <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="63767-238">When overriding <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="63767-239">事件数据。</span><span class="sxs-lookup"><span data-stu-id="63767-239">The event data.</span></span></param>
        <summary><span data-ttu-id="63767-240">引发 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-240">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="63767-241">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="63767-241">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="63767-242">引发 <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-242">Raises the <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-243">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="63767-243">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="63767-244">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="63767-244">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="63767-245"><xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="63767-245">The <xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="63767-246">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="63767-246">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63767-247">当 <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="63767-247">When overriding <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="textBox.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBox.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBox.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="63767-248">包含事件数据的对象。</span><span class="sxs-lookup"><span data-stu-id="63767-248">An object that contains the event data.</span></span></param>
        <summary><span data-ttu-id="63767-249">引发 <see cref="E:System.Windows.Forms.Control.MouseUp" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-249">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextAlignChanged : EventArgs -&gt; unit&#xA;override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="textBox.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="63767-250">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="63767-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="63767-251">引发 <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="63767-251">Raises the <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-252">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="63767-252">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="63767-253">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="63767-253">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="63767-254"><xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="63767-254">The <xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="63767-255">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="63767-255">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="63767-256">在派生类中重写 <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="63767-256">When overriding <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.TextBox.TextAlignChanged" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.Windows.Forms.TextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue('\0')]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue('\0')&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-257">获取或设置字符，该字符用于屏蔽单行 <see cref="T:System.Windows.Forms.TextBox" /> 控件中的密码字符。</span><span class="sxs-lookup"><span data-stu-id="63767-257">Gets or sets the character used to mask characters of a password in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="63767-258">用于屏蔽在单行 <see cref="T:System.Windows.Forms.TextBox" /> 控件中输入的字符的字符。</span><span class="sxs-lookup"><span data-stu-id="63767-258">The character used to mask characters entered in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span> <span data-ttu-id="63767-259">如果你不希望控件在键入时屏蔽字符，请将此属性的值设置为 "0" (U + 0000) 。</span><span class="sxs-lookup"><span data-stu-id="63767-259">Set the value of this property to '0' (U+0000) if you do not want the control to mask characters as they are typed.</span></span> <span data-ttu-id="63767-260">默认值为 "0" (U + 0000) 。</span><span class="sxs-lookup"><span data-stu-id="63767-260">The default value is '0' (U+0000).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-261"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>属性优先于 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="63767-261">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="63767-262">每当 <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> 设置为时 `true` ，将使用默认的系统密码字符并忽略任何由设置的字符 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-262">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
 <span data-ttu-id="63767-263">如果 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 设置了属性，则无法执行使用键盘的控件中的 "剪切" 和 "复制" 操作。</span><span class="sxs-lookup"><span data-stu-id="63767-263">When the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property is set, cut and copy actions in the control using the keyboard cannot be performed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="63767-264">如果 <xref:System.Windows.Forms.TextBox> 处于密码模式，因为 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 、 <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> 或 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 为，则 `true` <xref:System.Windows.Forms.TextBox> 处于受限模式。</span><span class="sxs-lookup"><span data-stu-id="63767-264">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="63767-265">在此模式下，将 <xref:System.Windows.Forms.ImeMode> 禁用，但会缓存当前的， <xref:System.Windows.Forms.ImeMode> 以便在永远不受限制的情况下还原 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-265">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="63767-266">切换 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 是常见方案。</span><span class="sxs-lookup"><span data-stu-id="63767-266">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="63767-267"><xref:System.Windows.Forms.ImeMode>当控件处于受限模式时，为隐藏。</span><span class="sxs-lookup"><span data-stu-id="63767-267">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="63767-268">从设计器的角度来看， <xref:System.Windows.Forms.ImeMode> 显示的值是实际值。</span><span class="sxs-lookup"><span data-stu-id="63767-268">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-269">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 用于接受密码的控件。</span><span class="sxs-lookup"><span data-stu-id="63767-269">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="63767-270">此示例使用 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 属性将键入的所有字符更改为小写，并使用 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 属性将密码长度限制为8个字符。</span><span class="sxs-lookup"><span data-stu-id="63767-270">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="63767-271">此示例还使用 <xref:System.Windows.Forms.TextBox.TextAlign%2A> 属性使密码在控件中居中 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-271">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Paste(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Paste : string -&gt; unit" Usage="textBox.Paste text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="63767-272">要替换的文本。</span><span class="sxs-lookup"><span data-stu-id="63767-272">The text to replace.</span></span></param>
        <summary><span data-ttu-id="63767-273">将选定文本设置为指定文本，但不清除撤消缓冲区。</span><span class="sxs-lookup"><span data-stu-id="63767-273">Sets the selected text to the specified text without clearing the undo buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-274">与设置不同 <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A> ，不 <xref:System.Windows.Forms.TextBox.Paste%2A> 会影响剪贴板。</span><span class="sxs-lookup"><span data-stu-id="63767-274">Unlike setting <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>, <xref:System.Windows.Forms.TextBox.Paste%2A> does not affect the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaceholderText">
      <MemberSignature Language="C#" Value="public virtual string PlaceholderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PlaceholderText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.PlaceholderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PlaceholderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PlaceholderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlaceholderText : string with get, set" Usage="System.Windows.Forms.TextBox.PlaceholderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-275">获取或设置当控件没有文本且不具有焦点时要显示的文本。</span><span class="sxs-lookup"><span data-stu-id="63767-275">Gets or sets the text that is displayed when the control has no text and does not have the focus.</span></span></summary>
        <value><span data-ttu-id="63767-276">当控件没有文本并且没有焦点时所显示的文本。</span><span class="sxs-lookup"><span data-stu-id="63767-276">The text that is displayed when the control has no text and does not have the focus.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="textBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="63767-277">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span><span class="sxs-lookup"><span data-stu-id="63767-277">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="63767-278"><see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的快捷键。</span><span class="sxs-lookup"><span data-stu-id="63767-278">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="63767-279">处理命令键。</span><span class="sxs-lookup"><span data-stu-id="63767-279">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="63767-280">如果命令键已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-280"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-281">4.6.1 中的新增项。</span><span class="sxs-lookup"><span data-stu-id="63767-281">New in 4.6.1.</span></span> <span data-ttu-id="63767-282">在以前的版本中， <xref:System.Windows.Forms.TextBox> 当 <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> 和 <xref:System.Windows.Forms.TextBox.Multiline%2A> 属性都设置为时，中的 Ctrl 键无法选择所有文本 `true.` 。</span><span class="sxs-lookup"><span data-stu-id="63767-282">In previous versions, the  Ctrl-A shortcut key in a <xref:System.Windows.Forms.TextBox> failed to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties were both set to `true.`.</span></span> <span data-ttu-id="63767-283">当 <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> 和属性都设置为时，此方法将启用 Ctrl 键以选择所有文本 <xref:System.Windows.Forms.TextBox.Multiline%2A>`true.`</span><span class="sxs-lookup"><span data-stu-id="63767-283">This method enables the Ctrl-A shortcut key to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties are both set to `true.`</span></span>  
  
 <span data-ttu-id="63767-284">面向 .NET Framework 版本4.0 到4.6 的应用程序可以通过将以下内容添加到 app.config 文件的部分来利用此方法 `<runtime>` ：</span><span class="sxs-lookup"><span data-stu-id="63767-284">Applications targeting .NET Framework versions 4.0 through 4.6 can take advantage of this method by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />  
```  
  
 <span data-ttu-id="63767-285">面向 .NET Framework 版本4.6.1 或更高版本的应用程序可以通过将以下内容添加到 app.config 文件的部分来选择退出此行为 `<runtime>` ：</span><span class="sxs-lookup"><span data-stu-id="63767-285">Applications targeting .NET Framework versions 4.6.1 or newer can opt out of this behavior by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=true" />  
```  
  
> [!NOTE]
>  <span data-ttu-id="63767-286">如果 app.config 文件已经包含一个 `AppContextSwitchOverrides` 密钥，请将新的密钥值合并到现有的密钥中。</span><span class="sxs-lookup"><span data-stu-id="63767-286">If the app.config file already contains an `AppContextSwitchOverrides` key, merge the new key value into the existing key.</span></span> <span data-ttu-id="63767-287">例如，`<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />`。</span><span class="sxs-lookup"><span data-stu-id="63767-287">For example, `<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.TextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-288">获取或设置哪些滚动条应出现在多行 <see cref="T:System.Windows.Forms.TextBox" /> 控件中。</span><span class="sxs-lookup"><span data-stu-id="63767-288">Gets or sets which scroll bars should appear in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="63767-289"><see cref="T:System.Windows.Forms.ScrollBars" /> 枚举值之一，它指示多行 <see cref="T:System.Windows.Forms.TextBox" /> 控件显示时是不带滚动条、带有水平滚动条、带有垂直滚动条还是同时带有这两种滚动条。</span><span class="sxs-lookup"><span data-stu-id="63767-289">One of the <see cref="T:System.Windows.Forms.ScrollBars" /> enumeration values that indicates whether a multiline <see cref="T:System.Windows.Forms.TextBox" /> control appears with no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both.</span></span> <span data-ttu-id="63767-290">默认值为 <see langword="ScrollBars.None" />。</span><span class="sxs-lookup"><span data-stu-id="63767-290">The default is <see langword="ScrollBars.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-291">如果属性设置为，则不会显示水平滚动条 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> `true` ，而与属性的值无关 <xref:System.Windows.Forms.TextBox.ScrollBars%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-291">Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, regardless of the value of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-292">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 具有垂直滚动条的多行控件。</span><span class="sxs-lookup"><span data-stu-id="63767-292">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="63767-293">此示例还使用 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> 、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> 和属性将 <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> 多行 <xref:System.Windows.Forms.TextBox> 控件用于创建文本文档。</span><span class="sxs-lookup"><span data-stu-id="63767-293">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline <xref:System.Windows.Forms.TextBox> control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.ScrollBars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="63767-294">分配给该属性的值不在该枚举的有效值范围内。</span><span class="sxs-lookup"><span data-stu-id="63767-294">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public override int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-295">获取或设置在文本框可编辑部分中选定的字符数。</span><span class="sxs-lookup"><span data-stu-id="63767-295">Gets or sets the number of characters selected in the editable portion of the text box.</span></span></summary>
        <value><span data-ttu-id="63767-296">文本框中选定的字符数。</span><span class="sxs-lookup"><span data-stu-id="63767-296">The number of characters selected in the text box.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-297">获取或设置与此控件关联的文本。</span><span class="sxs-lookup"><span data-stu-id="63767-297">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="63767-298">与该控件关联的文本。</span><span class="sxs-lookup"><span data-stu-id="63767-298">The text associated with this control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.TextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-299">获取或设置 <see cref="T:System.Windows.Forms.TextBox" /> 控件中文本的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="63767-299">Gets or sets how text is aligned in a <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="63767-300"><see cref="T:System.Windows.Forms.HorizontalAlignment" /> 枚举值之一，指定控件中文本的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="63767-300">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies how text is aligned in the control.</span></span> <span data-ttu-id="63767-301">默认值为 <see langword="HorizontalAlignment.Left" />。</span><span class="sxs-lookup"><span data-stu-id="63767-301">The default is <see langword="HorizontalAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-302">您可以使用此属性来对齐中的文本 <xref:System.Windows.Forms.TextBox> ，以匹配窗体上的文本布局。</span><span class="sxs-lookup"><span data-stu-id="63767-302">You can use this property to align the text within a <xref:System.Windows.Forms.TextBox> to match the layout of text on your form.</span></span> <span data-ttu-id="63767-303">例如，如果控件都位于窗体的右侧，则可以将 <xref:System.Windows.Forms.Label.TextAlign%2A> 属性设置为 `HorizontalAlignment.Right` ，并且文本将与控件的右侧对齐，而不是与默认的左对齐方式对齐。</span><span class="sxs-lookup"><span data-stu-id="63767-303">For example, if your controls are all located on the right side of the form, you can set the <xref:System.Windows.Forms.Label.TextAlign%2A> property to `HorizontalAlignment.Right`, and the text will be aligned with the right side of the control instead of the default left alignment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-304">下面的代码示例创建一个 <xref:System.Windows.Forms.TextBox> 用于接受密码的控件。</span><span class="sxs-lookup"><span data-stu-id="63767-304">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="63767-305">此示例使用 <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> 属性将键入的所有字符更改为小写，并使用 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 属性将密码长度限制为8个字符。</span><span class="sxs-lookup"><span data-stu-id="63767-305">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="63767-306">此示例还使用 <xref:System.Windows.Forms.TextBox.TextAlign%2A> 属性使密码在控件中居中 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-306">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="63767-307">分配给该属性的值不在该枚举的有效值范围内。</span><span class="sxs-lookup"><span data-stu-id="63767-307">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBox.TextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextAlignChanged;" />
      <MemberSignature Language="F#" Value="member this.TextAlignChanged : EventHandler " Usage="member this.TextAlignChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-308">在 <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> 属性的值更改后发生。</span><span class="sxs-lookup"><span data-stu-id="63767-308">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-309">有关如何处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="63767-309">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63767-310">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="63767-310">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63767-311">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.TextBox.TextAlignChanged> 。</span><span class="sxs-lookup"><span data-stu-id="63767-311">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span> <span data-ttu-id="63767-312">此报告可帮助您查明事件发生的时间，并可帮助您进行调试。</span><span class="sxs-lookup"><span data-stu-id="63767-312">This report helps you find out when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="63767-313">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-313">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="63767-314">若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.TextBox> `TextBox1` 。</span><span class="sxs-lookup"><span data-stu-id="63767-314">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="63767-315">然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.TextBox.TextAlignChanged> 。</span><span class="sxs-lookup"><span data-stu-id="63767-315">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#249](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#249)]
 [!code-vb[System.Windows.Forms.EventExamples#249](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#249)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemPasswordChar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemPasswordChar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSystemPasswordChar : bool with get, set" Usage="System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63767-316">获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.TextBox" /> 控件中的文本是否作为默认密码字符显示。</span><span class="sxs-lookup"><span data-stu-id="63767-316">Gets or sets a value indicating whether the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character.</span></span></summary>
        <value><span data-ttu-id="63767-317">如果 <see cref="T:System.Windows.Forms.TextBox" /> 控件中的文本应该以默认的密码字符显示，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63767-317"><see langword="true" /> if the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63767-318"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>属性优先于 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="63767-318">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="63767-319">每当 <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> 设置为时 `true` ，将使用默认的系统密码字符并忽略任何由设置的字符 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 。</span><span class="sxs-lookup"><span data-stu-id="63767-319">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="63767-320">如果 <xref:System.Windows.Forms.TextBox> 处于密码模式，因为 <xref:System.Windows.Forms.TextBox.PasswordChar%2A> 、 <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> 或 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 为，则 `true` <xref:System.Windows.Forms.TextBox> 处于受限模式。</span><span class="sxs-lookup"><span data-stu-id="63767-320">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="63767-321">在此模式下，将 <xref:System.Windows.Forms.ImeMode> 禁用，但会缓存当前的， <xref:System.Windows.Forms.ImeMode> 以便在永远不受限制的情况下还原 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="63767-321">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="63767-322">切换 <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> 是常见方案。</span><span class="sxs-lookup"><span data-stu-id="63767-322">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="63767-323"><xref:System.Windows.Forms.ImeMode>当控件处于受限模式时，为隐藏。</span><span class="sxs-lookup"><span data-stu-id="63767-323">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="63767-324">从设计器的角度来看， <xref:System.Windows.Forms.ImeMode> 显示的值是实际值。</span><span class="sxs-lookup"><span data-stu-id="63767-324">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="textBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="63767-325">一个 Windows 消息对象。</span><span class="sxs-lookup"><span data-stu-id="63767-325">A Windows Message object.</span></span></param>
        <summary><span data-ttu-id="63767-326">处理 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="63767-326">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
