<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e55fb45913bff251106f2b106d9d171146ec3109" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83969336" /></Metadata><TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f01b8-101">为 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="f01b8-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01b8-102">一个 <xref:System.Windows.Forms.KeyEventArgs>，它指定用户按下的键以及是否同时按下任何修改键（CTRL、ALT 和 SHIFT），并随每个 <xref:System.Windows.Forms.Control.KeyDown> 或 <xref:System.Windows.Forms.Control.KeyUp> 事件传递。</span><span class="sxs-lookup"><span data-stu-id="f01b8-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="f01b8-103">当用户按任意键时，将发生 <xref:System.Windows.Forms.Control.KeyDown> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="f01b8-104">当用户释放密钥时发生 <xref:System.Windows.Forms.Control.KeyUp> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="f01b8-105">如果键被按住，但在用户释放密钥时只会生成一个 <xref:System.Windows.Forms.Control.KeyUp> 事件，则在每次重复键时，将发生重复的 <xref:System.Windows.Forms.Control.KeyDown> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="f01b8-106">按下某个键时，也会发生 <xref:System.Windows.Forms.Control.KeyPress> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="f01b8-107"><xref:System.Windows.Forms.KeyPressEventArgs> 随每个 <xref:System.Windows.Forms.Control.KeyPress> 事件传递，并指定作为每个按键的结果而构成的字符。</span><span class="sxs-lookup"><span data-stu-id="f01b8-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="f01b8-108">有关事件模型的信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f01b8-108">For information about the event model, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01b8-109">下面的代码示例演示如何检测按键的状态。</span><span class="sxs-lookup"><span data-stu-id="f01b8-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="f01b8-110">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="f01b8-110">**Example 1**</span></span>  
  
 <span data-ttu-id="f01b8-111">下面的代码示例演示如何将 <xref:System.Windows.Forms.Control.KeyDown> 事件与 <xref:System.Windows.Forms.Help> 类结合使用来向应用程序的用户显示弹出式样式帮助。</span><span class="sxs-lookup"><span data-stu-id="f01b8-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="f01b8-112">该示例使用传递到事件处理程序方法的 <xref:System.Windows.Forms.KeyEventArgs> 属性来筛选按 F1 键和修改键的所有变体。</span><span class="sxs-lookup"><span data-stu-id="f01b8-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="f01b8-113">当用户按下包含任何键盘修饰符的 F1 的任何变体时，<xref:System.Windows.Forms.Help> 类将在控件附近显示一个弹出窗口，该窗口与 <xref:System.Windows.Forms.ToolTip>类似。</span><span class="sxs-lookup"><span data-stu-id="f01b8-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="f01b8-114">如果用户按 ALT + F2，将显示不同的帮助弹出窗口，其中显示了其他信息。</span><span class="sxs-lookup"><span data-stu-id="f01b8-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="f01b8-115">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="f01b8-115">**Example 2**</span></span>  
  
 <span data-ttu-id="f01b8-116">下面的示例确定用户是否按下了 ALT + E，如果鼠标指针位于 <xref:System.Windows.Forms.TreeNode>上，则允许用户编辑 <xref:System.Windows.Forms.TreeNode>。</span><span class="sxs-lookup"><span data-stu-id="f01b8-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="f01b8-117">**示例 3**</span><span class="sxs-lookup"><span data-stu-id="f01b8-117">**Example 3**</span></span>  
  
 <span data-ttu-id="f01b8-118">下面的示例确定用户是否按了非数值键，如果是，则使用 <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> 属性取消 <xref:System.Windows.Forms.Control.KeyPress> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyEventArgs : System.Windows.Forms.Keys -&gt; System.Windows.Forms.KeyEventArgs" Usage="new System.Windows.Forms.KeyEventArgs keyData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="f01b8-119">一个 <see cref="T:System.Windows.Forms.Keys" />，表示按下的键以及任何修饰符标志（指示同时按下的 Ctrl、Shift 和 Alt 键）。</span><span class="sxs-lookup"><span data-stu-id="f01b8-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span></span> <span data-ttu-id="f01b8-120">可通过将按位“或”(|) 运算符应用于 <see cref="T:System.Windows.Forms.Keys" /> 枚举中的常数，来获取可能的值。</span><span class="sxs-lookup"><span data-stu-id="f01b8-120">Possible values are obtained by applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="f01b8-121">初始化 <see cref="T:System.Windows.Forms.KeyEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f01b8-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Alt : bool" Usage="System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-122">获取一个值，该值指示是否曾按下 Alt 键。</span><span class="sxs-lookup"><span data-stu-id="f01b8-122">Gets a value indicating whether the ALT key was pressed.</span></span></summary>
        <value><span data-ttu-id="f01b8-123">如果曾按下 Alt 键，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01b8-123"><see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01b8-124">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="f01b8-124">**Example 1**</span></span>  
  
 <span data-ttu-id="f01b8-125">下面的代码示例演示如何将 <xref:System.Windows.Forms.Control.KeyDown> 事件与 <xref:System.Windows.Forms.Help> 类结合使用来向应用程序的用户显示弹出式样式帮助。</span><span class="sxs-lookup"><span data-stu-id="f01b8-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="f01b8-126">该示例使用传递到事件处理程序方法的 <xref:System.Windows.Forms.KeyEventArgs> 属性来筛选按 F1 键和修改键的所有变体。</span><span class="sxs-lookup"><span data-stu-id="f01b8-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="f01b8-127">当用户按下包含任何键盘修饰符的 F1 的任何变体时，<xref:System.Windows.Forms.Help> 类将在控件附近显示一个弹出窗口，该窗口与 <xref:System.Windows.Forms.ToolTip>类似。</span><span class="sxs-lookup"><span data-stu-id="f01b8-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="f01b8-128">如果用户按 ALT + F2，将显示不同的帮助弹出窗口，其中显示了其他信息。</span><span class="sxs-lookup"><span data-stu-id="f01b8-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="f01b8-129">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="f01b8-129">**Example 2**</span></span>  
  
 <span data-ttu-id="f01b8-130">下面的示例确定用户是否按下了 ALT + E，如果鼠标指针位于 <xref:System.Windows.Forms.TreeNode>上，则允许用户编辑 <xref:System.Windows.Forms.TreeNode>。</span><span class="sxs-lookup"><span data-stu-id="f01b8-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : bool" Usage="System.Windows.Forms.KeyEventArgs.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-131">获取一个值，该值指示是否曾按下 Ctrl 键。</span><span class="sxs-lookup"><span data-stu-id="f01b8-131">Gets a value indicating whether the CTRL key was pressed.</span></span></summary>
        <value><span data-ttu-id="f01b8-132">如果曾按下 Ctrl 键，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01b8-132"><see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01b8-133">下面的代码示例演示如何将 <xref:System.Windows.Forms.Control.KeyDown> 事件与 <xref:System.Windows.Forms.Help> 类结合使用来向应用程序的用户显示弹出式样式帮助。</span><span class="sxs-lookup"><span data-stu-id="f01b8-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="f01b8-134">该示例使用传递到事件处理程序方法的 <xref:System.Windows.Forms.KeyEventArgs> 属性来筛选按 F1 键和修改键的所有变体。</span><span class="sxs-lookup"><span data-stu-id="f01b8-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="f01b8-135">当用户按下包含任何键盘修饰符的 F1 的任何变体时，<xref:System.Windows.Forms.Help> 类将在控件附近显示一个弹出窗口，该窗口与 <xref:System.Windows.Forms.ToolTip>类似。</span><span class="sxs-lookup"><span data-stu-id="f01b8-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="f01b8-136">如果用户按 ALT + F2，将显示不同的帮助弹出窗口，其中显示了其他信息。</span><span class="sxs-lookup"><span data-stu-id="f01b8-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-137">获取或设置一个值，该值指示是否处理过此事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-137">Gets or sets a value indicating whether the event was handled.</span></span></summary>
        <value><span data-ttu-id="f01b8-138"><see langword="true" /> 表示跳过控件的默认处理；<see langword="false" /> 表示还将该事件传递给默认控件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f01b8-138"><see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01b8-139">Windows 窗体内的不同控件以不同的方式实现 <xref:System.Windows.Forms.KeyEventArgs.Handled%2A>。</span><span class="sxs-lookup"><span data-stu-id="f01b8-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="f01b8-140">对于 <xref:System.Windows.Forms.TextBox> 哪个子类本机 Win32 控件）的控件，将对其进行解释，意味着不应将键消息传递到基础本机控件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="f01b8-141">如果在 <xref:System.Windows.Forms.TextBox>上将 `Handled` 设置为 true，则该控件不会将键按 `events` 传递到基础 Win32 文本框控件，但它仍将显示用户键入的字符。</span><span class="sxs-lookup"><span data-stu-id="f01b8-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="f01b8-142">如果要阻止当前控件接收按键，请使用 <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f01b8-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01b8-143">下面的示例确定用户是否按了非数值键，如果是，则使用 <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> 属性取消 <xref:System.Windows.Forms.Control.KeyPress> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyCode : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-144">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的键盘代码。</span><span class="sxs-lookup"><span data-stu-id="f01b8-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="f01b8-145">作为事件的键代码的 <see cref="T:System.Windows.Forms.Keys" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f01b8-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01b8-146">下面的代码示例演示如何使用 <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> 属性来确定按下的键。</span><span class="sxs-lookup"><span data-stu-id="f01b8-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="f01b8-147">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="f01b8-147">**Example 1**</span></span>  
  
 <span data-ttu-id="f01b8-148">下面的代码示例演示如何将 <xref:System.Windows.Forms.Control.KeyDown> 事件与 <xref:System.Windows.Forms.Help> 类结合使用来向应用程序的用户显示弹出式样式帮助。</span><span class="sxs-lookup"><span data-stu-id="f01b8-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="f01b8-149">该示例使用传递到事件处理程序方法的 <xref:System.Windows.Forms.KeyEventArgs> 属性来筛选按 F1 键和修改键的所有变体。</span><span class="sxs-lookup"><span data-stu-id="f01b8-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="f01b8-150">当用户按下包含任何键盘修饰符的 F1 的任何变体时，<xref:System.Windows.Forms.Help> 类将在控件附近显示一个弹出窗口，该窗口与 <xref:System.Windows.Forms.ToolTip>类似。</span><span class="sxs-lookup"><span data-stu-id="f01b8-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="f01b8-151">如果用户按 ALT + F2，将显示不同的帮助弹出窗口，其中显示了其他信息。</span><span class="sxs-lookup"><span data-stu-id="f01b8-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="f01b8-152">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="f01b8-152">**Example 2**</span></span>  
  
 <span data-ttu-id="f01b8-153">下面的示例确定用户是否按下了 ALT + E，如果鼠标指针位于 <xref:System.Windows.Forms.TreeNode>上，则允许用户编辑 <xref:System.Windows.Forms.TreeNode>。</span><span class="sxs-lookup"><span data-stu-id="f01b8-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="f01b8-154">**示例 3**</span><span class="sxs-lookup"><span data-stu-id="f01b8-154">**Example 3**</span></span>  
  
 <span data-ttu-id="f01b8-155">下面的示例确定用户是否按了非数值键，如果是，则使用 <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> 属性取消 <xref:System.Windows.Forms.Control.KeyPress> 事件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-156">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的键数据。</span><span class="sxs-lookup"><span data-stu-id="f01b8-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="f01b8-157">一个 <see cref="T:System.Windows.Forms.Keys" />，表示按下的键的键代码以及修饰符标志（指示同时按下的 Ctrl、Shift 和 Alt 键的组合）。</span><span class="sxs-lookup"><span data-stu-id="f01b8-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01b8-158">您可以使用 <xref:System.Windows.Forms.Keys> 中的常量从 <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> 属性中提取信息。</span><span class="sxs-lookup"><span data-stu-id="f01b8-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="f01b8-159">使用按位 "与" 运算符比较 <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> 返回的数据与 <xref:System.Windows.Forms.Keys> 中的常量，以获取有关用户按下的键的信息。</span><span class="sxs-lookup"><span data-stu-id="f01b8-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="f01b8-160">若要确定是否已按下某个特定修改键，请使用 <xref:System.Windows.Forms.KeyEventArgs.Control%2A>、<xref:System.Windows.Forms.KeyEventArgs.Shift%2A>和 <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f01b8-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01b8-161">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="f01b8-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f01b8-162">在此示例中，事件处理程序报告 <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> 事件的发生。</span><span class="sxs-lookup"><span data-stu-id="f01b8-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="f01b8-163">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="f01b8-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f01b8-164">若要报告多个事件或频繁发生的事件，请考虑将 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 替换为 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 或将消息附加到多行 <xref:System.Windows.Forms.TextBox>中。</span><span class="sxs-lookup"><span data-stu-id="f01b8-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f01b8-165">若要运行示例代码，请将其粘贴到一个项目中，该项目包含继承自 <xref:System.Windows.Forms.Control>的类型的实例，如 <xref:System.Windows.Forms.Button> 或 <xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="f01b8-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="f01b8-166">然后，将该实例命名为 `Control1` 并确保事件处理程序与 <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> 事件关联。</span><span class="sxs-lookup"><span data-stu-id="f01b8-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValue : int" Usage="System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-167">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的键盘值。</span><span class="sxs-lookup"><span data-stu-id="f01b8-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="f01b8-168"><see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> 属性的整数表示形式。</span><span class="sxs-lookup"><span data-stu-id="f01b8-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01b8-169">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="f01b8-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f01b8-170">在此示例中，事件处理程序报告 <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> 事件的发生。</span><span class="sxs-lookup"><span data-stu-id="f01b8-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="f01b8-171">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="f01b8-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f01b8-172">若要报告多个事件或频繁发生的事件，请考虑将 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 替换为 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 或将消息附加到多行 <xref:System.Windows.Forms.TextBox>中。</span><span class="sxs-lookup"><span data-stu-id="f01b8-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f01b8-173">若要运行示例代码，请将其粘贴到一个项目中，该项目包含继承自 <xref:System.Windows.Forms.Control>的类型的实例，如 <xref:System.Windows.Forms.Button> 或 <xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="f01b8-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="f01b8-174">然后，将该实例命名为 `Control1` 并确保事件处理程序与 <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> 事件关联。</span><span class="sxs-lookup"><span data-stu-id="f01b8-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-175">获取 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 或 <see cref="E:System.Windows.Forms.Control.KeyUp" /> 事件的修饰符标志。</span><span class="sxs-lookup"><span data-stu-id="f01b8-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span> <span data-ttu-id="f01b8-176">这些标志指示按下的 Ctrl、Shift 和 Alt 键的组合。</span><span class="sxs-lookup"><span data-stu-id="f01b8-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span></span></summary>
        <value><span data-ttu-id="f01b8-177"><see cref="T:System.Windows.Forms.Keys" /> 值，该值表示一个或多个修饰符标志。</span><span class="sxs-lookup"><span data-stu-id="f01b8-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01b8-178">若要确定是否已按下某个特定修改键，请使用 <xref:System.Windows.Forms.KeyEventArgs.Control%2A>、<xref:System.Windows.Forms.KeyEventArgs.Shift%2A>和 <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f01b8-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="f01b8-179">修饰符标志可以与按位 "或" 组合。</span><span class="sxs-lookup"><span data-stu-id="f01b8-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01b8-180">下面的代码示例演示如何使用 <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> 属性来确定按下了哪个修改键和主键。</span><span class="sxs-lookup"><span data-stu-id="f01b8-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Shift : bool" Usage="System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-181">获取一个值，该值指示是否曾按下 Shift 键。</span><span class="sxs-lookup"><span data-stu-id="f01b8-181">Gets a value indicating whether the SHIFT key was pressed.</span></span></summary>
        <value><span data-ttu-id="f01b8-182">如果曾按下 Shift 键，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01b8-182"><see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f01b8-183">下面的示例确定用户是否按下了 Shift 键和 F1 键，如果是，则显示帮助。</span><span class="sxs-lookup"><span data-stu-id="f01b8-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressKeyPress : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f01b8-184">获取或设置一个值，该值指示键事件是否应传递到基础控件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span></span></summary>
        <value><span data-ttu-id="f01b8-185">如果键事件不应该发送到该控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f01b8-185"><see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f01b8-186">可以在事件处理程序（如 <xref:System.Windows.Forms.Control.KeyDown>）中将 `true` 分配给此属性，以防止用户输入。</span><span class="sxs-lookup"><span data-stu-id="f01b8-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="f01b8-187">将 <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> 设置为 `true` 还会将 <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f01b8-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f01b8-188">下面的代码示例阻止数字击键到达名为 `textBox1`的 <xref:System.Windows.Forms.TextBox> 控件。</span><span class="sxs-lookup"><span data-stu-id="f01b8-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>
