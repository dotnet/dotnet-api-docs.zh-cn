<Type Name="TreeNodeCollection" FullName="System.Windows.Forms.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d96ada17e80f613111ac10afca8ee82a52076b4" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89754981" /></Metadata><TypeSignature Language="C#" Value="public class TreeNodeCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNodeCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.TreeNode" /> 对象集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 、 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 和 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 方法可以在集合中添加和移除单个树节点。  
  
> [!NOTE]
>  不支持枚举集合和删除节点。  
  
 你还可以使用 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 方法来添加或删除集合中的所有树节点。  
  
 类不能从 <xref:System.Windows.Forms.TreeNodeCollection> 类继承。  
  
   
  
## Examples  
 下面的代码示例在控件中显示客户信息 <xref:System.Windows.Forms.TreeView> 。 根树节点显示客户名称，子树节点显示分配给每个客户的订单号。 在此示例中，1000客户显示每个订单15个订单。 <xref:System.Windows.Forms.TreeView>使用和方法可取消重画， <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> 并在 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> <xref:System.Windows.Forms.Cursor> <xref:System.Windows.Forms.TreeView> 创建和绘制对象时显示等待 <xref:System.Windows.Forms.TreeNode> 。 此示例要求您有一个 `Customer` 可以保存对象集合的对象 `Order` 。 它还要求您已在上创建了控件的实例 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNode" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在集合中添加新的树节点。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Windows.Forms.TreeNode" /> 显示的标签文本。</param>
        <summary>将具有指定标签文本的新树节点添加到当前树节点集合的末尾。</summary>
        <returns>表示添加到集合中的树节点的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.TreeNode> 先前添加的，请使用 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例在控件中显示客户信息 <xref:System.Windows.Forms.TreeView> 。 根树节点显示客户名称，子树节点显示分配给每个客户的订单号。 在此示例中，1000客户显示每个订单15个订单。 <xref:System.Windows.Forms.TreeView>使用和方法可取消重画， <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> 并在 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> <xref:System.Windows.Forms.Cursor> <xref:System.Windows.Forms.TreeView> 创建和绘制对象时显示等待 <xref:System.Windows.Forms.TreeNode> 。 此示例要求您有一个 `Customer` 可以保存对象集合的对象 `Order` 。 它还要求您已在上创建了控件的实例 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (node As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.TreeNode -&gt; int&#xA;override this.Add : System.Windows.Forms.TreeNode -&gt; int" Usage="treeNodeCollection.Add node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">要添加到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>将先前创建的树节点添加到树节点集合的末尾。</summary>
        <returns>添加到树节点集合中的 <see cref="T:System.Windows.Forms.TreeNode" /> 的从零开始的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 方法允许您将以前创建 <xref:System.Windows.Forms.TreeNode> 的对象添加到树节点集合的末尾。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.TreeNode> 先前添加的，请使用 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 方法。  
  
> [!NOTE]
>  一 <xref:System.Windows.Forms.TreeNode> 次只能分配给一个 <xref:System.Windows.Forms.TreeView> 控件。 若要将树节点添加到新的树视图控件，必须先从另一个树视图中将其删除或克隆。  
  
   
  
## Examples  
 下面的代码示例在控件中显示客户信息 <xref:System.Windows.Forms.TreeView> 。 根树节点显示客户名称，子树节点显示分配给每个客户的订单号。 在此示例中，1000客户显示每个订单15个订单。 <xref:System.Windows.Forms.TreeView>使用和方法可取消重画， <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> 并在 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> <xref:System.Windows.Forms.Cursor> <xref:System.Windows.Forms.TreeView> 创建和绘制对象时显示等待 <xref:System.Windows.Forms.TreeNode> 。 此示例要求您有一个 `Customer` 可以保存对象集合的对象 `Order` 。 它还要求您已在上创建了控件的实例 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" /> 目前分配给了另一个 <see cref="T:System.Windows.Forms.TreeView" />。</exception>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <summary>创建具有指定键和文本的新树节点，并将其添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageIndex">要在树节点中显示的图像的索引。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 `imageIndex`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 树节点将添加到集合的末尾。 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageKey">要在树节点中显示的图像。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 树节点将添加到集合的末尾。 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 `imageKey`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer, selectedImageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageIndex, selectedImageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageIndex">要在树节点中显示的图像的索引。</param>
        <param name="selectedImageIndex">处于选定状态时要在树节点中显示的图像的索引。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其添加到集合中。</summary>
        <returns>已添加到集合中的树节点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 树节点将添加到集合的末尾。 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 `imageIndex`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 `selectedImageIndex`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.StateImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, string imageKey, string selectedImageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String, selectedImageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey, System::String ^ selectedImageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageKey, selectedImageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageKey" Type="System.String" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageKey">要在树节点中显示的图像的键。</param>
        <param name="selectedImageKey">节点处于选定状态时要显示的图像的键。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其添加到集合中。</summary>
        <returns>已添加到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 树节点将添加到集合的末尾。 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。  
  
 `imageKey`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 `selectedImageKey`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.StateImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.TreeNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (nodes As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ nodes);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.TreeNode[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.TreeNode[] -&gt; unit" Usage="treeNodeCollection.AddRange nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">表示要添加到集合中的树节点的 <see cref="T:System.Windows.Forms.TreeNode" /> 对象数组。</param>
        <summary>将先前创建的一组树节点添加到集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode>数组中包含的对象 `nodes` 将追加到集合的末尾。  
  
 可以使用方法将 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 一组以前创建的对象快速添加 <xref:System.Windows.Forms.TreeNode> 到集合，而不是使用方法手动将它们添加 <xref:System.Windows.Forms.TreeNode> 到集合中 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.TreeNode> 先前添加的，请使用 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Windows.Forms.TreeNodeCollection> 从复制 <xref:System.Windows.Forms.TreeView> 到临时 <xref:System.Array> ，然后使用方法将数组的内容添加到另一个 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。 <xref:System.Windows.Forms.TreeNodeCollection> <xref:System.Windows.Forms.TreeView> 使用方法清除源中的 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 。 此示例要求您具有两个 <xref:System.Windows.Forms.TreeView> 控件，一个控件具有对象的集合 <xref:System.Windows.Forms.TreeNode> 。  
  
 [!code-cpp[TreeNodeCollection_Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CPP/treenodecollection_clear.cpp#1)]
 [!code-csharp[TreeNodeCollection_Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CS/treenodecollection_clear.cs#1)]
 [!code-vb[TreeNodeCollection_Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Clear/VB/treenodecollection_clear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="nodes" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="nodes" /> 是另一 <see cref="T:System.Windows.Forms.TreeView" /> 的子级。</exception>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从集合中删除所有树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此方法从树视图中清除整个树节点集合。  
  
 若要从集合中移除单个树节点，请使用 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 方法。  
  
 若要将新 <xref:System.Windows.Forms.TreeNode> 对象添加到集合，请 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 使用、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例将 <xref:System.Windows.Forms.TreeNodeCollection> 从复制 <xref:System.Windows.Forms.TreeView> 到临时 <xref:System.Array> ，然后使用方法将数组的内容添加到另一个 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。 <xref:System.Windows.Forms.TreeNodeCollection> <xref:System.Windows.Forms.TreeView> 使用方法清除源中的 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 。 此示例要求您具有两个 <xref:System.Windows.Forms.TreeView> 控件，一个控件具有对象的集合 <xref:System.Windows.Forms.TreeNode> 。  
  
 [!code-cpp[TreeNodeCollection_Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CPP/treenodecollection_clear.cpp#1)]
 [!code-csharp[TreeNodeCollection_Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CS/treenodecollection_clear.cs#1)]
 [!code-vb[TreeNodeCollection_Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Clear/VB/treenodecollection_clear.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (node As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">要在集合中查找的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>确定指定的树节点是否为集合的成员。</summary>
        <returns>如果 <see cref="T:System.Windows.Forms.TreeNode" /> 是集合的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使你可以在 <xref:System.Windows.Forms.TreeNode> 尝试在上执行操作之前确定是否为集合的成员 <xref:System.Windows.Forms.TreeNode> 。 您可以使用此方法确认已 <xref:System.Windows.Forms.TreeNode> 添加到或的仍是集合的成员。  
  
 此方法所用的时间与节点集合的大小成正比，因此，您可能希望避免将它与大型集合一起使用。  
  
 此方法仅检查引用相等性。 不能使用它来确定集合中是否有等效但不同的节点。  
  
> [!NOTE]
>  引用相等性要求的一个含义是，您不能 <xref:System.Windows.Forms.TreeNode> 通过重写类的方法为派生类型自定义此方法的行为 <xref:System.Object.Equals%2A> <xref:System.Windows.Forms.TreeNode> 。  
  
   
  
## Examples  
 下面的代码示例确定指定的 <xref:System.Windows.Forms.TreeNode> 是否在中 <xref:System.Windows.Forms.TreeNodeCollection> ，然后枚举该集合。 此示例要求具有具有 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> 包含 <xref:System.Windows.Forms.TreeNode> 名为的的 `myTreeNode2` 。  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#1)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#1)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="treeNodeCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的 <see cref="T:System.Windows.Forms.TreeNode" /> 的名称。</param>
        <summary>确定集合是否包含具有指定键的树节点。</summary>
        <returns>如果集合包含具有指定键的 <see cref="T:System.Windows.Forms.TreeNode" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 参数为 `null` 或空字符串，则属性将 <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> 返回 `false` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="treeNodeCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">目标数组。</param>
        <param name="index">目标数组中的索引，存储从此处开始。</param>
        <summary>将整个集合复制到现有数组中，从该数组内的指定位置开始复制。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示 <xref:System.Windows.Forms.TreeNode> 中对象的数目 <xref:System.Windows.Forms.TreeNodeCollection> ，将集合的内容复制到一个 <xref:System.Object> 数组，并在控件中显示树节点的列表 <xref:System.Windows.Forms.Label> 。 此示例要求 <xref:System.Windows.Forms.TreeView> 在中至少有一个 <xref:System.Windows.Forms.TreeNode> ，并在上安装一个 <xref:System.Windows.Forms.TreeNodeCollection> <xref:System.Windows.Forms.Label> 控件 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CPP/treenodecollection_count_copyto.cpp#1)]
 [!code-csharp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CS/treenodecollection_count_copyto.cs#1)]
 [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/VB/treenodecollection_count_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取集合中 <see cref="T:System.Windows.Forms.TreeNode" /> 对象的总数。</summary>
        <value>集合中的 <see cref="T:System.Windows.Forms.TreeNode" /> 对象的总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection.Count%2A>属性包含分配给集合的 <xref:System.Windows.Forms.TreeNode> 对象数。 您可以使用 <xref:System.Windows.Forms.TreeNodeCollection.Count%2A> 属性值作为循环的上限来循环访问集合。  
  
> [!NOTE]
>  因为集合的索引值是从零开始的索引，所以必须从循环变量中减去一个。 如果不考虑这一点，则会超出集合的上限并引发 <xref:System.IndexOutOfRangeException> 异常。  
  
   
  
## Examples  
 下面的代码示例显示 <xref:System.Windows.Forms.TreeNode> 中对象的数目 <xref:System.Windows.Forms.TreeNodeCollection> ，将集合的内容复制到一个 <xref:System.Object> 数组，并在控件中显示树节点的列表 <xref:System.Windows.Forms.Label> 。 此示例要求 <xref:System.Windows.Forms.TreeView> 在中至少有一个 <xref:System.Windows.Forms.TreeNode> ，并在上安装一个 <xref:System.Windows.Forms.TreeNodeCollection> <xref:System.Windows.Forms.Label> 控件 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CPP/treenodecollection_count_copyto.cpp#1)]
 [!code-csharp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CS/treenodecollection_count_copyto.cs#1)]
 [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/VB/treenodecollection_count_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As TreeNode()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.TreeNode[]" Usage="treeNodeCollection.Find (key, searchAllChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的树节点的名称。</param>
        <param name="searchAllChildren">如果搜索树节点的子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>查找具有指定键的树节点，可以选择搜索子节点。</summary>
        <returns>一个 <see cref="T:System.Windows.Forms.TreeNode" /> 对象的数组，这些对象的 <see cref="P:System.Windows.Forms.TreeNode.Name" /> 属性与指定的键匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 参数为 `null` 或空字符串，或者没有匹配项，则 <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> 属性返回空数组。`.`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">.NET 5.0 及更高版本：<paramref name="key" /> 为 <see langword="null" /> 或为空。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回可用于循环访问树节点集合的枚举数。</summary>
        <returns>表示树节点集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例确定指定的 <xref:System.Windows.Forms.TreeNode> 是否在中 <xref:System.Windows.Forms.TreeNodeCollection> ，然后枚举该集合。 此示例要求具有具有 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> 包含 <xref:System.Windows.Forms.TreeNode> 名为的的 `myTreeNode2` 。  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#1)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#1)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (node As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">要在集合中查找的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>返回集合中指定树节点的索引。</summary>
        <returns>树节点集合中项的从零开始的索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法所用的时间与节点集合的大小成正比，因此，您可能希望避免将它与大型集合一起使用。  
  
 此方法仅检查引用相等性。 不能使用它来检索集合中不同节点的索引。  
  
> [!NOTE]
>  引用相等性要求的一个含义是，您不能 <xref:System.Windows.Forms.TreeNode> 通过重写类的方法为派生类型自定义此方法的行为 <xref:System.Object.Equals%2A> <xref:System.Windows.Forms.TreeNode> 。  
  
   
  
## Examples  
 下面的代码示例确定指定的 <xref:System.Windows.Forms.TreeNode> 是否在中 <xref:System.Windows.Forms.TreeNodeCollection> ，然后枚举该集合。 此示例要求具有具有 <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> 包含 <xref:System.Windows.Forms.TreeNode> 名为的的 `myTreeNode2` 。  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#2)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#2)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="treeNodeCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要搜索的树节点的名称。</param>
        <summary>返回具有指定键的首个树节点的索引。</summary>
        <returns>如果找到具有指定键的首个树节点，则为该节点从零开始的索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Windows.Forms.TreeNodeCollection.IndexOfKey%2A> 连续调用，最后返回的索引将首先检查键匹配项，如果没有匹配项，则从集合的开头开始搜索。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 为 `null` 或空字符串，则 <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> 属性将返回-1。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将集合中的一项插入指定位置。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入节点的位置。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <summary>创建具有指定文本的树节点，并将其插入指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Windows.Forms.TreeView> 再次排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.TreeNode -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.TreeNode -&gt; unit" Usage="treeNodeCollection.Insert (index, node)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入树节点的索引位置。</param>
        <param name="node">要插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>在树节点集合中的指定位置插入现有树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=nameWithType> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并进行了相应的 <xref:System.Windows.Forms.TreeView> 排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 若要删除 <xref:System.Windows.Forms.TreeNode> 先前添加的，请使用 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 、 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 方法。  
  
> [!NOTE]
>  一 <xref:System.Windows.Forms.TreeNode> 次只能分配给一个 <xref:System.Windows.Forms.TreeView> 控件。 若要将树节点添加到新的树视图控件，必须先从另一个树视图中将其删除或克隆。  
  
   
  
## Examples  
 下面的代码示例从一个树节点中删除选定的树节点 <xref:System.Windows.Forms.TreeView> ，如果两个树节点集合不是只读的，则将其添加到另一个树节点。 当 <xref:System.Windows.Forms.Button> 单击时，将 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> 使用方法从一个中删除由属性表示的， <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 并使用方法将其添加到另一个 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。 此示例要求具有一个 <xref:System.Windows.Forms.Form> 包含两个 <xref:System.Windows.Forms.TreeView> 控件和的 <xref:System.Windows.Forms.Button> 。 <xref:System.Windows.Forms.TreeView>控件应命名为 `treeView1` 和 `treeView2` 。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" /> 目前分配给了另一个 <see cref="T:System.Windows.Forms.TreeView" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入节点的位置。</param>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <summary>创建具有指定文本和键的树节点，并将其插入集合中。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Windows.Forms.TreeView> 再次排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入节点的位置。</param>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageIndex">要在树节点中显示的图像的索引。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其插入集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Windows.Forms.TreeView> 再次排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 `imageIndex`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入节点的位置。</param>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageKey">要在树节点中显示的图像的键。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其插入集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Windows.Forms.TreeView> 再次排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 `imageKey`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer, selectedImageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageIndex, selectedImageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入节点的位置。</param>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageIndex">要在树节点中显示的图像的索引。</param>
        <param name="selectedImageIndex">处于选定状态时要在树节点中显示的图像的索引。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其插入集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Windows.Forms.TreeView> 再次排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 `imageIndex`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 `selectedimageIndex`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.StateImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, string imageKey, string selectedImageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String, selectedImageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey, System::String ^ selectedImageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageKey, selectedImageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageKey" Type="System.String" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入节点的位置。</param>
        <param name="key">树节点的名称。</param>
        <param name="text">要在树节点中显示的文本。</param>
        <param name="imageKey">要在树节点中显示的图像的键。</param>
        <param name="selectedImageKey">处于选定状态时要在树节点中显示的图像的键。</param>
        <summary>创建具有指定键、文本和图像的树节点，并将其插入集合中的指定索引处。</summary>
        <returns>已插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略参数值。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Windows.Forms.TreeView> 再次排序。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法将新对象添加到集合 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 中 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 。  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 `imageKey`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.ImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 `selectedimageKey`参数引用父级的属性中的图像 <xref:System.Windows.Forms.TreeView.StateImageList%2A> <xref:System.Windows.Forms.TreeView> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.TreeNodeCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否为只读。</summary>
        <value>如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例从一个树节点中删除选定的树节点 <xref:System.Windows.Forms.TreeView> ，如果两个树节点集合不是只读的，则将其添加到另一个树节点。 当 <xref:System.Windows.Forms.Button> 单击时，将 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> 使用方法从一个中删除由属性表示的， <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 并使用方法将其添加到另一个 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。 此示例要求具有一个 <xref:System.Windows.Forms.Form> 包含两个 <xref:System.Windows.Forms.TreeView> 控件和的 <xref:System.Windows.Forms.Button> 。 <xref:System.Windows.Forms.TreeView>控件应命名为 `treeView1` 和 `treeView2` 。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置集合中的树节点。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::TreeNode ^ default[int] { System::Windows::Forms::TreeNode ^ get(int index); void set(int index, System::Windows::Forms::TreeNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.TreeNode with get, set" Usage="System.Windows.Forms.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中 <see cref="T:System.Windows.Forms.TreeNode" /> 的索引位置。</param>
        <summary>获取或设置位于集合中指定索引位置处的 <see cref="T:System.Windows.Forms.TreeNode" />。</summary>
        <value>位于集合中指定索引位置的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要将 <xref:System.Windows.Forms.TreeNode> 对象分配到特定位置，或从中检索它们 <xref:System.Windows.Forms.TreeNodeCollection> ，可以引用具有特定索引值的集合对象。 的索引值 <xref:System.Windows.Forms.TreeNodeCollection> 是从零开始的索引。  
  
   
  
## Examples  
 下面的代码示例将从中移除第一个， <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> 前提是其 <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> 属性设置为 "Node0"。 单击时 <xref:System.Windows.Forms.Button> ，将 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> 使用方法删除中的第一个 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 。 此示例要求您已经在中创建了 <xref:System.Windows.Forms.TreeView> 和 <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Form> 。 中的第一个 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> 应具有 "Node0" 的文本属性。  
  
 [!code-cpp[TreeNodeCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#2)]
 [!code-csharp[TreeNodeCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#2)]
 [!code-vb[TreeNodeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 值小于 0 或大于集合中的树节点数。</exception>
        <altmember cref="P:System.Windows.Forms.TreeNodeCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::TreeNode ^ default[System::String ^] { System::Windows::Forms::TreeNode ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要从集合中检索的 <see cref="T:System.Windows.Forms.TreeNode" /> 的名称。</param>
        <summary>获取集合中具有指定键的树节点。</summary>
        <value>具有指定键的 <see cref="T:System.Windows.Forms.TreeNode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 密钥比较不区分大小写。 如果 `key` 参数为 `null` 或空字符串，则属性将 <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> 返回 `null` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">要移除的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>从树节点集合中移除指定的树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode>从树节点集合中删除时，将在集合中的一个位置上移所有后续的树节点。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法删除之前添加的 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 。  
  
> [!NOTE]
>  不支持枚举集合和删除节点。  
  
 若要将新 <xref:System.Windows.Forms.TreeNode> 对象添加到集合，请 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 使用、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例从一个树节点中删除选定的树节点 <xref:System.Windows.Forms.TreeView> ，如果两个树节点集合不是只读的，则将其添加到另一个树节点。 当 <xref:System.Windows.Forms.Button> 单击时，将 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> 使用方法从一个中删除由属性表示的， <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 并使用方法将其添加到另一个 <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 。 此示例要求具有一个 <xref:System.Windows.Forms.Form> 包含两个 <xref:System.Windows.Forms.TreeView> 控件和的 <xref:System.Windows.Forms.Button> 。 <xref:System.Windows.Forms.TreeView>控件应命名为 `treeView1` 和 `treeView2` 。  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的 <see cref="T:System.Windows.Forms.TreeNode" /> 的索引。</param>
        <summary>从树节点集合的指定索引处移除树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode>从树节点集合中删除时，将在集合中的一个位置上移所有后续的树节点。  
  
 你还可以 <xref:System.Windows.Forms.TreeNode> 使用或方法删除之前添加的 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> 。  
  
> [!NOTE]
>  不支持枚举集合和删除节点。  
  
 若要将新 <xref:System.Windows.Forms.TreeNode> 对象添加到集合，请 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> 使用、 <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> 或 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例将从中移除第一个， <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> 前提是其 <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> 属性设置为 "Node0"。 单击时 <xref:System.Windows.Forms.Button> ，将 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> 使用方法删除中的第一个 <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> 。 此示例要求您已经在中创建了 <xref:System.Windows.Forms.TreeView> 和 <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Form> 。 中的第一个 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> 应具有 "Node0" 的文本属性。  
  
 [!code-cpp[TreeNodeCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#2)]
 [!code-csharp[TreeNodeCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#2)]
 [!code-vb[TreeNodeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="treeNodeCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">要从集合中移除的树节点的名称。</param>
        <summary>从集合中移除具有指定键的树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可用于同步对集合的访问的对象。</summary>
        <value>用于同步对 <see cref="T:System.Windows.Forms.TreeNodeCollection" /> 的访问的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (node As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ node) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="treeNodeCollection.System.Collections.IList.Add node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要添加到树节点集合的对象。</param>
        <summary>将对象添加到树节点集合的末尾。</summary>
        <returns>添加到树节点集合中的 <see cref="T:System.Windows.Forms.TreeNode" /> 的索引值，此索引值从零开始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不 `node` 是 <xref:System.Windows.Forms.TreeNodeCollection> ，则该 <xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23Add%2A> 方法将使用类的方法返回的字符串 <xref:System.Windows.Forms.TreeNode.ToString%2A> <xref:System.Windows.Forms.TreeNode> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="node" /> 目前分配给了另一 <see cref="T:System.Windows.Forms.TreeView" /> 控件。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="node" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (node As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ node) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="treeNodeCollection.System.Collections.IList.Contains node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要在集合中查找的对象。</param>
        <summary>确定指定的树节点是否为集合的成员。</summary>
        <returns>如果 <paramref name="node" /> 是该集合的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不 `node` 是 <xref:System.Windows.Forms.TreeNode> ，则该 <xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23Contains%2A> 方法返回 `false` 。 因此，不能传入字符串来确定集合是否包含将字符串的值作为其属性的节点 <xref:System.Windows.Forms.TreeNode.Text%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (node As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ node) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="treeNodeCollection.System.Collections.IList.IndexOf node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要在集合中查找的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>返回集合中指定树节点的索引。</summary>
        <returns>树节点集合中项的从零开始的索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不 `node` 是 <xref:System.Windows.Forms.TreeNode> ，则该 <xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23IndexOf%2A> 方法返回-1。 因此，不能传入字符串来查找将字符串的值作为其属性的节点 <xref:System.Windows.Forms.TreeNode.Text%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, node As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ node) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="treeNodeCollection.System.Collections.IList.Insert (index, node)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入树节点的索引位置。</param>
        <param name="node">要插入到集合中的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>在树节点集合中的指定位置插入现有树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Windows.Forms.TreeView.Sorted%2A> 属性设置为 `true` ，则 `index` 忽略该参数。 将 <xref:System.Windows.Forms.TreeNode> 插入到树视图中，并 <xref:System.Web.UI.WebControls.TreeView> 再次排序。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" /> 目前分配给了另一 <see cref="T:System.Windows.Forms.TreeView" />。  
  
- 或 - 
 <paramref name="node" /> 不是 <see cref="T:System.Windows.Forms.TreeNode" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示树节点集合是否具有固定大小。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">从零开始的索引，在此位置获取或设置项。</param>
        <summary>获取或设置集合中指定索引处的树节点。</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> 中指定索引处的 <see cref="T:System.Windows.Forms.TreeNodeCollection" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">设置的值不是一个 <see cref="T:System.Windows.Forms.TreeNode" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (node As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ node) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="treeNodeCollection.System.Collections.IList.Remove node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">要从该集合中移除的 <see cref="T:System.Windows.Forms.TreeNode" />。</param>
        <summary>从树节点集合中移除指定的树节点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法传入字符串来删除其属性值为字符串的节点 <xref:System.Windows.Forms.TreeNode.Text%2A> 。  
  
 <xref:System.Windows.Forms.TreeNode>从树节点集合中删除时，将在集合中的一个位置上移所有后续的树节点。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
