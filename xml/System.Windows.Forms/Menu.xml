<Type Name="Menu" FullName="System.Windows.Forms.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="192d216ffbba95ccc82c30e0d18326d13ea2af83" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727634" /></Metadata><TypeSignature Language="C#" Value="public abstract class Menu : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Menu extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Menu" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Menu&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ListBindable(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ListBindable(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("Microsoft.VisualStudio.Windows.Forms.MenuDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("Microsoft.VisualStudio.Windows.Forms.MenuDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31379-101">表示所有菜单的基本功能。</span><span class="sxs-lookup"><span data-stu-id="31379-101">Represents the base functionality for all menus.</span></span>
    
<span data-ttu-id="31379-102">此类在 .NET Core 3.1 及更高版本中不可用。</span><span class="sxs-lookup"><span data-stu-id="31379-102">This class is not available in .NET Core 3.1 and later versions.</span></span> <span data-ttu-id="31379-103">请改用 <see cref="T:System.Windows.Forms.ToolStripDropDown" /> 和 <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" />，它们将替换和扩展 <see cref="T:System.Windows.Forms.Menu" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="31379-103">Use <see cref="T:System.Windows.Forms.ToolStripDropDown" /> and <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> instead, which replace and extend the <see cref="T:System.Windows.Forms.Menu" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="31379-104">此类在 .NET Core 3.1 及更高版本中不可用。</span><span class="sxs-lookup"><span data-stu-id="31379-104">This class is not available in .NET Core 3.1 and later versions.</span></span> <span data-ttu-id="31379-105">请改用 <see cref="T:System.Windows.Forms.ToolStripDropDown" /> 和 <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-105">Use <see cref="T:System.Windows.Forms.ToolStripDropDown" /> and <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> instead.</span></span>

<span data-ttu-id="31379-106">此类是 <xref:System.Windows.Forms.MainMenu> 、 <xref:System.Windows.Forms.MenuItem> 和类的基类 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="31379-106">This class is the base class for the <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu> classes.</span></span> <span data-ttu-id="31379-107">不能创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="31379-107">You cannot create an instance of this class.</span></span> <span data-ttu-id="31379-108">应用程序的菜单由对象组成 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="31379-108">The menus for an application consist of <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="31379-109">这些对象可以包含 <xref:System.Windows.Forms.MenuItem> 表示子菜单项的其他对象。</span><span class="sxs-lookup"><span data-stu-id="31379-109">These can contain other <xref:System.Windows.Forms.MenuItem> objects, representing submenu items.</span></span> <span data-ttu-id="31379-110"><xref:System.Windows.Forms.MenuItem>对象可以存储在中 <xref:System.Windows.Forms.MainMenu> ，以便显示为窗体的整个菜单结构或 <xref:System.Windows.Forms.ContextMenu> 用于显示快捷菜单的。</span><span class="sxs-lookup"><span data-stu-id="31379-110">The <xref:System.Windows.Forms.MenuItem> objects can be stored in a <xref:System.Windows.Forms.MainMenu> for display as an entire menu structure for a form or a <xref:System.Windows.Forms.ContextMenu> that is used to display shortcut menus.</span></span> <span data-ttu-id="31379-111">此类提供所有菜单类通用的功能。</span><span class="sxs-lookup"><span data-stu-id="31379-111">This class provides functionality that is common for all the menu classes.</span></span>  
  
 <span data-ttu-id="31379-112">与许多基类不同， <xref:System.Windows.Forms.Menu> 类使用其派生类定义其许多属性。</span><span class="sxs-lookup"><span data-stu-id="31379-112">Unlike many base classes, the <xref:System.Windows.Forms.Menu> class uses its derived classes to define many of its properties.</span></span> <span data-ttu-id="31379-113">如果使用多文档界面中的菜单 (MDI) 应用程序，则可以使用 <xref:System.Windows.Forms.Menu.MdiListItem%2A> 属性指定 <xref:System.Windows.Forms.MenuItem> ，以在应用程序中显示打开的 MDI 子窗体的列表。</span><span class="sxs-lookup"><span data-stu-id="31379-113">If you are using your menu in a multiple-document interface (MDI) application, you can use the <xref:System.Windows.Forms.Menu.MdiListItem%2A> property to specify a <xref:System.Windows.Forms.MenuItem> that displays a list of open MDI child forms in your application.</span></span> <span data-ttu-id="31379-114"><xref:System.Windows.Forms.Menu.MenuItems%2A>属性包含 <xref:System.Windows.Forms.MenuItem> 存储在菜单类中的对象的列表。</span><span class="sxs-lookup"><span data-stu-id="31379-114">The <xref:System.Windows.Forms.Menu.MenuItems%2A> property contains a list of <xref:System.Windows.Forms.MenuItem> objects stored in the menu class.</span></span> <span data-ttu-id="31379-115">对于 <xref:System.Windows.Forms.MainMenu> 或 <xref:System.Windows.Forms.ContextMenu> ，此属性包含显示的所有 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="31379-115">For a <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu>, this property contains all the <xref:System.Windows.Forms.MenuItem> objects that are displayed.</span></span> <span data-ttu-id="31379-116">对于 <xref:System.Windows.Forms.MenuItem> ，该 <xref:System.Windows.Forms.Menu.MenuItems%2A> 属性表示与之关联的子菜单项。</span><span class="sxs-lookup"><span data-stu-id="31379-116">For a <xref:System.Windows.Forms.MenuItem>, the <xref:System.Windows.Forms.Menu.MenuItems%2A> property represents the submenu items associated with it.</span></span>  
  
 <span data-ttu-id="31379-117">除了为所有派生菜单类提供的属性以外， <xref:System.Windows.Forms.Menu> 类还提供了一些方法（如 <xref:System.Windows.Forms.Menu.CloneMenu%2A> 和 <xref:System.Windows.Forms.Menu.MergeMenu%2A> ），使您可以从现有菜单创建新菜单，还可以将两个菜单结构合并在一起。</span><span class="sxs-lookup"><span data-stu-id="31379-117">In addition to the properties that are provided for all the derived menu classes, the <xref:System.Windows.Forms.Menu> class also provides methods, such as <xref:System.Windows.Forms.Menu.CloneMenu%2A> and <xref:System.Windows.Forms.Menu.MergeMenu%2A>, that enable you to create new menus from existing menus, and also merge two menu structures together.</span></span>  
  
 <span data-ttu-id="31379-118"><xref:System.Windows.Forms.Menu>该类还定义了嵌套类 <xref:System.Windows.Forms.Menu.MenuItemCollection> 。</span><span class="sxs-lookup"><span data-stu-id="31379-118">The <xref:System.Windows.Forms.Menu> class also defines the nested class <xref:System.Windows.Forms.Menu.MenuItemCollection>.</span></span> <span data-ttu-id="31379-119">此类定义 <xref:System.Windows.Forms.MenuItem> 属性使用的对象集合 <xref:System.Windows.Forms.Menu.MenuItems%2A> 。</span><span class="sxs-lookup"><span data-stu-id="31379-119">This class defines the collection of <xref:System.Windows.Forms.MenuItem> objects used by the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.</span></span> <span data-ttu-id="31379-120">您可以使用类的方法在 <xref:System.Windows.Forms.Menu.MenuItemCollection> 、或中添加和移除菜单项 <xref:System.Windows.Forms.MainMenu> <xref:System.Windows.Forms.ContextMenu> <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="31379-120">You can use the methods of the <xref:System.Windows.Forms.Menu.MenuItemCollection> class to add and remove menu items from a <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, or <xref:System.Windows.Forms.MenuItem>.</span></span>
  
## Examples  
 <span data-ttu-id="31379-121">下面的代码示例使用派生类 <xref:System.Windows.Forms.MenuItem> 创建窗体的菜单结构。</span><span class="sxs-lookup"><span data-stu-id="31379-121">The following code example uses the derived class, <xref:System.Windows.Forms.MenuItem>, to create a menu structure for a form.</span></span> <span data-ttu-id="31379-122">示例代码添加一个 <xref:System.Windows.Forms.MenuItem> 来表示顶级菜单项，将一个子菜单项添加到其中，以选择字体大小，然后将两个子菜单项添加到表示应用程序中的大型和小字体选择的菜单项。</span><span class="sxs-lookup"><span data-stu-id="31379-122">The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</span></span> <span data-ttu-id="31379-123">该示例要求有一个名为的 <xref:System.Windows.Forms.MainMenu> 对象 `mainMenu1` 和四个 <xref:System.Windows.Forms.MenuItem> 名为、、和的对象 `menuItem1` `menuItem2` `menuItem3` `menuItem4` 。</span><span class="sxs-lookup"><span data-stu-id="31379-123">The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span>  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Menu (System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Menu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Menu : System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.Menu" Usage="new System.Windows.Forms.Menu items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="31379-124"><see cref="T:System.Windows.Forms.MenuItem" /> 类型的数组，包含要添加到菜单的对象。</span><span class="sxs-lookup"><span data-stu-id="31379-124">An array of type <see cref="T:System.Windows.Forms.MenuItem" /> containing the objects to add to the menu.</span></span></param>
        <summary><span data-ttu-id="31379-125">初始化 <see cref="T:System.Windows.Forms.Menu" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="31379-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.Menu" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-126">由于 <xref:System.Windows.Forms.Menu> 是抽象类，因此仅继承的类可以调用菜单构造函数。</span><span class="sxs-lookup"><span data-stu-id="31379-126">Since <xref:System.Windows.Forms.Menu> is an abstract class, only inherited classes can call the Menu constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected internal void CloneMenu (System.Windows.Forms.Menu menuSrc);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CloneMenu(class System.Windows.Forms.Menu menuSrc) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CloneMenu (menuSrc As Menu)" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CloneMenu(System::Windows::Forms::Menu ^ menuSrc);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CloneMenu : System.Windows.Forms.Menu -&gt; unit" Usage="menu.CloneMenu menuSrc" />
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.Menu menuSrc);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.Menu menuSrc) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (menuSrc As Menu)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::Menu ^ menuSrc);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSrc" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="menuSrc"><span data-ttu-id="31379-127">要复制的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-127">The <see cref="T:System.Windows.Forms.Menu" /> to copy.</span></span></param>
        <summary><span data-ttu-id="31379-128">复制作为参数被传递到当前 <see cref="T:System.Windows.Forms.Menu" /> 的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-128">Copies the <see cref="T:System.Windows.Forms.Menu" /> that is passed as a parameter to the current <see cref="T:System.Windows.Forms.Menu" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-129">此方法将 <xref:System.Windows.Forms.MenuItem> (中存储的对象的整个列表复制 <xref:System.Windows.Forms.Menu> 到 `menuSrc`) 到当前菜单中。</span><span class="sxs-lookup"><span data-stu-id="31379-129">This method copies the entire list of <xref:System.Windows.Forms.MenuItem> objects (stored in the <xref:System.Windows.Forms.Menu> passed in to `menuSrc`) into the current menu.</span></span> <span data-ttu-id="31379-130">可以在派生类中使用此方法克隆 <xref:System.Windows.Forms.MenuItem> 对象。</span><span class="sxs-lookup"><span data-stu-id="31379-130">You can use this method in your derived class to clone <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="31379-131">然后，可以通过派生自的其他类重用这些类 <xref:System.Windows.Forms.Menu> ，如 <xref:System.Windows.Forms.MainMenu> 、 <xref:System.Windows.Forms.ContextMenu> 和 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="31379-131">They can then be reused by other classes that derive from <xref:System.Windows.Forms.Menu>, such as <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, and <xref:System.Windows.Forms.MenuItem>.</span></span>
  
## Examples  
 <span data-ttu-id="31379-132">此示例将创建一个主菜单， `mainMenu1` 其中包含三个菜单项： `File` 、 `Edit` 和 `View` 。</span><span class="sxs-lookup"><span data-stu-id="31379-132">This example creates a main menu, `mainMenu1`, with three menu items: `File`, `Edit`, and `View`.</span></span> <span data-ttu-id="31379-133">然后，它使用 <xref:System.Windows.Forms.Menu.CloneMenu%2A> 方法将复制 `mainMenu1` 到中 `mainMenu2` 。</span><span class="sxs-lookup"><span data-stu-id="31379-133">It then uses the <xref:System.Windows.Forms.Menu.CloneMenu%2A> method to copy `mainMenu1` into `mainMenu2`.</span></span> <span data-ttu-id="31379-134">然后，将克隆的菜单分配给窗体并显示。</span><span class="sxs-lookup"><span data-stu-id="31379-134">The cloned menu is then assigned to the form and displayed.</span></span> <span data-ttu-id="31379-135">此程序要求您已经创建了一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="31379-135">This program requires that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[CloneMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CloneMenu/CPP/form1.cpp#1)]
 [!code-csharp[CloneMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CloneMenu/CS/form1.cs#1)]
 [!code-vb[CloneMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CloneMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MainMenu" />
      </Docs>
    </Member>
    <Member MemberName="CreateMenuHandle">
      <MemberSignature Language="C#" Value="protected virtual IntPtr CreateMenuHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int CreateMenuHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.CreateMenuHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateMenuHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr CreateMenuHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateMenuHandle : unit -&gt; nativeint&#xA;override this.CreateMenuHandle : unit -&gt; nativeint" Usage="menu.CreateMenuHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31379-136">创建 <see cref="T:System.Windows.Forms.Menu" /> 的新句柄。</span><span class="sxs-lookup"><span data-stu-id="31379-136">Creates a new handle to the <see cref="T:System.Windows.Forms.Menu" />.</span></span></summary>
        <returns><span data-ttu-id="31379-137">如果该方法成功，则为菜单的句柄；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31379-137">A handle to the menu if the method succeeds; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="menu.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="31379-138">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31379-138"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="31379-139">处置由 <see cref="T:System.Windows.Forms.Menu" /> 占用的资源（内存除外）。</span><span class="sxs-lookup"><span data-stu-id="31379-139">Disposes of the resources, other than memory, used by the <see cref="T:System.Windows.Forms.Menu" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-140">在完成使用 <xref:System.Windows.Forms.Menu.Dispose%2A> 后，应调用 <xref:System.Windows.Forms.Menu>。</span><span class="sxs-lookup"><span data-stu-id="31379-140">Call <xref:System.Windows.Forms.Menu.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.Menu>.</span></span> <span data-ttu-id="31379-141"><xref:System.Windows.Forms.Menu.Dispose%2A> 方法使 <xref:System.Windows.Forms.Menu> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="31379-141">The <xref:System.Windows.Forms.Menu.Dispose%2A> method leaves the <xref:System.Windows.Forms.Menu> in an unusable state.</span></span> <span data-ttu-id="31379-142">调用后 <xref:System.Windows.Forms.Menu.Dispose%2A> ，必须释放对的所有引用， <xref:System.Windows.Forms.Menu> 以使其占用的内存可通过垃圾回收进行回收。</span><span class="sxs-lookup"><span data-stu-id="31379-142">After calling <xref:System.Windows.Forms.Menu.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.Menu> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="31379-143">每次释放对 <xref:System.Windows.Forms.Menu.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Windows.Forms.Menu>。</span><span class="sxs-lookup"><span data-stu-id="31379-143">Always call <xref:System.Windows.Forms.Menu.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.Menu>.</span></span> <span data-ttu-id="31379-144">否则，在垃圾回收 <xref:System.Windows.Forms.Menu> 调用 <xref:System.Windows.Forms.Menu> 对象的析构函数之前，将不会释放正在使用的资源。</span><span class="sxs-lookup"><span data-stu-id="31379-144">Otherwise, the resources the <xref:System.Windows.Forms.Menu> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.Menu> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindHandle">
      <MemberSignature Language="C#" Value="public const int FindHandle = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FindHandle = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Menu.FindHandle" />
      <MemberSignature Language="VB.NET" Value="Public Const FindHandle As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int FindHandle = 0;" />
      <MemberSignature Language="F#" Value="val mutable FindHandle : int" Usage="System.Windows.Forms.Menu.FindHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="31379-145">指定 <see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> 方法应搜索一个句柄。</span><span class="sxs-lookup"><span data-stu-id="31379-145">Specifies that the <see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> method should search for a handle.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMenuItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem FindMenuItem (int type, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MenuItem FindMenuItem(int32 type, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMenuItem (type As Integer, value As IntPtr) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::MenuItem ^ FindMenuItem(int type, IntPtr value);" />
      <MemberSignature Language="F#" Value="member this.FindMenuItem : int * nativeint -&gt; System.Windows.Forms.MenuItem" Usage="menu.FindMenuItem (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Int32" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="31379-146">要用于查找 <see cref="T:System.Windows.Forms.MenuItem" /> 的项的类型。</span><span class="sxs-lookup"><span data-stu-id="31379-146">The type of item to use to find the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></param>
        <param name="value"><span data-ttu-id="31379-147">用于查找 <see cref="T:System.Windows.Forms.MenuItem" /> 的项。</span><span class="sxs-lookup"><span data-stu-id="31379-147">The item to use to find the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></param>
        <summary><span data-ttu-id="31379-148">获取 <see cref="T:System.Windows.Forms.MenuItem" />，它包含指定的值。</span><span class="sxs-lookup"><span data-stu-id="31379-148">Gets the <see cref="T:System.Windows.Forms.MenuItem" /> that contains the value specified.</span></span></summary>
        <returns><span data-ttu-id="31379-149">匹配值的 <see cref="T:System.Windows.Forms.MenuItem" />；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31379-149">The <see cref="T:System.Windows.Forms.MenuItem" /> that matches value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-150">若要 <xref:System.Windows.Forms.MenuItem> 使用句柄搜索，请将 <xref:System.Windows.Forms.Menu.FindHandle> 字段作为类型传入，并传入要查找的的句柄 <xref:System.Windows.Forms.MenuItem> 作为值。</span><span class="sxs-lookup"><span data-stu-id="31379-150">To search for a <xref:System.Windows.Forms.MenuItem> using a handle, pass in the <xref:System.Windows.Forms.Menu.FindHandle> field as the type, and the handle of the <xref:System.Windows.Forms.MenuItem> you want to find as the value.</span></span>  
  
 <span data-ttu-id="31379-151">若要 <xref:System.Windows.Forms.MenuItem> 使用快捷方式搜索，请将 <xref:System.Windows.Forms.Menu.FindShortcut> 字段作为类型传入，并将的快捷方式值作为值进行传递 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="31379-151">To search for a <xref:System.Windows.Forms.MenuItem> using a shortcut, pass in the <xref:System.Windows.Forms.Menu.FindShortcut> field as the type, and the Shortcut value for the <xref:System.Windows.Forms.MenuItem> you want to find as the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMergePosition">
      <MemberSignature Language="C#" Value="protected int FindMergePosition (int mergeOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 FindMergePosition(int32 mergeOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.FindMergePosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FindMergePosition (mergeOrder As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int FindMergePosition(int mergeOrder);" />
      <MemberSignature Language="F#" Value="member this.FindMergePosition : int -&gt; int" Usage="menu.FindMergePosition mergeOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOrder" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mergeOrder"><span data-ttu-id="31379-152">要合并的菜单项的合并顺序位置。</span><span class="sxs-lookup"><span data-stu-id="31379-152">The merge order position for the menu item to be merged.</span></span></param>
        <summary><span data-ttu-id="31379-153">返回菜单项应插入菜单的位置。</span><span class="sxs-lookup"><span data-stu-id="31379-153">Returns the position at which a menu item should be inserted into the menu.</span></span></summary>
        <returns><span data-ttu-id="31379-154">菜单项应插入菜单的位置。</span><span class="sxs-lookup"><span data-stu-id="31379-154">The position at which a menu item should be inserted into the menu.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-155">菜单项的合并顺序指定了如果中包含的菜单结构 <xref:System.Windows.Forms.MenuItem> 与另一个合并，则该菜单项将采用的相对位置。</span><span class="sxs-lookup"><span data-stu-id="31379-155">The merge order of a menu item specifies the relative position that this menu item will assume if the menu structure that the <xref:System.Windows.Forms.MenuItem> is contained in is merged with another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindShortcut">
      <MemberSignature Language="C#" Value="public const int FindShortcut = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FindShortcut = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Menu.FindShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Const FindShortcut As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int FindShortcut = 1;" />
      <MemberSignature Language="F#" Value="val mutable FindShortcut : int" Usage="System.Windows.Forms.Menu.FindShortcut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="31379-156">指定 <see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> 方法应搜索一个快捷方式。</span><span class="sxs-lookup"><span data-stu-id="31379-156">Specifies that the <see cref="M:System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)" /> method should search for a shortcut.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenu GetContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenu GetContextMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.GetContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenu () As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenu ^ GetContextMenu();" />
      <MemberSignature Language="F#" Value="member this.GetContextMenu : unit -&gt; System.Windows.Forms.ContextMenu" Usage="menu.GetContextMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31379-157">获取包含该菜单的 <see cref="T:System.Windows.Forms.ContextMenu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-157">Gets the <see cref="T:System.Windows.Forms.ContextMenu" /> that contains this menu.</span></span></summary>
        <returns><span data-ttu-id="31379-158">包含该菜单的 <see cref="T:System.Windows.Forms.ContextMenu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-158">The <see cref="T:System.Windows.Forms.ContextMenu" /> that contains this menu.</span></span> <span data-ttu-id="31379-159">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31379-159">The default is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-160">此方法允许你获取对 <xref:System.Windows.Forms.ContextMenu> 包含该菜单的的引用。</span><span class="sxs-lookup"><span data-stu-id="31379-160">This method allows you to obtain a reference to the <xref:System.Windows.Forms.ContextMenu> that this menu is contained in.</span></span> <span data-ttu-id="31379-161">`null`如果菜单未包含在中，则此属性返回 <xref:System.Windows.Forms.ContextMenu> 。</span><span class="sxs-lookup"><span data-stu-id="31379-161">This property returns `null` if the menu is not contained in a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="31379-162">如果菜单包含在 <xref:System.Windows.Forms.MenuItem> 或中 <xref:System.Windows.Forms.MainMenu> ，或者如果菜单不包含在任何菜单中，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="31379-162">This can occur if the menu is contained in a <xref:System.Windows.Forms.MenuItem> or <xref:System.Windows.Forms.MainMenu>, or if the menu is not contained in any menu.</span></span> <span data-ttu-id="31379-163">您可以使用此属性来确定当前是否正在使用某个菜单，还可以确定其中的位置。</span><span class="sxs-lookup"><span data-stu-id="31379-163">You can use this property to determine whether a menu is currently being used, and also to determine where.</span></span>
  
## Examples  
 <span data-ttu-id="31379-164">在此示例中，使用 <xref:System.Windows.Forms.Menu.GetContextMenu%2A> 方法获取对包含或的快捷菜单的引用 `menuItem1` `menuItem2` ，并在消息框中显示快捷菜单信息。</span><span class="sxs-lookup"><span data-stu-id="31379-164">In this example, you use the <xref:System.Windows.Forms.Menu.GetContextMenu%2A> method to obtain a reference to the shortcut menu that contains `menuItem1` or `menuItem2`, and display the shortcut menu information in a message box.</span></span> <span data-ttu-id="31379-165">以编程方式创建一个快捷菜单，其中包含两个项： `New` 和 `Open` 。</span><span class="sxs-lookup"><span data-stu-id="31379-165">You programmatically create a shortcut menu with two items, `New` and `Open`.</span></span> <span data-ttu-id="31379-166">然后通过创建相应的事件处理程序，向这些项添加功能。</span><span class="sxs-lookup"><span data-stu-id="31379-166">You then add functionality to these items by creating the appropriate event handlers.</span></span> <span data-ttu-id="31379-167">运行该示例时，将显示一个消息框，提示您右键单击该窗体以便显示快捷菜单。</span><span class="sxs-lookup"><span data-stu-id="31379-167">When you run the example, you get a message box that tells you to right-click the form in order to display the shortcut menu.</span></span> <span data-ttu-id="31379-168">然后，单击菜单项时，会显示另一条消息，告知已单击哪个项目，并在 "包含" 快捷菜单上显示信息。</span><span class="sxs-lookup"><span data-stu-id="31379-168">Then, when you click a menu item, you get another message that tells which item has been clicked and displays the information on the containing shortcut menu.</span></span> <span data-ttu-id="31379-169">此示例要求您已经创建了一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="31379-169">This example requires that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetContextMenu2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetContextMenu2/CPP/form1.cpp#1)]
 [!code-csharp[GetContextMenu2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetContextMenu2/CS/form1.cs#1)]
 [!code-vb[GetContextMenu2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetContextMenu2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.GetMainMenu" />
      </Docs>
    </Member>
    <Member MemberName="GetMainMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu GetMainMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MainMenu GetMainMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.GetMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMainMenu () As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::MainMenu ^ GetMainMenu();" />
      <MemberSignature Language="F#" Value="member this.GetMainMenu : unit -&gt; System.Windows.Forms.MainMenu" Usage="menu.GetMainMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31379-170">获取包含该菜单的 <see cref="T:System.Windows.Forms.MainMenu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-170">Gets the <see cref="T:System.Windows.Forms.MainMenu" /> that contains this menu.</span></span></summary>
        <returns><span data-ttu-id="31379-171">包含该菜单的 <see cref="T:System.Windows.Forms.MainMenu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-171">The <see cref="T:System.Windows.Forms.MainMenu" /> that contains this menu.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-172">此方法允许你获取 <xref:System.Windows.Forms.MainMenu> 当前位于中的此菜单的引用。</span><span class="sxs-lookup"><span data-stu-id="31379-172">This method allows you to obtain a reference to the <xref:System.Windows.Forms.MainMenu> this menu is currently located in.</span></span> <span data-ttu-id="31379-173">`null`如果菜单未包含在中，则此属性返回 <xref:System.Windows.Forms.MainMenu> 。</span><span class="sxs-lookup"><span data-stu-id="31379-173">This property returns `null` if the menu is not contained in a <xref:System.Windows.Forms.MainMenu>.</span></span> <span data-ttu-id="31379-174">如果菜单包含在 <xref:System.Windows.Forms.MenuItem> 或中 <xref:System.Windows.Forms.ContextMenu> ，或者如果菜单不包含在任何菜单中，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="31379-174">This can occur if the menu is contained in a <xref:System.Windows.Forms.MenuItem> or <xref:System.Windows.Forms.ContextMenu>, or if the menu is not contained in any menu.</span></span> <span data-ttu-id="31379-175">您可以使用此属性来确定当前是否正在使用某个菜单，还可以确定其中的位置。</span><span class="sxs-lookup"><span data-stu-id="31379-175">You can use this property to determine whether a menu is currently being used, and also to determine where.</span></span>
  
## Examples  
 <span data-ttu-id="31379-176">此示例声明了 <xref:System.Windows.Forms.MainMenu> 、 `mainMenu1` 和四个菜单项：、、和 `menuItem1` `menuItem2` `menuItem3` `menuItem4` 。</span><span class="sxs-lookup"><span data-stu-id="31379-176">This example declares a <xref:System.Windows.Forms.MainMenu>, `mainMenu1`, and four menu items, `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span> <span data-ttu-id="31379-177">仅将前三个菜单项添加到以 `mainMenu1` 显示。</span><span class="sxs-lookup"><span data-stu-id="31379-177">Only the first three menu items are added to `mainMenu1` for display.</span></span> <span data-ttu-id="31379-178">然后，该程序将检查 `menuItem3` 是否正在使用，即 `true` ，并确定使用该程序的窗体。</span><span class="sxs-lookup"><span data-stu-id="31379-178">The program then checks to see if `menuItem3` is being used, which is `true`, and determines the form in which it is used.</span></span> <span data-ttu-id="31379-179">标签文本用于显示承载的窗体的名称 <xref:System.Windows.Forms.MainMenu> 。</span><span class="sxs-lookup"><span data-stu-id="31379-179">A label text is used to display the name of the form that hosts the <xref:System.Windows.Forms.MainMenu>.</span></span> <span data-ttu-id="31379-180">如果将所测试的菜单项更改为 `menuItem4` ，则条件的计算结果为， `false` 因为 `menuItem4` 从未使用过。</span><span class="sxs-lookup"><span data-stu-id="31379-180">If you change the menu item being tested to `menuItem4`, the condition evaluates to `false` because `menuItem4` has never been used.</span></span> <span data-ttu-id="31379-181">此示例要求您已经创建了一个 <xref:System.Windows.Forms.Form> `MyForm` 包含名为的的名为的 <xref:System.Windows.Forms.Label> `label1` 。</span><span class="sxs-lookup"><span data-stu-id="31379-181">This example requires that you have created a <xref:System.Windows.Forms.Form> named `MyForm` that includes a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[GetMainMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetMainMenu/CPP/form1.cpp#1)]
 [!code-csharp[GetMainMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetMainMenu/CS/form1.cs#1)]
 [!code-vb[GetMainMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetMainMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.GetContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Menu.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31379-182">获取表示菜单的窗口句柄的值。</span><span class="sxs-lookup"><span data-stu-id="31379-182">Gets a value representing the window handle for the menu.</span></span></summary>
        <value><span data-ttu-id="31379-183">菜单的 HMENU 值。</span><span class="sxs-lookup"><span data-stu-id="31379-183">The HMENU value of the menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-184">您可以使用此属性来获取菜单的句柄，以对此类或其派生类所提供的功能以外的菜单执行特殊操作。</span><span class="sxs-lookup"><span data-stu-id="31379-184">You can use this property to obtain the handle to the menu to perform special operations to the menu outside of the functionality provided by this class or its derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public virtual bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.Menu.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31379-185">获取一个值，通过该值指示此菜单是否包含任何菜单项。</span><span class="sxs-lookup"><span data-stu-id="31379-185">Gets a value indicating whether this menu contains any menu items.</span></span> <span data-ttu-id="31379-186">此属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="31379-186">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="31379-187">如果此菜单包含 <see cref="T:System.Windows.Forms.MenuItem" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31379-187"><see langword="true" /> if this menu contains <see cref="T:System.Windows.Forms.MenuItem" /> objects; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="31379-188">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31379-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-189">您可以使用此方法来确定是否为 <xref:System.Windows.Forms.MenuItem> 此菜单分配了任何对象。</span><span class="sxs-lookup"><span data-stu-id="31379-189">You can use this method to determine whether any <xref:System.Windows.Forms.MenuItem> objects are assigned to this menu.</span></span> <span data-ttu-id="31379-190">这等效于 `null` 在属性中检查 <xref:System.Windows.Forms.Menu.MenuItems%2A> 。</span><span class="sxs-lookup"><span data-stu-id="31379-190">This is equivalent to checking for `null` in the <xref:System.Windows.Forms.Menu.MenuItems%2A> property.</span></span>
  
## Examples  
 <span data-ttu-id="31379-191">下面的代码示例创建一个 <xref:System.Windows.Forms.MainMenu> 具有两个 <xref:System.Windows.Forms.MenuItem> 对象的。</span><span class="sxs-lookup"><span data-stu-id="31379-191">The following code example creates a <xref:System.Windows.Forms.MainMenu> with two <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="31379-192">然后，它使用 <xref:System.Windows.Forms.Menu.IsParent%2A> 属性来确定是否 `mainMenu1` 包含菜单项。</span><span class="sxs-lookup"><span data-stu-id="31379-192">It then uses the <xref:System.Windows.Forms.Menu.IsParent%2A> property to determine whether `mainMenu1` contains menu items.</span></span> <span data-ttu-id="31379-193">如果条件的计算结果为 `true` ，则将 <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> 属性设置为，并将 `true` 主菜单绑定到 <xref:System.Windows.Forms.Form> 。</span><span class="sxs-lookup"><span data-stu-id="31379-193">If the condition evaluates `true`, it sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to `true` and binds the main menu to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="31379-194">此示例要求您创建一个名为的 <xref:System.Windows.Forms.Form> `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="31379-194">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[IsParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IsParent/CPP/form1.cpp#1)]
 [!code-csharp[IsParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IsParent/CS/form1.cs#1)]
 [!code-vb[IsParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IsParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="MdiListItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem MdiListItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem MdiListItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MdiListItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiListItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuItem ^ MdiListItem { System::Windows::Forms::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiListItem : System.Windows.Forms.MenuItem" Usage="System.Windows.Forms.Menu.MdiListItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31379-195">获取一个值，通过该值指示用于显示多文档界面 (MDI) 子窗体列表的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="31379-195">Gets a value indicating the <see cref="T:System.Windows.Forms.MenuItem" /> that is used to display a list of multiple document interface (MDI) child forms.</span></span></summary>
        <value><span data-ttu-id="31379-196">表示菜单项（显示应用程序中打开的 MDI 子窗体列表）的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="31379-196">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the menu item displaying a list of MDI child forms that are open in the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-197">您可以使用此属性来确定是否已 <xref:System.Windows.Forms.MenuItem> 指定在 MDI 应用程序中显示打开的子窗口的列表。</span><span class="sxs-lookup"><span data-stu-id="31379-197">You can use this property to determine whether a <xref:System.Windows.Forms.MenuItem> has been specified to display the list of open child windows in an MDI application.</span></span> <span data-ttu-id="31379-198">若要使用特定的 <xref:System.Windows.Forms.MenuItem> 作为 MDI 列表，请 <xref:System.Windows.Forms.MenuItem.MdiList%2A> 在中设置 <xref:System.Windows.Forms.MenuItem> 要使用的属性。</span><span class="sxs-lookup"><span data-stu-id="31379-198">To use a specific <xref:System.Windows.Forms.MenuItem> as an MDI list, set the <xref:System.Windows.Forms.MenuItem.MdiList%2A> property in the <xref:System.Windows.Forms.MenuItem> to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MdiList" />
      </Docs>
    </Member>
    <Member MemberName="MenuItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu.MenuItemCollection MenuItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu/MenuItemCollection MenuItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuItems As Menu.MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu::MenuItemCollection ^ MenuItems { System::Windows::Forms::Menu::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuItems : System.Windows.Forms.Menu.MenuItemCollection" Usage="System.Windows.Forms.Menu.MenuItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu+MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31379-199">获取一个值，通过该值指示与菜单关联的 <see cref="T:System.Windows.Forms.MenuItem" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="31379-199">Gets a value indicating the collection of <see cref="T:System.Windows.Forms.MenuItem" /> objects associated with the menu.</span></span></summary>
        <value><span data-ttu-id="31379-200">表示存储在菜单中的 <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" /> 对象列表的 <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="31379-200">A <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" /> that represents the list of <see cref="T:System.Windows.Forms.MenuItem" /> objects stored in the menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-201">您可以使用此属性来获取对当前存储在菜单中的菜单项列表的引用。</span><span class="sxs-lookup"><span data-stu-id="31379-201">You can use this property to obtain a reference to the list of menu items that are currently stored in the menu.</span></span> <span data-ttu-id="31379-202">对于 <xref:System.Windows.Forms.MainMenu> 和 <xref:System.Windows.Forms.ContextMenu> 对象， <xref:System.Windows.Forms.Menu.MenuItems%2A> 属性包含控件中的整个菜单结构。</span><span class="sxs-lookup"><span data-stu-id="31379-202">For <xref:System.Windows.Forms.MainMenu> and <xref:System.Windows.Forms.ContextMenu> objects, the <xref:System.Windows.Forms.Menu.MenuItems%2A> property contains the entire menu structure in the control.</span></span> <span data-ttu-id="31379-203">对于 <xref:System.Windows.Forms.MenuItem> 类， <xref:System.Windows.Forms.Menu.MenuItems%2A> 属性包含与关联的子菜单项的列表 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="31379-203">For the <xref:System.Windows.Forms.MenuItem> class, the <xref:System.Windows.Forms.Menu.MenuItems%2A> property contains the list of submenu items associated with the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="31379-204">对于此属性) 提供的菜单的菜单项集合的引用 (，您可以添加和移除菜单项，确定菜单项的总数，并从集合中清除菜单项的列表。</span><span class="sxs-lookup"><span data-stu-id="31379-204">With the reference to the collection of menu items for the menu (provided by this property), you can add and remove menu items, determine the total number of menu items, and clear the list of menu items from the collection.</span></span> <span data-ttu-id="31379-205">有关维护菜单的菜单项集合的详细信息，请参阅 <xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=nameWithType> 文档。</span><span class="sxs-lookup"><span data-stu-id="31379-205">For more information on maintaining the menu item collection for a menu, see the <xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=nameWithType> documentation.</span></span>
  
## Examples  
 <span data-ttu-id="31379-206">下面的代码示例创建派生类的实例， <xref:System.Windows.Forms.MainMenu> 并将 <xref:System.Windows.Forms.MenuItem> 对象添加到对象的集合中 <xref:System.Windows.Forms.MenuItem> 。</span><span class="sxs-lookup"><span data-stu-id="31379-206">The following code example creates an instance of the derived class, <xref:System.Windows.Forms.MainMenu>, and adds a <xref:System.Windows.Forms.MenuItem> object to its collection of <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="31379-207">此示例要求在此示例中定义的方法位于窗体的类中，并由该窗体类中的方法调用。</span><span class="sxs-lookup"><span data-stu-id="31379-207">This example requires that the method defined in this example is located within the class for a form and called by a method in that form class.</span></span>  
  
 [!code-cpp[Classic Menu.MenuItems Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItems Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual void MergeMenu (System.Windows.Forms.Menu menuSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeMenu(class System.Windows.Forms.Menu menuSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeMenu (menuSrc As Menu)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MergeMenu(System::Windows::Forms::Menu ^ menuSrc);" />
      <MemberSignature Language="F#" Value="abstract member MergeMenu : System.Windows.Forms.Menu -&gt; unit&#xA;override this.MergeMenu : System.Windows.Forms.Menu -&gt; unit" Usage="menu.MergeMenu menuSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSrc" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="menuSrc"><span data-ttu-id="31379-208">其菜单项与当前菜单的菜单项合并的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-208">The <see cref="T:System.Windows.Forms.Menu" /> whose menu items are merged with the menu items of the current menu.</span></span></param>
        <summary><span data-ttu-id="31379-209">将一个菜单的 <see cref="T:System.Windows.Forms.MenuItem" /> 对象与当前菜单合并。</span><span class="sxs-lookup"><span data-stu-id="31379-209">Merges the <see cref="T:System.Windows.Forms.MenuItem" /> objects of one menu with the current menu.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-210">此方法 <xref:System.Windows.Forms.MenuItem> 将一个菜单中的对象与当前菜单合并。</span><span class="sxs-lookup"><span data-stu-id="31379-210">This method merges <xref:System.Windows.Forms.MenuItem> objects from one menu with the current menu.</span></span> <span data-ttu-id="31379-211"><xref:System.Windows.Forms.MenuItem> 根据和属性的值合并对象 <xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="31379-211"><xref:System.Windows.Forms.MenuItem> objects are merged according to the values of the <xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="31379-212">菜单合并通常用于合并多文档界面的菜单 (MDI) 父窗体与其活动 MDI 子窗体的菜单。</span><span class="sxs-lookup"><span data-stu-id="31379-212">Menu merging is typically done to merge the menus of a Multiple Document Interface (MDI) parent form with those of its active MDI child form.</span></span> <span data-ttu-id="31379-213">此 .NET Framework 公共语言运行时自动执行。</span><span class="sxs-lookup"><span data-stu-id="31379-213">This is performed automatically by the .NET Framework common language runtime.</span></span> <span data-ttu-id="31379-214">例如，如果一个 MDI 父窗体包含一组用于处理文件的菜单，并且您的 MDI 子窗体还具有与文件相关的菜单项，则在 MDI 父窗体中显示子窗体时，菜单集将自动合并到一个文件菜单集中。</span><span class="sxs-lookup"><span data-stu-id="31379-214">For example, if an MDI parent form contains a set of menus for handling files and your MDI child form also has file-related menu items, the menu sets will automatically merge into a single file menu set when the child form is displayed in the MDI parent form.</span></span>  
  
 <span data-ttu-id="31379-215"><xref:System.Windows.Forms.Menu.MergeMenu%2A>如果要合并不属于 MDI 应用程序的两个菜单结构，可以使用方法。</span><span class="sxs-lookup"><span data-stu-id="31379-215">You can use the <xref:System.Windows.Forms.Menu.MergeMenu%2A> method if you are merging two menu structures that are not part of an MDI application.</span></span> <span data-ttu-id="31379-216">此实现可由 <xref:System.Windows.Forms.MainMenu> 或类调用， <xref:System.Windows.Forms.ContextMenu> 以合并派生自的两个或多个对象 <xref:System.Windows.Forms.Menu> 。</span><span class="sxs-lookup"><span data-stu-id="31379-216">This implementation can be called by the <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu> classes to merge two or more objects that derive from <xref:System.Windows.Forms.Menu>.</span></span>  
  
 <span data-ttu-id="31379-217">若要合并两个 <xref:System.Windows.Forms.MenuItem> 对象，请使用 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="31379-217">To merge two <xref:System.Windows.Forms.MenuItem> objects use the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=nameWithType> method.</span></span>
  
## Examples  
 <span data-ttu-id="31379-218">此示例将创建两个菜单： `mainMenu1` 和 `mainMenu2` 。</span><span class="sxs-lookup"><span data-stu-id="31379-218">This example creates two menus, `mainMenu1` and `mainMenu2`.</span></span> <span data-ttu-id="31379-219">第一个菜单包含一个 <xref:System.Windows.Forms.MenuItem> ， `File` ，第二个菜单包含 <xref:System.Windows.Forms.MenuItem> 一个 `Edit` 。</span><span class="sxs-lookup"><span data-stu-id="31379-219">The first menu contains one <xref:System.Windows.Forms.MenuItem>, `File`, and the second contains one <xref:System.Windows.Forms.MenuItem>, `Edit`.</span></span> <span data-ttu-id="31379-220">使用 <xref:System.Windows.Forms.Menu.MergeMenu%2A> 方法， `mainMenu2` 与合并 `mainMenu1` 。</span><span class="sxs-lookup"><span data-stu-id="31379-220">Using the <xref:System.Windows.Forms.Menu.MergeMenu%2A> method, `mainMenu2` is merged with `mainMenu1`.</span></span> <span data-ttu-id="31379-221">显示时， `mainMenu1` 将包含两个菜单项： `File` 和 `Edit` 。</span><span class="sxs-lookup"><span data-stu-id="31379-221">When displayed, `mainMenu1` will contain the two menu items, `File` and `Edit`.</span></span> <span data-ttu-id="31379-222">此示例要求您已创建一个 <xref:System.Windows.Forms.Form> 名为的 `Form1` 。</span><span class="sxs-lookup"><span data-stu-id="31379-222">This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MergeMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MergeMenu/CPP/form1.cpp#1)]
 [!code-csharp[MergeMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MergeMenu/CS/form1.cs#1)]
 [!code-vb[MergeMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MergeMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31379-223">它已尝试将菜单与自己合并在一起。</span><span class="sxs-lookup"><span data-stu-id="31379-223">It was attempted to merge the menu with itself.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Menu.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31379-224">获取或设置 <see cref="T:System.Windows.Forms.Menu" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="31379-224">Gets or sets the name of the <see cref="T:System.Windows.Forms.Menu" />.</span></span></summary>
        <value><span data-ttu-id="31379-225">一个表示名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="31379-225">A string representing the name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-226">在设计时，此属性设置为控件的编程标识符。</span><span class="sxs-lookup"><span data-stu-id="31379-226">At design time, this property is set to the programmatic identifier of the control.</span></span> <span data-ttu-id="31379-227">但在运行时，此属性不会对控件产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="31379-227">However, this property has no bearing on the control at run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="menu.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="31379-228">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，表示要处理的窗口消息。</span><span class="sxs-lookup"><span data-stu-id="31379-228">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="31379-229"><see cref="T:System.Windows.Forms.Keys" /> 值之一，表示要处理的键。</span><span class="sxs-lookup"><span data-stu-id="31379-229">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="31379-230">处理命令键。</span><span class="sxs-lookup"><span data-stu-id="31379-230">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="31379-231">如果字符已由控件处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31379-231"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Menu.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31379-232">获取或设置与控件关联的用户定义的数据。</span><span class="sxs-lookup"><span data-stu-id="31379-232">Gets or sets user-defined data associated with the control.</span></span></summary>
        <value><span data-ttu-id="31379-233">表示数据的对象。</span><span class="sxs-lookup"><span data-stu-id="31379-233">An object representing the data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="menu.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31379-234">返回表示 <see cref="T:System.String" /> 控件的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-234">Returns a <see cref="T:System.String" /> that represents the <see cref="T:System.Windows.Forms.Menu" /> control.</span></span></summary>
        <returns><span data-ttu-id="31379-235">一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="31379-235">A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.Menu" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31379-236"><xref:System.Windows.Forms.Menu.ToString%2A>方法返回一个 <xref:System.String> ，该对象包含控件的属性中的项的类型和数目 <xref:System.Windows.Forms.Menu.MenuItems%2A> 。</span><span class="sxs-lookup"><span data-stu-id="31379-236">The <xref:System.Windows.Forms.Menu.ToString%2A> method returns a <xref:System.String> that includes the type and the number of items in the <xref:System.Windows.Forms.Menu.MenuItems%2A> property of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
