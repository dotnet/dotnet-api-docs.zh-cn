<Type Name="StatusBarPanel" FullName="System.Windows.Forms.StatusBarPanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c46b150f274917b48ed69eec49510c490b344bc" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727088" /></Metadata><TypeSignature Language="C#" Value="public class StatusBarPanel : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatusBarPanel extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBarPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBarPanel&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatusBarPanel : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type StatusBarPanel = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Text")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DesignTimeVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DesignTimeVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.StatusBar" /> 控件中的一个面板。
    
此类在 .NET 5.0 及更高版本中不可用。 改为使用 <see cref="T:System.Windows.Forms.StatusStrip" /> 控件，该控件替换并扩展 <see cref="T:System.Windows.Forms.StatusBar" /> 控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

此类在 .NET 5.0 及更高版本中不可用。 请改用 <see cref="T:System.Windows.Forms.StatusStrip" /> 控件。

 <xref:System.Windows.Forms.StatusBarPanel>表示控件的中的单个面板 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> <xref:System.Windows.Forms.StatusBar> 。 <xref:System.Windows.Forms.StatusBarPanel>可以包含文本和/或图标，可用于反映应用程序的状态。 使用 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 可通过控件的属性访问、 <xref:System.Windows.Forms.StatusBar.Panels%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.StatusBar> 检索、添加或删除个人 <xref:System.Windows.Forms.StatusBarPanel> 。  
  
 <xref:System.Windows.Forms.StatusBarPanel>提供的属性可用于修改控件内面板的显示行为 <xref:System.Windows.Forms.StatusBar> 。 您可以使用 <xref:System.Windows.Forms.StatusBarPanel.Icon%2A> 属性在面板中显示图标。 此属性可用于在应用程序中提供状态的图形化表示形式。 使用 <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> 属性可以指定面板内文本和/或图标的对齐方式。 若要确保面板大小正确调整以适应面板的文本，可以使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 属性来自动调整面板的大小以适合面板的文本或填充控件内的剩余空间 <xref:System.Windows.Forms.StatusBar> 。 使用 <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> 属性可以指定面板的最小宽度，以确保它不会小于其要显示的数据。  
  
 <xref:System.Windows.Forms.StatusBar>控件通常用于显示有关应用程序的帮助信息或状态信息。 通常，要显示有关面板中显示的数据的其他信息，这一点很重要。 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>当鼠标指针停留在面板上时，可以使用属性来显示信息。  
  
 尽管 <xref:System.Windows.Forms.StatusBar> 控件通常用于显示文本信息，但您也可以向提供自己的显示类型 <xref:System.Windows.Forms.StatusBarPanel> 。 <xref:System.Windows.Forms.StatusBarPanel.Style%2A>属性使您能够指定 <xref:System.Windows.Forms.StatusBarPanel> 将如何绘制。 默认情况下， <xref:System.Windows.Forms.StatusBarPanel.Style%2A> 属性用于显示属性的值 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> (和图标（如果在属性) 中指定） <xref:System.Windows.Forms.StatusBarPanel.Icon%2A> 。 如果将属性设置为 <xref:System.Windows.Forms.StatusBarPanelStyle.OwnerDraw> ，则可以在面板中绘制自己的信息。 您可以使用此功能在面板中绘制进度栏或动画图标。  
  
 创建类的实例时 <xref:System.Windows.Forms.StatusBarPanel> ，读/写属性将设置为初始值。 有关这些值的列表，请参见 <xref:System.Windows.Forms.StatusBarPanel.%23ctor%2A> 构造函数。  
  
   
  
## Examples  
 下面的代码示例 <xref:System.Windows.Forms.StatusBar> 在窗体上创建了一个控件并添加了两个 <xref:System.Windows.Forms.StatusBarPanel> 对象。 首先 <xref:System.Windows.Forms.StatusBarPanel> ，命名为 `panel1` ，显示应用程序的状态文本。 第二个 <xref:System.Windows.Forms.StatusBarPanel> 名为的 `panel2` ，它显示当前日期，并使用 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 类的属性 <xref:System.Windows.Forms.StatusBarPanel> 来显示当前时间。 该示例使用 <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> 属性来确保显示面板而不是标准面板，并使用 <xref:System.Windows.Forms.StatusBar.Panels%2A> 属性访问 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> 的方法 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 以将面板添加到中 <xref:System.Windows.Forms.StatusBar> 。 该示例还使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 属性对对象进行初始化 <xref:System.Windows.Forms.StatusBarPanel> 。 此示例假定在示例中定义的方法是从的构造函数定义和调用的 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建的实例时 <xref:System.Windows.Forms.StatusBarPanel> ，以下读/写属性将设置为初始值。  
  
|属性|初始值|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>|<xref:System.Windows.Forms.HorizontalAlignment.Left>|  
|<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>|<xref:System.Windows.Forms.StatusBarPanelAutoSize.None>|  
|<xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>|<xref:System.Windows.Forms.StatusBarPanelBorderStyle.Sunken>|  
|<xref:System.Windows.Forms.StatusBarPanel.Icon%2A>|`null`|  
|<xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>|10|  
|<xref:System.Windows.Forms.StatusBarPanel.Style%2A>|<xref:System.Windows.Forms.StatusBarPanelStyle.Text>|  
|<xref:System.Windows.Forms.StatusBarPanel.Text%2A>|长度为零的字符串。|  
|<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>|长度为零的字符串。|  
|<xref:System.Windows.Forms.StatusBarPanel.Width%2A>|100|  
  
 可以通过单独调用属性来更改任何这些属性的值。  
  
   
  
## Examples  
 下面的代码示例 <xref:System.Windows.Forms.StatusBar> 在窗体上创建了一个控件并添加了两个 <xref:System.Windows.Forms.StatusBarPanel> 对象。 首先 <xref:System.Windows.Forms.StatusBarPanel> ，命名为 `panel1` ，显示应用程序的状态文本。 第二个 <xref:System.Windows.Forms.StatusBarPanel> 名为的 `panel2` ，它显示当前日期，并使用 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 类的属性 <xref:System.Windows.Forms.StatusBarPanel> 来显示当前时间。 该示例使用 <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> 属性来确保显示面板而不是标准面板，并使用 <xref:System.Windows.Forms.StatusBar.Panels%2A> 属性访问 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> 的方法 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 以将面板添加到中 <xref:System.Windows.Forms.StatusBar> 。 该示例还使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 属性对对象进行初始化 <xref:System.Windows.Forms.StatusBarPanel> 。 此示例假定在示例中定义的方法是从的构造函数定义和调用的 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment Alignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.StatusBarPanel.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板中文本和图标的对齐方式。</summary>
        <value><see cref="T:System.Windows.Forms.HorizontalAlignment" /> 值之一。 默认为 <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性在面板的边框内水平对齐分配给该属性的文本和/或图标 <xref:System.Windows.Forms.StatusBarPanel.Icon%2A> 。 文本和图标可与的左对齐、右对齐或居中对齐 <xref:System.Windows.Forms.StatusBarPanel> 。 无法独立定位中的图标 <xref:System.Windows.Forms.StatusBarPanel> 。 例如，您不能将图标定位到的左侧，同时将 <xref:System.Windows.Forms.StatusBarPanel> 文本对齐到右侧。 图标始终定位到文本的左侧，而不考虑文本的对齐方式。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.StatusBar.SizingGrip%2A?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.Width%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 属性，以及如何处理 <xref:System.Windows.Forms.StatusBar.PanelClick?displayProperty=nameWithType> 事件。  
  
 若要运行该示例，请将以下代码粘贴到窗体中。 `InitializeStatusBarPanels`在窗体的构造函数或 <xref:System.Windows.Forms.Form.Load> 事件处理方法中调用方法。  
  
 [!code-cpp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Icon" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelAutoSize AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelAutoSize AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As StatusBarPanelAutoSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelAutoSize AutoSize { System::Windows::Forms::StatusBarPanelAutoSize get(); void set(System::Windows::Forms::StatusBarPanelAutoSize value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : System.Windows.Forms.StatusBarPanelAutoSize with get, set" Usage="System.Windows.Forms.StatusBarPanel.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelAutoSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否自动调整状态栏面板的大小。</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" /> 值之一。 默认为 <see cref="F:System.Windows.Forms.StatusBarPanelAutoSize.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel> 设置为的对象 <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> 优先于将这些面板设置为 <xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring> 值。 例如，如果将属性设置为的，则 <xref:System.Windows.Forms.StatusBarPanel> 其 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 属性设置为时，将 <xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring> 缩短 <xref:System.Windows.Forms.StatusBarPanel> <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> 。  
  
 您可以使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 来确保的内容 <xref:System.Windows.Forms.StatusBarPanel> 在包含多个面板的控件中正确显示 <xref:System.Windows.Forms.StatusBar> 。 例如，你可能需要一个面板，其中包含文本以自动调整到 () 显示的文本量 <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> ，而 <xref:System.Windows.Forms.StatusBar> 显示所有者描述进度栏的的另一个面板需要是固定大小 (<xref:System.Windows.Forms.StatusBarPanelAutoSize.None>) 。  
  
   
  
## Examples  
 下面的代码示例 <xref:System.Windows.Forms.StatusBar> 在窗体上创建了一个控件并添加了两个 <xref:System.Windows.Forms.StatusBarPanel> 对象。 首先 <xref:System.Windows.Forms.StatusBarPanel> ，命名为 `panel1` ，显示应用程序的状态文本。 第二个 <xref:System.Windows.Forms.StatusBarPanel> 名为的 `panel2` ，它显示当前日期，并使用 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 类的属性 <xref:System.Windows.Forms.StatusBarPanel> 来显示当前时间。 该示例使用 <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> 属性来确保显示面板而不是标准面板，并使用 <xref:System.Windows.Forms.StatusBar.Panels%2A> 属性访问 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> 的方法 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 以将面板添加到中 <xref:System.Windows.Forms.StatusBar> 。 该示例还使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 属性对对象进行初始化 <xref:System.Windows.Forms.StatusBarPanel> 。 此示例假定在示例中定义的方法是从的构造函数定义和调用的 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="statusBarPanel.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于开始初始化在窗体上使用或由另一个组件使用的组件。 <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A>方法结束初始化。 使用 <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A> 方法可防止控件在完全初始化之前被使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBarPanel.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelBorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelBorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As StatusBarPanelBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelBorderStyle BorderStyle { System::Windows::Forms::StatusBarPanelBorderStyle get(); void set(System::Windows::Forms::StatusBarPanelBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.StatusBarPanelBorderStyle with get, set" Usage="System.Windows.Forms.StatusBarPanel.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-504)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-504)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板的边框样式。</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" /> 值之一。 默认为 <see cref="F:System.Windows.Forms.StatusBarPanelBorderStyle.Sunken" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性来区分面板与控件中的其他面板 <xref:System.Windows.Forms.StatusBar> 。  
  
   
  
## Examples  
 下面的代码示例 <xref:System.Windows.Forms.StatusBar> 在窗体上创建了一个控件并添加了两个 <xref:System.Windows.Forms.StatusBarPanel> 对象。 首先 <xref:System.Windows.Forms.StatusBarPanel> ，命名为 `panel1` ，显示应用程序的状态文本。 第二个 <xref:System.Windows.Forms.StatusBarPanel> 名为的 `panel2` ，它显示当前日期，并使用 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 类的属性 <xref:System.Windows.Forms.StatusBarPanel> 来显示当前时间。 该示例使用 <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> 属性来确保显示面板而不是标准面板，并使用 <xref:System.Windows.Forms.StatusBar.Panels%2A> 属性访问 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> 的方法 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 以将面板添加到中 <xref:System.Windows.Forms.StatusBar> 。 该示例还使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 属性对对象进行初始化 <xref:System.Windows.Forms.StatusBarPanel> 。 此示例假定在示例中定义的方法是从的构造函数定义和调用的 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="statusBarPanel.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由公共 `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。 `Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true` 。 <xref:System.Object.Finalize%2A>`Dispose`在设置为的情况调用 `disposing` `false` 。  
  
 当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Windows.Forms.StatusBarPanel> 引用的、由任何托管对象持有的全部资源。 此方法将调用每个被引用对象的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> 可以由其他对象多次调用。 当重写时， <see langword="Dispose(Boolean)" /> 请注意不要引用先前在调用时已释放的对象 <see langword="Dispose" /> 。 有关如何实现的详细信息 <see langword="Dispose(Boolean)" /> ，请参阅 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。  
  
有关和的详细 <see langword="Dispose" /> 信息 <see cref="M:System.Object.Finalize" /> ，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="statusBarPanel.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>结束 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于结束其他组件使用的组件的初始化。 <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A>方法启动初始化。 使用 <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A> 方法可防止控件在完全初始化之前被使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBarPanel.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.StatusBarPanel.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要显示在状态栏面板中的图标。</summary>
        <value><see cref="T:System.Drawing.Icon" /> 表示要显示在面板中的图标。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性来显示一个图标，该图标表示应用程序或应用程序中的进程的状态。 例如，可以在中显示一个图标， <xref:System.Windows.Forms.StatusBarPanel> 以指示文件保存操作是否正在进行或完成。  
  
> [!NOTE]
>  无法独立定位中的图标 <xref:System.Windows.Forms.StatusBarPanel> 。 例如，在 <xref:System.Windows.Forms.StatusBarPanel> 使用属性对齐右侧的文本时，不能将图标定位在的左侧 <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> 。 不管文本的对齐方式如何，图标始终定位到面板文本的左侧。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Icon" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public int MinWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : int with get, set" Usage="System.Windows.Forms.StatusBarPanel.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(10)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(10)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.StatusBar" /> 控件中状态栏面板的最小允许宽度。</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanel" /> 的最小宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>当 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 属性设置为 <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> 或 <xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring> 以防止 <xref:System.Windows.Forms.StatusBarPanel> 自动将大小调整到太小的宽度时，使用属性。 当 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 属性设置为时 <xref:System.Windows.Forms.StatusBarPanelAutoSize.None> ，属性将 <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> 自动设置为与属性相同的值 <xref:System.Windows.Forms.StatusBarPanel.Width%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">为该属性指定的值小于零。</exception>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
        <altmember cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.StatusBarPanel.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用于 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的名称。</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanel" /> 的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Name%2A>属性对应于中的的键 <xref:System.Windows.Forms.StatusBarPanel> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As StatusBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBar ^ Parent { System::Windows::Forms::StatusBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.StatusBar" Usage="System.Windows.Forms.StatusBarPanel.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取承载状态栏面板的 <see cref="T:System.Windows.Forms.StatusBar" /> 控件。</summary>
        <value>包含面板的 <see cref="T:System.Windows.Forms.StatusBar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性来确定 <xref:System.Windows.Forms.StatusBar> 中包含的控件 <xref:System.Windows.Forms.StatusBarPanel> 。 <xref:System.Windows.Forms.StatusBarPanel> 通过调用类的方法将对象添加到 <xref:System.Windows.Forms.StatusBar> 控件中 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 。 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> <xref:System.Windows.Forms.StatusBar> 控件的可通过属性进行访问 <xref:System.Windows.Forms.StatusBar.Panels%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBar" />
        <altmember cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As StatusBarPanelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelStyle Style { System::Windows::Forms::StatusBarPanelStyle get(); void set(System::Windows::Forms::StatusBarPanelStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.StatusBarPanelStyle with get, set" Usage="System.Windows.Forms.StatusBarPanel.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板的样式。</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanelStyle" /> 值之一。 默认为 <see cref="F:System.Windows.Forms.StatusBarPanelStyle.Text" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性来指示是 <xref:System.Windows.Forms.StatusBarPanel> 显示文本还是将面板作为所有者描述的管理 <xref:System.Windows.Forms.StatusBarPanel> 。 若要确定何时 <xref:System.Windows.Forms.StatusBarPanel> 需要绘制，请为控件的事件创建事件处理程序 <xref:System.Windows.Forms.StatusBar.DrawItem> <xref:System.Windows.Forms.StatusBar> 。 <xref:System.Windows.Forms.StatusBarDrawItemEventArgs>作为参数传递给事件的事件处理程序的可 <xref:System.Windows.Forms.StatusBar.DrawItem> 用于确定需要绘制的面板。 <xref:System.Windows.Forms.StatusBarDrawItemEventArgs>还提供了一个 <xref:System.Drawing.Graphics> 对象，您可以使用该对象在上执行绘制任务 <xref:System.Windows.Forms.StatusBarPanel> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.StatusBarPanel.Style%2A> 属性、 <xref:System.Windows.Forms.StatusBarDrawItemEventHandler> 委托、 <xref:System.Windows.Forms.StatusBarDrawItemEventArgs> 类、 <xref:System.Windows.Forms.StatusBarPanelStyle> 枚举和 <xref:System.Windows.Forms.StatusBarDrawItemEventArgs.Panel%2A?displayProperty=nameWithType> 属性。 若要运行该示例，请将以下代码粘贴到窗体中。 `InitializeStatusBarPanels`在窗体的构造函数或事件方法中调用方法 <xref:System.Windows.Forms.Form.Load> 。  
  
 [!code-cpp[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">分配给属性的值不是 <see cref="T:System.Windows.Forms.StatusBarPanelStyle" /> 枚举的成员。</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.StatusBarPanel.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置包含有关 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的数据的对象。</summary>
        <value><see cref="T:System.Object" />，包含有关 <see cref="T:System.Windows.Forms.StatusBarPanel" /> 的数据。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.StatusBarPanel.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置状态栏面板的文本。</summary>
        <value>面板中显示的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性表示当属性设置为时显示的文本 <xref:System.Windows.Forms.StatusBarPanel.Style%2A> <xref:System.Windows.Forms.StatusBarPanelStyle.Text> 。 您可以使用此属性在控件中显示有关您的应用程序的信息 <xref:System.Windows.Forms.StatusBar> 。 例如， <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 当用户将鼠标移动到菜单上或显示在应用程序中打开的文件的名称和位置时，可以使用属性来显示帮助信息。 若要在中对齐文本 <xref:System.Windows.Forms.StatusBarPanel> ，请使用 <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例 <xref:System.Windows.Forms.StatusBar> 在窗体上创建了一个控件并添加了两个 <xref:System.Windows.Forms.StatusBarPanel> 对象。 首先 <xref:System.Windows.Forms.StatusBarPanel> ，命名为 `panel1` ，显示应用程序的状态文本。 第二个 <xref:System.Windows.Forms.StatusBarPanel> 名为的 `panel2` ，它显示当前日期，并使用 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 类的属性 <xref:System.Windows.Forms.StatusBarPanel> 来显示当前时间。 该示例使用 <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> 属性来确保显示面板而不是标准面板，并使用 <xref:System.Windows.Forms.StatusBar.Panels%2A> 属性访问 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> 的方法 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 以将面板添加到中 <xref:System.Windows.Forms.StatusBar> 。 该示例还使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 属性对对象进行初始化 <xref:System.Windows.Forms.StatusBarPanel> 。 此示例假定在示例中定义的方法是从的构造函数定义和调用的 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.StatusBarPanel.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与状态栏面板关联的工具提示文本。</summary>
        <value>面板的工具提示文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当鼠标指针停留在上时，可以使用此属性在工具提示中显示附加信息 <xref:System.Windows.Forms.StatusBarPanel> 。 例如，您可以显示一个工具提示，它为 <xref:System.Windows.Forms.StatusBarPanel> 显示文件传输状态的提供数据传输速度。  
  
 若要在应用程序中显示其他控件的工具提示，请使用 <xref:System.Windows.Forms.ToolTip> 控件。  
  
   
  
## Examples  
 下面的代码示例 <xref:System.Windows.Forms.StatusBar> 在窗体上创建了一个控件并添加了两个 <xref:System.Windows.Forms.StatusBarPanel> 对象。 首先 <xref:System.Windows.Forms.StatusBarPanel> ，命名为 `panel1` ，显示应用程序的状态文本。 第二个 <xref:System.Windows.Forms.StatusBarPanel> 名为的 `panel2` ，它显示当前日期，并使用 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 类的属性 <xref:System.Windows.Forms.StatusBarPanel> 来显示当前时间。 该示例使用 <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> 属性来确保显示面板而不是标准面板，并使用 <xref:System.Windows.Forms.StatusBar.Panels%2A> 属性访问 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> 的方法 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> 以将面板添加到中 <xref:System.Windows.Forms.StatusBar> 。 该示例还使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.Text%2A> 属性对对象进行初始化 <xref:System.Windows.Forms.StatusBarPanel> 。 此示例假定在示例中定义的方法是从的构造函数定义和调用的 <xref:System.Windows.Forms.Form> 。  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="statusBarPanel.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索一个字符串，该字符串包含面板的信息。</summary>
        <returns>返回一个字符串，该字符串包含控件的类名以及控件所含的文本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.StatusBarPanel.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(100)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Forms.StatusBar" /> 控件中状态栏面板的宽度。</summary>
        <value><see cref="T:System.Windows.Forms.StatusBarPanel" /> 的宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Width%2A>属性始终反映的实际宽度 <xref:System.Windows.Forms.StatusBarPanel> ，不能小于 <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> 属性。 若要将的宽度自动调整 <xref:System.Windows.Forms.StatusBarPanel> 到的内容 <xref:System.Windows.Forms.StatusBarPanel> ，可使用 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.StatusBar.SizingGrip%2A?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.Width%2A> 、 <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> 和 <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> 属性，以及如何处理 <xref:System.Windows.Forms.StatusBar.PanelClick?displayProperty=nameWithType> 事件。  
  
 若要运行该示例，请将以下代码粘贴到窗体中。 `InitializeStatusBarPanels`在窗体的构造函数或 <xref:System.Windows.Forms.Form.Load> 事件处理方法中调用方法。  
  
 [!code-cpp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的宽度小于 <see cref="P:System.Windows.Forms.StatusBarPanel.MinWidth" /> 属性的值。</exception>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.MinWidth" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
      </Docs>
    </Member>
  </Members>
</Type>
