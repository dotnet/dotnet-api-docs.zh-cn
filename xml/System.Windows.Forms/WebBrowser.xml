<Type Name="WebBrowser" FullName="System.Windows.Forms.WebBrowser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="352e385cbd93849955e0a17a42803cf9b5a53752" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90794929" /></Metadata><TypeSignature Language="C#" Value="public class WebBrowser : System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBrowser extends System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBrowser&#xA;Inherits WebBrowserBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser : System::Windows::Forms::WebBrowserBase" />
  <TypeSignature Language="F#" Value="type WebBrowser = class&#xA;    inherit WebBrowserBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("DocumentCompleted")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("DocumentCompleted")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Url")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Url")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>使用户能够在你的窗体中导航网页。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件使你可以在 Windows 窗体的应用程序中承载网页和其他已启用浏览器的文档。 例如，您可以使用 <xref:System.Windows.Forms.WebBrowser> 控件在您的应用程序中提供基于 HTML 的集成用户协助或 Web 浏览功能。 此外，还可以使用 <xref:System.Windows.Forms.WebBrowser> 控件将现有的基于 Web 的控件添加到 Windows 窗体客户端应用程序。  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.WebBrowser>控件占用大量资源。 请确保在 <xref:System.ComponentModel.Component.Dispose> 使用完控件后调用方法，以确保所有资源及时发布。 必须 <xref:System.ComponentModel.Component.Dispose> 在附加事件的线程上调用方法，该方法应始终为消息或用户界面 (UI) 线程。  
  
 <xref:System.Windows.Forms.WebBrowser>部分受信任的代码不能使用该控件。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 <xref:System.Windows.Forms.WebBrowser>控件具有几个与导航相关的属性、方法和事件。 使用以下成员可以将控件导航到特定 URL，在导航历史记录列表中向后移动，并加载当前用户的主页和搜索页面：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 如果导航未成功，则会显示一个指示问题的页面。 与其中任一成员的导航将导致 <xref:System.Windows.Forms.WebBrowser.Navigating> 、 <xref:System.Windows.Forms.WebBrowser.Navigated> 和 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 事件在导航的不同阶段发生。  
  
 这些成员和其他成员（如 <xref:System.Windows.Forms.WebBrowser.Stop%2A> 和 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法）允许你在应用程序中实现类似于 Internet Explorer 中的用户界面控件。 即使您不希望在窗体上显示控件，某些成员也很有用 <xref:System.Windows.Forms.WebBrowser> 。 例如，您可以使用 <xref:System.Windows.Forms.WebBrowser.Print%2A> 方法来打印最新版本的网页，而不向用户显示该页。  
  
 使用 <xref:System.Windows.Forms.WebBrowser> 控件还可以显示在应用程序中创建的内容，也可以从数据库或资源文件中检索内容。 使用 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> 或 <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> 属性以字符串或数据流的形式获取或设置当前文档的内容。  
  
 您还可以通过属性操作网页的内容 <xref:System.Windows.Forms.WebBrowser.Document%2A> ，该属性包含一个 <xref:System.Windows.Forms.HtmlDocument> 对象，该对象为当前页 (DOM) 提供对 HTML 文档对象模型的托管访问。 此属性与属性结合使用时 <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> ，可在应用程序代码和网页中的动态 HTML (DHTML) 代码之间实现双向通信，从而使你能够将基于 Web 的控件和 Windows 窗体控件合并到一个用户界面中。 您可以使用 <xref:System.Windows.Forms.WebBrowser.Document%2A> 属性从您的应用程序调用脚本代码方法。 脚本代码可通过对象访问应用程序 `window.external` ，该对象是为主机访问提供的内置 DOM 对象，并映射到为属性指定的对象 <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> 。  
  
 <xref:System.Windows.Forms.WebBrowser>控件是 ActiveX [WebBrowser 控件](https://go.microsoft.com/fwlink/?LinkId=198812)的托管包装，并使用用户计算机上安装的任何版本的控件。  
  
> [!NOTE]
>  此类在类级别提出安全要求。 <xref:System.Security.SecurityException>当派生类或调用堆栈中的任何调用方不具有完全信任权限时，将引发。 有关安全要求的详细信息，请参阅 [链接要求](/dotnet/framework/misc/link-demands) 和 [继承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.WebBrowser>类只能在设置为单线程单元 (STA) 模式的线程中使用。 若要使用此类，请确保使用 `Main` 特性标记方法 <xref:System.STAThreadAttribute> 。  
  
   
  
## Examples  
 下面的代码示例演示如何实现用于控件的地址栏 <xref:System.Windows.Forms.WebBrowser> 。 此示例要求您具有一个窗体，该窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 、一个名为的控件 <xref:System.Windows.Forms.TextBox> `TextBoxAddress` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonGo` 。 在文本框中键入 URL 并按 ENTER 或单击 " **开始** " 按钮时， <xref:System.Windows.Forms.WebBrowser> 控件将导航到指定的 url。 通过单击超链接进行导航时，文本框将自动更新以显示当前 URL。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/controls/webbrowser-control-windows-forms">WebBrowser 控件（Windows 窗体）</related>
    <related type="Article" href="/dotnet/framework/misc/using-libraries-from-partially-trusted-code">通过部分受信任的代码使用库</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.WebBrowser" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下， <xref:System.Windows.Forms.WebBrowser> 控件为空。 若要将其定位到初始文档，请设置 <xref:System.Windows.Forms.WebBrowser.Url%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Windows.Forms.WebBrowser" /> 控件承载于 Internet Explorer 中。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNavigation : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示控件在加载其初始页之后是否可以导航到其他页。</summary>
        <value>如果控件可以导航到其他页，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性不会阻止你通过设置或属性加载初始页面， <xref:System.Windows.Forms.WebBrowser.Url%2A> <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> 但会阻止所有后续导航。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWebBrowserDrop">
      <MemberSignature Language="C#" Value="public bool AllowWebBrowserDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWebBrowserDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWebBrowserDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWebBrowserDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWebBrowserDrop : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件是否导航到拖放到它上面的文档。</summary>
        <value>如果控件接受拖放到它上面的文档，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下， <xref:System.Windows.Forms.WebBrowser> 控件会自动导航到拖放到它上面的文档。 使用控件作为一般浏览器时，此行为很有用。 如果使用控件显示专门为您的应用程序设计的内容（例如基于 HTML 的用户帮助），请将 <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> 属性设置为以 `false` 阻止显示其他内容。 当你希望隐藏使用控件的事实时，此方法特别有用 <xref:System.Windows.Forms.WebBrowser> ，例如，创建一个用户界面，该用户界面可以将基于 Web 的控件与 Windows 窗体控件无缝组合。  
  
 您可以通过将 <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> 和属性设置为来禁用其他标准浏览器功能 <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> `false` 。  
  
> [!NOTE]
>  此属性与 <xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=nameWithType> 属性无关，且不会导致控件出现拖放事件，例如 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> 事件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> 属性。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected override void AttachInterfaces (object nativeActiveXObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachInterfaces(object nativeActiveXObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AttachInterfaces (nativeActiveXObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AttachInterfaces(System::Object ^ nativeActiveXObject);" />
      <MemberSignature Language="F#" Value="override this.AttachInterfaces : obj -&gt; unit" Usage="webBrowser.AttachInterfaces nativeActiveXObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeActiveXObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nativeActiveXObject">表示基础 ActiveX 控件的对象。</param>
        <summary>创建基础 ActiveX 控件时由该控件调用。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生类可以重写此方法，以将基础 ActiveX 对象强制转换为相应的接口，并将其缓存到成员变量中。 然后必须在方法的重写中释放此值 <see cref="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces" /> 。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示导航历史记录中的上一页是否可用，如果可用，<see cref="M:System.Windows.Forms.WebBrowser.GoBack" /> 方法才能成功。</summary>
        <value>如果控件可以向后导航，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法 <xref:System.Windows.Forms.WebBrowser> 会将控件导航到此历史记录中的上一页（如果有）。 使用 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> 属性可确定导航历史记录是否可用以及是否包含上一页。 如果此属性为 `true` ，则该 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法将成功。 否则，调用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法将返回值 `false` ，且不会发生导航。  
  
 你还可以处理 <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> 事件，以便在属性更改时接收通知 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> 。 此事件的处理非常有用，例如，当**Back** <xref:System.Windows.Forms.WebBrowser> 控件导航到或离开导航历史记录的开头时，更改 "后退" 按钮的启用状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> 属性来实现控件的 " **后退** " 按钮 <xref:System.Windows.Forms.WebBrowser> ，该按钮类似于 Internet Explorer 中的 " **后退** " 按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `backButton` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoBackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoBackChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoBackChanged As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoBackChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoBackChanged : EventHandler " Usage="member this.CanGoBackChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CanGoBackChanged As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoBack%2A>方法 <xref:System.Windows.Forms.WebBrowser> 会将控件导航到此历史记录中的上一页（如果有）。 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A>属性指示导航历史记录是否可用以及是否包含上一页。 处理 <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> 事件，以便在 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> 属性发生更改时接收通知。 此事件的处理非常有用，例如，当**Back** <xref:System.Windows.Forms.WebBrowser> 控件导航到或离开导航历史记录的开头时，更改 "后退" 按钮的启用状态。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用事件的处理程序 <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> 来实现控件的 " **后退** " 按钮 <xref:System.Windows.Forms.WebBrowser> ，该按钮类似于 Internet Explorer 中的 " **后退** " 按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `backButton` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示导航历史记录中的下一页是否可用，如果可用，<see cref="M:System.Windows.Forms.WebBrowser.GoForward" /> 方法才能成功。</summary>
        <value>如果控件可以向前导航，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>此方法会将 <xref:System.Windows.Forms.WebBrowser> 控件导航到此历史记录中的下一页（如果有）作为以前的反向导航的结果。 如果此属性为 `true` ，则该 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法将成功。 否则，调用 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法将返回值 `false` ，且不会发生导航。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 属性可确定导航历史记录是否可用，以及是否有一个位于当前页面之后的页面，使 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法能够成功。  
  
 你还可以处理 <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> 事件，以便在属性更改时接收通知 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 。 此事件的处理非常有用，例如，当**Forward** <xref:System.Windows.Forms.WebBrowser> 控件导航到或离开导航历史记录的末尾时，更改 "前进" 按钮的启用状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用事件的处理程序 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 来实现控件的 **向前** 按钮 <xref:System.Windows.Forms.WebBrowser> ，该按钮类似于 Internet Explorer 中的 " **转发** " 按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonForward` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoForwardChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoForwardChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoForwardChanged As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoForwardChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoForwardChanged : EventHandler " Usage="member this.CanGoForwardChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CanGoForwardChanged As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>此方法会将 <xref:System.Windows.Forms.WebBrowser> 控件导航到此历史记录中的下一页（如果有）作为以前的反向导航的结果。 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A>属性指示导航历史记录是否可用，以及是否有一个位于当前页面之后的页面，使 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法能够成功。 处理 <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> 事件，以便在 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 属性发生更改时接收通知。 此事件的处理非常有用，例如，当**Forward** <xref:System.Windows.Forms.WebBrowser> 控件导航到或离开导航历史记录的末尾时，更改 "前进" 按钮的启用状态。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法来实现控件的 **向前** 按钮 <xref:System.Windows.Forms.WebBrowser> ，该按钮类似于 Internet Explorer 中的 " **转发** " 按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonForward` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected override void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateSink();" />
      <MemberSignature Language="F#" Value="override this.CreateSink : unit -&gt; unit" Usage="webBrowser.CreateSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使基础 ActiveX 控件与可以处理控件事件的客户端相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你熟悉使用非托管 ActiveX 控件的 OLE 开发 `WebBrowser` 并希望扩展 Windows 窗体控件的功能 <xref:System.Windows.Forms.WebBrowser> （ActiveX 控件的托管包装），则此方法非常有用。 可以使用此扩展性来实现 ActiveX 控件中的包装器控件未提供的事件。  
  
   
  
## Examples  
 下面的代码示例演示如何在派生自的类中使用此方法，该方法使用 <xref:System.Windows.Forms.WebBrowser> OLE 接口中的事件对常规 <xref:System.Windows.Forms.WebBrowser> 事件进行补充 `NavigateError` `DWebBrowserEvents2` 。  
  
 [!code-csharp[WebBrowserExtensibility#00](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#00)]
 [!code-vb[WebBrowserExtensibility#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#00)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.DetachSink" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768283(v=vs.85)">DWebBrowserEvents2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebBrowserSiteBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWebBrowserSiteBase () As WebBrowserSiteBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::WebBrowserSiteBase ^ CreateWebBrowserSiteBase();" />
      <MemberSignature Language="F#" Value="override this.CreateWebBrowserSiteBase : unit -&gt; System.Windows.Forms.WebBrowserSiteBase" Usage="webBrowser.CreateWebBrowserSiteBase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserSiteBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回对非托管 <see langword="WebBrowser" /> ActiveX 控件站点的引用，扩展该站点可以对托管 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件进行自定义。</summary>
        <returns><see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />，表示 <see langword="WebBrowser" /> ActiveX 控件站点。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你熟悉使用非托管 ActiveX 控件的 OLE 开发 `WebBrowser` 并希望扩展 Windows 窗体控件的功能 <xref:System.Windows.Forms.WebBrowser> （ActiveX 控件的托管包装），则此方法非常有用。 例如，你可以使用此扩展性来自定义浏览器快捷菜单和快捷键，或为托管文档提供自定义安全配置。  
  
 若要使用此功能，请实现从和类继承的类 <xref:System.Windows.Forms.WebBrowser> <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> 。 非托管 `WebBrowser` ActiveX 控件使用受保护的 <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> 方法来检索类实现的扩展性接口 <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> 。 重写 <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> 方法以返回你自己的从类继承的类的实例 <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> 。 <xref:System.Windows.Forms.WebBrowser.WebBrowserSite>类提供 OLE 接口的默认实现 `IDocHostUIHandler` 。 你可以提供自己的此接口的实现或实现任何其他 `WebBrowser` ActiveX 控件接口，以便自定义控件的行为。  
  
> [!NOTE]
>  如果为任何成员提供自己的实现 `IDocHostUIHandler` ，则必须实现该接口的所有成员。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa753260(v=vs.85)">IDocHostUIHandler 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取控件的默认大小。</summary>
        <value>获取控件的默认大小。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachInterfaces">
      <MemberSignature Language="C#" Value="protected override void DetachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachInterfaces" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachInterfaces ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachInterfaces();" />
      <MemberSignature Language="F#" Value="override this.DetachInterfaces : unit -&gt; unit" Usage="webBrowser.DetachInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>放弃基础 ActiveX 控件时由该控件调用。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>派生类可以重写此方法，以释放对在方法重写中缓存的基础 ActiveX 对象的引用 <see cref="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)" /> 。</para></block>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected override void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachSink();" />
      <MemberSignature Language="F#" Value="override this.DetachSink : unit -&gt; unit" Usage="webBrowser.DetachSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从基础 ActiveX 控件中释放附加在 <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" /> 方法中的事件处理客户端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你熟悉使用非托管 ActiveX 控件的 OLE 开发 `WebBrowser` 并希望扩展 Windows 窗体控件的功能 <xref:System.Windows.Forms.WebBrowser> （ActiveX 控件的托管包装），则此方法非常有用。 可以使用此扩展性来实现 ActiveX 控件中的包装器控件未提供的事件。  
  
   
  
## Examples  
 下面的代码示例演示如何在派生自的类中使用此方法 <xref:System.Windows.Forms.WebBrowser> ，该方法使用 <xref:System.Windows.Forms.WebBrowser> OLE 接口中的事件对标准事件进行补充 `NavigateError` `DWebBrowserEvents2` 。  
  
 有关完整的代码示例，请参见 <xref:System.Windows.Forms.WebBrowser.CreateSink%2A> 。  
  
 [!code-csharp[WebBrowserExtensibility#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#10)]
 [!code-vb[WebBrowserExtensibility#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.CreateSink" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768283(v=vs.85)">DWebBrowserEvents2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="webBrowser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放由 <see cref="T:System.Windows.Forms.WebBrowser" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.WebBrowser.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Windows.Forms.HtmlDocument" />，它表示当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的网页。</summary>
        <value>表示当前页的 <see cref="T:System.Windows.Forms.HtmlDocument" />，如果未加载任何页，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果希望 <xref:System.Windows.Forms.WebBrowser> 通过 HTML 文档对象模型 (DOM) 访问控件中显示的网页的内容，请使用此属性。 例如，当你想要在 Windows 窗体应用程序中使用基于 Web 的控件时，这很有用。  
  
 可以将此属性与属性结合使用 <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> ，以在控件中显示的网页与应用程序之间实现双向通信 <xref:System.Windows.Forms.WebBrowser> 。 使用 <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> 方法可以从客户端应用程序代码调用网页中实现的脚本方法。 脚本代码可通过对象访问应用程序 `window.external` ，该对象是为主机访问提供的内置 DOM 对象，并映射到为属性指定的对象 <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> 。  
  
 若要以字符串形式访问网页的内容，请使用 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> 属性。 若要以形式访问网页的内容 <xref:System.IO.Stream> ，请使用 <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.WebBrowser.Document%2A> 在事件的处理程序中使用属性 <xref:System.Windows.Forms.WebBrowser.Navigating> 来确定是否已填充网页窗体。 如果输入字段不包含值，则会取消导航。  
  
 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 。  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserDocumentCompletedEventHandler ^ DocumentCompleted;" />
      <MemberSignature Language="F#" Value="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " Usage="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserDocumentCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件完成加载文档时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>当设置以下属性之一或调用方法时，控件将导航到新文档：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 处理在 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 新文档加载完成时接收通知的事件。 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted>事件发生时，将完全加载新文档，这意味着可以通过 <xref:System.Windows.Forms.WebBrowser.Document%2A> 、或属性访问其内容 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> 。  
  
 若要在导航开始之前接收通知，请处理 <xref:System.Windows.Forms.WebBrowser.Navigating> 事件。 如果未满足某些条件（例如，当用户未完全填写表单时），则处理此事件可取消导航。 处理 <xref:System.Windows.Forms.WebBrowser.Navigated> 事件，以便在 <xref:System.Windows.Forms.WebBrowser> 控件完成导航并开始在新位置加载文档时接收通知。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此事件在文档完全加载后打印文档。  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream DocumentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream DocumentStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ DocumentStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStream : System.IO.Stream with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个流，该流包含显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的网页的内容。</summary>
        <value><see cref="T:System.IO.Stream" />，包含当前网页的内容，如果未加载任何页，则为 <see langword="null" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性将网页 <xref:System.Windows.Forms.WebBrowser> 从对象加载到控件中 <xref:System.IO.Stream> 。 例如，您可以使用此属性从数据库或资源文件中加载网页。 设置此属性时，在 <xref:System.Windows.Forms.WebBrowser> 加载指定的文本之前，控件会自动导航到 about：空白 URL。 这意味着 <xref:System.Windows.Forms.WebBrowser.Navigating> ， <xref:System.Windows.Forms.WebBrowser.Navigated> <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 当你设置此属性时，、和事件将发生，并且属性的值 <xref:System.Windows.Forms.WebBrowser.Url%2A> 不再有意义。  
  
> [!NOTE]
>  此属性包含当前文档的内容，即使已请求其他文档也是如此。 如果设置此属性的值，然后立即再次检索它，则检索到的值可能会与设置的值不同，前提是该 <xref:System.Windows.Forms.WebBrowser> 控件没有时间来加载新内容。 可以检索事件处理程序中的新值 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 。  
  
 若要以字符串形式访问网页的内容，请使用 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> 属性。 还可以通过属性 (DOM) 使用 HTML 文档对象模型访问页面内容 <xref:System.Windows.Forms.WebBrowser.Document%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.IO.Stream" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentText">
      <MemberSignature Language="C#" Value="public string DocumentText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentText : string with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的页的 HTML 内容。</summary>
        <value>显示的页的 HTML 文本，如果未加载任何文档，则为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要 <xref:System.Windows.Forms.WebBrowser> 使用字符串处理工具操作控件中显示的 HTML 页面的内容，请使用此属性。 例如，您可以使用此属性从数据库加载页面，或使用正则表达式分析页面。 设置此属性时，在 <xref:System.Windows.Forms.WebBrowser> 加载指定的文本之前，控件会自动导航到 about：空白 URL。 这意味着 <xref:System.Windows.Forms.WebBrowser.Navigating> ， <xref:System.Windows.Forms.WebBrowser.Navigated> <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 当你设置此属性时，、和事件将发生，并且属性的值 <xref:System.Windows.Forms.WebBrowser.Url%2A> 不再有意义。  
  
> [!NOTE]
>  此属性包含当前文档的文本，即使已请求其他文档也是如此。 如果设置此属性的值，然后立即再次检索它，则检索到的值可能会与设置的值不同，前提是该 <xref:System.Windows.Forms.WebBrowser> 控件没有时间来加载新内容。 可以检索事件处理程序中的新值 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 。 或者，您可以通过在循环中调用方法来阻止线程，直到 <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> 属性返回最初设置为的值。  
  
 若要以形式访问网页的内容 <xref:System.IO.Stream> ，请使用 <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> 属性。 还可以通过属性 (DOM) 使用 HTML 文档对象模型访问页面内容 <xref:System.Windows.Forms.WebBrowser.Document%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用属性以 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> 编程方式显示所选的文档内容。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 。  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentTitle : string" Usage="System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档的标题。</summary>
        <value>当前文档的标题，如果未加载任何文档，则为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如，当你想要在应用程序的标题栏中显示文档标题时，此属性很有用。 如果没有为当前文档定义标题，则会将此属性设置为文档位置和文件名。  
  
 处理 <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> 事件，以便在 <xref:System.Windows.Forms.WebBrowser> 控件导航到新文档时更新标题栏中的标题。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> 属性，通过当前文档的标题来更新窗体标题栏。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DocumentTitleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DocumentTitleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentTitleChanged As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DocumentTitleChanged;" />
      <MemberSignature Language="F#" Value="member this.DocumentTitleChanged : EventHandler " Usage="member this.DocumentTitleChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DocumentTitleChanged As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以处理此事件，以便用属性的当前值更新应用程序的标题栏 <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> 。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用事件的处理程序将 <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> 窗体标题栏更新为当前文档的标题。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public string DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : string" Usage="System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档的类型。</summary>
        <value>当前文档的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值对应于多用途 Internet 邮件扩展 (MIME) 类型的文档。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionLevel As WebBrowserEncryptionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserEncryptionLevel EncryptionLevel { System::Windows::Forms::WebBrowserEncryptionLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevel : System.Windows.Forms.WebBrowserEncryptionLevel" Usage="System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserEncryptionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档所使用的加密方法。</summary>
        <value><see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将此属性与事件一起使用 <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> ，以便在应用程序的用户界面中实现指示器，这与 Internet Explorer 中的锁定图标类似。 如果未加密当前文档，则此属性的值为 <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure?displayProperty=nameWithType> 。 当 <xref:System.Windows.Forms.WebBrowser> 控件显示包含多个具有不同加密级别内容的框架的网页时，此属性的值为 <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed?displayProperty=nameWithType> 。 当加密级别未知时，此属性的值为 <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown?displayProperty=nameWithType> 。 其他值表示存在的加密类型。 若要在 Internet Explorer 中模拟锁定图标的行为，请在鼠标指针悬停在指示器上时显示的工具提示中显示加密类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevelChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EncryptionLevelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EncryptionLevelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EncryptionLevelChanged As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EncryptionLevelChanged;" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevelChanged : EventHandler " Usage="member this.EncryptionLevelChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EncryptionLevelChanged As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到或离开使用了加密的网站时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以将此事件与属性一起使用 <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> ，以便在应用程序的用户界面中实现指示器，这与 Internet Explorer 中的锁定图标类似。 在此事件的处理程序中，检查属性的值， <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> 以确定是应隐藏还是显示指示器。 若要在 Internet Explorer 中模拟锁定图标的行为，还可以提供一个工具提示，在鼠标指针悬停在指示器上时显示加密级别。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.WebBrowser> `WebBrowser1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#647](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#647)]
 [!code-vb[System.Windows.Forms.EventExamples#647](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#647)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="FileDownload">
      <MemberSignature Language="C#" Value="public event EventHandler FileDownload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FileDownload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.FileDownload" />
      <MemberSignature Language="VB.NET" Value="Public Event FileDownload As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FileDownload;" />
      <MemberSignature Language="F#" Value="member this.FileDownload : EventHandler " Usage="member this.FileDownload : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FileDownload As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件下载文件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.WebBrowser.FileDownload> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.WebBrowser> `WebBrowser1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.WebBrowser.FileDownload> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#648](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#648)]
 [!code-vb[System.Windows.Forms.EventExamples#648](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#648)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.WebBrowser.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示控件或其任一子窗口是否具有输入焦点。</summary>
        <value>如果控件或其任一子控件已经有输入焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>当在 <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> 派生类中重写属性时，使用基类的 <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> 属性扩展基实现。 否则，必须提供所有实现。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; bool" Usage="webBrowser.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果导航历史记录中的上一页可用，则将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到该页。</summary>
        <returns>如果导航成功，则为 <see langword="true" />；如果导航历史记录中的上一页不可用，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 你可以使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法来实现类似于 Internet Explorer 中的 **后退** 按钮，这将允许你的用户返回到导航历史记录中的上一页。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> 属性可确定导航历史记录是否可用以及是否包含上一页。 处理 <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> 事件，以便在 <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> 属性值更改时接收通知。 此事件的处理非常有用，例如，当**Back** <xref:System.Windows.Forms.WebBrowser> 控件导航到或离开导航历史记录的开头时，更改 "后退" 按钮的启用状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法来实现与 Internet Explorer 中的控件类似的 " **后退** " 按钮 <xref:System.Windows.Forms.WebBrowser> 。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `backButton` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; bool" Usage="webBrowser.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果导航历史记录中的下一页可用，则将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到该页。</summary>
        <returns>如果导航成功，则为 <see langword="true" />；如果导航历史记录中的下一页不可用，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 可以使用 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法来实现与 Internet Explorer 中类似的 " **前进** " 按钮，从而允许用户在向后导航后返回到导航历史记录中的下一页。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 属性可确定导航历史记录是否可用，以及是否包含一个位于当前页面之后的页面。 处理 <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> 事件，以便在 <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> 属性值更改时接收通知。 此事件的处理非常有用，例如，当**Forward** <xref:System.Windows.Forms.WebBrowser> 控件导航到或离开导航历史记录的末尾时，更改 "前进" 按钮的启用状态。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.GoForward%2A> 方法来实现**Forward** <xref:System.Windows.Forms.WebBrowser> 与 Internet Explorer 中的控件类似的 "前进" 按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonForward` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoHome">
      <MemberSignature Language="C#" Value="public void GoHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoHome();" />
      <MemberSignature Language="F#" Value="member this.GoHome : unit -&gt; unit" Usage="webBrowser.GoHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到当前用户的主页。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此方法来实现与 Internet Explorer 中类似的 " **主页** " 按钮。 用户可以在 " **Internet 选项** " 对话框中指定主页，该对话框可从 "控制面板" 或 Internet Explorer 的 " **工具** " 菜单中获取。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.GoHome%2A> 方法来实现控件的 " **主页** " 按钮，该按钮 <xref:System.Windows.Forms.WebBrowser> 类似于 Internet Explorer 中的控件。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonHome` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#11)]
 [!code-csharp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.WebBrowser#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="GoSearch">
      <MemberSignature Language="C#" Value="public void GoSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoSearch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoSearch" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoSearch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoSearch();" />
      <MemberSignature Language="F#" Value="member this.GoSearch : unit -&gt; unit" Usage="webBrowser.GoSearch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到当前用户的默认搜索页。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于实现与 Internet Explorer 中类似的搜索功能。 根据安装的 Internet Explorer 版本，用户可以在 " **Internet 选项** " 对话框中指定默认搜索页面，该对话框可从 "控制面板" 中或在 Internet Explorer 的 " **工具** " 菜单中找到。  
  
 默认搜索页面存储在注册表项下的注册表 `HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Search Page` 项下。 对于更高版本的 Internet Explorer，必须修改此注册表项才能更改此方法使用的默认搜索页。 若要使用除默认值以外的搜索页，请调用 <xref:System.Windows.Forms.WebBrowser.Navigate%2A> 方法或指定 <xref:System.Windows.Forms.WebBrowser.Url%2A> 属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.GoSearch%2A> 方法来实现**Search** <xref:System.Windows.Forms.WebBrowser> 与 Internet Explorer 中的控件类似的搜索按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonSearch` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#12)]
 [!code-csharp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.WebBrowser#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件当前是否正在加载新文档。</summary>
        <value>如果控件正在加载文档，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此属性为 `true` ，则可以使用 <xref:System.Windows.Forms.WebBrowser.Stop%2A> 方法暂停当前导航，然后再完全加载新文档。 使用 <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> 属性可确定控件的确切导航状态 <xref:System.Windows.Forms.WebBrowser> 。 <xref:System.Windows.Forms.WebBrowser.IsBusy%2A>当属性值为时，属性值为 false <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.ReadyState" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件是否处于脱机模式。</summary>
        <value>如果 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件处于脱机模式，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在脱机模式下， <xref:System.Windows.Forms.WebBrowser> 强制控件从本地缓存加载网页，而不是下载网页。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="IsWebBrowserContextMenuEnabled">
      <MemberSignature Language="C#" Value="public bool IsWebBrowserContextMenuEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWebBrowserContextMenuEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebBrowserContextMenuEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsWebBrowserContextMenuEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件是否启用了快捷菜单。</summary>
        <value>如果启用了 <see langword="true" /> 控件快捷菜单，则为 <see cref="T:System.Windows.Forms.WebBrowser" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下， <xref:System.Windows.Forms.WebBrowser> 当用户右键单击控件时，该控件将显示快捷菜单。 使用控件作为一般浏览器时，此行为很有用。 如果要隐藏使用控件的事实 <xref:System.Windows.Forms.WebBrowser> ，例如，若要创建将基于 Web 的控件与 Windows 窗体控件无缝组合的用户界面，请将 <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> 属性设置为 false。  
  
 您可以通过将 <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> 和属性设置为 false 来禁用其他标准的浏览器功能 <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> 属性。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将指定位置的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="webBrowser.Navigate urlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换上一个文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当你调用此重载时， <xref:System.Windows.Forms.WebBrowser> 控件导航到指定的 URI 并将其添加到历史记录列表的末尾。 使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法可将控件返回到导航历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>向后导航后，使用方法返回导航历史记录中的后续页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
 可以使用 <xref:System.Windows.Forms.WebBrowser.Navigate%2A> 方法来实现类似于 Internet Explorer 中的地址栏。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="webBrowser.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换上一个文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当你调用此重载时， <xref:System.Windows.Forms.WebBrowser> 控件导航到指定的 URI 并将其添加到历史记录列表的末尾。 使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法可将控件返回到导航历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>向后导航后，使用方法返回导航历史记录中的后续页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
 可以使用 <xref:System.Windows.Forms.WebBrowser.Navigate%2A> 方法来实现类似于 Internet Explorer 中的地址栏。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.Navigate%2A> 方法实现控件的地址栏 <xref:System.Windows.Forms.WebBrowser> 。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 、一个名为的控件 <xref:System.Windows.Forms.TextBox> `TextBoxAddress` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonGo` 。 在文本框中键入 URL 并按 ENTER 或单击 " **开始** " 按钮时， <xref:System.Windows.Forms.WebBrowser> 控件将导航到指定的 url。 通过单击超链接进行导航时，文本框将自动更新以显示当前 URL。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="url" /> 参数值不表示绝对 URI。 有关详细信息，请参阅 <see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * bool -&gt; unit" Usage="webBrowser.Navigate (urlString, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <param name="newWindow">若要将文档加载到浏览器新窗口中，则为 <see langword="true" />；若要将文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，则为 <see langword="false" />。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到浏览器新窗口或 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当使用参数值调用此重载时 `newWindow` `false` ，控件通常会导航到指定的 URI，并将 URI 添加到历史记录列表的末尾。 当使用参数值调用此重载时 `newWindow` `true` ， <xref:System.Windows.Forms.WebBrowser> 控件将在指定的 URI 处将文档加载到新的 Internet Explorer 窗口，该窗口将维护自己的导航历史记录。 你可以处理 <xref:System.Windows.Forms.WebBrowser.NewWindow> 事件，以便在打开新浏览器窗口之前接收通知，以便在必要时取消操作。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到页面或将页面加载到单独的浏览器窗口时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。 当页面加载到单独的 Internet Explorer 窗口中时，用户可以通过单击 " **刷新** " 按钮来检索最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当你调用此重载时， <xref:System.Windows.Forms.WebBrowser> 控件将指定的 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的帧名称无效，则会将文档加载到新的 Internet Explorer 窗口中。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法可将控件返回到导航历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>向后导航后，使用方法返回导航历史记录中的后续页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * bool -&gt; unit" Usage="webBrowser.Navigate (url, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <param name="newWindow">若要将文档加载到浏览器新窗口中，则为 <see langword="true" />；若要将文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，则为 <see langword="false" />。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到浏览器新窗口或 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当使用参数值调用此重载时 `newWindow` `false` ，控件通常会导航到指定的 URI，并将 URI 添加到历史记录列表的末尾。 当使用参数值调用此重载时 `newWindow` `true` ， <xref:System.Windows.Forms.WebBrowser> 控件将在指定的 URI 处将文档加载到新的 Internet Explorer 窗口，该窗口将维护自己的导航历史记录。 你可以处理 <xref:System.Windows.Forms.WebBrowser.NewWindow> 事件，以便在打开新浏览器窗口之前接收通知，以便在必要时取消操作。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到页面或将页面加载到单独的浏览器窗口时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。 当页面加载到单独的 Internet Explorer 窗口中时，用户可以通过单击 " **刷新** " 按钮来检索最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="url" /> 参数值不表示绝对 URI。 有关详细信息，请参阅 <see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当你调用此重载时， <xref:System.Windows.Forms.WebBrowser> 控件将指定的 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的帧名称无效，则会将文档加载到新的 Internet Explorer 窗口中。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法可将控件返回到导航历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>向后导航后，使用方法返回导航历史记录中的后续页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="url" /> 参数值不表示绝对 URI。 有关详细信息，请参阅 <see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <param name="postData">HTTP POST 数据，例如窗体数据。</param>
        <param name="additionalHeaders">要添加到默认标头中的 HTTP 标头。</param>
        <summary>将指定的统一资源定位器 (URL) 处的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，使用指定 HTTP 数据请求该文档并替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当你调用此重载时， <xref:System.Windows.Forms.WebBrowser> 控件将指定的 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的帧名称无效，则会将文档加载到新的 Internet Explorer 窗口中。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法可将控件返回到导航历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>向后导航后，使用方法返回导航历史记录中的后续页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" />，表示要加载的文档的 URL。</param>
        <param name="targetFrameName">要在其中加载文档的框架的名称。</param>
        <param name="postData">HTTP POST 数据，例如窗体数据。</param>
        <param name="additionalHeaders">要添加到默认标头中的 HTTP 标头。</param>
        <summary>将指定的 <see cref="T:System.Uri" /> 所指示的位置上的文档加载到 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中，使用指定 HTTP 数据请求该文档并替换具有指定名称的网页框架的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 当你调用此重载时， <xref:System.Windows.Forms.WebBrowser> 控件将指定的 URI 处的文档加载到具有指定名称的网页框架，并将 URI 添加到历史记录列表的末尾。 如果指定的帧名称无效，则会将文档加载到新的 Internet Explorer 窗口中。  
  
 使用 <xref:System.Windows.Forms.WebBrowser.GoBack%2A> 方法可将控件返回到导航历史记录中的上一页。 <xref:System.Windows.Forms.WebBrowser.GoForward%2A>向后导航后，使用方法返回导航历史记录中的后续页面。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="url" /> 参数值不表示绝对 URI。 有关详细信息，请参阅 <see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As WebBrowserNavigatedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " Usage="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As WebBrowserNavigatedEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到新文档并开始加载该文档时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>当设置以下属性之一或调用方法时，控件将导航到新文档：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 处理 <xref:System.Windows.Forms.WebBrowser.Navigated> 事件，以便在 <xref:System.Windows.Forms.WebBrowser> 控件导航到新文档时接收通知。 当 <xref:System.Windows.Forms.WebBrowser.Navigated> 事件发生时，新文档开始加载，这意味着您可以通过 <xref:System.Windows.Forms.WebBrowser.Document%2A> 、和属性访问加载的内容 <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> 。 处理 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 事件，以便在 <xref:System.Windows.Forms.WebBrowser> 控件完成加载新文档时接收通知。  
  
 你还可以在导航开始之前通过处理事件来接收通知 <xref:System.Windows.Forms.WebBrowser.Navigating> 。 如果尚未满足某些条件，则处理此事件可取消导航，例如，用户未完全填写表单。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用事件的处理程序 <xref:System.Windows.Forms.WebBrowser.Navigated> 来实现控件的地址栏 <xref:System.Windows.Forms.WebBrowser> 。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 、一个名为的控件 <xref:System.Windows.Forms.TextBox> `TextBoxAddress` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonGo` 。 在文本框中键入 URL 并按 ENTER 或单击 " **开始** " 按钮时， <xref:System.Windows.Forms.WebBrowser> 控件将导航到指定的 url。 通过单击超链接进行导航时，文本框将自动更新以显示当前 URL。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As WebBrowserNavigatingEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatingEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " Usage="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As WebBrowserNavigatingEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件导航到新文档之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>当设置以下属性之一或调用方法时，控件将导航到新文档：  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 <xref:System.Windows.Forms.WebBrowser.Navigating>如果尚未满足某些条件（例如，当用户未完全填写表单时），则可以处理事件以取消导航。 若要取消导航，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs> 传递到事件处理程序的对象的属性设置为 `true` 。 还可以使用此对象通过属性检索新文档的 URL <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=nameWithType> 。 如果新文档将显示在网页框架中，则可以通过属性检索框架的名称 <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=nameWithType> 。  
  
 处理 <xref:System.Windows.Forms.WebBrowser.Navigated> 事件，以便在 <xref:System.Windows.Forms.WebBrowser> 控件完成导航并开始在新位置加载文档时接收通知。 处理 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 事件，以便在 <xref:System.Windows.Forms.WebBrowser> 控件完成加载新文档时接收通知。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用事件的处理程序在 <xref:System.Windows.Forms.WebBrowser.Navigating> 未填充网页窗体时取消导航。 <xref:System.Windows.Forms.WebBrowser.Document%2A>属性用于确定窗体输入字段是否包含值。  
  
 此示例要求您的窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件， `webBrowser1` 并且您的窗体类具有可供 COM 使用的控件 <xref:System.Runtime.InteropServices.ComVisibleAttribute> 。  
  
 有关可以将以下代码粘贴到的完整代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler NewWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler NewWindow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Event NewWindow As CancelEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ NewWindow;" />
      <MemberSignature Language="F#" Value="member this.NewWindow : System.ComponentModel.CancelEventHandler " Usage="member this.NewWindow : System.ComponentModel.CancelEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NewWindow As CancelEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在浏览器新窗口打开之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Windows.Forms.WebBrowser> 鼠标指针悬停在超链接上时，控件将打开一个单独的浏览器窗口，当调用方法的适当重载 <xref:System.Windows.Forms.WebBrowser.Navigate%2A> 或用户单击浏览器快捷菜单上的 " **在新窗口中打开** " 选项时。 可以通过将属性设置为 false 来禁用快捷菜单 <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> 。  
  
 <xref:System.Windows.Forms.WebBrowser.NewWindow>事件发生在新的浏览器窗口打开之前。 例如，你可以处理此事件，以便在未满足某些条件时阻止窗口打开。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.WebBrowser.NewWindow> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.WebBrowser> `WebBrowser1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.WebBrowser.NewWindow> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#651](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#651)]
 [!code-vb[System.Windows.Forms.EventExamples#651](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#651)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectForScripting : obj with get, set" Usage="System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个对象，该对象可由显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的网页所包含的脚本代码访问。</summary>
        <value>可用于脚本代码的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可以启用由控件承载的网页 <xref:System.Windows.Forms.WebBrowser> 与包含控件的应用程序之间的通信 <xref:System.Windows.Forms.WebBrowser> 。 此属性使你能够将动态 HTML (DHTML) 代码与客户端应用程序代码集成。 为此属性指定的对象作为对象提供给网页脚本 `window.external` ，后者是为主机访问提供的内置 DOM 对象。  
  
 您可以将此属性设置为您希望其公共属性和方法可用于脚本代码的任何 COM 可见的对象。 可以通过使用标记来使类成为 COM 可见的 <xref:System.Runtime.InteropServices.ComVisibleAttribute> 。  
  
 若要从客户端应用程序代码调用网页中定义的函数，请使用 <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.HtmlDocument> 可以从属性中检索的对象的方法 <xref:System.Windows.Forms.WebBrowser.Document%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> 属性。 在此示例中， <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> 属性设置为当前窗体。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置该属性时指定的值为非公共类型的实例。  
  
- 或 - 
设置该属性时指定的值为非 COM 可见的类型的实例。 有关详细信息，请参阅 <see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoBackChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoBackChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoBackChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoBackChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoBackChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoBackChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoBackChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoBackChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnCanGoBackChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoForwardChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoForwardChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoForwardChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoForwardChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoForwardChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoForwardChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoForwardChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoForwardChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentCompleted(class System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentCompleted (e As WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentCompleted(System::Windows::Forms::WebBrowserDocumentCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit&#xA;override this.OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit" Usage="webBrowser.OnDocumentCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnDocumentCompleted%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTitleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTitleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentTitleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentTitleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentTitleChanged : EventArgs -&gt; unit&#xA;override this.OnDocumentTitleChanged : EventArgs -&gt; unit" Usage="webBrowser.OnDocumentTitleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnEncryptionLevelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEncryptionLevelChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEncryptionLevelChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEncryptionLevelChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEncryptionLevelChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEncryptionLevelChanged : EventArgs -&gt; unit&#xA;override this.OnEncryptionLevelChanged : EventArgs -&gt; unit" Usage="webBrowser.OnEncryptionLevelChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFileDownload">
      <MemberSignature Language="C#" Value="protected virtual void OnFileDownload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFileDownload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFileDownload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFileDownload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFileDownload : EventArgs -&gt; unit&#xA;override this.OnFileDownload : EventArgs -&gt; unit" Usage="webBrowser.OnFileDownload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnFileDownload%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.FileDownload" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Forms.WebBrowserNavigatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Forms::WebBrowserNavigatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit&#xA;override this.OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit" Usage="webBrowser.OnNavigated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.Navigated" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnNavigated%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Forms.WebBrowserNavigatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Forms::WebBrowserNavigatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit&#xA;override this.OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit" Usage="webBrowser.OnNavigating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.Navigating" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnNavigating%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNewWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewWindow(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewWindow (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewWindow(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="webBrowser.OnNewWindow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnNewWindow%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.Windows.Forms.WebBrowserProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::Windows::Forms::WebBrowserProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit" Usage="webBrowser.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnProgressChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStatusTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStatusTextChanged : EventArgs -&gt; unit&#xA;override this.OnStatusTextChanged : EventArgs -&gt; unit" Usage="webBrowser.OnStatusTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Windows.Forms.WebBrowser.OnStatusTextChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类中重写 <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.WebBrowser.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此属性对于此控件无意义。</summary>
        <value><see cref="F:System.Windows.Forms.Padding.Empty" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="P:System.Windows.Forms.WebBrowser.Padding" /> 属性的值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虽然您可以通过处理此事件来获取或设置属性的值 <xref:System.Windows.Forms.WebBrowser.Padding%2A> 并对更改做出响应，但填充属性对此控件没有意义。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Padding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="webBrowser.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用当前打印和页面设置打印当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此方法来实现类似于 Internet Explorer 中的 " **打印** " 按钮。 此方法打印当前文档，而无需进一步的用户输入。 若要在打印之前显示 " **打印** " 对话框，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> 方法。 若要显示 " **页面设置** " 对话框，该对话框允许用户指定页眉和页脚值以及其他页面设置，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> 方法。 若要显示 " **打印预览** " 对话框，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.Print%2A> 方法来实现控件的 **打印** 按钮 <xref:System.Windows.Forms.WebBrowser> ，该按钮类似于 Internet Explorer 中的 " **打印** " 按钮。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonPrint` 。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.WebBrowser#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ProgressChanged As WebBrowserProgressChangedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " Usage="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProgressChanged As WebBrowserProgressChangedEventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件已更新有关要导航到的文档的下载进度的信息时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用此事件的处理程序来实现类似于 Internet Explorer 中的导航进度栏。 使用 <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=nameWithType> 属性来确定已成功下载的字节数。 使用 <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=nameWithType> 属性来确定可供下载的总字节数。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.WebBrowser.ProgressChanged> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。 若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.WebBrowser> `WebBrowser1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.WebBrowser.ProgressChanged> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#652](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#652)]
 [!code-vb[System.Windows.Forms.EventExamples#652](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#652)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ReadyState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserReadyState ReadyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadyState As WebBrowserReadyState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserReadyState ReadyState { System::Windows::Forms::WebBrowserReadyState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadyState : System.Windows.Forms.WebBrowserReadyState" Usage="System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserReadyState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件的当前状态。</summary>
        <value><see cref="T:System.Windows.Forms.WebBrowserReadyState" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> <xref:System.Windows.Forms.WebBrowser> 当你需要的信息超过属性提供的信息时，可以使用属性来检索控件的特定状态 <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> 。  
  
 当 <xref:System.Windows.Forms.WebBrowser> 控件不包含文档时，此属性的值为 <xref:System.Windows.Forms.WebBrowserReadyState.Uninitialized?displayProperty=nameWithType> 。 其他值表示当导航到新文档时的控件状态。 这些值包括 <xref:System.Windows.Forms.WebBrowserReadyState.Loading?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.WebBrowserReadyState.Loaded?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.WebBrowserReadyState.Interactive?displayProperty=nameWithType> 和 <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsBusy" />
        <altmember cref="T:System.Windows.Forms.WebBrowserReadyState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>重新加载当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="webBrowser.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通过检查服务器获取更新版本，重新加载当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 <xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。 您可以使用此方法来实现与 Internet Explorer 中类似的 **刷新** 按钮。  
  
> [!NOTE]
>  文档刷新只是重新加载当前页，因此 <xref:System.Windows.Forms.WebBrowser.Navigating> ，在 <xref:System.Windows.Forms.WebBrowser.Navigated> <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 调用方法时不会发生、和事件 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法来实现与 Internet Explorer 中的控件类似的 " **刷新** " 按钮 <xref:System.Windows.Forms.WebBrowser> 。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonRefresh` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.WebBrowser#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Windows.Forms.WebBrowserRefreshOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (opt As WebBrowserRefreshOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Windows::Forms::WebBrowserRefreshOption opt);" />
      <MemberSignature Language="F#" Value="override this.Refresh : System.Windows.Forms.WebBrowserRefreshOption -&gt; unit" Usage="webBrowser.Refresh opt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opt" Type="System.Windows.Forms.WebBrowserRefreshOption" />
      </Parameters>
      <Docs>
        <param name="opt"><see cref="T:System.Windows.Forms.WebBrowserRefreshOption" /> 值之一。</param>
        <summary>使用指定的刷新选项重新加载当前显示在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中的文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 <xref:System.Windows.Forms.WebBrowser.Refresh%2A>方法强制 <xref:System.Windows.Forms.WebBrowser> 控件重新加载当前页。 重载的类型取决于指定的 <xref:System.Windows.Forms.WebBrowserRefreshOption> 值。 如果调用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 具有值的方法 <xref:System.Windows.Forms.WebBrowserRefreshOption.Completely?displayProperty=nameWithType> ，则会下载该文档的最新版本。 如果使用 <xref:System.Windows.Forms.WebBrowserRefreshOption.IfExpired?displayProperty=nameWithType> 值，则仅当当前文档已过期时才下载最新版本。 如果使用 <xref:System.Windows.Forms.WebBrowserRefreshOption.Normal?displayProperty=nameWithType> 值，则服务器将发送其自己的缓存中存储的文档的副本。  
  
> [!NOTE]
>  文档刷新只是重新加载当前页，因此 <xref:System.Windows.Forms.WebBrowser.Navigating> ，在 <xref:System.Windows.Forms.WebBrowser.Navigated> <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 调用方法时不会发生、和事件 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="ScriptErrorsSuppressed">
      <MemberSignature Language="C#" Value="public bool ScriptErrorsSuppressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptErrorsSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptErrorsSuppressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptErrorsSuppressed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptErrorsSuppressed : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 是否显示对话框，如脚本错误消息。</summary>
        <value>如果控件不显示其对话框，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将此属性设置为 `false` 可调试在控件中显示的网页 <xref:System.Windows.Forms.WebBrowser> 。 当您使用控件将基于 Web 的控件和脚本代码添加到您的应用程序中时，这非常有用。 使用控件作为一般浏览器时，此方法不太有用。 调试完应用程序后，请将此属性设置为， `true` 以取消显示脚本错误。  
  
> [!NOTE]
>  当 <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> 设置为时 `true` ， <xref:System.Windows.Forms.WebBrowser> 控件将隐藏源自基础 ActiveX 控件的所有对话框，而不只是脚本错误。 有时，可能需要在显示对话框（例如用于浏览器安全设置和用户登录的对话框）时禁止显示脚本错误。 在这种情况下，将设置 <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> 为， `false` 并在事件的处理程序中禁止显示脚本错误 <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> 。 有关详细信息，请参阅本主题中的代码示例。  
  
   
  
## Examples  
 下面的代码示例演示如何在不取消其他对话框的情况下禁止显示脚本错误。 在此示例中， <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> 属性设置为， `false` 以确保显示对话框。 事件的处理程序 <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> 禁止显示错误。 此事件仅在文档加载完成时才可访问，因此处理程序将附加到 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 事件处理程序中。  
  
 [!code-csharp[WebBrowserMisc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#40)]
 [!code-vb[WebBrowserMisc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser control</see>（WebBrowser 控件）检索到对 <see href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752127(v=vs.85)">IWebBrowser2 interface</see>（IWebBrowser2 接口）的实现的引用。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarsEnabled">
      <MemberSignature Language="C#" Value="public bool ScrollBarsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollBarsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBarsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollBarsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBarsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中显示滚动条。</summary>
        <value>如果在控件中显示滚动条，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 true。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此属性的值为 `true` ，则仅当页面内容大于浏览器窗口时才显示滚动条。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPageSetupDialog">
      <MemberSignature Language="C#" Value="public void ShowPageSetupDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPageSetupDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPageSetupDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPageSetupDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPageSetupDialog : unit -&gt; unit" Usage="webBrowser.ShowPageSetupDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer“页面设置”对话框****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于实现与 Internet Explorer "**文件**" 菜单上的 "页面设置" 菜单项类似的 "**页面设置**" 菜单项。 此方法显示 " **页面设置** " 对话框，该对话框允许用户在打印前指定页眉和页脚值以及其他页面设置。 若要打印当前文档，请使用 <xref:System.Windows.Forms.WebBrowser.Print%2A> 方法或 <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> 方法。 若要显示 " **打印预览** " 对话框，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> 方法来实现 **页面设置** 菜单选项，此选项与 Internet Explorer 的 " **文件** " 菜单上的选项类似。 此示例要求您的窗体包含一个菜单项 `MenuItemFilePageSetup` ，并且有一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer 的“打印”对话框，但不设置页眉或页脚值****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可用于实现与 Internet Explorer "**文件**" 菜单上的 "打印" 菜单项类似的 "**打印**" 菜单项。 此方法显示 " **打印** " 对话框，允许用户在打印之前修改打印设置。 若要让用户在打印之前指定页面设置，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> 方法。 若要显示 " **打印预览** " 对话框，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> 方法来实现 **打印** 菜单选项，此选项与 Internet Explorer 的 " **文件** " 菜单上的选项类似。 此示例要求窗体包含一个菜单项名为的菜单项 `MenuItemFilePrint` 和一个 <xref:System.Windows.Forms.WebBrowser> 名为的控件 `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintPreviewDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintPreviewDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintPreviewDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintPreviewDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintPreviewDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintPreviewDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintPreviewDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer 的“打印预览”对话框****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此方法实现与 Internet Explorer 的 "**文件**" 菜单上的 "打印预览" 菜单项类似的 "**打印预览**" 菜单项。 此方法显示 " **打印预览** " 对话框，允许用户查看当前文档在打印时的显示方式。 若要让用户在打印之前指定页面设置，请使用 <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> 方法。 若要打印当前文档，请使用 <xref:System.Windows.Forms.WebBrowser.Print%2A> 方法或 <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> 方法来实现 **打印预览** 菜单选项，此选项与 Internet Explorer 的 " **文件** " 菜单上的选项类似。 此示例要求窗体包含一个菜单，其中包含名为的菜单项 `MenuItemFilePrintPreview` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.WebBrowser#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPropertiesDialog">
      <MemberSignature Language="C#" Value="public void ShowPropertiesDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertiesDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPropertiesDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPropertiesDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPropertiesDialog : unit -&gt; unit" Usage="webBrowser.ShowPropertiesDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开当前文档的 Internet Explorer“属性”对话框****。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此方法来实现与 Internet Explorer 的 "**文件**" 菜单上的 "**属性**" 菜单选项相似的选项。 此方法将显示 " **属性** " 对话框，其中包含当前文档的相关信息，例如其类型、URL、大小以及创建和修改的日期。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.ShowPropertiesDialog%2A> 方法来实现 " **属性** " 菜单选项，此选项与 Internet Explorer 的 " **文件** " 菜单上的选项类似。 此示例要求窗体包含一个菜单项名为的菜单项 `MenuItemFileProperties` 和一个 <xref:System.Windows.Forms.WebBrowser> 名为的控件 `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.WebBrowser#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSaveAsDialog">
      <MemberSignature Language="C#" Value="public void ShowSaveAsDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSaveAsDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowSaveAsDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowSaveAsDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowSaveAsDialog : unit -&gt; unit" Usage="webBrowser.ShowSaveAsDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 Internet Explorer 的“保存网页”对话框，如果承载的文档不是 HTML 页，则打开其“保存”对话框********。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此方法来实现类似于 Internet Explorer 的 "**文件**" 菜单上的 "**另存为**" 菜单项。 调用此方法时出现的对话框取决于当前加载的文档类型。  
  
> [!NOTE]
>  此方法允许用户仅保存原始加载的文档内容。 在运行时通过属性对文档所做的任何修改 <xref:System.Windows.Forms.WebBrowser.Document%2A> 都不会保留。 有关检索运行时修改的信息，请参阅 [如何：访问托管 html 文档对象模型中的 HTML 源](/dotnet/framework/winforms/controls/how-to-access-the-html-source-in-the-managed-html-document-object-model)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> 方法来实现 " **另存为** " 菜单选项，此选项与 Internet Explorer 的 " **文件** " 菜单中的选项类似。 此示例要求您的窗体包含一个菜单项 `MenuItemFileSaveAs` ，并且有一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
      </Docs>
    </Member>
    <Member MemberName="StatusText">
      <MemberSignature Language="C#" Value="public virtual string StatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.StatusText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StatusText : string" Usage="System.Windows.Forms.WebBrowser.StatusText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件的状态文本。</summary>
        <value>状态文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性 <xref:System.Windows.Forms.WebBrowser> 在状态栏中显示控件的状态。 状态文本是一条消息，其中包含当鼠标指针悬停在超链接的 URL 和当前正在加载的文档的 URL 时。 处理 <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> 事件，以在属性的值更改时更新状态栏 <xref:System.Windows.Forms.WebBrowser.StatusText%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.StatusText%2A> 属性来实现 <xref:System.Windows.Forms.WebBrowser> 与 Internet Explorer 中类似的控件的状态栏。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.StatusBar> 控件 `StatusBar1` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="StatusTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusTextChanged As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusTextChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusTextChanged : EventHandler " Usage="member this.StatusTextChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatusTextChanged As EventHandler " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Forms.WebBrowser.StatusText" /> 属性值更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当属性的值更改时，处理此事件以更新状态栏 <xref:System.Windows.Forms.WebBrowser.StatusText%2A> 。  
  
 有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用事件的处理程序 <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> 来实现控件的状态栏，此状态栏 <xref:System.Windows.Forms.WebBrowser> 与 Internet Explorer 中的控件类似。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.StatusBar> 控件 `StatusBar1` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="webBrowser.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消所有挂起的导航并停止所有动态页元素（如背景声音和动画）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用 <xref:System.Windows.Forms.WebBrowser.Stop%2A> 方法来实现类似于 Internet Explorer 中的 " **停止** " 按钮。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.Stop%2A> 方法来实现控件的 " **停止** " 按钮，该按钮 <xref:System.Windows.Forms.WebBrowser> 类似于 Internet Explorer 中的控件。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonStop` 。  
  
 有关完整的代码示例，请参阅 [如何：将 Web 浏览器功能添加到 Windows 窗体应用程序](/dotnet/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application)。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.WebBrowser#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri with get, set" Usage="System.Windows.Forms.WebBrowser.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前文档的 URL。</summary>
        <value><see cref="T:System.Uri" />，表示当前文档的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性等效于调用 <xref:System.Windows.Forms.WebBrowser.Navigate%2A> 方法并向其传递指定的 URL。  
  
 <xref:System.Windows.Forms.WebBrowser>控件维护在浏览会话期间访问的所有网页的历史记录列表。 设置 <xref:System.Windows.Forms.WebBrowser.Url%2A> 属性时， <xref:System.Windows.Forms.WebBrowser> 控件导航到指定的 URL，并将其添加到历史记录列表的末尾。  
  
 <xref:System.Windows.Forms.WebBrowser>控件将最近访问过的站点中的网页存储在本地硬盘上的缓存中。 每个页面都可以指定一个过期日期，指示它将在缓存中保留多长时间。 当控件导航到某个页面时，它会通过显示缓存的版本来节省时间（如果有），而不是再次下载页面。 使用 <xref:System.Windows.Forms.WebBrowser.Refresh%2A> 方法可 <xref:System.Windows.Forms.WebBrowser> 通过下载来强制控件重新加载当前页，确保控件显示最新版本。  
  
> [!NOTE]
>  此属性包含当前文档的 URL，即使已请求其他文档也是如此。 如果设置了此属性的值，然后立即再次检索它，则检索到的值可能会不同于在 <xref:System.Windows.Forms.WebBrowser> 控件没有时间加载新文档时设置的值。 可以检索事件处理程序中的新值 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.Url%2A> 属性实现控件的地址栏 <xref:System.Windows.Forms.WebBrowser> 。 此示例要求窗体包含一个名为的 <xref:System.Windows.Forms.WebBrowser> 控件 `webBrowser1` 、一个名为的控件 <xref:System.Windows.Forms.TextBox> `TextBoxAddress` 和一个名为的 <xref:System.Windows.Forms.Button> 控件 `ButtonGo` 。 在文本框中键入 URL 并按 ENTER 或单击 " **开始** " 按钮时， <xref:System.Windows.Forms.WebBrowser> 控件将导航到指定的 url。 通过单击超链接进行导航时，文本框将自动更新以显示当前 URL。  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Windows.Forms.WebBrowser" /> 实例不再有效。</exception>
        <exception cref="T:System.InvalidOperationException">未能从基础 ActiveX <see langword="IWebBrowser2" /> 控件检索到对 <see langword="WebBrowser" /> 接口的实现的引用。</exception>
        <exception cref="T:System.ArgumentException">在设置此属性时指定的值不是绝对 URI。 有关详细信息，请参阅 <see cref="P:System.Uri.IsAbsoluteUri" />。</exception>
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752040(v=vs.85)">WebBrowser 控件</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 接口</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Windows.Forms.WebBrowser.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取所安装的 Internet Explorer 的版本。</summary>
        <value><see cref="T:System.Version" /> 对象，表示所安装的 Internet Explorer 的版本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser>控件是围绕与 Internet Explorer 一起安装的组件的托管包装。 使用此属性来确定安装了哪个版本的 Internet Explorer。 当应用程序使用 Internet Explorer 的一项功能，而该功能仅在某些版本中提供时，这非常有用。 如果本地计算机上未提供所需的版本，你可以提供其他功能或提示用户进行升级。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowserShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool WebBrowserShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebBrowserShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property WebBrowserShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebBrowserShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowserShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.WebBrowser" /> 控件中是否启用了键盘快捷键。</summary>
        <value>如果控件中启用了键盘快捷键，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将此属性设置为 false 可防止用户将 Internet Explorer 键盘快捷方式与控件一起使用 <xref:System.Windows.Forms.WebBrowser> 。 当你希望隐藏使用控件的事实时，这非常有用 <xref:System.Windows.Forms.WebBrowser> ，例如，创建一个用户界面，该用户界面可以将基于 DHTML 的控件与 Windows 窗体控件无缝组合。  
  
 您可以通过将 <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> 和属性设置为来禁用其他标准浏览器功能 <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> `false` 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> 属性。  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="webBrowser.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>处理 Windows 消息。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
