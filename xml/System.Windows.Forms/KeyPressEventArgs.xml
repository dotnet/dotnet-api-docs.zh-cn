<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5577fce2faf62be612a6c7f1ae6a75367f98deb0" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86989685" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f5342-101">为 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="f5342-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5342-102"><xref:System.Windows.Forms.KeyPressEventArgs>指定当用户按下某个键时构成的字符。</span><span class="sxs-lookup"><span data-stu-id="f5342-102">A <xref:System.Windows.Forms.KeyPressEventArgs> specifies the character that is composed when the user presses a key.</span></span> <span data-ttu-id="f5342-103">例如，当用户按下 SHIFT + K 时， <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 属性将返回一个大写的 K。</span><span class="sxs-lookup"><span data-stu-id="f5342-103">For example, when the user presses SHIFT + K, the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property returns an uppercase K.</span></span>  
  
 <span data-ttu-id="f5342-104"><xref:System.Windows.Forms.Control.KeyPress>当用户按下某个键时，将发生事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-104">A <xref:System.Windows.Forms.Control.KeyPress> event occurs when the user presses a key.</span></span> <span data-ttu-id="f5342-105">与事件密切相关的两个事件 <xref:System.Windows.Forms.Control.KeyPress> 为 <xref:System.Windows.Forms.Control.KeyUp> 和 <xref:System.Windows.Forms.Control.KeyDown> 。</span><span class="sxs-lookup"><span data-stu-id="f5342-105">Two events that are closely related to the <xref:System.Windows.Forms.Control.KeyPress> event are <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyDown>.</span></span> <span data-ttu-id="f5342-106"><xref:System.Windows.Forms.Control.KeyDown> <xref:System.Windows.Forms.Control.KeyPress> 当用户按下某个键时，事件位于每个事件的前面， <xref:System.Windows.Forms.Control.KeyUp> 当用户释放某个键时，将发生事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-106">The <xref:System.Windows.Forms.Control.KeyDown> event precedes each <xref:System.Windows.Forms.Control.KeyPress> event when the user presses a key, and a <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases a key.</span></span> <span data-ttu-id="f5342-107">当用户按下某个键时，重复 <xref:System.Windows.Forms.Control.KeyDown> ， <xref:System.Windows.Forms.Control.KeyPress> 每次重复该字符时，都会发生事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-107">When the user holds down a key, duplicate <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyPress> events occur each time the character repeats.</span></span> <span data-ttu-id="f5342-108"><xref:System.Windows.Forms.Control.KeyUp>发布时，将生成一个事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-108">One <xref:System.Windows.Forms.Control.KeyUp> event is generated upon release.</span></span>  
  
 <span data-ttu-id="f5342-109">对于每个 <xref:System.Windows.Forms.Control.KeyPress> 事件， <xref:System.Windows.Forms.KeyPressEventArgs> 都传递。</span><span class="sxs-lookup"><span data-stu-id="f5342-109">With each <xref:System.Windows.Forms.Control.KeyPress> event, a <xref:System.Windows.Forms.KeyPressEventArgs> is passed.</span></span> <span data-ttu-id="f5342-110">通过 <xref:System.Windows.Forms.KeyEventArgs> 每个 <xref:System.Windows.Forms.Control.KeyDown> 和事件传递 <xref:System.Windows.Forms.Control.KeyUp> 。</span><span class="sxs-lookup"><span data-stu-id="f5342-110">A <xref:System.Windows.Forms.KeyEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> event.</span></span> <span data-ttu-id="f5342-111"><xref:System.Windows.Forms.KeyEventArgs>指定是否将任何修改键 (按下 CTRL、SHIFT 或 ALT) 以及另一个键。</span><span class="sxs-lookup"><span data-stu-id="f5342-111">A <xref:System.Windows.Forms.KeyEventArgs> specifies whether any modifier keys (CTRL, SHIFT, or ALT) were pressed along with another key.</span></span> <span data-ttu-id="f5342-112"> (还可以通过类的属性获取此修饰符信息 <xref:System.Windows.Forms.Control.ModifierKeys%2A> <xref:System.Windows.Forms.Control> 。 ) </span><span class="sxs-lookup"><span data-stu-id="f5342-112">(This modifier information can also be obtained through the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property of the <xref:System.Windows.Forms.Control> class.)</span></span>  
  
 <span data-ttu-id="f5342-113">设置 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 为 `true` 可取消 `KeyPress` 事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-113">Set <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> to `true` to cancel the `KeyPress` event.</span></span> <span data-ttu-id="f5342-114">这会使控件不会按下键进行处理。</span><span class="sxs-lookup"><span data-stu-id="f5342-114">This keeps the control from processing the key press.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5342-115">某些控件将在上处理某些关键笔画 <xref:System.Windows.Forms.Control.KeyDown> 。</span><span class="sxs-lookup"><span data-stu-id="f5342-115">Some controls will process certain key strokes on <xref:System.Windows.Forms.Control.KeyDown>.</span></span> <span data-ttu-id="f5342-116">例如，在 <xref:System.Windows.Forms.RichTextBox> 调用之前处理 Enter 键 <xref:System.Windows.Forms.Control.KeyPress> 。</span><span class="sxs-lookup"><span data-stu-id="f5342-116">For example, <xref:System.Windows.Forms.RichTextBox> processes the Enter key before <xref:System.Windows.Forms.Control.KeyPress> is called.</span></span> <span data-ttu-id="f5342-117">在这种情况下，不能取消 <xref:System.Windows.Forms.Control.KeyPress> 事件，而必须取消中的键笔划 <xref:System.Windows.Forms.Control.KeyDown> 。</span><span class="sxs-lookup"><span data-stu-id="f5342-117">In such cases, you cannot cancel the <xref:System.Windows.Forms.Control.KeyPress> event, and must cancel the key stroke from <xref:System.Windows.Forms.Control.KeyDown> instead.</span></span>  
  
 <span data-ttu-id="f5342-118">有关事件模型的信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="f5342-118">For information about the event model, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5342-119">下面的示例演示如何使用在 <xref:System.Windows.Forms.KeyPressEventArgs> 按下键时对键进行计数，并在每次按键后显示结果。</span><span class="sxs-lookup"><span data-stu-id="f5342-119">The following example illustrates using the <xref:System.Windows.Forms.KeyPressEventArgs> to count keys as they are pressed and to display the results after each key press.</span></span> <span data-ttu-id="f5342-120"><xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 然后，将设置为 true，以防止操作系统进一步处理该键。</span><span class="sxs-lookup"><span data-stu-id="f5342-120"><xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key.</span></span> <span data-ttu-id="f5342-121">该示例假设有一个放置在该窗体上的窗体 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="f5342-121">The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.</span></span>  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5342-122">必须创建此类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f5342-122">You must create a new instance of this class.</span></span> <span data-ttu-id="f5342-123">还必须设置事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f5342-123">You must also set the event handler.</span></span> <span data-ttu-id="f5342-124">可以在类的构造函数中执行此操作。</span><span class="sxs-lookup"><span data-stu-id="f5342-124">You can do this in the constructor for your class.</span></span>  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="f5342-125">当在控件中引发指定的事件时，将调用附加的方法，并且应用程序可以执行代码以响应事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-125">When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar"><span data-ttu-id="f5342-126">与用户按下的键相对应的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="f5342-126">The ASCII character corresponding to the key the user pressed.</span></span></param>
        <summary><span data-ttu-id="f5342-127">初始化 <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f5342-127">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5342-128">使用 <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> 属性可获取修改键的当前状态。</span><span class="sxs-lookup"><span data-stu-id="f5342-128">Use the <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> property to get the current state of the modifier keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5342-129">下面的示例显示了一个消息框，其中显示了 SHIFT 键的当前状态。</span><span class="sxs-lookup"><span data-stu-id="f5342-129">The following example displays a message box that shows the current state of the SHIFT key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5342-130">获取或设置一个值，该值指示是否处理过 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-130">Gets or sets a value indicating whether the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event was handled.</span></span></summary>
        <value><span data-ttu-id="f5342-131">如果处理过事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5342-131"><see langword="true" /> if the event is handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5342-132">如果未处理该事件，则会将其发送到操作系统进行默认处理。</span><span class="sxs-lookup"><span data-stu-id="f5342-132">If the event is not handled, it will be sent to the operating system for default processing.</span></span> <span data-ttu-id="f5342-133">设置 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 为 `true` 可取消 `KeyPress` 事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-133">Set <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> to `true` to cancel the `KeyPress` event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5342-134">下面的示例创建一个 <xref:System.Windows.Forms.TextBox> 控件。</span><span class="sxs-lookup"><span data-stu-id="f5342-134">The following example creates a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f5342-135">`keypressed`方法使用 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 属性来检查是否按下了 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="f5342-135">The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed.</span></span> <span data-ttu-id="f5342-136">如果按 ENTER 键，则将 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 属性设置为 `true` ，这表示处理事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-136">If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.</span></span>  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5342-137">获取或设置与按下的键对应的字符。</span><span class="sxs-lookup"><span data-stu-id="f5342-137">Gets or sets the character corresponding to the key pressed.</span></span></summary>
        <value><span data-ttu-id="f5342-138">撰写的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="f5342-138">The ASCII character that is composed.</span></span> <span data-ttu-id="f5342-139">例如，如果用户按下 Shift + K，则该属性返回一个大写的 K。</span><span class="sxs-lookup"><span data-stu-id="f5342-139">For example, if the user presses SHIFT + K, this property returns an uppercase K.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5342-140">使用 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 属性在运行时采样击键，并在特殊运行时条件下修改击键。</span><span class="sxs-lookup"><span data-stu-id="f5342-140">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to modify keystrokes under special run-time circumstances.</span></span> <span data-ttu-id="f5342-141">例如，你可以使用在 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 用户输入邮政编码时禁用非数值 keypresses，将数据输入字段中的所有字母都更改为大写，或监视键盘或其他密钥输入设备的特定组合键。</span><span class="sxs-lookup"><span data-stu-id="f5342-141">For example, you can use <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> to disable non-numeric keypresses when the user enters a ZIP code, change all alphabetical keypresses to uppercase in a data entry field, or monitor the keyboard or other key input device for specific key combinations.</span></span>  
  
 <span data-ttu-id="f5342-142">可以获取或设置以下项：</span><span class="sxs-lookup"><span data-stu-id="f5342-142">You can get or set the following keys:</span></span>  
  
-   <span data-ttu-id="f5342-143">a-z、a-z。</span><span class="sxs-lookup"><span data-stu-id="f5342-143">a-z, A-Z.</span></span>  
  
-   <span data-ttu-id="f5342-144">CTRL.</span><span class="sxs-lookup"><span data-stu-id="f5342-144">CTRL.</span></span>  
  
-   <span data-ttu-id="f5342-145">标点符号。</span><span class="sxs-lookup"><span data-stu-id="f5342-145">Punctuation marks.</span></span>  
  
-   <span data-ttu-id="f5342-146">数字键，都在键盘顶部和数字键盘上。</span><span class="sxs-lookup"><span data-stu-id="f5342-146">Number keys, both across the top of the keyboard and on the numeric keypad.</span></span>  
  
-   <span data-ttu-id="f5342-147">回车.</span><span class="sxs-lookup"><span data-stu-id="f5342-147">ENTER.</span></span>  
  
 <span data-ttu-id="f5342-148">无法获取或设置以下项：</span><span class="sxs-lookup"><span data-stu-id="f5342-148">You cannot get or set the following keys:</span></span>  
  
-   <span data-ttu-id="f5342-149">TAB 键。</span><span class="sxs-lookup"><span data-stu-id="f5342-149">The TAB key.</span></span>  
  
-   <span data-ttu-id="f5342-150">插入和删除。</span><span class="sxs-lookup"><span data-stu-id="f5342-150">INSERT and DELETE.</span></span>  
  
-   <span data-ttu-id="f5342-151">回家.</span><span class="sxs-lookup"><span data-stu-id="f5342-151">HOME.</span></span>  
  
-   <span data-ttu-id="f5342-152">端面.</span><span class="sxs-lookup"><span data-stu-id="f5342-152">END.</span></span>  
  
-   <span data-ttu-id="f5342-153">PAGE UP 和 PAGE DOWN。</span><span class="sxs-lookup"><span data-stu-id="f5342-153">PAGE UP and PAGE DOWN.</span></span>  
  
-   <span data-ttu-id="f5342-154">F1-F2。</span><span class="sxs-lookup"><span data-stu-id="f5342-154">F1-F2.</span></span>  
  
-   <span data-ttu-id="f5342-155">替代.</span><span class="sxs-lookup"><span data-stu-id="f5342-155">ALT.</span></span>  
  
-   <span data-ttu-id="f5342-156">箭头键。</span><span class="sxs-lookup"><span data-stu-id="f5342-156">Arrow keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5342-157">有关如何检测以上提到的任何非字符密钥的信息，请参阅 <xref:System.Windows.Forms.KeyEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="f5342-157">For information about how to detect any of the non-character keys mentioned above, see the <xref:System.Windows.Forms.KeyEventArgs> class.</span></span>  
  
## Examples  
 <span data-ttu-id="f5342-158">下面的示例创建一个 <xref:System.Windows.Forms.TextBox> 控件。</span><span class="sxs-lookup"><span data-stu-id="f5342-158">The following example creates a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="f5342-159">`keypressed`方法使用 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> 属性来检查是否按下了 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="f5342-159">The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key pressed.</span></span> <span data-ttu-id="f5342-160">如果按 ENTER 键，则将 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 属性设置为 `true` ，这表示处理事件。</span><span class="sxs-lookup"><span data-stu-id="f5342-160">If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.</span></span>  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>
