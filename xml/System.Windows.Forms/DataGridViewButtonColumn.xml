<Type Name="DataGridViewButtonColumn" FullName="System.Windows.Forms.DataGridViewButtonColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="942464ad55029a109379ac520f175ab9b2ab1b20" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83905108" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewButtonColumn : System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewButtonColumn extends System.Windows.Forms.DataGridViewColumn" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewButtonColumn&#xA;Inherits DataGridViewColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewButtonColumn : System::Windows::Forms::DataGridViewColumn" />
  <TypeSignature Language="F#" Value="type DataGridViewButtonColumn = class&#xA;    inherit DataGridViewColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewButtonColumn), "DataGridViewButtonColumn.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewButtonColumn), "DataGridViewButtonColumn")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>承载一个 <see cref="T:System.Windows.Forms.DataGridViewButtonCell" /> 对象集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewButtonColumn> 类是用于以逻辑方式承载响应简单用户输入的单元的 <xref:System.Windows.Forms.DataGridViewColumn> 类的专用类型。 <xref:System.Windows.Forms.DataGridViewButtonColumn> 在与它相交的每个 <xref:System.Windows.Forms.DataGridViewRow> 中具有关联的 <xref:System.Windows.Forms.DataGridViewButtonCell>。 每个单元格提供类似于 <xref:System.Windows.Forms.Button> 控件的用户界面（UI）。  
  
 若要为每个单元格显示相同的按钮文本，请将 <xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A> 属性设置为 `true` 并将 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> 属性设置为所需的按钮文本。  
  
 此列类型的默认排序模式为 <xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>。  
  
 若要响应用户按钮单击，请处理 <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> 或 <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType> 事件。 在事件处理程序中，可以使用 <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> 属性来确定按钮列中是否发生了单击。 您可以使用 "<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType>" 属性来确定按钮单元中是否发生了单击，而不是列标题上。  
  
> [!NOTE]
>  启用视觉样式后，按钮列中的按钮将使用 <xref:System.Windows.Forms.ButtonRenderer>进行绘制，并且通过属性（如 <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A>）指定的单元格样式不起作用。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewButtonColumn> 对特定行执行操作。 在此示例中，<xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> 事件处理程序首先确定按钮单元格上是否有单击，然后检索与该行关联的业务对象。 此示例摘自[如何： Access Windows 窗体 DataGridViewComboBoxCell "下拉列表](/dotnet/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list)中的对象中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>当从 <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" /> 派生并向派生类添加新属性时，请确保重写 <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> 方法，以便在克隆操作过程中复制新属性。 还应调用基类的 <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> 方法，以便将基类的属性复制到新单元。</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
    <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellClick" />
    <related type="Article" href="https://msdn.microsoft.com/library/5c344d01-013a-4a6b-8f8d-62ec9321d81e">如何：禁用 Windows 窗体 DataGridView 控件的按钮列中的按钮</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" /> 类的新实例初始化为默认状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数通过设置以下属性来初始化列。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A>|一个新的 <xref:System.Windows.Forms.DataGridViewButtonCell>。|  
|<xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A> 属性返回的 <xref:System.Windows.Forms.DataGridViewCellStyle> 对象的 <xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A> 属性。|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CellTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CellTemplate As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCell ^ CellTemplate { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellTemplate : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于创建新单元格的模板。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataGridViewCell" />，列中的所有其他单元格都以它为模型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewButtonColumn> 类的构造函数将此属性初始化为新创建的 <xref:System.Windows.Forms.DataGridViewButtonCell>。  
  
> [!CAUTION]
>  更改单元格模板的属性不会立即影响列现有单元的用户界面（UI）。 这些更改仅在重新生成列后才明显（例如，通过对列进行排序或通过调用 <xref:System.Windows.Forms.DataGridView.InvalidateColumn%2A?displayProperty=nameWithType> 方法进行）。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewButtonColumn> 查看雇员的销售额。 单元模板用于将相同的颜色应用于所有按钮。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">设置此属性时，指定值未能被强制转换为 <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewButtonColumn.#ctor" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewButtonColumn.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此列的一个精确副本。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示克隆的 <see cref="T:System.Windows.Forms.DataGridViewButtonColumn" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法复制按钮单元的列。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> 属性的值为 <see langword="null" />。</exception>
        <block subset="none" type="overrides"><para>当在派生类中重写 <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> 时，调用基类的 <see cref="M:System.Windows.Forms.DataGridViewButtonColumn.Clone" /> 方法，以便将基类的属性复制到新的单元格，并确保还复制已添加到派生类的任何属性的值。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列的默认单元格样式。</summary>
        <value>作为默认样式应用的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性返回的默认 <xref:System.Windows.Forms.DataGridViewCellStyle> 具有 <xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter>的初始 <xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A> 属性值。 此值将覆盖 <xref:System.Windows.Forms.DataGridView> 控件的 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 属性中指定的值，但可能会被其他单元格样式属性重写。 有关详细信息，请参阅[Windows 窗体 DataGridView 控件中的单元格样式](/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control)。  
  
> [!NOTE]
>  启用视觉样式后，按钮列中的按钮将使用 <xref:System.Windows.Forms.ButtonRenderer> 进行绘制，并且通过属性（如 <xref:System.Windows.Forms.DataGridViewButtonColumn.DefaultCellStyle%2A>）指定的单元格样式不起作用。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-csharp[System.Windows.Forms.GridViewContentAlignment#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/CS/changecolumnalignment.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewContentAlignment#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewContentAlignment/VB/changecolumnalignment.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="/dotnet/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control">Windows 窗体 DataGridView 控件中的单元格样式</related>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.DataGridViewButtonColumn.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置列中按钮单元格的平面样式外观。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.FlatStyle" /> 值，指示列中按钮的外观。 默认为 <see cref="F:System.Windows.Forms.FlatStyle.Standard" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewButtonColumn.FlatStyle%2A> 属性指定列中单元格的外观。 有关详细信息，请参见 <xref:System.Windows.Forms.FlatStyle> 枚举。  
  
 获取或设置此属性将获取或设置由 <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A> 属性返回的对象的 <xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A> 属性。 设置此属性还会设置列中每个单元格的 <xref:System.Windows.Forms.DataGridViewButtonCell.FlatStyle%2A> 属性，并刷新列显示。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewButtonColumn> 查看雇员的销售额。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> 属性的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.FlatStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonCell.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataGridViewButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置显示在按钮单元格上的默认文本。</summary>
        <value>包含此文本的 <see cref="T:System.String" />。 默认为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列中包含的每个 <xref:System.Windows.Forms.DataGridViewButtonCell> 都作为 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> 属性值 `true` 显示该单元格按钮上的 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> 属性值。  
  
 如果存在关联的 <xref:System.Windows.Forms.DataGridView> 控件，则更改此属性将刷新列显示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewButtonColumn> 查看雇员的销售额。 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> 属性用于设置列标题。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">设置此属性时，<see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> 属性的值是 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewButtonColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewButtonColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个描述该列的字符串。</summary>
        <returns>用于描述列的 <see cref="T:System.String" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewColumn.ToString" />
      </Docs>
    </Member>
    <Member MemberName="UseColumnTextForButtonValue">
      <MemberSignature Language="C#" Value="public bool UseColumnTextForButtonValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseColumnTextForButtonValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseColumnTextForButtonValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseColumnTextForButtonValue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseColumnTextForButtonValue : bool with get, set" Usage="System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，指示 <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> 属性值是否显示为此列中单元格的按钮文本。</summary>
        <value>如果 <see cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" /> 属性值显示在列中的按钮上，则为 <see langword="true" />；如果每个单元格的 <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" /> 属性值都显示在它的按钮上，则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，按钮单元的 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A?displayProperty=nameWithType> 将显示为按钮上的文本。 <xref:System.Windows.Forms.DataGridViewButtonColumn.UseColumnTextForButtonValue%2A> 属性允许您设置每个单元格的按钮文本，或者使用所有按钮单元格的 <xref:System.Windows.Forms.DataGridViewButtonColumn.Text%2A> 属性值。  
  
 获取或设置此属性将获取或设置由 <xref:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate%2A> 属性返回的对象的 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> 属性。 设置此属性还会设置列中每个单元格的 <xref:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue%2A> 属性，并刷新列显示。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此属性。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#010](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#010)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#010](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#010)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" /> 属性的值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.Text" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonColumn.CellTemplate" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewButtonCell.UseColumnTextForButtonValue" />
        <related type="Article" href="https://msdn.microsoft.com/library/5c344d01-013a-4a6b-8f8d-62ec9321d81e">如何：禁用 Windows 窗体 DataGridView 控件的按钮列中的按钮</related>
      </Docs>
    </Member>
  </Members>
</Type>
