<Type Name="DataGridViewComboBoxCell" FullName="System.Windows.Forms.DataGridViewComboBoxCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4389aaf5972df042a4aa11ba46dd3148c9544101" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83886464" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewComboBoxCell : System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewComboBoxCell extends System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewComboBoxCell" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewComboBoxCell&#xA;Inherits DataGridViewCell" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewComboBoxCell : System::Windows::Forms::DataGridViewCell" />
  <TypeSignature Language="F#" Value="type DataGridViewComboBoxCell = class&#xA;    inherit DataGridViewCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>显示 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中的组合框。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 类是用于显示组合框控件的专用类型 <xref:System.Windows.Forms.DataGridViewCell>，它是与列表选择字段组合的编辑字段。 当前选定的 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 承载一个 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>，用户可以在其中更改单元格的值，假设该单元格的 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> 属性设置为 `false`。

 与 <xref:System.Windows.Forms.ComboBox> 控件不同，<xref:System.Windows.Forms.DataGridViewComboBoxCell> 没有 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> 和 <xref:System.Windows.Forms.ListControl.SelectedValue%2A> 属性。 相反，从下拉列表中选择一个值会将单元格 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 属性。

 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 是专用于保存此类型的单元格的列类型。 默认情况下，<xref:System.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate%2A?displayProperty=nameWithType> 初始化为新的 <xref:System.Windows.Forms.DataGridViewComboBoxCell>。 若要在现有 <xref:System.Windows.Forms.DataGridViewComboBoxCell>之后对列中的单元格进行样式设置，请将列的 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate%2A> 属性设置为要用作模式的单元格。

 此列的单元格相关属性是模板单元的名称相同的属性的包装。 更改模板单元的属性值将仅影响基于更改后添加的模板的单元格。 但是，更改列的单元格相关属性值将更新列中的模板单元和所有其他单元，并在必要时刷新列显示。

 通常会使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类型，除非要重写特定单元的列值。 用于填充下拉列表的 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中所述的准则适用于单元格和列实例。



## Examples
 下面的代码示例演示 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类，该类使用 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 类。 你可以设置单元 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A>、<xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A>和 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 属性，其方式与在此示例中设置相应的列属性的方式相同。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#40)]

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>当从 <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" /> 派生并向派生类添加新属性时，请确保重写 <see cref="M:System.Windows.Forms.DataGridViewComboBoxCell.Clone" /> 方法，以便在克隆操作过程中复制新属性。 还应调用基类的 <see cref="M:System.Windows.Forms.DataGridViewComboBoxCell.Clone" /> 方法，以便将基类的属性复制到新单元。</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxColumn" />
    <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxColumn.CellTemplate" />
    <related type="Article" href="https://msdn.microsoft.com/library/bcbe794a-d1fa-47f8-b5a3-5f085b32097d">如何：访问 Windows 窗体 DataGridViewComboBoxCell 下拉列表中的对象</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewComboBoxCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewComboBoxCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此构造函数将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.AutoComplete%2A> 属性值初始化为 `true`。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.#ctor" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.AutoComplete" />
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public virtual bool AutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.AutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoComplete : bool with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.AutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示单元格是否将单元格中输入的字符与下拉列表中的选项匹配。</summary>
        <value>如果自动完成已激活，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewComboBoxCell.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此单元的精确副本。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示克隆的 <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
每当从 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 派生并将新属性添加到派生类时，重写 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Clone%2A> 方法。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当在派生类中重写 <see cref="M:System.Windows.Forms.DataGridViewComboBoxCell.Clone" /> 时，调用基类的 <see cref="M:System.Windows.Forms.DataGridViewComboBoxCell.Clone" /> 方法，以便将基类的属性复制到新的单元格，并确保还复制已添加到派生类的任何属性的值。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewComboBoxCell.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为此 <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" /> 实例创建新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
        <returns>支持 <see cref="T:System.Windows.Automation.ControlType" /> UI 自动化属性的 <see cref="T:System.Windows.Forms.AccessibleObject" /> 实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`CreateAccessibilityInstance` 方法返回的 <xref:System.Windows.Forms.AccessibleObject> 对象仅支持 <xref:System.Windows.Automation.ControlType> [UI 自动化](/dotnet/framework/ui-automation/ui-automation-overview)属性，该属性仅适用于从 .NET Framework 4.7.2 开始重新编译为 .NET Framework 目标版本的应用程序。
面向 .NET Framework 早期版本但在 .NET Framework 4.7.2 上运行的应用程序可以通过兼容性开关选择使用此功能。
有关其他信息，请参阅[.NET Framework 中辅助功能的新增功能](/dotnet/framework/whats-new/whats-new-in-accessibility)。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源，其数据包含下拉列表中可能会显示的选项。</summary>
        <value>一个 <see cref="T:System.Collections.IList" /> 或 <see cref="T:System.ComponentModel.IListSource" />，它包含一个值集合，用于向下拉列表提供数据。 默认值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 通常，通过 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.DataSource%2A?displayProperty=nameWithType> 属性为整个单元格列设置此属性。

 如果可能，请将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 设置为仅包含可能选择的源，例如选择的列。 则不需要设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 属性。 但如果源更复杂，请将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 设置为要从中检索可能选择的属性或列的名称。

 如果 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 设置为字符串数组，则不需要设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A> 和 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A>，因为数组中的每个字符串都将用于值和显示。

 更改 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 属性会导致单元重新初始化其 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A> 集合，并重新绘制自身。

 当您更改 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 属性的值时，控件尝试将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A> 和 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 属性值用于新数据源，并将每个属性设置为 `null` （如果找不到它的值）。 在此过程中发生的任何异常都将被忽略，除非它是以下关键异常之一： <xref:System.NullReferenceException>、<xref:System.StackOverflowException>、<xref:System.OutOfMemoryException>、<xref:System.Threading.ThreadAbortException>、<xref:System.ExecutionEngineException>、<xref:System.IndexOutOfRangeException>或 <xref:System.AccessViolationException>。

 设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 后，<xref:System.Windows.Forms.DataGridViewComboBoxCell> 会附加到数据源的 <xref:System.ComponentModel.Component.Disposed> 事件。 如果 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 与 <xref:System.Windows.Forms.DataGridView>分离，则资源不会立即释放。 当释放附加的数据源时，将释放 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 资源。 若要立即释放资源以进行垃圾回收，请将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 属性设置为 `null`。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.DataSource%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#40)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">设置此属性时指定值不是 <see langword="null" />，并且不属于 <see cref="T:System.Collections.IList" /> 或 <see cref="T:System.ComponentModel.IListSource" /> 类型。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxColumn.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.Items" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DetachEditingControl">
      <MemberSignature Language="C#" Value="public override void DetachEditingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DetachEditingControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.DetachEditingControl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DetachEditingControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DetachEditingControl();" />
      <MemberSignature Language="F#" Value="override this.DetachEditingControl : unit -&gt; unit" Usage="dataGridViewComboBoxCell.DetachEditingControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Windows.Forms.DataGridView" /> 中删除单元格的编辑控件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public virtual string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMember : string with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串指定要在何处收集将在下拉列表中显示的选项。</summary>
        <value>一个字符串，它指定在 <see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" /> 属性中指定的数据源中的属性或列的名称。 默认值是 <see cref="F:System.String.Empty" />，它指示将不会使用 <see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember" /> 属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 表示组合框下拉列表中显示的文本信息。 与此相反，<xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A> 属性表示选择的对应值。

 如果 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 所显示的所选内容的数据应从 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A>的非默认属性或列中提取，则除了 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A>外，还必须设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A>。

 将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 设置为字符串数组时，不需要设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A>，因为数组中的每个字符串都将用作有效的显示字符串和有效的基础值。

 加载组合框选择的另一种方法是使用 "<xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A>" 属性。 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 必须包含从中收集所选内容的属性名称。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.DisplayMember%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#40)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" /> 属性不是 <see langword="null" />，设置此属性时的指定值不是 <see langword="null" /> 或 <see cref="F:System.String.Empty" />，并且没有在数据源中命名有效属性或列。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxColumn.DisplayMember" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember" />
      </Docs>
    </Member>
    <Member MemberName="DisplayStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewComboBoxDisplayStyle DisplayStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewComboBoxDisplayStyle DisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStyle As DataGridViewComboBoxDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewComboBoxDisplayStyle DisplayStyle { System::Windows::Forms::DataGridViewComboBoxDisplayStyle get(); void set(System::Windows::Forms::DataGridViewComboBoxDisplayStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayStyle : System.Windows.Forms.DataGridViewComboBoxDisplayStyle with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewComboBoxDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定当组合框处于非编辑模式时它的显示方式。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewComboBoxDisplayStyle" /> 值之一。 默认为 <see cref="F:System.Windows.Forms.DataGridViewComboBoxDisplayStyle.DropDownButton" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单元格未处于编辑模式时，它会影响该单元格的外观，而不管该单元格是否为只读。 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle%2A> 当单元格处于编辑模式时，它将始终如 <xref:System.Windows.Forms.ComboBox> 控件。

 如果 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyleForCurrentCellOnly%2A> 属性值为 `true`，则 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle%2A> 属性只会影响当前单元格。

 下拉箭头的行为和外观由 <xref:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle%2A> 属性指示。

 若要在鼠标指针位于单元格上时启用单元格突出显示，则必须将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle%2A> 属性设置为 <xref:System.Windows.Forms.DataGridViewComboBoxDisplayStyle.ComboBox> 并将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle%2A> 属性值设置为 "<xref:System.Windows.Forms.FlatStyle.Popup>"。

 设置所属列的 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.DisplayStyle%2A> 属性还会设置列中每个单元格的 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle%2A> 属性并刷新列显示。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。

 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">当设置此属性时，指定的值不是有效的 <see cref="T:System.Windows.Forms.DataGridViewComboBoxDisplayStyle" /> 值。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DisplayStyleForCurrentCellOnly">
      <MemberSignature Language="C#" Value="public bool DisplayStyleForCurrentCellOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStyleForCurrentCellOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyleForCurrentCellOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStyleForCurrentCellOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStyleForCurrentCellOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayStyleForCurrentCellOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyleForCurrentCellOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle" /> 属性值是否仅适用于 <see cref="T:System.Windows.Forms.DataGridView" /> 控件中的当前单元格。</summary>
        <value>如果显示样式仅适用于当前单元格，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当单元格未处于编辑模式时，它会影响该单元格的外观，而不管该单元格是否为只读。 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle%2A> 当单元格处于编辑模式时，它将始终如 <xref:System.Windows.Forms.ComboBox> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DropDownWidth">
      <MemberSignature Language="C#" Value="public virtual int DropDownWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.DropDownWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DropDownWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DropDownWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownWidth : int with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.DropDownWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置组合框下拉列表部分的宽度。</summary>
        <value>下拉列表的宽度（以像素为单位）。 默认值为 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性对应于承载的 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>的 <xref:System.Windows.Forms.ComboBox.DropDownWidth%2A> 属性。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.DropDownWidth%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#40)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定值小于一。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.ComboBox.DropDownWidth" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxColumn.DropDownWidth" />
      </Docs>
    </Member>
    <Member MemberName="EditType">
      <MemberSignature Language="C#" Value="public override Type EditType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EditType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.EditType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EditType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ EditType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditType : Type" Usage="System.Windows.Forms.DataGridViewComboBoxCell.EditType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取单元格的寄宿编辑控件的类型。</summary>
        <value>基础编辑控件的 <see cref="T:System.Type" />。 此属性始终返回 <see cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> 类派生自 <xref:System.Windows.Forms.ComboBox> 类。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.ComboBox" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格的平面样式外观。</summary>
        <value><see cref="T:System.Windows.Forms.FlatStyle" /> 值之一。 默认值是 <see cref="F:System.Windows.Forms.FlatStyle.Standard" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle%2A> 属性影响单元格中下拉箭头的行为和外观。

 若要在鼠标指针位于单元格上时启用单元格突出显示，则必须将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle%2A> 属性设置为 <xref:System.Windows.Forms.DataGridViewComboBoxDisplayStyle.ComboBox> 并将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle%2A> 属性值设置为 "<xref:System.Windows.Forms.FlatStyle.Popup>"。

 设置所属列的 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.FlatStyle%2A> 属性还会设置列中每个单元格的 <xref:System.Windows.Forms.DataGridViewComboBoxCell.FlatStyle%2A> 属性并刷新列显示。 若要覆盖单个单元的指定值，请在设置列值后设置单元值。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.FlatStyle%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#40)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定值不是有效的 <see cref="T:System.Windows.Forms.FlatStyle" /> 值。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.FlatStyle" />
        <altmember cref="T:System.Windows.Forms.ComboBox" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public override Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValueType : Type" Usage="System.Windows.Forms.DataGridViewComboBoxCell.FormattedValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与单元格关联的格式化值的类类型。</summary>
        <value>单元格的格式化值的类型。 此属性始终返回 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 由于组合框仅处理文本信息，因此将始终 <xref:System.String>基础格式化值的类型。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A?displayProperty=nameWithType> 属性来确定单元格内容的类型。 在此示例中，<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A?displayProperty=nameWithType> 属性用于在尝试转换值之前确定该单元是否包含 <xref:System.String>。 此示例是 <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> 事件中提供的更大示例的一部分。

 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.FormattedValueType" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContentBounds (graphics As Graphics, cellStyle As DataGridViewCellStyle, rowIndex As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetContentBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewComboBoxCell.GetContentBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">单元格的图形上下文。</param>
        <param name="cellStyle">要应用到单元格的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">单元的父行的索引。</param>
        <summary>返回围绕单元格内容区域的边框，该区域是使用指定的 <see cref="T:System.Drawing.Graphics" /> 和单元格样式计算的。</summary>
        <returns>用于限定单元格内容的 <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetErrorIconBounds (graphics As Graphics, cellStyle As DataGridViewCellStyle, rowIndex As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetErrorIconBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewComboBoxCell.GetErrorIconBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">单元格的图形上下文。</param>
        <param name="cellStyle">要应用到单元格的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="rowIndex">单元的父行的索引。</param>
        <summary>如果显示了单元格的错误图标，则返回环绕该图标的边框。</summary>
        <returns>如果显示了单元格的错误图标，则为包围该图标的 <see cref="T:System.Drawing.Rectangle" />；否则为 <see cref="F:System.Drawing.Rectangle.Empty" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormattedValue">
      <MemberSignature Language="C#" Value="protected override object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetFormattedValue(object value, int32 rowIndex, class System.Windows.Forms.DataGridViewCellStyle&amp; cellStyle, class System.ComponentModel.TypeConverter valueTypeConverter, class System.ComponentModel.TypeConverter formattedValueTypeConverter, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetFormattedValue (value As Object, rowIndex As Integer, ByRef cellStyle As DataGridViewCellStyle, valueTypeConverter As TypeConverter, formattedValueTypeConverter As TypeConverter, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetFormattedValue(System::Object ^ value, int rowIndex, System::Windows::Forms::DataGridViewCellStyle ^ % cellStyle, System::ComponentModel::TypeConverter ^ valueTypeConverter, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="override this.GetFormattedValue : obj * int * DataGridViewCellStyle * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="dataGridViewComboBoxCell.GetFormattedValue (value, rowIndex, cellStyle, valueTypeConverter, formattedValueTypeConverter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" RefType="ref" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="value">要格式化的值。</param>
        <param name="rowIndex">单元的父行的索引。</param>
        <param name="cellStyle">对单元格有效的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="valueTypeConverter">与值类型关联的 <see cref="T:System.ComponentModel.TypeConverter" />，它提供到格式化值类型的自定义转换；如果不需要此类自定义转换，则为 <see langword="null" />。</param>
        <param name="formattedValueTypeConverter">与格式化值类型相关联的 <see cref="T:System.ComponentModel.TypeConverter" />，它提供从该值类型进行的自定义转换；如果不需要这种自定义转换，则为 <see langword="null" />。</param>
        <param name="context"><see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，用于描述需要格式化值的上下文。</param>
        <summary>获取单元格数据的格式化值。</summary>
        <returns>应用了格式设置之后单元格数据的值；如果单元格不是 <see cref="T:System.Windows.Forms.DataGridView" /> 控件的一部分，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridView> 控件调用此方法将单元格值转换为 <xref:System.Windows.Forms.DataGridViewComboBoxCell.FormattedValueType%2A> 属性指示的类型的等效显示值。 控件将单元格值传递到 `value` 参数中的此方法。

 此方法首先确定是否满足以下条件之一，`value` 是否有效。

-   `value` 出现在 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 或 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A> 集合中。

-   `value` 是 `null` 或 <xref:System.DBNull.Value?displayProperty=nameWithType>。

-   `value` <xref:System.String.Empty?displayProperty=nameWithType>，<xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueType%2A> 属性值表示 <xref:System.String> 类型。

 如果 `value` 无效，则会发生 <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> 事件。 如果此事件没有处理程序，或者处理程序将 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> 属性设置为 `true`，则会引发异常。

 如果 `value` 有效或 <xref:System.Windows.Forms.DataGridView.DataError> 事件有处理程序，并且未将 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> 属性设置为 `true`，则会发生 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 事件。

 <xref:System.Windows.Forms.DataGridView.CellFormatting> 事件处理程序可以修改 `value` 和 `cellStyle`。 但是，如果处理程序未将 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> 属性设置为 `true`，则此方法使用 `cellStyle` 对象的格式设置属性来设置 `value` 格式。 这可能会导致额外的 <xref:System.Windows.Forms.DataGridView.DataError> 事件。

 如果格式设置成功，则此方法将返回在 <xref:System.Windows.Forms.DataGridView> 控件中显示的格式化值。

 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">格式化失败，这是由于 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 控件的 <see cref="T:System.Windows.Forms.DataGridView" /> 事件无处理程序或处理程序将 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 属性设置为 <see langword="true" /> 而引起的。 出现类型转换错误时，通常可以将异常对象强制转换为类型 <see cref="T:System.FormatException" />，或者当无法在 <see cref="T:System.ArgumentException" /> 或 <see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" /> 集合中找到 <paramref name="value" /> 时，将异常对象强制转换为类型 <see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.Items" />。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.Items" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewComboBoxCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetPreferredSize (graphics As Graphics, cellStyle As DataGridViewCellStyle, rowIndex As Integer, constraintSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberSignature Language="F#" Value="override this.GetPreferredSize : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int * System.Drawing.Size -&gt; System.Drawing.Size" Usage="dataGridViewComboBoxCell.GetPreferredSize (graphics, cellStyle, rowIndex, constraintSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制单元格的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="cellStyle">一个 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，它表示单元格样式。</param>
        <param name="rowIndex">单元格的从零开始的行索引。</param>
        <param name="constraintSize">单元格允许的最大大小。</param>
        <summary>计算单元格的首选大小（以像素为单位）。</summary>
        <returns>一个 <see cref="T:System.Drawing.Size" />，它表示单元格的首选大小（以像素为单位）。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeEditingControl">
      <MemberSignature Language="C#" Value="public override void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeEditingControl(int32 rowIndex, object initialFormattedValue, class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeEditingControl (rowIndex As Integer, initialFormattedValue As Object, dataGridViewCellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeEditingControl(int rowIndex, System::Object ^ initialFormattedValue, System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="override this.InitializeEditingControl : int * obj * System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="dataGridViewComboBoxCell.InitializeEditingControl (rowIndex, initialFormattedValue, dataGridViewCellStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="initialFormattedValue" Type="System.Object" />
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元的父行的索引。</param>
        <param name="initialFormattedValue">要在控件中显示的初始值。</param>
        <param name="dataGridViewCellStyle">一个 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />，确定寄宿控件的外观。</param>
        <summary>附加并初始化寄宿的编辑控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridViewComboBoxCell.InitializeEditingControl%2A> 方法初始化寄宿 <xref:System.Windows.Forms.ComboBox> 控件，如基本 <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A?displayProperty=nameWithType> 方法中所述。 此外，对于每个调用，<xref:System.Windows.Forms.DataGridViewComboBoxCell.InitializeEditingControl%2A> 执行以下操作：

-   设置寄宿 <xref:System.Windows.Forms.ComboBox> 控件的可视属性，如 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A>、<xref:System.Windows.Forms.ComboBox.DropDownWidth%2A>和 <xref:System.Windows.Forms.ComboBox.FlatStyle%2A>，以匹配当前单元格的相应属性。

-   设置寄宿 <xref:System.Windows.Forms.ComboBox> 控件的数据绑定属性，如 <xref:System.Windows.Forms.ComboBox.DataSource%2A>、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>和 <xref:System.Windows.Forms.ListControl.ValueMember%2A>，以匹配当前单元格的相应属性。

-   重新初始化宿主 <xref:System.Windows.Forms.ComboBox> 控件的 <xref:System.Windows.Forms.ComboBox.Items%2A> 属性。

 此方法还会调整单元格的维度，以容纳承载 <xref:System.Windows.Forms.ComboBox> 控件。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewComboBoxCell.DetachEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewComboBoxCell.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewComboBoxCell/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataGridViewComboBoxCell.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewComboBoxCell::ObjectCollection ^ Items { System::Windows::Forms::DataGridViewComboBoxCell::ObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.DataGridViewComboBoxCell.ObjectCollection" Usage="System.Windows.Forms.DataGridViewComboBoxCell.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewComboBoxCell+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对象，这些对象表示下拉列表中显示的选项。</summary>
        <value>包含选项的 <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell.ObjectCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性可让你获取对当前存储在 <xref:System.Windows.Forms.DataGridViewComboBoxCell>中的项列表的引用。 通过此引用，你可以添加项、移除项以及获取集合中项的计数。 有关可通过 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A> 集合执行的任务的详细信息，请参阅 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ObjectCollection>。

 如果将字符串添加到 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A>，则不需要设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A> 和 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A>，因为添加的每个字符串都将用于值和显示。

> [!NOTE]
>  <xref:System.Windows.Forms.DataGridViewComboBoxCell> 不支持使用具有相同显示值的多个项。

 如果设置了 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 属性，则不能使用 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A> 属性。

 单元格的格式化值必须始终是 <xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A> 集合中的值之一，否则将发生错误，并且单元格值将恢复为集合中的第一项。 您可以通过处理 <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> 和 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 事件来自定义此行为。

 如果将此属性设置为父列 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.Items%2A> 属性的值以外的值，则将强制行成为不共享的，从而分配额外的内存。 有关行共享的详细信息，请参阅[缩放 Windows 窗体 DataGridView 控件的最佳做法](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.Items%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#30)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#30)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.ComboBox.Items" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember" />
        <related type="Article" href="/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control">缩放 Windows 窗体 DataGridView 控件的最佳做法</related>
      </Docs>
    </Member>
    <Member MemberName="KeyEntersEditMode">
      <MemberSignature Language="C#" Value="public override bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool KeyEntersEditMode(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function KeyEntersEditMode (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool KeyEntersEditMode(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.KeyEntersEditMode : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridViewComboBoxCell.KeyEntersEditMode e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Windows.Forms.KeyEventArgs" />，表示按下的键。</param>
        <summary>确定是否应基于给定键启动编辑模式。</summary>
        <returns>如果应启动编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 <xref:System.Windows.Forms.DataGridView> 控件的 <xref:System.Windows.Forms.DataGridView.EditMode%2A> 属性设置为 <xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystroke> 或 <xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2>时，控件将使用此方法来确定在此单元格有焦点的情况下，用户按下的键是否为按下的键。

 此方法返回 `true` 如果 e 参数指示以下键或键组合之一： F4、ALT + 向上键、ALT + 向下键或普通的数据输入键（如字母、数字、标点符号或空格键）未通过 ALT 或 CTRL 进行修改，不包括 SHIFT + SPACE，该控件用于选择。 有关详细信息，请参阅[Windows 窗体 DataGridView 控件中的默认键盘和鼠标处理](/dotnet/framework/winforms/controls/default-keyboard-and-mouse-handling-in-the-windows-forms-datagridview-control)。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/4519b928-bfc8-4e8b-bb9c-b1e76a0ca552">Windows 窗体 DataGridView 控件中的默认键盘和鼠标处理</related>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownItems">
      <MemberSignature Language="C#" Value="public virtual int MaxDropDownItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDropDownItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.MaxDropDownItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxDropDownItems As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxDropDownItems { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDropDownItems : int with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.MaxDropDownItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置下拉列表中显示的最大项数。</summary>
        <value>所允许的下拉列表项数。 最小是 1，最大是 100，默认值是 8。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 更改 <xref:System.Windows.Forms.DataGridViewComboBoxCell.MaxDropDownItems%2A> 属性将更改寄宿 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>的相应 <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> 属性（如果有）。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.MaxDropDownItems%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#30)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#30)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">设置此属性时该值小于 1 或大于 100。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.ComboBox.MaxDropDownItems" />
      </Docs>
    </Member>
    <Member MemberName="OnDataGridViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataGridViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataGridViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnDataGridViewChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataGridViewChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataGridViewChanged();" />
      <MemberSignature Language="F#" Value="override this.OnDataGridViewChanged : unit -&gt; unit" Usage="dataGridViewComboBoxCell.OnDataGridViewChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在单元格的 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 属性更改时调用。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" /> 属性不是 <see langword="null" />，<see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember" /> 属性或 <see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember" /> 属性的值不是 <see langword="null" /> 或 <see cref="F:System.String.Empty" />，并且没有在数据源中命名有效属性或列。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnEnter(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : int * bool -&gt; unit" Usage="dataGridViewComboBoxCell.OnEnter (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元的父行的索引。</param>
        <param name="throughMouseClick">如果用户操作将焦点移至该单元格，则为 <see langword="true" />；如果编程操作将焦点移至该单元格，则为 <see langword="false" />。</param>
        <summary>在焦点移动到单元格时进行调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : int * bool -&gt; unit" Usage="dataGridViewComboBoxCell.OnLeave (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元的父行的索引。</param>
        <param name="throughMouseClick">如果用户操作将焦点从单元格上移开，则为 <see langword="true" />；如果编程操作将焦点从单元格上移开，则为 <see langword="false" />。</param>
        <summary>当焦点从单元格上移开时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewComboBoxCell.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>在指针位于单元格上且用户同时单击鼠标按钮时进行调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnMouseEnter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : int -&gt; unit" Usage="dataGridViewComboBoxCell.OnMouseEnter rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元的父行的索引。</param>
        <summary>当鼠标指针移到单元格上时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : int -&gt; unit" Usage="dataGridViewComboBoxCell.OnMouseLeave rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">单元的父行的索引。</param>
        <summary>在鼠标指针离开单元格时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewComboBoxCell.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个包含事件数据的 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary>当鼠标指针在单元格内移动时调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected override void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates elementState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates elementState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Paint (graphics As Graphics, clipBounds As Rectangle, cellBounds As Rectangle, rowIndex As Integer, elementState As DataGridViewElementStates, value As Object, formattedValue As Object, errorText As String, cellStyle As DataGridViewCellStyle, advancedBorderStyle As DataGridViewAdvancedBorderStyle, paintParts As DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates elementState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewComboBoxCell.Paint (graphics, clipBounds, cellBounds, rowIndex, elementState, value, formattedValue, errorText, cellStyle, advancedBorderStyle, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="elementState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制单元格的 <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="clipBounds">一个 <see cref="T:System.Drawing.Rectangle" />，表示需要重新绘制的 <see cref="T:System.Windows.Forms.DataGridView" /> 区域。</param>
        <param name="cellBounds">一个包含所绘制的单元格边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="rowIndex">正在绘制的单元的行索引。</param>
        <param name="elementState">用于指定单元格状态的 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 值的按位组合。</param>
        <param name="value">正在绘制的单元的数据。</param>
        <param name="formattedValue">当前所绘制的单元格的格式化数据。</param>
        <param name="errorText">与单元格关联的错误消息。</param>
        <param name="cellStyle">包含有关单元格的格式和样式信息的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="advancedBorderStyle">包含正在绘制的单元格的边框样式的 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</param>
        <param name="paintParts"><see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 值的按位组合，用于指定需要绘制的单元格部分。</param>
        <summary>绘制当前的 <see cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseFormattedValue">
      <MemberSignature Language="C#" Value="public override object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ParseFormattedValue(object formattedValue, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.ComponentModel.TypeConverter formattedValueTypeConverter, class System.ComponentModel.TypeConverter valueTypeConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ParseFormattedValue (formattedValue As Object, cellStyle As DataGridViewCellStyle, formattedValueTypeConverter As TypeConverter, valueTypeConverter As TypeConverter) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ParseFormattedValue(System::Object ^ formattedValue, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::ComponentModel::TypeConverter ^ valueTypeConverter);" />
      <MemberSignature Language="F#" Value="override this.ParseFormattedValue : obj * System.Windows.Forms.DataGridViewCellStyle * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter -&gt; obj" Usage="dataGridViewComboBoxCell.ParseFormattedValue (formattedValue, cellStyle, formattedValueTypeConverter, valueTypeConverter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
      </Parameters>
      <Docs>
        <param name="formattedValue">单元格的显示值。</param>
        <param name="cellStyle">对单元格有效的 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</param>
        <param name="formattedValueTypeConverter">显示值类型的 <see cref="T:System.ComponentModel.TypeConverter" />；若使用默认转换器则为 null。</param>
        <param name="valueTypeConverter">单元格值类型的 <see cref="T:System.ComponentModel.TypeConverter" />；若使用默认转换器则为 null。</param>
        <summary>将为便于显示而进行了格式设置的值转换为实际的单元格值。</summary>
        <returns>单元格值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public virtual bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Sorted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否对组合框中的项进行了自动排序。</summary>
        <value>如果对组合框进行了排序，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性指定宿主 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> 是否对现有项进行排序，并将新项添加到列表中的相应排序位置。 当此属性设置为 `false`时，新项将添加到现有列表的末尾。 排序操作不区分大小写，按字母顺序按字母顺序执行。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.Sorted%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#30)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#30)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试对附加到数据源的单元格进行排序。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.Items" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewComboBoxCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewComboBoxCell.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回描述当前对象的字符串。</summary>
        <returns>表示当前对象的字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public virtual string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueMember : string with get, set" Usage="System.Windows.Forms.DataGridViewComboBoxCell.ValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，指定要在何处收集下拉列表中使用的基础值。</summary>
        <value>指定属性名称或列名称的字符串。 默认值为 <see cref="F:System.String.Empty" />，指示会忽略此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A> 表示所选内容的相应值。 与此相反，<xref:System.Windows.Forms.DataGridViewComboBoxCell.DisplayMember%2A> 属性表示下拉列表中显示的文本信息。

 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 属性为下拉列表中显示的选择值指定数据源。

 如果 <xref:System.Windows.Forms.DataGridViewComboBoxCell> 所显示的所选内容的数据应从 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A>的非默认属性或列中提取，则除了 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A>外，还必须设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A>。

 将 <xref:System.Windows.Forms.DataGridViewComboBoxCell.DataSource%2A> 设置为字符串数组时，不需要设置 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A>，因为数组中的每个字符串都将用作有效的显示字符串和有效的基础值。

 加载组合框选择的另一种方法是使用 "<xref:System.Windows.Forms.DataGridViewComboBoxCell.Items%2A>" 属性。 <xref:System.Windows.Forms.DataGridViewComboBoxCell.ValueMember%2A> 必须包含从中收集所选内容的属性名称。



## Examples
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewComboBoxColumn.ValueMember%2A?displayProperty=nameWithType> 属性，该属性类似于此属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。

 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#40)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" /> 属性不是 <see langword="null" />，设置此属性时的指定值不是 <see langword="null" /> 或 <see cref="F:System.String.Empty" />，并且没有在数据源中命名有效属性或列。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewComboBoxCell.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewComboBoxCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Windows.Forms.DataGridViewComboBoxCell.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置单元格中值的数据类型。</summary>
        <value>一个 <see cref="T:System.Type" />，它表示单元格中的值的数据类型。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
      </Docs>
    </Member>
  </Members>
</Type>
