<Type Name="BindingContext" FullName="System.Windows.Forms.BindingContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7692c64719f169e597def32c8dba05147735c71f" /><Meta Name="ms.sourcegitcommit" Value="61571e7daf68b836515ede4868702c1f1ed4ae8b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/05/2020" /><Meta Name="ms.locfileid" Value="93402588" /></Metadata><TypeSignature Language="C#" Value="public class BindingContext : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingContext extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingContext" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingContext&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingContext : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type BindingContext = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("CollectionChanged")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("CollectionChanged")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="00a80-101">管理任何继承自 <see cref="T:System.Windows.Forms.Control" /> 类的对象的 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="00a80-101">Manages the collection of <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects for any object that inherits from the <see cref="T:System.Windows.Forms.Control" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-102">每个 Windows 窗体至少具有一个 <xref:System.Windows.Forms.BindingContext> 管理 <xref:System.Windows.Forms.BindingManagerBase> 窗体对象的对象。</span><span class="sxs-lookup"><span data-stu-id="00a80-102">Each Windows Form has at least one <xref:System.Windows.Forms.BindingContext> object that manages the <xref:System.Windows.Forms.BindingManagerBase> objects for the form.</span></span> <span data-ttu-id="00a80-103">由于 <xref:System.Windows.Forms.BindingManagerBase> 类是抽象类，因此该属性的返回类型 <xref:System.Windows.Forms.BindingContext.Item%2A> 为 <xref:System.Windows.Forms.CurrencyManager> 或 <xref:System.Windows.Forms.PropertyManager> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-103">Because the <xref:System.Windows.Forms.BindingManagerBase> class is abstract, the return type of the <xref:System.Windows.Forms.BindingContext.Item%2A> property is either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="00a80-104">如果数据源是只能返回单个属性 (而不是) 对象列表的对象， <xref:System.Type> 则为 <xref:System.Windows.Forms.PropertyManager> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-104">If the data source is an object that can return only a single property (instead of a list of objects), the <xref:System.Type> is a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="00a80-105">例如，如果指定 <xref:System.Windows.Forms.TextBox> 作为数据源， <xref:System.Windows.Forms.PropertyManager> 则返回。</span><span class="sxs-lookup"><span data-stu-id="00a80-105">For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> is returned.</span></span> <span data-ttu-id="00a80-106">另一方面，如果数据源是实现或的对象 <xref:System.Collections.IList> <xref:System.ComponentModel.IBindingList> ， <xref:System.Windows.Forms.CurrencyManager> 则返回。</span><span class="sxs-lookup"><span data-stu-id="00a80-106">On the other hand, if the data source is an object that implements <xref:System.Collections.IList> or <xref:System.ComponentModel.IBindingList>, a <xref:System.Windows.Forms.CurrencyManager> is returned.</span></span>  
  
 <span data-ttu-id="00a80-107">对于 Windows 窗体上的每个数据源，都有单个 <xref:System.Windows.Forms.CurrencyManager> 或 <xref:System.Windows.Forms.PropertyManager> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-107">For each data source on a Windows Form, there is a single <xref:System.Windows.Forms.CurrencyManager> or <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="00a80-108">由于可能存在多个与 Windows 窗体关联的数据源，因此可以 <xref:System.Windows.Forms.BindingContext> 检索 <xref:System.Windows.Forms.CurrencyManager> 与数据源关联的任何特定数据源。</span><span class="sxs-lookup"><span data-stu-id="00a80-108">Because there may be multiple data sources associated with a Windows Form, the <xref:System.Windows.Forms.BindingContext> enables you to retrieve any particular <xref:System.Windows.Forms.CurrencyManager> associated with a data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a80-109">使用属性时 <xref:System.Windows.Forms.BindingContext.Item%2A> ，如果尚 <xref:System.Windows.Forms.BindingContext> 不存在，则创建一个新的 <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-109">When using the <xref:System.Windows.Forms.BindingContext.Item%2A> property, the <xref:System.Windows.Forms.BindingContext> creates a new <xref:System.Windows.Forms.BindingManagerBase> if one does not already exist.</span></span> <span data-ttu-id="00a80-110">这可能会导致一些混乱，因为返回的对象可能不会管理 (或你打算) 的任何列表。</span><span class="sxs-lookup"><span data-stu-id="00a80-110">This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend.</span></span> <span data-ttu-id="00a80-111">若要防止返回无效 <xref:System.Windows.Forms.BindingManagerBase> ，请使用 <xref:System.Windows.Forms.BindingContext.Contains%2A> 方法来确定所需的是否 <xref:System.Windows.Forms.BindingManagerBase> 已存在。</span><span class="sxs-lookup"><span data-stu-id="00a80-111">To prevent returning an invalid <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the intended <xref:System.Windows.Forms.BindingManagerBase> already exists.</span></span>  
  
 <span data-ttu-id="00a80-112">如果使用容器控件（如 <xref:System.Windows.Forms.GroupBox> 、 <xref:System.Windows.Forms.Panel> 或 <xref:System.Windows.Forms.TabControl> ）来包含数据绑定控件，则只能 <xref:System.Windows.Forms.BindingContext> 为该容器控件及其控件创建一个。</span><span class="sxs-lookup"><span data-stu-id="00a80-112">If you use a container control, such as a <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, or <xref:System.Windows.Forms.TabControl>, to contain data-bound controls, you can create a <xref:System.Windows.Forms.BindingContext> for just that container control and its controls.</span></span> <span data-ttu-id="00a80-113">然后，窗体的每个部分都可由自己的管理 <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-113">Then, each part of your form can be managed by its own <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="00a80-114">有关 <xref:System.Windows.Forms.BindingContext.%23ctor%2A> 为同一数据源创建多个对象的详细信息，请参阅构造函数 <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-114">See the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor for more information about creating multiple <xref:System.Windows.Forms.BindingManagerBase> objects for the same data source.</span></span>  
  
 <span data-ttu-id="00a80-115">如果将控件添加 <xref:System.Windows.Forms.TextBox> 到窗体并将其绑定到数据集中的表的列，则该控件将与 <xref:System.Windows.Forms.BindingContext> 该窗体的进行通信。</span><span class="sxs-lookup"><span data-stu-id="00a80-115">If you add a <xref:System.Windows.Forms.TextBox> control to a form and bind it to a column of a table in a dataset, the control communicates with the <xref:System.Windows.Forms.BindingContext> of that form.</span></span> <span data-ttu-id="00a80-116">相反，将 <xref:System.Windows.Forms.BindingContext> 与 <xref:System.Windows.Forms.CurrencyManager> 该数据关联的特定进行通信。</span><span class="sxs-lookup"><span data-stu-id="00a80-116">The <xref:System.Windows.Forms.BindingContext>, in turn, talks to the specific <xref:System.Windows.Forms.CurrencyManager> for that data association.</span></span> <span data-ttu-id="00a80-117">如果你已查询的 `Position` 属性 <xref:System.Windows.Forms.CurrencyManager> ，它将报告该控件的绑定的当前记录 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-117">If you queried the `Position` property of the <xref:System.Windows.Forms.CurrencyManager>, it would report the current record for the binding of that <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="00a80-118">在下面的代码示例中， <xref:System.Windows.Forms.TextBox> 控件 `FirstName` `Customers` `dataSet1` 通过其所基于的窗体绑定到数据集上的表的列 <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-118">In the following code example, a <xref:System.Windows.Forms.TextBox> control is bound to the `FirstName` column of a `Customers` table on the `dataSet1` dataset through the <xref:System.Windows.Forms.BindingContext> for the form it is on.</span></span>  
  
```vb  
TextBox1.DataBindings.Add("Text", dataSet1, "Customers.FirstName")  
  
```  
  
```csharp  
textBox1.DataBindings.Add("Text", dataSet1, "Customers.FirstName");  
  
```  
  
```cpp  
textBox1->DataBindings->Add("Text", dataSet1, "Customers.FirstName");  
```  
  
 <span data-ttu-id="00a80-119">可以将) 的第二个 <xref:System.Windows.Forms.TextBox> (控件添加 `TextBox2` 到窗体，并将其绑定到 `LastName` `Customers` 相同数据集中的表的列。</span><span class="sxs-lookup"><span data-stu-id="00a80-119">You can add a second <xref:System.Windows.Forms.TextBox> control (`TextBox2`) to the form and bind it to the `LastName` column of the `Customers` table in the same dataset.</span></span> <span data-ttu-id="00a80-120"><xref:System.Windows.Forms.BindingContext>知道 (要) 的第一个绑定 `TextBox1` `Customers.FirstName` ，因此它将使用相同的 <xref:System.Windows.Forms.CurrencyManager> ，因为这两个文本框绑定到同一个数据集 (`DataSet1`) 。</span><span class="sxs-lookup"><span data-stu-id="00a80-120">The <xref:System.Windows.Forms.BindingContext> is aware of the first binding (`TextBox1` to `Customers.FirstName`), so it would use the same <xref:System.Windows.Forms.CurrencyManager>, as both text boxes are bound to the same dataset (`DataSet1`).</span></span>  
  
```vb  
TextBox2.DataBindings.Add("Text", dataSet1, "Customers.LastName")  
  
```  
  
```csharp  
textBox2.DataBindings.Add("Text", dataSet1, "Customers.LastName");  
  
```  
  
```cpp  
textBox2->DataBindings->Add("Text", dataSet1, "Customers.LastName");  
```  
  
 <span data-ttu-id="00a80-121">如果绑定 `TextBox2` 到不同的数据集，则 <xref:System.Windows.Forms.BindingContext> 创建和管理另一个数据集 <xref:System.Windows.Forms.CurrencyManager> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-121">If you bind `TextBox2` to a different dataset, the <xref:System.Windows.Forms.BindingContext> creates and manages a second <xref:System.Windows.Forms.CurrencyManager>.</span></span>  
  
 <span data-ttu-id="00a80-122">务必要一致地设置 <xref:System.Windows.Forms.ListControl.DataSource%2A> 和 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 属性，否则，将为 <xref:System.Windows.Forms.BindingContext> 同一个数据集创建多个货币管理器，从而导致错误。</span><span class="sxs-lookup"><span data-stu-id="00a80-122">It is important to be consistent about how you set the <xref:System.Windows.Forms.ListControl.DataSource%2A> and <xref:System.Windows.Forms.ListControl.DisplayMember%2A> properties; otherwise, the <xref:System.Windows.Forms.BindingContext> creates multiple currency managers for the same dataset, which results in errors.</span></span> <span data-ttu-id="00a80-123">下面的代码示例演示了一些设置属性及其关联对象的方法 <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-123">The following code example shows a few ways to set the properties and their associated <xref:System.Windows.Forms.BindingContext> objects.</span></span> <span data-ttu-id="00a80-124">您可以使用以下任一方法来设置属性，前提是您在代码中保持一致。</span><span class="sxs-lookup"><span data-stu-id="00a80-124">You can set the properties using either of the following methods, as long as you are consistent throughout your code.</span></span>  
  
```vb  
ComboBox1.DataSource = DataSet1  
ComboBox1.DisplayMember = "Customers.FirstName"  
Me.BindingContext(dataSet1, "Customers").Position = 1  
  
```  
  
```csharp  
comboBox1.DataSource = DataSet1;  
comboBox1.DisplayMember = "Customers.FirstName";  
this.BindingContext[dataSet1, "Customers"].Position = 1;  
  
```  
  
```cpp  
comboBox1->DataSource = dataSet1;  
comboBox1->DisplayMember = "Customers.FirstName";  
this->BindingContext->get_Item(dataSet1, "Customers")->Position = 1;  
  
```  
  
```vb  
ComboBox1.DataSource = DataSet1.Customers  
ComboBox1.DisplayMember = "FirstName"  
Me.BindingContext(dataSet1.Customers).Position = 1  
  
```  
  
```csharp  
comboBox1.DataSource = DataSet1.Customers;  
comboBox1.DisplayMember = "FirstName";  
this.BindingContext[dataSet1.Customers].Position = 1;  
  
```  
  
```cpp  
comboBox1->DataSource = dataSet1->Customers;  
comboBox1->DisplayMember = "FirstName";  
this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;  
  
```  
  
> [!NOTE]
>  <span data-ttu-id="00a80-125">大多数 Windows 窗体的应用程序都通过绑定 <xref:System.Windows.Forms.BindingSource> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-125">Most Windows Forms applications bind through a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="00a80-126"><xref:System.Windows.Forms.BindingSource>组件封装 <xref:System.Windows.Forms.CurrencyManager> 并公开 <xref:System.Windows.Forms.CurrencyManager> 编程接口。</span><span class="sxs-lookup"><span data-stu-id="00a80-126">The <xref:System.Windows.Forms.BindingSource> component encapsulates a <xref:System.Windows.Forms.CurrencyManager> and exposes the <xref:System.Windows.Forms.CurrencyManager> programming interface.</span></span> <span data-ttu-id="00a80-127">当使用 <xref:System.Windows.Forms.BindingSource> 进行绑定时，应使用由公开的成员 <xref:System.Windows.Forms.BindingSource> 来操作 "currency" (即 `Position`) ，而不是通过进行操作 <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-127">When using a <xref:System.Windows.Forms.BindingSource> for binding, you should use the members exposed by the <xref:System.Windows.Forms.BindingSource> to manipulate "currency" (that is, `Position`) rather than go through the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-128">下面的代码示例创建了四个 <xref:System.Windows.Forms.Binding> 用于将五个控件（a <xref:System.Windows.Forms.DateTimePicker> 和四个 <xref:System.Windows.Forms.TextBox> 控件）绑定到多个数据源的对象。</span><span class="sxs-lookup"><span data-stu-id="00a80-128">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls - a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls - to several data sources.</span></span> <span data-ttu-id="00a80-129">然后，将 <xref:System.Windows.Forms.BindingContext> 使用来获取 <xref:System.Windows.Forms.BindingManagerBase> 每个数据源的。</span><span class="sxs-lookup"><span data-stu-id="00a80-129">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a80-130">初始化 <see cref="T:System.Windows.Forms.BindingContext" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="00a80-130">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-131">如果希望 <xref:System.Windows.Forms.BindingManagerBase> 同一数据源具有多个实例，请创建新的 <xref:System.Windows.Forms.BindingContext> 并将其设置为 <xref:System.Windows.Forms.Control.BindingContext%2A> 从类继承的对象的属性 <xref:System.Windows.Forms.Control> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-131">If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="00a80-132">例如，如果有两个 <xref:System.Windows.Forms.BindingManagerBase> 对象从两个不同的 <xref:System.Windows.Forms.BindingContext> 对象)  (，则可以将 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 每个对象的属性设置 <xref:System.Windows.Forms.BindingManagerBase> 为不同的值。</span><span class="sxs-lookup"><span data-stu-id="00a80-132">For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values.</span></span> <span data-ttu-id="00a80-133">这将导致每个数据绑定控件集显示同一个数据源中的不同值。</span><span class="sxs-lookup"><span data-stu-id="00a80-133">This causes each set of data-bound controls to display different values from the same data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-134">下面的代码示例创建两个新的 <xref:System.Windows.Forms.BindingContext> 对象，并将每个对象分配给 <xref:System.Windows.Forms.BindingContext> 控件的属性 <xref:System.Windows.Forms.GroupBox> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-134">The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control.</span></span> <span data-ttu-id="00a80-135">`GroupBox1` 包含 `TextBox1` ，并 `GroupBox2` 包含 `TextBox2` (通过使用 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 类) 的方法完成 <xref:System.Windows.Forms.Control.ControlCollection> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-135">`GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class).</span></span> <span data-ttu-id="00a80-136">然后，该示例将 <xref:System.Windows.Forms.Binding> 对象添加到这两个 <xref:System.Windows.Forms.TextBox> 控件，并将每个控件绑定到相同的数据源和数据成员。</span><span class="sxs-lookup"><span data-stu-id="00a80-136">The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member.</span></span> <span data-ttu-id="00a80-137">该示例还显示了两个事件处理程序，它们使用 <xref:System.Windows.Forms.BindingContext> 来自 <xref:System.Windows.Forms.GroupBox> 控件的来设置 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 不同 <xref:System.Windows.Forms.BindingManagerBase> 对象的属性。</span><span class="sxs-lookup"><span data-stu-id="00a80-137">The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.</span></span>  
  
 [!code-cpp[Classic BindingContext.BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="protected internal void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Add(object dataSource, class System.Windows.Forms.BindingManagerBase listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Add (dataSource As Object, listManager As BindingManagerBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Add(System::Object ^ dataSource, System::Windows::Forms::BindingManagerBase ^ listManager);" />
      <MemberSignature Language="F#" Value="member this.Add : obj * System.Windows.Forms.BindingManagerBase -&gt; unit" Usage="bindingContext.Add (dataSource, listManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="listManager" Type="System.Windows.Forms.BindingManagerBase" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-138">与 <see cref="T:System.Object" /> 关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-138">The <see cref="T:System.Object" /> associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="listManager"><span data-ttu-id="00a80-139">要添加的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-139">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</span></span></param>
        <summary><span data-ttu-id="00a80-140">向集合添加与特定数据源关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-140">Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-141">此方法已过时且未使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-141">This method is obsolete and unused.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCore">
      <MemberSignature Language="C#" Value="protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddCore(object dataSource, class System.Windows.Forms.BindingManagerBase listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddCore (dataSource As Object, listManager As BindingManagerBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddCore(System::Object ^ dataSource, System::Windows::Forms::BindingManagerBase ^ listManager);" />
      <MemberSignature Language="F#" Value="abstract member AddCore : obj * System.Windows.Forms.BindingManagerBase -&gt; unit&#xA;override this.AddCore : obj * System.Windows.Forms.BindingManagerBase -&gt; unit" Usage="bindingContext.AddCore (dataSource, listManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="listManager" Type="System.Windows.Forms.BindingManagerBase" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-142">与 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 关联的对象。</span><span class="sxs-lookup"><span data-stu-id="00a80-142">The object associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="listManager"><span data-ttu-id="00a80-143">要添加的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-143">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</span></span></param>
        <summary><span data-ttu-id="00a80-144">向集合添加与特定数据源关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-144">Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-145">此方法已过时且未使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-145">This method is obsolete and unused.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="00a80-146"><paramref name="dataSource" /> 上声明的默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-146"><paramref name="dataSource" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="00a80-147">或</span><span class="sxs-lookup"><span data-stu-id="00a80-147">-or-</span></span> 
 <span data-ttu-id="00a80-148"><paramref name="listManager" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-148"><paramref name="listManager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected internal void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="bindingContext.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a80-149">清除所有 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="00a80-149">Clears the collection of any <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-150">此方法已过时且未使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-150">This method is obsolete and unused.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCore">
      <MemberSignature Language="C#" Value="protected virtual void ClearCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.ClearCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearCore();" />
      <MemberSignature Language="F#" Value="abstract member ClearCore : unit -&gt; unit&#xA;override this.ClearCore : unit -&gt; unit" Usage="bindingContext.ClearCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a80-151">清除集合。</span><span class="sxs-lookup"><span data-stu-id="00a80-151">Clears the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-152">此方法已过时且未使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-152">This method is obsolete and unused.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingContext.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a80-153">被处理时总会引发 <see cref="T:System.NotImplementedException" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-153">Always raises a <see cref="T:System.NotImplementedException" /> when handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-154"><xref:System.Windows.Forms.BindingContext.CollectionChanged>事件已过时，并且 <xref:System.NotImplementedException> 在处理时始终引发。</span><span class="sxs-lookup"><span data-stu-id="00a80-154">The <xref:System.Windows.Forms.BindingContext.CollectionChanged> event is obsolete and always raises a <xref:System.NotImplementedException> when handled.</span></span> <span data-ttu-id="00a80-155">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="00a80-155">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="00a80-156">在所有情况下都会发生。</span><span class="sxs-lookup"><span data-stu-id="00a80-156">Occurs in all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00a80-157">获取一个值，该值指示 <see cref="T:System.Windows.Forms.BindingContext" /> 是否包含指定的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-157">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (dataSource As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj -&gt; bool" Usage="bindingContext.Contains dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-158">一个表示数据源的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-158">An <see cref="T:System.Object" /> that represents the data source.</span></span></param>
        <summary><span data-ttu-id="00a80-159">获取一个值，该值指示 <see cref="T:System.Windows.Forms.BindingContext" /> 是否包含与指定数据源关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-159">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <returns><span data-ttu-id="00a80-160">如果 <see cref="T:System.Windows.Forms.BindingContext" /> 包含指定的 <see cref="T:System.Windows.Forms.BindingManagerBase" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-160"><see langword="true" /> if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-161">有关 <xref:System.Windows.Forms.Binding> 可能的数据源的列表和有关在控件和数据源之间创建绑定的信息，请参阅类。</span><span class="sxs-lookup"><span data-stu-id="00a80-161">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="00a80-162">有关 <xref:System.Windows.Forms.BindingContext.Item%2A> <xref:System.Windows.Forms.BindingManagerBase> 仅使用数据源返回的信息，请参见属性。</span><span class="sxs-lookup"><span data-stu-id="00a80-162">See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-163">下面的代码示例使用 <xref:System.Windows.Forms.BindingContext.Contains%2A> 方法来确定 <xref:System.Windows.Forms.BindingManagerBase> 窗体上的每个控件是否存在。</span><span class="sxs-lookup"><span data-stu-id="00a80-163">The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form.</span></span> <span data-ttu-id="00a80-164">该示例将中的每个传递 <xref:System.Data.DataTable> <xref:System.Data.DataSet> 给方法。</span><span class="sxs-lookup"><span data-stu-id="00a80-164">The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.</span></span>  
  
 [!code-cpp[Classic BindingContext.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (dataSource As Object, dataMember As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj * string -&gt; bool" Usage="bindingContext.Contains (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-165">一个表示数据源的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-165">An <see cref="T:System.Object" /> that represents the data source.</span></span></param>
        <param name="dataMember"><span data-ttu-id="00a80-166">解析为特定 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 所需的信息。</span><span class="sxs-lookup"><span data-stu-id="00a80-166">The information needed to resolve to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="00a80-167">获取一个值，该值指示 <see cref="T:System.Windows.Forms.BindingContext" /> 是否包含与指定数据源和数据成员关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-167">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source and data member.</span></span></summary>
        <returns><span data-ttu-id="00a80-168">如果 <see cref="T:System.Windows.Forms.BindingContext" /> 包含指定的 <see cref="T:System.Windows.Forms.BindingManagerBase" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-168"><see langword="true" /> if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-169">有关 <xref:System.Windows.Forms.Binding> 可能的数据源的列表，请参阅类，有关在控件和数据源之间创建绑定的信息，请参阅。</span><span class="sxs-lookup"><span data-stu-id="00a80-169">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="00a80-170">有关 <xref:System.Windows.Forms.BindingContext.Item%2A> <xref:System.Windows.Forms.BindingManagerBase> 使用数据源和数据成员返回的信息，请参见属性。</span><span class="sxs-lookup"><span data-stu-id="00a80-170">See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-171">下面的代码示例使用 <xref:System.Windows.Forms.BindingContext.Contains%2A> 方法来测试是否存在特定的， <xref:System.Windows.Forms.BindingManagerBase> 然后再尝试通过属性获取它 <xref:System.Windows.Forms.BindingContext.Item%2A> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-171">The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingContext.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingContext.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a80-172">获取一个值，该值指示集合是否为只读。</span><span class="sxs-lookup"><span data-stu-id="00a80-172">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="00a80-173">如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-173"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-174">此属性从 <xref:System.Collections.ICollection> 派生，而且已重写此属性，使之始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="00a80-174">This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00a80-175">获取一个 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-175">Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(dataSource As Object) As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ default[System::Object ^] { System::Windows::Forms::BindingManagerBase ^ get(System::Object ^ dataSource); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.BindingContext.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-176">与特定 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 关联的数据源。</span><span class="sxs-lookup"><span data-stu-id="00a80-176">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="00a80-177">获取与指定数据源关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-177">Gets the <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source.</span></span></summary>
        <value><span data-ttu-id="00a80-178">指定数据源的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-178">A <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-179">如果 <xref:System.Windows.Forms.BindingManagerBase> 需要的不需要导航路径，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="00a80-179">Use this overload if the <xref:System.Windows.Forms.BindingManagerBase> you want does not require a navigation path.</span></span> <span data-ttu-id="00a80-180">例如，如果 <xref:System.Windows.Forms.BindingManagerBase> 管理一组 <xref:System.Windows.Forms.Binding> 使用或的对象 <xref:System.Collections.ArrayList> ，则 <xref:System.Data.DataTable> <xref:System.Windows.Forms.Binding.DataSource%2A> 无需导航路径。</span><span class="sxs-lookup"><span data-stu-id="00a80-180">For example, if the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects that use an <xref:System.Collections.ArrayList> or <xref:System.Data.DataTable> as the <xref:System.Windows.Forms.Binding.DataSource%2A>, no navigation path is required.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a80-181"><xref:System.Windows.Forms.BindingContext.Item%2A>属性将始终返回 <xref:System.Windows.Forms.BindingManagerBase> ，而不会返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="00a80-181">The <xref:System.Windows.Forms.BindingContext.Item%2A> property will always return a <xref:System.Windows.Forms.BindingManagerBase>, and never return `null`.</span></span>  
  
 <span data-ttu-id="00a80-182">有关 <xref:System.Windows.Forms.Binding> 可能的数据源的列表，请参阅类，有关在控件和数据源之间创建绑定的信息，请参阅。</span><span class="sxs-lookup"><span data-stu-id="00a80-182">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-183">下面的代码示例返回三个 <xref:System.Windows.Forms.BindingManagerBase> 对象：一个用于，一个用于，一个用于 <xref:System.Data.DataView> <xref:System.Collections.ArrayList> <xref:System.Windows.Forms.Binding.DataSource%2A> <xref:System.Windows.Forms.Binding> 属于控件的 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-183">The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic BindingContext.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.this Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase Item(object, string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(dataSource As Object, dataMember As String) As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ default[System::Object ^, System::String ^] { System::Windows::Forms::BindingManagerBase ^ get(System::Object ^ dataSource, System::String ^ dataMember); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj * string) : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.BindingContext.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-184">与特定 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 关联的数据源。</span><span class="sxs-lookup"><span data-stu-id="00a80-184">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="dataMember"><span data-ttu-id="00a80-185">包含解析为特定 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 的信息的导航路径。</span><span class="sxs-lookup"><span data-stu-id="00a80-185">A navigation path containing the information that resolves to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="00a80-186">获取与指定数据源和数据成员相关联的一个 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-186">Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source and data member.</span></span></summary>
        <value><span data-ttu-id="00a80-187">指定数据源和数据成员的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-187">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source and data member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-188">当 <xref:System.Windows.Forms.BindingManagerBase> 管理一组 <xref:System.Windows.Forms.Binding> 对象（其数据源包含多个对象）时，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="00a80-188">Use this overload when the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects for which the data source contains multiple objects.</span></span> <span data-ttu-id="00a80-189">例如， <xref:System.Data.DataSet> 可以包含 <xref:System.Data.DataTable> 由对象链接的多个对象 <xref:System.Data.DataRelation> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-189">For example, a <xref:System.Data.DataSet> can contain several <xref:System.Data.DataTable> objects linked by <xref:System.Data.DataRelation> objects.</span></span> <span data-ttu-id="00a80-190">在这种情况下，需要使用导航路径才能 <xref:System.Windows.Forms.BindingContext> 返回正确的 <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-190">In such a case, the navigation path is required to enable the <xref:System.Windows.Forms.BindingContext> to return the correct <xref:System.Windows.Forms.BindingManagerBase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a80-191"><xref:System.Windows.Forms.BindingContext.Item%2A> <xref:System.Windows.Forms.BindingManagerBase> 当参数有效时，属性将始终返回 `dataMember` 。</span><span class="sxs-lookup"><span data-stu-id="00a80-191">The <xref:System.Windows.Forms.BindingContext.Item%2A> property will always return a <xref:System.Windows.Forms.BindingManagerBase>, when the `dataMember` parameter is valid.</span></span> <span data-ttu-id="00a80-192">它永远不会返回 `null` 。</span><span class="sxs-lookup"><span data-stu-id="00a80-192">It will never return `null`.</span></span>  
  
 <span data-ttu-id="00a80-193">有关 <xref:System.Windows.Forms.Binding> 可能的数据源的列表，请参阅类，有关在控件和数据源之间创建绑定的信息，请参阅。</span><span class="sxs-lookup"><span data-stu-id="00a80-193">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="00a80-194">如果所需的 <xref:System.Windows.Forms.BindingManagerBase> 管理列表，则导航路径也必须以列表结尾。</span><span class="sxs-lookup"><span data-stu-id="00a80-194">If the desired <xref:System.Windows.Forms.BindingManagerBase> manages a list, the navigation path must also end with a list.</span></span> <span data-ttu-id="00a80-195">例如，下面的 c # 代码将 <xref:System.Windows.Forms.TextBox> 控件绑定到订单表中的订单日期。</span><span class="sxs-lookup"><span data-stu-id="00a80-195">For example, the following C# code binds a <xref:System.Windows.Forms.TextBox> control to the order date in a table of orders.</span></span> <span data-ttu-id="00a80-196">导航路径包括 <xref:System.Data.DataTable.TableName%2A> 、 <xref:System.Data.DataRelation.RelationName%2A> 和 <xref:System.Data.DataColumn.ColumnName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-196">The navigation path includes the <xref:System.Data.DataTable.TableName%2A>, the <xref:System.Data.DataRelation.RelationName%2A>, and the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span> <span data-ttu-id="00a80-197">但是， <xref:System.Windows.Forms.BindingManagerBase> 必须使用 <xref:System.Data.DataTable.TableName%2A> <xref:System.Data.DataRelation.RelationName%2A> 解析为列表) 的和 (来检索。</span><span class="sxs-lookup"><span data-stu-id="00a80-197">However, the <xref:System.Windows.Forms.BindingManagerBase> must be retrieved using only the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataRelation.RelationName%2A> (which resolves to a list).</span></span>  
  
```  
// The navigation path for a Binding ends with a property.  
textBox1.DataBindings.Add  
("Text", dataSet1, "Customers.custToOrders.OrderDate");  
// The navigation path for the BindingManagerBase ends with a list.  
BindingManagerBase bmOrders = this.BindingContext  
[dataSet1, "Customers.custToOrders"];  
```  
  
 <span data-ttu-id="00a80-198">返回时 <xref:System.Windows.Forms.BindingManagerBase> ，应使用与相同的数据源 <xref:System.Windows.Forms.Binding> ，并仅修改导航路径。</span><span class="sxs-lookup"><span data-stu-id="00a80-198">When returning a <xref:System.Windows.Forms.BindingManagerBase>, you should use the same data source as the <xref:System.Windows.Forms.Binding> and modify only the navigation path.</span></span>  
  
 <span data-ttu-id="00a80-199">使用 <xref:System.Windows.Forms.BindingContext.Contains%2A> 方法来确定所需的是否 <xref:System.Windows.Forms.BindingManagerBase> 已存在。</span><span class="sxs-lookup"><span data-stu-id="00a80-199">Use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the desired <xref:System.Windows.Forms.BindingManagerBase> already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-200">下面的代码示例演示如何使用 <xref:System.Windows.Forms.BindingContext.Item%2A> 来检索 <xref:System.Windows.Forms.BindingManagerBase> 特定绑定的。</span><span class="sxs-lookup"><span data-stu-id="00a80-200">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingContext.Item%2A> to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding.</span></span> <span data-ttu-id="00a80-201">它还演示如何处理的 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 事件 <xref:System.Windows.Forms.BindingManagerBase> ，以确保在更改其中一个控件值时，绑定到同一个数据源的多个控件保持同步。</span><span class="sxs-lookup"><span data-stu-id="00a80-201">It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="00a80-202">若要运行此示例，请将代码粘贴到 Windows 窗体中，并 `InitializeControlsAndData` 从窗体的构造函数或 <xref:System.Windows.Forms.Form.Load> 事件处理方法调用方法。</span><span class="sxs-lookup"><span data-stu-id="00a80-202">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="00a80-203">数据源内不存在指定的 <paramref name="dataMember" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-203">The specified <paramref name="dataMember" /> does not exist within the data source.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="bindingContext.OnCollectionChanged ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent"><span data-ttu-id="00a80-204">包含事件数据的 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-204">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="00a80-205">引发 <see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="00a80-205">Raises the <see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-206">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="00a80-206">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="00a80-207">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="00a80-207">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="00a80-208"><xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="00a80-208">The <xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="00a80-209">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="00a80-209">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="00a80-210">在派生类中重写 <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="00a80-210">When overriding <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="protected internal void Remove (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Remove(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Remove (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Remove(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.Remove : obj -&gt; unit" Usage="bindingContext.Remove dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-211">与要移除的 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 关联的数据源。</span><span class="sxs-lookup"><span data-stu-id="00a80-211">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</span></span></param>
        <summary><span data-ttu-id="00a80-212">删除与指定数据源关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-212">Deletes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-213">此方法已过时且未使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-213">This method is obsolete and unused.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCore">
      <MemberSignature Language="C#" Value="protected virtual void RemoveCore (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveCore(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.RemoveCore(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveCore (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveCore(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCore : obj -&gt; unit&#xA;override this.RemoveCore : obj -&gt; unit" Usage="bindingContext.RemoveCore dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="00a80-214">与要移除的 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 关联的数据源。</span><span class="sxs-lookup"><span data-stu-id="00a80-214">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</span></span></param>
        <summary><span data-ttu-id="00a80-215">移除与指定数据源关联的 <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-215">Removes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-216">此方法已过时且未使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-216">This method is obsolete and unused.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (ar As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ ar, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="bindingContext.System.Collections.ICollection.CopyTo (ar, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ar"><span data-ttu-id="00a80-217">要复制到的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-217">An <see cref="T:System.Array" /> to copy into.</span></span></param>
        <param name="index"><span data-ttu-id="00a80-218">复制起始位置的集合索引。</span><span class="sxs-lookup"><span data-stu-id="00a80-218">The collection index to begin copying from.</span></span></param>
        <summary><span data-ttu-id="00a80-219">将集合中的元素复制到指定数组，从集合索引处开始。</span><span class="sxs-lookup"><span data-stu-id="00a80-219">Copies the elements of the collection into a specified array, starting at the collection index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a80-220">获取 <see cref="T:System.Windows.Forms.CurrencyManager" /> 所管理的 <see cref="T:System.Windows.Forms.BindingContext" /> 对象的总数。</span><span class="sxs-lookup"><span data-stu-id="00a80-220">Gets the total number of <see cref="T:System.Windows.Forms.CurrencyManager" /> objects managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></summary>
        <value><span data-ttu-id="00a80-221"><see cref="T:System.Windows.Forms.BindingContext" /> 所管理的数据源数。</span><span class="sxs-lookup"><span data-stu-id="00a80-221">The number of data sources managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="00a80-222">下面的代码示例返回 <xref:System.Windows.Forms.CurrencyManager> 由管理的对象的数目 <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-222">The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
 [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a80-223">获取一个值，通过该值指示该集合是否已同步。</span><span class="sxs-lookup"><span data-stu-id="00a80-223">Gets a value indicating whether the collection is synchronized.</span></span></summary>
        <value><span data-ttu-id="00a80-224">如果集合是线程安全的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-224"><see langword="true" /> if the collection is thread safe; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-225">此属性从 <xref:System.Collections.ICollection> 派生，而且已重写此属性，使之始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="00a80-225">This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00a80-226">获取用于同步（线程安全）的对象。</span><span class="sxs-lookup"><span data-stu-id="00a80-226">Gets an object to use for synchronization (thread safety).</span></span></summary>
        <value><span data-ttu-id="00a80-227">此属性从 <see cref="T:System.Collections.ICollection" /> 派生，而且已重写此属性，使之始终返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-227">This property is derived from <see cref="T:System.Collections.ICollection" />, and is overridden to always return <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="00a80-228">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="00a80-228">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00a80-229">它只能在 <xref:System.Windows.Forms.BindingContext> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="00a80-229">It can be used only when the <xref:System.Windows.Forms.BindingContext> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bindingContext.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00a80-230">获取集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="00a80-230">Gets an enumerator for the collection.</span></span></summary>
        <returns><span data-ttu-id="00a80-231">集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-231">An <see cref="T:System.Collections.IEnumerator" /> for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-232"><xref:System.Collections.IEnumerator>方法返回的可 <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> 用于循环访问由管理的集合 <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-232">The <xref:System.Collections.IEnumerator> returned by the <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> method allows you to iterate over the collection managed by the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a80-233">下面的代码示例使用 <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> 方法返回的 <xref:System.Collections.IEnumerator> <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-233">The following code example uses the <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
 [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBinding">
      <MemberSignature Language="C#" Value="public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateBinding(class System.Windows.Forms.BindingContext newBindingContext, class System.Windows.Forms.Binding binding) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateBinding (newBindingContext As BindingContext, binding As Binding)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateBinding(System::Windows::Forms::BindingContext ^ newBindingContext, System::Windows::Forms::Binding ^ binding);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member UpdateBinding : System.Windows.Forms.BindingContext * System.Windows.Forms.Binding -&gt; unit" Usage="System.Windows.Forms.BindingContext.UpdateBinding (newBindingContext, binding)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBindingContext" Type="System.Windows.Forms.BindingContext" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="newBindingContext"><span data-ttu-id="00a80-234">要与 <see cref="T:System.Windows.Forms.BindingContext" /> 关联的新 <see cref="T:System.Windows.Forms.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-234">The new <see cref="T:System.Windows.Forms.BindingContext" /> to associate with the <see cref="T:System.Windows.Forms.Binding" />.</span></span></param>
        <param name="binding"><span data-ttu-id="00a80-235">要与新的 <see cref="T:System.Windows.Forms.Binding" /> 关联的 <see cref="T:System.Windows.Forms.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="00a80-235">The <see cref="T:System.Windows.Forms.Binding" /> to associate with the new <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></param>
        <summary><span data-ttu-id="00a80-236">将 <see cref="T:System.Windows.Forms.Binding" /> 与一个新的 <see cref="T:System.Windows.Forms.BindingContext" /> 关联起来。</span><span class="sxs-lookup"><span data-stu-id="00a80-236">Associates a <see cref="T:System.Windows.Forms.Binding" /> with a new <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a80-237">此方法用于 <xref:System.Windows.Forms.IBindableComponent> 在其更改时更新实现的组件的绑定 <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="00a80-237">This method is intended update the bindings of components that implement <xref:System.Windows.Forms.IBindableComponent>, when their <xref:System.Windows.Forms.BindingContext> changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
