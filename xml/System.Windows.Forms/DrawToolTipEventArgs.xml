<Type Name="DrawToolTipEventArgs" FullName="System.Windows.Forms.DrawToolTipEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aceffbdf83c87120633d8d95a1b51dc8e375574" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86653768" /></Metadata><TypeSignature Language="C#" Value="public class DrawToolTipEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawToolTipEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawToolTipEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawToolTipEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawToolTipEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawToolTipEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.ToolTip.Draw" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolTip.Draw?displayProperty=nameWithType> <xref:System.Windows.Forms.ToolTip> 当绘制时，类将引发事件 <xref:System.Windows.Forms.ToolTip> ，并且 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A?displayProperty=nameWithType> 属性值为 `true` 。 此事件的处理程序接收类型为的参数 <xref:System.Windows.Forms.DrawToolTipEventArgs> 。 <xref:System.Windows.Forms.DrawToolTipEventArgs>类包含绘制所需的所有信息 <xref:System.Windows.Forms.ToolTip> ，包括 <xref:System.Windows.Forms.ToolTip> 文本、以及 <xref:System.Drawing.Rectangle> <xref:System.Drawing.Graphics> 应在其上进行绘制的对象。 若要自定义工具提示的外观，请使用 <xref:System.Drawing.Rectangle> 确定工具提示的边界以及 <xref:System.Drawing.Graphics> 用于执行自定义绘图的对象。 可以通过处理事件来增加的界限 <xref:System.Windows.Forms.ToolTip> <xref:System.Windows.Forms.ToolTip.Popup> 。  
  
 <xref:System.Windows.Forms.DrawToolTipEventArgs> 还支持通过 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 和方法进行部分自定义 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 。 使用这些方法，您可以在保留以标准方式绘制的其他部分的同时，所有者绘制工具提示的各个部分。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawToolTipEventArgs" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
    <altmember cref="T:System.Windows.Forms.PopupEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawToolTipEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.IWin32Window associatedWindow, System.Windows.Forms.Control associatedControl, System.Drawing.Rectangle bounds, string toolTipText, System.Drawing.Color backColor, System.Drawing.Color foreColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.IWin32Window associatedWindow, class System.Windows.Forms.Control associatedControl, valuetype System.Drawing.Rectangle bounds, string toolTipText, valuetype System.Drawing.Color backColor, valuetype System.Drawing.Color foreColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawToolTipEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.IWin32Window,System.Windows.Forms.Control,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphics As Graphics, associatedWindow As IWin32Window, associatedControl As Control, bounds As Rectangle, toolTipText As String, backColor As Color, foreColor As Color, font As Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawToolTipEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::IWin32Window ^ associatedWindow, System::Windows::Forms::Control ^ associatedControl, System::Drawing::Rectangle bounds, System::String ^ toolTipText, System::Drawing::Color backColor, System::Drawing::Color foreColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawToolTipEventArgs : System.Drawing.Graphics * System.Windows.Forms.IWin32Window * System.Windows.Forms.Control * System.Drawing.Rectangle * string * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; System.Windows.Forms.DrawToolTipEventArgs" Usage="new System.Windows.Forms.DrawToolTipEventArgs (graphics, associatedWindow, associatedControl, bounds, toolTipText, backColor, foreColor, font)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="associatedWindow" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="associatedControl" Type="System.Windows.Forms.Control" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="toolTipText" Type="System.String" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="graphics">用于绘制工具提示的 <see cref="T:System.Drawing.Graphics" /> 上下文。</param>
        <param name="associatedWindow">工具提示绑定到的 <see cref="T:System.Windows.Forms.IWin32Window" />。</param>
        <param name="associatedControl">将为其创建工具提示的 <see cref="T:System.Windows.Forms.Control" />。</param>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" />，它勾勒要显示工具提示的区域的轮廓。</param>
        <param name="toolTipText"><see cref="T:System.String" />，包含工具提示的文本。</param>
        <param name="backColor">工具提示背景的 <see cref="T:System.Drawing.Color" />。</param>
        <param name="foreColor">工具提示文本的 <see cref="T:System.Drawing.Color" />。</param>
        <param name="font">用于绘制工具提示文本的 <see cref="T:System.Drawing.Font" />。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DrawToolTipEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DrawToolTipEventArgs.%23ctor%2A>构造函数使用 `graphics` 、、 `associatedControl` 、 `associatedWindow` `bounds` `font` 和 `toolTipText` 参数初始化其对应的、类似命名的属性。 `backColor`和 `foreColor` 参数 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 分别由和方法使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.Graphics" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.AssociatedWindow" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.Bounds" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.Font" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground" />
        <altmember cref="Overload:System.Windows.Forms.DrawToolTipEventArgs.DrawText" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control AssociatedControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control AssociatedControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssociatedControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ AssociatedControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要为其绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的控件。</summary>
        <value>发生 <see cref="T:System.Windows.Forms.Control" /> 事件时与 <see cref="T:System.Windows.Forms.ToolTip" /> 关联的 <see cref="E:System.Windows.Forms.ToolTip.Draw" />。 如果工具提示未与控件关联，则返回值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于 <xref:System.Windows.Forms.ToolTip> 可以通过方法与多个控件关联 <xref:System.Windows.Forms.ToolTip.SetToolTip%2A?displayProperty=nameWithType> ，因此 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A> 可以使用属性来确定 <xref:System.Windows.Forms.ToolTip.Draw> 与事件关联的控件。 如果要基于关联控件执行不同的工具提示自定义，这会很有帮助。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 `true` ，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码示例摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A> 属性。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.AssociatedWindow" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Draw" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWin32Window AssociatedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IWin32Window AssociatedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawToolTipEventArgs.AssociatedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssociatedWindow As IWin32Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IWin32Window ^ AssociatedWindow { System::Windows::Forms::IWin32Window ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedWindow : System.Windows.Forms.IWin32Window" Usage="System.Windows.Forms.DrawToolTipEventArgs.AssociatedWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWin32Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Windows.Forms.ToolTip" /> 要绑定到的窗口。</summary>
        <value>拥有 <see cref="T:System.Windows.Forms.ToolTip" /> 的窗口。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当某个窗口被另一个窗口拥有时，拥有的窗口将最小化并在所有者窗口中关闭。 所有者窗体后面也从不会显示拥有的窗口。 此处的工具提示由属性表示的本机 Win32 窗口所有 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedWindow%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何使用此成员。 在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.ToolTip.Draw?displayProperty=nameWithType> 。 此报表可帮助你了解何时发生事件，并可帮助你进行调试。  
  
 若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.ToolTip> `ToolTip1` 。 然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.ToolTip.Draw?displayProperty=nameWithType> 。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#618](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#618)]
 [!code-vb[System.Windows.Forms.EventExamples#618](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#618)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawToolTipEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawToolTipEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要绘制的 <see cref="T:System.Windows.Forms.ToolTip" /> 的大小和位置。</summary>
        <value>表示要绘制的 <see cref="T:System.Drawing.Rectangle" /> 的界限的 <see cref="T:System.Windows.Forms.ToolTip" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，系统会根据系统设置和文本设置界限 <xref:System.Windows.Forms.ToolTip> 。 可以通过处理类的事件来增加的边界， <xref:System.Windows.Forms.ToolTip> 然后再将其显示出来 <xref:System.Windows.Forms.ToolTip.Popup> <xref:System.Windows.Forms.ToolTip.Popup> <xref:System.Windows.Forms.ToolTip> 。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 方法并使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.Bounds%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.Graphics%2A> 属性。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBackground();" />
      <MemberSignature Language="F#" Value="member this.DrawBackground : unit -&gt; unit" Usage="drawToolTipEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用系统背景色绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的背景。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要自定义的某些可视方面，请使用此方法 <xref:System.Windows.Forms.ToolTip> ，但希望使用的当前值绘制标准的工具提示背景 <xref:System.Drawing.SystemColors.Info%2A?displayProperty=nameWithType> 。 绘制背景以填充属性指定的区域 <xref:System.Windows.Forms.DrawToolTipEventArgs.Bounds%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 方法。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public void DrawBorder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBorder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawBorder ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBorder();" />
      <MemberSignature Language="F#" Value="member this.DrawBorder : unit -&gt; unit" Usage="drawToolTipEventArgs.DrawBorder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用系统边框颜色绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的边框。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要自定义的某些可视方面，请使用此方法 <xref:System.Windows.Forms.ToolTip> ，但需要为使用的当前值绘制的标准工具提示边框 <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType> 。 将边框绘制到属性指定的大小 <xref:System.Windows.Forms.DrawToolTipEventArgs.Bounds%2A> 。 可以通过处理事件来增加的界限 <xref:System.Windows.Forms.ToolTip> <xref:System.Windows.Forms.ToolTip.Popup> 。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 方法。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用系统文本颜色和字体（可以选择使用特定格式设置选项）绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的文本。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawToolTipEventArgs.DrawText" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText();" />
      <MemberSignature Language="F#" Value="member this.DrawText : unit -&gt; unit" Usage="drawToolTipEventArgs.DrawText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用系统文本颜色和字体绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText>方法表示显示的默认方法 <xref:System.Windows.Forms.ToolTip> 。 此方法使用系统指定的字体和字体颜色的当前值 <xref:System.Drawing.SystemColors.InfoText%2A?displayProperty=nameWithType> 。 文本绘制为在由属性指定的矩形内水平和垂直居中的单个线条 <xref:System.Windows.Forms.DrawToolTipEventArgs.Bounds%2A> ; 它等效于以下对的重载版本的调用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%28System.Windows.Forms.TextFormatFlags%29> ：  
  
 `DrawText(TextFormatFlags.HorizontalCenter | TextFormatFlags.VerticalCenter | TextFormatFlags.SingleLine | TextFormatFlags.HidePrefix)`  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 方法。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground" />
        <altmember cref="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public void DrawText (System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawText(valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawToolTipEventArgs.DrawText(System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawText (flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawText(System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="member this.DrawText : System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="drawToolTipEventArgs.DrawText flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="flags">一个包含值的按位组合的 <see cref="T:System.Windows.Forms.TextFormatFlags" />，用于指定 <see cref="P:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" /> 的显示和布局。</param>
        <summary>使用系统文本颜色和字体以及指定的文本布局绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的文本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%28System.Windows.Forms.TextFormatFlags%29>方法用于自定义的某些可视方面 <xref:System.Windows.Forms.ToolTip> ，包括工具提示文本的布局。 此方法使用系统指定的字体和字体颜色的当前值 <xref:System.Drawing.SystemColors.InfoText%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground" />
        <altmember cref="M:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawToolTipEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawToolTipEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的字体。</summary>
        <value><see cref="T:System.Drawing.Font" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DrawToolTipEventArgs.Font%2A>当你为 <xref:System.Windows.Forms.ToolTip> 应使用 Windows 默认字体的自定义绘图时，使用属性。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 方法。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" />
        <altmember cref="Overload:System.Windows.Forms.DrawToolTipEventArgs.DrawText" />
        <altmember cref="P:System.Windows.Forms.DrawToolTipEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawToolTipEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawToolTipEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于绘制 <see cref="T:System.Windows.Forms.ToolTip" /> 的图形图面。</summary>
        <value>要在其上绘制 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Windows.Forms.ToolTip" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Drawing.Graphics> 对象自定义的某些视觉对象的绘制 <xref:System.Windows.Forms.ToolTip> 。 例如，你可以使用方法绘制自己的工具提示背景 <xref:System.Drawing.Graphics.FillRectangle%2A?displayProperty=nameWithType> 。  
  
 在由属性指定的矩形之外完成的任何自定义绘图 <xref:System.Windows.Forms.DrawToolTipEventArgs.Bounds%2A> 都不会显示。 可以通过处理事件来增加的界限 <xref:System.Windows.Forms.ToolTip> `ToolTip.Popup` 。  
  
 <xref:System.Windows.Forms.DrawToolTipEventArgs>类还提供 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 和方法， <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 以操作系统使用的标准方式绘制的各个部分 <xref:System.Windows.Forms.ToolTip> 。 您可以将这些方法与对象方法一起使用， <xref:System.Drawing.Graphics> 以在自定义其他部分的同时，使某些部分成为工具提示标准。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBackground%2A> 方法并使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.Graphics%2A> 属性。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string" Usage="System.Windows.Forms.DrawToolTipEventArgs.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取正在绘制的 <see cref="T:System.Windows.Forms.ToolTip" /> 的文本。</summary>
        <value>发生 <see cref="T:System.Windows.Forms.ToolTip" /> 事件时与 <see cref="E:System.Windows.Forms.ToolTip.Draw" /> 关联的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，您可以使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText%2A> 属性来确定您在自定义绘图工具提示时的工具提示文本。 您可以使用 <xref:System.Drawing.Graphics.DrawString%2A?displayProperty=nameWithType> 方法自定义工具提示文本的绘制。 如果要使用系统指定的样式绘制 ToolTip 文本，请使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawText%2A> 方法。 文本值来自传递到类的方法的值 <xref:System.Windows.Forms.ToolTip.SetToolTip%2A> <xref:System.Windows.Forms.ToolTip> 。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义绘制 <xref:System.Windows.Forms.ToolTip> 。 该示例创建一个 <xref:System.Windows.Forms.ToolTip> ，并将其与 <xref:System.Windows.Forms.Button> 位于上的三个控件关联 <xref:System.Windows.Forms.Form> 。 该示例将 <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> 属性设置为 true，并处理 <xref:System.Windows.Forms.ToolTip.Draw> 事件。 在 <xref:System.Windows.Forms.ToolTip.Draw> 事件处理程序中， <xref:System.Windows.Forms.ToolTip> 自定义绘制是不同的，具体取决于所显示的按钮， <xref:System.Windows.Forms.ToolTip> 如属性所示 <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> 。  
  
 下面的代码摘录演示了如何使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.DrawBorder%2A> 方法并使用 <xref:System.Windows.Forms.DrawToolTipEventArgs.Bounds%2A> 、 <xref:System.Windows.Forms.DrawToolTipEventArgs.ToolTipText%2A> 和 <xref:System.Windows.Forms.DrawToolTipEventArgs.Graphics%2A> 属性。 <xref:System.Windows.Forms.DrawToolTipEventArgs>有关完整的代码示例，请参阅类概述。  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.DrawToolTipEventArgs.DrawText" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Draw" />
        <altmember cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)" />
      </Docs>
    </Member>
  </Members>
</Type>
