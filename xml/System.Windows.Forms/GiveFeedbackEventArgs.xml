<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73e79516b6b76dcd558e0755a367f0e0bb37a745" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89755151" /></Metadata><TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0806b-101">为 <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> 事件提供数据，该事件在拖动操作期间发生。</span><span class="sxs-lookup"><span data-stu-id="0806b-101">Provides data for the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event, which occurs during a drag operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0806b-102">在 <xref:System.Windows.Forms.Control.GiveFeedback> 拖动操作过程中发生该事件。</span><span class="sxs-lookup"><span data-stu-id="0806b-102">The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation.</span></span> <span data-ttu-id="0806b-103">它允许拖动事件的源修改鼠标指针的外观，以便在拖放操作过程中为用户提供视觉反馈。</span><span class="sxs-lookup"><span data-stu-id="0806b-103">It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="0806b-104"><xref:System.Windows.Forms.GiveFeedbackEventArgs>对象指定拖放操作的类型以及是否使用默认游标。</span><span class="sxs-lookup"><span data-stu-id="0806b-104">A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.</span></span>  
  
 <span data-ttu-id="0806b-105">有关事件模型的信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="0806b-105">For information about the event model, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0806b-106">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-106">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="0806b-107">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="0806b-107">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="0806b-108">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-108">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="0806b-109"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-109">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="0806b-110">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-110">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="0806b-111">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-111">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="0806b-112">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-112">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="0806b-113">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="0806b-113">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="0806b-114">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="0806b-114">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="0806b-115">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-115">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="0806b-116">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-116">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0806b-117">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-117">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="0806b-118">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-118">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="0806b-119">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-119">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="0806b-120">此代码摘录演示了如何使用 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="0806b-120">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="0806b-121"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="0806b-121">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.GiveFeedbackEventArgs : System.Windows.Forms.DragDropEffects * bool -&gt; System.Windows.Forms.GiveFeedbackEventArgs" Usage="new System.Windows.Forms.GiveFeedbackEventArgs (effect, useDefaultCursors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect"><span data-ttu-id="0806b-122">拖放操作的类型。</span><span class="sxs-lookup"><span data-stu-id="0806b-122">The type of drag-and-drop operation.</span></span> <span data-ttu-id="0806b-123">对 <see cref="T:System.Windows.Forms.DragDropEffects" /> 中定义的常数应用按位“或”(|) 运算，获得可能的值。</span><span class="sxs-lookup"><span data-stu-id="0806b-123">Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <see cref="T:System.Windows.Forms.DragDropEffects" />.</span></span></param>
        <param name="useDefaultCursors"><span data-ttu-id="0806b-124">如果使用默认指针，值为 <see langword="true" />；反之，值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0806b-124"><see langword="true" /> if default pointers are used; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0806b-125">初始化 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0806b-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0806b-126">获取显示的拖放操作反馈。</span><span class="sxs-lookup"><span data-stu-id="0806b-126">Gets the drag-and-drop operation feedback that is displayed.</span></span></summary>
        <value><span data-ttu-id="0806b-127"><see cref="T:System.Windows.Forms.DragDropEffects" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0806b-127">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0806b-128">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-128">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="0806b-129">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="0806b-129">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="0806b-130">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-130">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="0806b-131"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-131">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="0806b-132">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-132">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="0806b-133">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-133">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="0806b-134">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-134">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="0806b-135">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="0806b-135">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="0806b-136">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="0806b-136">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="0806b-137">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-137">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="0806b-138">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-138">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0806b-139">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-139">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="0806b-140">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-140">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="0806b-141">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-141">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="0806b-142">此代码摘录演示了如何使用 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="0806b-142">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="0806b-143"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="0806b-143">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCursors : bool with get, set" Usage="System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0806b-144">获取或设置拖动操作是否应使用与拖放效果关联的默认光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-144">Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.</span></span></summary>
        <value><span data-ttu-id="0806b-145">如果使用默认指针，值为 <see langword="true" />；否则值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0806b-145"><see langword="true" /> if the default pointers are used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0806b-146">系统为不同的拖放操作（如移动或复制）提供了默认的拖放光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-146">The system provides default drag-drop cursors for different drag-drop operations such as move or copy.</span></span> <span data-ttu-id="0806b-147">如果 <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> 设置为 `false` ，则事件源负责设置相应的游标。</span><span class="sxs-lookup"><span data-stu-id="0806b-147">If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0806b-148">下面的示例演示两个控件之间的拖放操作 <xref:System.Windows.Forms.ListBox> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-148">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="0806b-149">该示例在 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 拖动操作开始时调用方法。</span><span class="sxs-lookup"><span data-stu-id="0806b-149">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="0806b-150">如果在事件过程中鼠标移动了多个鼠标位置，则拖动操作将启动 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-150">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="0806b-151"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>方法用于确定事件期间要拖动的项的索引 `MouseDown` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-151">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="0806b-152">该示例还演示了如何对拖放操作使用自定义光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-152">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="0806b-153">该示例假定应用程序目录中有两个光标文件， `3dwarro.cur` `3dwno.cur` 分别用于自定义的拖放游标和非删除光标。</span><span class="sxs-lookup"><span data-stu-id="0806b-153">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="0806b-154">如果选中，则将使用自定义光标 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-154">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="0806b-155">自定义游标是在 <xref:System.Windows.Forms.Control.GiveFeedback> 事件处理程序中设置的。</span><span class="sxs-lookup"><span data-stu-id="0806b-155">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="0806b-156">键盘状态在 <xref:System.Windows.Forms.Control.DragOver> 右侧的事件处理程序中进行计算 `ListBox` ，以根据 SHIFT、CTRL、ALT 或 CTRL + ALT 键确定拖动操作的状态。</span><span class="sxs-lookup"><span data-stu-id="0806b-156">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="0806b-157">此 `ListBox` 事件期间也会确定放置过程中的位置 `DragOver` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-157">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="0806b-158">如果要删除的数据不是，则将 `String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 设置为 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-158">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0806b-159">最后，放置的状态显示在中 `DropLocationLabel` <xref:System.Windows.Forms.Label> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-159">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="0806b-160">要放置给权限的数据 `ListBox` 在 <xref:System.Windows.Forms.Control.DragDrop> 事件处理程序中确定，并将 `String` 值添加到中的适当位置 `ListBox` 。</span><span class="sxs-lookup"><span data-stu-id="0806b-160">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="0806b-161">如果拖动操作移到窗体的边界之外，则会在事件处理程序中取消拖放操作 <xref:System.Windows.Forms.Control.QueryContinueDrag> 。</span><span class="sxs-lookup"><span data-stu-id="0806b-161">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="0806b-162">此代码摘录演示了如何使用 <xref:System.Windows.Forms.GiveFeedbackEventArgs> 类。</span><span class="sxs-lookup"><span data-stu-id="0806b-162">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="0806b-163"><xref:System.Windows.Forms.Control.DoDragDrop%2A>有关完整的代码示例，请参阅方法。</span><span class="sxs-lookup"><span data-stu-id="0806b-163">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
