<Type Name="DataGridViewSortCompareEventArgs" FullName="System.Windows.Forms.DataGridViewSortCompareEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="958d58c3135ca8c8808ead2221885fd55f616560" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89678149" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewSortCompareEventArgs : System.ComponentModel.HandledEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewSortCompareEventArgs extends System.ComponentModel.HandledEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewSortCompareEventArgs&#xA;Inherits HandledEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewSortCompareEventArgs : System::ComponentModel::HandledEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewSortCompareEventArgs = class&#xA;    inherit HandledEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.HandledEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.DataGridView.SortCompare" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以处理 <xref:System.Windows.Forms.DataGridView.SortCompare> 事件以提供自定义排序。 仅当 <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=nameWithType> 未设置属性并且 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A?displayProperty=nameWithType> 属性设置为时，才会发生此事件 `false` 。 对于正在排序的列中的每对单元格，此事件发生一次。 仅当用户单击属性值为的列的标头时 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic> ，或在调用重载时才会发生这种情况 <xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29?displayProperty=nameWithType> 。 对于属性值为的列发生此事件时 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic> ，必须通过属性自行显示排序标志符号 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> 。  
  
 使用此事件可以使用一列或多列中的单元值对行进行排序。 使用 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A> 和 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A> 属性来比较属性中指定的列中的单元值 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A> 。 使用 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A> 和 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A> 属性可以通过集合访问其他列中的值 <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridView.SortCompare> 在多列排序中使用。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
    <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
    <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventHandler" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection" />
    <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1" />
    <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2" />
    <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column" />
    <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1" />
    <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2" />
    <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewSortCompareEventArgs (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, object cellValue1, object cellValue2, int rowIndex1, int rowIndex2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn, object cellValue1, object cellValue2, int32 rowIndex1, int32 rowIndex2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewSortCompareEventArgs.#ctor(System.Windows.Forms.DataGridViewColumn,System.Object,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataGridViewColumn As DataGridViewColumn, cellValue1 As Object, cellValue2 As Object, rowIndex1 As Integer, rowIndex2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewSortCompareEventArgs(System::Windows::Forms::DataGridViewColumn ^ dataGridViewColumn, System::Object ^ cellValue1, System::Object ^ cellValue2, int rowIndex1, int rowIndex2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewSortCompareEventArgs : System.Windows.Forms.DataGridViewColumn * obj * obj * int * int -&gt; System.Windows.Forms.DataGridViewSortCompareEventArgs" Usage="new System.Windows.Forms.DataGridViewSortCompareEventArgs (dataGridViewColumn, cellValue1, cellValue2, rowIndex1, rowIndex2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="cellValue1" Type="System.Object" />
        <Parameter Name="cellValue2" Type="System.Object" />
        <Parameter Name="rowIndex1" Type="System.Int32" />
        <Parameter Name="rowIndex2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">要排序的列。</param>
        <param name="cellValue1">要比较的第一个单元格的值。</param>
        <param name="cellValue2">要比较的第二个单元格的值。</param>
        <param name="rowIndex1">包含第一个单元格的行的索引。</param>
        <param name="rowIndex2">包含第二个单元格的行的索引。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
    <Member MemberName="CellValue1">
      <MemberSignature Language="C#" Value="public object CellValue1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CellValue1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellValue1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CellValue1 { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CellValue1 : obj" Usage="System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要比较的第一个单元格的值。</summary>
        <value>第一个单元格的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性通常与属性结合使用 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A> 在多列排序中使用。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
    <Member MemberName="CellValue2">
      <MemberSignature Language="C#" Value="public object CellValue2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CellValue2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellValue2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CellValue2 { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CellValue2 : obj" Usage="System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要比较的第二个单元格的值。</summary>
        <value>第二个单元格的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性通常与属性结合使用 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A> 在多列排序中使用。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ Column { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridViewSortCompareEventArgs.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取正在排序的列。</summary>
        <value>要排序的 <see cref="T:System.Windows.Forms.DataGridViewColumn" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于确定和控制编程排序中的排序行为。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A> 在多列排序中使用。 在此示例中，如果在已排序的列中存在相同的值，则使用 ID 列确定最终顺序，因此，如果 ID 列中存在重复值，则不会执行其他排序。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
    <Member MemberName="RowIndex1">
      <MemberSignature Language="C#" Value="public int RowIndex1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex1 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex1 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex1 : int" Usage="System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含要比较的第一个单元格的行的索引。</summary>
        <value>包含第二个单元格的行的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当基于多列中的单元值对行进行排序时，此属性很有用。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A> 在多列排序中使用。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
    <Member MemberName="RowIndex2">
      <MemberSignature Language="C#" Value="public int RowIndex2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex2 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex2 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex2 : int" Usage="System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含要比较的第二个单元格的行的索引。</summary>
        <value>包含第二个单元格的行的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当基于多列中的单元值对行进行排序时，此属性很有用。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A> 在多列排序中使用。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
    <Member MemberName="SortResult">
      <MemberSignature Language="C#" Value="public int SortResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SortResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewSortCompareEventArgs.SortResult" />
      <MemberSignature Language="VB.NET" Value="Public Property SortResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SortResult { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SortResult : int with get, set" Usage="System.Windows.Forms.DataGridViewSortCompareEventArgs.SortResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示被比较单元格将遵循的排序顺序。</summary>
        <value>如果第一个单元格将排在第二个单元格之前，则小于零；如果第一个单元格和第二个单元格的值相等，则等于零；如果第二个单元格将排在第一个单元格之前，则大于零。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此值通常是在事件处理程序中执行的最后一个操作 <xref:System.Windows.Forms.DataGridView.SortCompare?displayProperty=nameWithType> 。 通常会将此值设置为比较方法（如）的返回值 <xref:System.String.Compare%2A?displayProperty=nameWithType> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.SortResult%2A> 在多列排序中使用。 此示例摘自 [如何：自定义 Windows 窗体 DataGridView 控件中的排序](/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control)中提供的一个更大的示例。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <altmember cref="Overload:System.String.Compare" />
        <related type="Article" href="/dotnet/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control">如何：在 Windows 窗体 DataGridView 控件中自定义排序</related>
      </Docs>
    </Member>
  </Members>
</Type>
