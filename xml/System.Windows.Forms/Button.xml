<Type Name="Button" FullName="System.Windows.Forms.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66f7e4645930d66f584f5f462da47fa0cc7c2fe5" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86985863" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Windows.Forms.ButtonBase, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Windows.Forms.ButtonBase implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Forms::ButtonBase, System::Windows::Forms::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit ButtonBase&#xA;    interface IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="234d5-101">表示 Windows 按钮控件。</span><span class="sxs-lookup"><span data-stu-id="234d5-101">Represents a Windows button control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-102"><xref:System.Windows.Forms.Button>如果按钮有焦点，则可以使用鼠标、ENTER 键或空格键单击。</span><span class="sxs-lookup"><span data-stu-id="234d5-102">A <xref:System.Windows.Forms.Button> can be clicked by using the mouse, ENTER key, or SPACEBAR if the button has focus.</span></span>  
  
 <span data-ttu-id="234d5-103">将 <xref:System.Windows.Forms.Form.AcceptButton%2A> 或的 <xref:System.Windows.Forms.Form.CancelButton%2A> 属性设置为， <xref:System.Windows.Forms.Form> 以允许用户通过按 enter 或 ESC 键来单击按钮，即使按钮没有焦点也是如此。</span><span class="sxs-lookup"><span data-stu-id="234d5-103">Set the <xref:System.Windows.Forms.Form.AcceptButton%2A> or <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form> to allow users to click a button by pressing the ENTER or ESC keys even if the button does not have focus.</span></span> <span data-ttu-id="234d5-104">这为窗体提供了对话框的行为。</span><span class="sxs-lookup"><span data-stu-id="234d5-104">This gives the form the behavior of a dialog box.</span></span>  
  
 <span data-ttu-id="234d5-105">使用方法显示窗体时 <xref:System.Windows.Forms.Form.ShowDialog%2A> ，可以使用 <xref:System.Windows.Forms.Button.DialogResult%2A> 按钮的属性来指定的返回值 <xref:System.Windows.Forms.Form.ShowDialog%2A> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-105">When you display a form using the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, you can use the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a button to specify the return value of <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="234d5-106">您可以更改按钮的外观。</span><span class="sxs-lookup"><span data-stu-id="234d5-106">You can change the button's appearance.</span></span> <span data-ttu-id="234d5-107">例如，若要使其对 Web 外观显示为平面，请将 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> 属性设置为 <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-107">For example, to make it appear flat for a Web look, set the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property to <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span></span> <span data-ttu-id="234d5-108"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A>还可以将属性设置为 <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType> ，这在鼠标指针经过按钮之前一直显示，然后按钮将采用标准的 Windows 按钮外观。</span><span class="sxs-lookup"><span data-stu-id="234d5-108">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property can also be set to <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, which appears flat until the mouse pointer passes over the button; then the button takes on the standard Windows button appearance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="234d5-109">如果具有焦点的控件接受并处理 ENTER 键，则不 <xref:System.Windows.Forms.Button> 会处理它。</span><span class="sxs-lookup"><span data-stu-id="234d5-109">If the control that has focus accepts and processes the ENTER key press, the <xref:System.Windows.Forms.Button> does not process it.</span></span> <span data-ttu-id="234d5-110">例如，如果多行 <xref:System.Windows.Forms.TextBox> 或另一个按钮有焦点，则该控件会处理 enter 键，而不是 "接受" 按钮。</span><span class="sxs-lookup"><span data-stu-id="234d5-110">For example, if a multiline <xref:System.Windows.Forms.TextBox> or another button has focus, that control processes the ENTER key press instead of the accept button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="234d5-111">下面的代码示例创建一个 <xref:System.Windows.Forms.Button> ，将其 <xref:System.Windows.Forms.Button.DialogResult%2A> 属性设置为 <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType> ，并将其添加到中 <xref:System.Windows.Forms.Form> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-111">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
    <altmember cref="T:System.Windows.Forms.RadioButton" />
    <altmember cref="T:System.Windows.Forms.CheckBox" />
    <altmember cref="T:System.Windows.Forms.IButtonControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="234d5-112">初始化 <see cref="T:System.Windows.Forms.Button" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="234d5-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Button" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-113">默认情况下， <xref:System.Windows.Forms.Button> 不显示标题。</span><span class="sxs-lookup"><span data-stu-id="234d5-113">By default the <xref:System.Windows.Forms.Button> displays no caption.</span></span> <span data-ttu-id="234d5-114">若要指定标题文本，请设置 <xref:System.Windows.Forms.Control.Text%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="234d5-114">To specify the caption text, set the <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="234d5-115">下面的代码示例创建一个 <xref:System.Windows.Forms.Button> ，将其 <xref:System.Windows.Forms.Button.DialogResult%2A> 属性设置为 `OK` 的值 <xref:System.Windows.Forms.DialogResult> ，并将其添加到中 <xref:System.Windows.Forms.Form> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-115">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to the `OK` value of <xref:System.Windows.Forms.DialogResult>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeMode : System.Windows.Forms.AutoSizeMode with get, set" Usage="System.Windows.Forms.Button.AutoSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="234d5-116">获取或设置 <see cref="T:System.Windows.Forms.Button" /> 自己进行自动调整大小的模式。</span><span class="sxs-lookup"><span data-stu-id="234d5-116">Gets or sets the mode by which the <see cref="T:System.Windows.Forms.Button" /> automatically resizes itself.</span></span></summary>
        <value><span data-ttu-id="234d5-117"><see cref="T:System.Windows.Forms.AutoSizeMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="234d5-117">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span> <span data-ttu-id="234d5-118">默认值为 <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-118">The default value is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Button.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="234d5-119">创建窗口时获取基类的一个 <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-119">Gets a <see cref="T:System.Windows.Forms.CreateParams" /> on the base class when creating a window.</span></span></summary>
        <value><span data-ttu-id="234d5-120">创建窗口时基类的一个 <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-120">A <see cref="T:System.Windows.Forms.CreateParams" /> object on the base class when creating a window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-121">继承类可以重写此属性以添加额外的功能，但必须先调用 <xref:System.Windows.Forms.CreateParams> 基类的构造函数来验证控件是否可以继续正常工作。</span><span class="sxs-lookup"><span data-stu-id="234d5-121">Inheriting classes can override this property to add extra functionality, but must first call the <xref:System.Windows.Forms.CreateParams> constructor on the base class to verify that the control continues to work correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.Button.DialogResult" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="234d5-122">获取或设置一个值，该值在单击按钮时返回到父窗体。</span><span class="sxs-lookup"><span data-stu-id="234d5-122">Gets or sets a value that is returned to the parent form when the button is clicked.</span></span></summary>
        <value><span data-ttu-id="234d5-123"><see cref="T:System.Windows.Forms.DialogResult" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="234d5-123">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span></span> <span data-ttu-id="234d5-124">默认值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-124">The default value is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-125">如果将 <xref:System.Windows.Forms.DialogResult> 此属性的设置为之外的任何内容 `None` ，并且通过方法显示了父窗体 <xref:System.Windows.Forms.Form.ShowDialog%2A> ，则单击该按钮将关闭父窗体，而无需挂钩任何事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-125">If the <xref:System.Windows.Forms.DialogResult> for this property is set to anything other than `None`, and if the parent form was displayed through the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, clicking the button closes the parent form without your having to hook up any events.</span></span> <span data-ttu-id="234d5-126">然后，在 <xref:System.Windows.Forms.Form.DialogResult%2A> 单击按钮时，窗体的属性将设置为该 <xref:System.Windows.Forms.DialogResult> 按钮的。</span><span class="sxs-lookup"><span data-stu-id="234d5-126">The form's <xref:System.Windows.Forms.Form.DialogResult%2A> property is then set to the <xref:System.Windows.Forms.DialogResult> of the button when the button is clicked.</span></span>  
  
 <span data-ttu-id="234d5-127">例如，若要创建 "是/否/取消" 对话框，只需添加三个按钮，并将其 <xref:System.Windows.Forms.DialogResult> 属性设置为 `Yes` 、 `No` 和 `Cancel` 。</span><span class="sxs-lookup"><span data-stu-id="234d5-127">For example, to create a "Yes/No/Cancel" dialog box, simply add three buttons and set their <xref:System.Windows.Forms.DialogResult> properties to `Yes`, `No`, and `Cancel`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="234d5-128">下面的代码示例创建一个 <xref:System.Windows.Forms.Button> ，将其 <xref:System.Windows.Forms.DialogResult> 属性设置为 `OK` ，并将其添加到中 <xref:System.Windows.Forms.Form> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-128">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.DialogResult> property to `OK`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="234d5-129">分配的值不是 <see cref="T:System.Windows.Forms.DialogResult" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="234d5-129">The value assigned is not one of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="234d5-130">当用户双击 <see cref="T:System.Windows.Forms.Button" /> 控件时发生。</span><span class="sxs-lookup"><span data-stu-id="234d5-130">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-131">默认情况下， <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> 控件的和 <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> 样式位设置为 `false` <xref:System.Windows.Forms.Button> ，并且 <xref:System.Windows.Forms.Button.DoubleClick> 不引发事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-131">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="234d5-132">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="234d5-132">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="234d5-133">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="234d5-133">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="234d5-134">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Button.DoubleClick> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-134">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span> <span data-ttu-id="234d5-135">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="234d5-135">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="234d5-136">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-136">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="234d5-137">若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Button> `Button1` 。</span><span class="sxs-lookup"><span data-stu-id="234d5-137">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="234d5-138">然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Button.DoubleClick> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-138">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#137)]
 [!code-vb[System.Windows.Forms.EventExamples#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="234d5-139">当用户使用鼠标双击 <see cref="T:System.Windows.Forms.Button" /> 控件时发生。</span><span class="sxs-lookup"><span data-stu-id="234d5-139">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control with the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-140">默认情况下， <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> 控件的和 <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> 样式位设置为 `false` <xref:System.Windows.Forms.Button> ，并且 <xref:System.Windows.Forms.Button.MouseDoubleClick> 不引发事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-140">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="234d5-141">有关处理事件的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="234d5-141">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="234d5-142">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="234d5-142">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="234d5-143">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.Button.MouseDoubleClick> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-143">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span> <span data-ttu-id="234d5-144">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="234d5-144">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="234d5-145">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-145">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="234d5-146">若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.Button> `Button1` 。</span><span class="sxs-lookup"><span data-stu-id="234d5-146">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="234d5-147">然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.Button.MouseDoubleClick> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-147">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#138)]
 [!code-vb[System.Windows.Forms.EventExamples#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public virtual void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyDefault(bool value);" />
      <MemberSignature Language="F#" Value="abstract member NotifyDefault : bool -&gt; unit&#xA;override this.NotifyDefault : bool -&gt; unit" Usage="button.NotifyDefault value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="234d5-148">如果该按钮要具有默认按钮的外观，则值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-148"><see langword="true" /> if the button is to have the appearance of the default button; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="234d5-149">通知 <see cref="T:System.Windows.Forms.Button" /> 是否是默认按钮，以便它能够相应地调整自己的外观。</span><span class="sxs-lookup"><span data-stu-id="234d5-149">Notifies the <see cref="T:System.Windows.Forms.Button" /> whether it is the default button so that it can adjust its appearance accordingly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-150">父窗体调用此方法，以通知应将 <xref:System.Windows.Forms.Button> 其设置为默认按钮，并使其能够相应地调整其外观。</span><span class="sxs-lookup"><span data-stu-id="234d5-150">This method is called by the parent form to notify the <xref:System.Windows.Forms.Button> that it should be set as the default button and to allow it to adjust its appearance accordingly.</span></span> <span data-ttu-id="234d5-151">通常，作为窗体的默认按钮的按钮具有比窗体上的其他按钮更粗的边框。</span><span class="sxs-lookup"><span data-stu-id="234d5-151">Typically, a button that is the default button for a form has a thicker border than other buttons on the form.</span></span>  
  
 <span data-ttu-id="234d5-152">调用 <xref:System.Windows.Forms.Button.NotifyDefault%2A> 方法只会将按钮绘制为默认按钮，而不会更改其行为。</span><span class="sxs-lookup"><span data-stu-id="234d5-152">Calling the <xref:System.Windows.Forms.Button.NotifyDefault%2A> method only draws the button as a default button; it does not change its behavior.</span></span> <span data-ttu-id="234d5-153">若要使按钮的行为类似于默认按钮，则必须将其分配给 <xref:System.Windows.Forms.Form.AcceptButton%2A> 的属性 <xref:System.Windows.Forms.Form> 。</span><span class="sxs-lookup"><span data-stu-id="234d5-153">To make the button behave like a default button, it must be assigned to the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the <xref:System.Windows.Forms.Form>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="234d5-154">当 <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="234d5-154">When overriding <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="234d5-155">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-155">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="234d5-156">引发 <see cref="E:System.Windows.Forms.Control.Click" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-156">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="button.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="234d5-157">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-157">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="234d5-158">引发 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-158">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-159">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="234d5-159">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="234d5-160">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="234d5-160">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="234d5-161"><xref:System.Windows.Forms.Button.OnFontChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="234d5-161">The <xref:System.Windows.Forms.Button.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="234d5-162">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="234d5-162">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="234d5-163">在派生类中重写 <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="234d5-163">When overriding <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="button.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="234d5-164">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-164">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="234d5-165">引发 <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-165">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="button.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="234d5-166">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-166">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="234d5-167">引发 <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-167">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="button.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="234d5-168">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-168">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="234d5-169">引发 <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-169">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-170">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="234d5-170">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="234d5-171">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="234d5-171">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="234d5-172"><xref:System.Windows.Forms.Button.OnMouseUp%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="234d5-172">The <xref:System.Windows.Forms.Button.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="234d5-173">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="234d5-173">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="234d5-174">在派生类中重写 <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="234d5-174">When overriding <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="button.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="234d5-175">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-175">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="234d5-176">引发 <see cref="E:System.Windows.Forms.Control.TextChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-176">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-177">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="234d5-177">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="234d5-178">有关详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="234d5-178">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="234d5-179"><xref:System.Windows.Forms.Button.OnTextChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="234d5-179">The <xref:System.Windows.Forms.Button.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="234d5-180">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="234d5-180">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="234d5-181">在派生类中重写 <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="234d5-181">When overriding <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformClick();" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; unit&#xA;override this.PerformClick : unit -&gt; unit" Usage="button.PerformClick " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="234d5-182">生成按钮的 <see cref="E:System.Windows.Forms.Control.Click" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-182">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for a button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-183">可以调用此方法来引发 <xref:System.Windows.Forms.Control.Click> 事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-183">This method can be called to raise the <xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="234d5-184">下面的代码示例生成 <xref:System.Windows.Forms.Control.Click> <xref:System.Windows.Forms.Button> 另一个 <xref:System.Windows.Forms.Control.Click> 按钮的交替事件的事件。</span><span class="sxs-lookup"><span data-stu-id="234d5-184">The following code example generates a <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> on alternating <xref:System.Windows.Forms.Control.Click> events of another button.</span></span> <span data-ttu-id="234d5-185">此代码假定 <xref:System.Windows.Forms.Button> 已在窗体中实例化两个控件，并且在类中将名为的成员变量 `myVar` 声明为32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="234d5-185">This code assumes that two <xref:System.Windows.Forms.Button> controls have been instantiated on a form and that a member variable named `myVar` has been declared as a 32-bit signed integer within the class.</span></span>  
  
 [!code-cpp[Classic Button.PerformClick Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.PerformClick Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CS/source.cs#1)]
 [!code-vb[Classic Button.PerformClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.PerformClick Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="button.ProcessMnemonic charCode" />
      <MemberSignature Language="C#" Value="protected override bool ProcessMnemonic (char charCode);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessMnemonic (charCode As Char) As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessMnemonic(char charCode);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="234d5-186">输入的助记键字符。</span><span class="sxs-lookup"><span data-stu-id="234d5-186">The mnemonic character entered.</span></span></param>
        <summary><span data-ttu-id="234d5-187">处理助记键字符。</span><span class="sxs-lookup"><span data-stu-id="234d5-187">Processes a mnemonic character.</span></span></summary>
        <returns><span data-ttu-id="234d5-188">如果已处理助记键，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-188"><see langword="true" /> if the mnemonic was processed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="234d5-189">当 <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> 在派生类中重写时，请确保调用基类的， <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> 以确保基本功能保持不变。</span><span class="sxs-lookup"><span data-stu-id="234d5-189">When overriding <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> in a derived class, be sure to call the base class's <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> to ensure that basic functionality remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected override void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="button.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.8" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="234d5-190">更改前的 DPI 值。</span><span class="sxs-lookup"><span data-stu-id="234d5-190">The DPI value prior to the change.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="234d5-191">更改后的 DPI 值。</span><span class="sxs-lookup"><span data-stu-id="234d5-191">The DPI value after the change.</span></span></param>
        <summary><span data-ttu-id="234d5-192">发生 DPI 更改时，提供用于重新缩放 <see cref="T:System.Windows.Forms.Button" /> 控件的常数。</span><span class="sxs-lookup"><span data-stu-id="234d5-192">Provides constants for rescaling the <see cref="T:System.Windows.Forms.Button" /> control when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="button.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="234d5-193">返回包含 <see cref="T:System.ComponentModel.Component" /> 的名称的 <see cref="T:System.String" />（如果有）。</span><span class="sxs-lookup"><span data-stu-id="234d5-193">Returns a <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any.</span></span> <span data-ttu-id="234d5-194">不应重写此方法。</span><span class="sxs-lookup"><span data-stu-id="234d5-194">This method should not be overridden.</span></span></summary>
        <returns><span data-ttu-id="234d5-195">包含 <see cref="T:System.ComponentModel.Component" /> 的名称的 <see cref="T:System.String" />（如果有）；如果 <see cref="T:System.ComponentModel.Component" /> 未命名，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-195">A <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any, or <see langword="null" /> if the <see cref="T:System.ComponentModel.Component" /> is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="button.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="234d5-196">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="234d5-196">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="234d5-197">处理 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="234d5-197">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
