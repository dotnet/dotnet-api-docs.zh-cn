<Type Name="CurrencyManager" FullName="System.Windows.Forms.CurrencyManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="848e31a9f46475fac0446b6608fb5d0127ec9969" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86709811" /></Metadata><TypeSignature Language="C#" Value="public class CurrencyManager : System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CurrencyManager extends System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CurrencyManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CurrencyManager&#xA;Inherits BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CurrencyManager : System::Windows::Forms::BindingManagerBase" />
  <TypeSignature Language="F#" Value="type CurrencyManager = class&#xA;    inherit BindingManagerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BindingManagerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7471d-101">管理 <see cref="T:System.Windows.Forms.Binding" /> 对象的列表。</span><span class="sxs-lookup"><span data-stu-id="7471d-101">Manages a list of <see cref="T:System.Windows.Forms.Binding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-102"><xref:System.Windows.Forms.CurrencyManager>派生自 <xref:System.Windows.Forms.BindingManagerBase> 类。</span><span class="sxs-lookup"><span data-stu-id="7471d-102">The <xref:System.Windows.Forms.CurrencyManager> derives from the <xref:System.Windows.Forms.BindingManagerBase> class.</span></span> <span data-ttu-id="7471d-103">使用 <xref:System.Windows.Forms.BindingContext> 返回 <xref:System.Windows.Forms.CurrencyManager> 或 <xref:System.Windows.Forms.PropertyManager> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-103">Use the <xref:System.Windows.Forms.BindingContext> to return either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="7471d-104">返回的实际对象取决于传递到的属性的数据源和数据成员 <xref:System.Windows.Forms.BindingContext.Item%2A> <xref:System.Windows.Forms.BindingContext> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-104">The actual object returned depends on the data source and data member passed to the <xref:System.Windows.Forms.BindingContext.Item%2A> property of the <xref:System.Windows.Forms.BindingContext>.</span></span> <span data-ttu-id="7471d-105">如果数据源是只能返回单个属性 (而不是) 对象列表的对象，则该类型将为 <xref:System.Windows.Forms.PropertyManager> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-105">If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="7471d-106">例如，如果指定 <xref:System.Windows.Forms.TextBox> 作为数据源，则 <xref:System.Windows.Forms.PropertyManager> 将返回。</span><span class="sxs-lookup"><span data-stu-id="7471d-106">For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> will be returned.</span></span> <span data-ttu-id="7471d-107">另一方面，如果数据源是实现 <xref:System.Collections.IList> 、 <xref:System.ComponentModel.IListSource> 或接口的对象，则 <xref:System.ComponentModel.IBindingList> <xref:System.Windows.Forms.CurrencyManager> 将返回。</span><span class="sxs-lookup"><span data-stu-id="7471d-107">If, on the other hand, the data source is an object that implements the <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, or <xref:System.ComponentModel.IBindingList> interface, a <xref:System.Windows.Forms.CurrencyManager> will be returned.</span></span>  
  
 <span data-ttu-id="7471d-108"><xref:System.Windows.Forms.BindingManagerBase.Current%2A>属性返回基础列表中的当前项。</span><span class="sxs-lookup"><span data-stu-id="7471d-108">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property returns the current item in the underlying list.</span></span> <span data-ttu-id="7471d-109">若要更改当前项，请将 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 属性设置为新值。</span><span class="sxs-lookup"><span data-stu-id="7471d-109">To change the current item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to a new value.</span></span> <span data-ttu-id="7471d-110">该值必须大于0，并且必须小于属性的值 <xref:System.Windows.Forms.BindingManagerBase.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-110">The value must be greater than 0 and must be less than the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="7471d-111">如果基础数据源实现 <xref:System.ComponentModel.IBindingList> 接口，并将 <xref:System.ComponentModel.IBindingList.AllowNew%2A> 属性设置为 `true` ，则可以使用 <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-111">If the underlying data source implements the <xref:System.ComponentModel.IBindingList> interface, and the <xref:System.ComponentModel.IBindingList.AllowNew%2A> property is set to `true`, you can use the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-112">下面的代码示例将 <xref:System.Windows.Forms.TextBox> 控件绑定到中的列 <xref:System.Data.DataTable> ，获取绑定的， <xref:System.Windows.Forms.CurrencyManager> 并设置其位置。</span><span class="sxs-lookup"><span data-stu-id="7471d-112">The following code example binds a <xref:System.Windows.Forms.TextBox> control to a column in a <xref:System.Data.DataTable>, gets the <xref:System.Windows.Forms.CurrencyManager> for the binding, and sets its position.</span></span>  
  
 [!code-cpp[Classic CurrencyManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.Binding" />
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public override void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddNew();" />
      <MemberSignature Language="F#" Value="override this.AddNew : unit -&gt; unit" Usage="currencyManager.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-113">在基础列表中添加一个新项。</span><span class="sxs-lookup"><span data-stu-id="7471d-113">Adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-114">仅当数据源实现 <xref:System.ComponentModel.IBindingList> 接口并且数据源允许)  (添加行时，才支持此方法 <xref:System.ComponentModel.IBindingList.AllowNew%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="7471d-114">This method is supported only if the data source implements the <xref:System.ComponentModel.IBindingList> interface and the data source allows adding rows (<xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7471d-115">此属性旨在允许复杂绑定控件（如 <xref:System.Windows.Forms.DataGrid> 控件）向列表中添加新项。</span><span class="sxs-lookup"><span data-stu-id="7471d-115">This property was designed to allow complex-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to add new items to list.</span></span>  
  
 <span data-ttu-id="7471d-116">通常，仅当您创建自己的包含的控件时，才使用此属性 <xref:System.Windows.Forms.CurrencyManager> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-116">You typically use this property only if you are creating your own control that incorporates the <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="7471d-117">否则，若要添加项（如果数据源是 <xref:System.Data.DataView> ），请使用 <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> 类的方法 <xref:System.Data.DataView> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-117">Otherwise, to add items if the data source is a <xref:System.Data.DataView>, use the <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> method of the <xref:System.Data.DataView> class.</span></span> <span data-ttu-id="7471d-118">如果数据源是，则 <xref:System.Data.DataTable> 使用 <xref:System.Data.DataTable.NewRow%2A> 方法并将行添加到 <xref:System.Data.DataRowCollection> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-118">If the data source is a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTable.NewRow%2A> method and add the row to the <xref:System.Data.DataRowCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-119">下面的代码示例使用方法向列表中添加一个新项 <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-119">The following code example adds a new item to the list with the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7471d-120">基础数据源不实现 <see cref="T:System.ComponentModel.IBindingList" />，或数据源引发了一个异常，原因是用户尝试将一行添加到只读的或固定大小的 <see cref="T:System.Data.DataView" /> 中。</span><span class="sxs-lookup"><span data-stu-id="7471d-120">The underlying data source does not implement <see cref="T:System.ComponentModel.IBindingList" />, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <see cref="T:System.Data.DataView" />.</span></span></exception>
        <altmember cref="P:System.ComponentModel.IBindingList.AllowNew" />
        <altmember cref="M:System.Data.DataView.AddNew" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public override void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.CancelCurrentEdit : unit -&gt; unit" Usage="currencyManager.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-121">取消当前的编辑操作。</span><span class="sxs-lookup"><span data-stu-id="7471d-121">Cancels the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-122">仅当数据源包含的对象实现接口时，才支持此方法 <xref:System.ComponentModel.IEditableObject> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-122">This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="7471d-123">如果数据源中包含的对象未实现 <xref:System.ComponentModel.IEditableObject> 接口，则不会丢弃对数据所做的更改。</span><span class="sxs-lookup"><span data-stu-id="7471d-123">If the objects contained within the data source do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7471d-124">此属性旨在供复杂数据绑定控件（如 <xref:System.Windows.Forms.DataGrid> 控件）用来取消编辑。</span><span class="sxs-lookup"><span data-stu-id="7471d-124">This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to cancel edits.</span></span> <span data-ttu-id="7471d-125">例如，当用户按 ESC 键时，将对的 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> 调用方法 <xref:System.Windows.Forms.CurrencyManager> <xref:System.Windows.Forms.DataGrid> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-125">For example, when the user presses the ESC key, the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method is called on the <xref:System.Windows.Forms.CurrencyManager> for the <xref:System.Windows.Forms.DataGrid>.</span></span> <span data-ttu-id="7471d-126">除非要创建需要此相同功能的控件，否则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-126">Unless you are creating a control that requires this same functionality, you should not use this method.</span></span> <span data-ttu-id="7471d-127">而应使用 <xref:System.Data.DataRowView.CancelEdit%2A> 类的方法 <xref:System.Data.DataRowView> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-127">Instead, use the <xref:System.Data.DataRowView.CancelEdit%2A> method of the <xref:System.Data.DataRowView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-128">下面的代码示例在 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> 用户按 ESC 键时使用。</span><span class="sxs-lookup"><span data-stu-id="7471d-128">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> when the user presses the ESC key.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="CheckEmpty">
      <MemberSignature Language="C#" Value="protected void CheckEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CheckEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckEmpty();" />
      <MemberSignature Language="F#" Value="member this.CheckEmpty : unit -&gt; unit" Usage="currencyManager.CheckEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-129">如果没有列表或列表为空，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7471d-129">Throws an exception if there is no list, or the list is empty.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="7471d-130">没有列表，或列表为空。</span><span class="sxs-lookup"><span data-stu-id="7471d-130">There is no list, or the list is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.CurrencyManager.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-131">获取列表中的项数。</span><span class="sxs-lookup"><span data-stu-id="7471d-131">Gets the number of items in the list.</span></span></summary>
        <value><span data-ttu-id="7471d-132">列表中的项数。</span><span class="sxs-lookup"><span data-stu-id="7471d-132">The number of items in the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-133">使用 count 属性来确定何时到达列表的末尾。</span><span class="sxs-lookup"><span data-stu-id="7471d-133">Use the count property to determine when the end of a list has been reached.</span></span> <span data-ttu-id="7471d-134">由于 <xref:System.Windows.Forms.CurrencyManager> 维护项的从零开始的数组，因此列表的结尾始终为 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 减一。</span><span class="sxs-lookup"><span data-stu-id="7471d-134">Because the <xref:System.Windows.Forms.CurrencyManager> maintains a 0-based array of items, the end of the list is always <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-135">下面的代码示例将遍历列表，直到达到由属性确定的最后一项 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-135">The following code example iterates through the list until the final item, determined by the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property, is reached.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public override object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.CurrencyManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-136">获取列表中的当前项。</span><span class="sxs-lookup"><span data-stu-id="7471d-136">Gets the current item in the list.</span></span></summary>
        <value><span data-ttu-id="7471d-137">类型为 <see cref="T:System.Object" /> 的列表项。</span><span class="sxs-lookup"><span data-stu-id="7471d-137">A list item of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-138">若要获取当前项，您必须知道其数据类型，才能正确地对其进行转换。</span><span class="sxs-lookup"><span data-stu-id="7471d-138">In order to get the current item, you must know its data type in order to cast it correctly.</span></span> <span data-ttu-id="7471d-139">例如，如果数据源是 <xref:System.Data.DataView> 或 <xref:System.Data.DataTable> ，则必须将当前项强制转换为 <xref:System.Data.DataRowView> 对象。</span><span class="sxs-lookup"><span data-stu-id="7471d-139">For example, if the data source is a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, you must cast the current item as a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-140">下面的代码示例使用 <xref:System.Windows.Forms.CurrencyManager.Current%2A> 属性打印 `ContactName` 列表中当前项的字段。</span><span class="sxs-lookup"><span data-stu-id="7471d-140">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.Current%2A> property to print the `ContactName` field for the current item in the list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public override void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.EndCurrentEdit : unit -&gt; unit" Usage="currencyManager.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-141">结束当前编辑操作。</span><span class="sxs-lookup"><span data-stu-id="7471d-141">Ends the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-142">仅当数据源包含的对象实现或接口时，才支持此 <xref:System.ComponentModel.IEditableObject> 方法 <xref:System.ComponentModel.ICancelAddNew> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-142">This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> or <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7471d-143">此属性设计为由复杂数据绑定控件（如控件）使用 <xref:System.Windows.Forms.DataGridView> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-143">This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="7471d-144">除非要创建需要此相同功能的控件，否则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-144">Unless you are creating a control that requires this same functionality, you should not use this method.</span></span> <span data-ttu-id="7471d-145">相反，如果数据源是 <xref:System.Data.DataView> 或 <xref:System.Data.DataTable> ，则使用类的 <xref:System.Data.DataRowView.EndEdit%2A> 方法 <xref:System.Data.DataRowView> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-145">Instead, if the data source is either a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, use the <xref:System.Data.DataRowView.EndEdit%2A> method of the <xref:System.Data.DataRowView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-146">下面的代码示例演示如何使用 <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-146">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> method.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="T:System.ComponentModel.ICancelAddNew" />
      </Docs>
    </Member>
    <Member MemberName="finalType">
      <MemberSignature Language="C#" Value="protected Type finalType;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type finalType" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.finalType" />
      <MemberSignature Language="VB.NET" Value="Protected finalType As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ finalType;" />
      <MemberSignature Language="F#" Value="val mutable finalType : Type" Usage="System.Windows.Forms.CurrencyManager.finalType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-147">指定列表的数据类型。</span><span class="sxs-lookup"><span data-stu-id="7471d-147">Specifies the data type of the list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberSignature Language="F#" Value="override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="currencyManager.GetItemProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-148">获取基础列表的属性说明符集合。</span><span class="sxs-lookup"><span data-stu-id="7471d-148">Gets the property descriptor collection for the underlying list.</span></span></summary>
        <returns><span data-ttu-id="7471d-149">列表的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-149">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-150"><xref:System.ComponentModel.PropertyDescriptorCollection> <xref:System.Windows.Forms.CurrencyManager> 用于指定列表中的列的。</span><span class="sxs-lookup"><span data-stu-id="7471d-150">The <xref:System.ComponentModel.PropertyDescriptorCollection> for the <xref:System.Windows.Forms.CurrencyManager> is used to specify a column in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-151">下面的代码示例使用 <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> 方法返回的 <xref:System.ComponentModel.PropertyDescriptorCollection> <xref:System.Windows.Forms.BindingManagerBase> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-151">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="7471d-152">然后，该示例将输出 <xref:System.ComponentModel.MemberDescriptor.Name%2A> <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 集合中的每个 <xref:System.ComponentModel.PropertyDescriptor> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-152">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal override string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="override this.GetListName : System.Collections.ArrayList -&gt; string" Usage="currencyManager.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="7471d-153">要在数据源中查找的属性的 <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-153">An <see cref="T:System.Collections.ArrayList" /> of properties to be found in the data source.</span></span></param>
        <summary><span data-ttu-id="7471d-154">获取特定列表的名称，该列表使用一组指定绑定属性为绑定提供数据。</span><span class="sxs-lookup"><span data-stu-id="7471d-154">Gets the name of the list supplying the data for the binding using the specified set of bound properties.</span></span></summary>
        <returns><span data-ttu-id="7471d-155">如果成功，则为一个 <see cref="T:System.String" />，包含为绑定提供数据的列表的名称；否则为一个 <see cref="F:System.String.Empty" /> 字符串。</span><span class="sxs-lookup"><span data-stu-id="7471d-155">If successful, a <see cref="T:System.String" /> containing name of the list supplying the data for the binding; otherwise, an <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-156">要使 <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> 方法成功，基础列表必须为类型 <xref:System.ComponentModel.ITypedList> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-156">For the <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> method to be successful, the underlying list must be of type <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="ItemChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemChangedEventHandler ItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChanged As ItemChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemChangedEventHandler ^ ItemChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " Usage="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-157">在当前项更改后发生。</span><span class="sxs-lookup"><span data-stu-id="7471d-157">Occurs when the current item has been altered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-158"><xref:System.Windows.Forms.CurrencyManager.ItemChanged>当用户调用或方法时，将发生 <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> 事件 <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-158">The <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event will occur when the user calls the <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> or <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> method.</span></span>  
  
 <span data-ttu-id="7471d-159"><xref:System.Windows.Forms.CurrencyManager.ItemChanged>仅当项本身已以某种方式进行了更改时，才会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-159">The <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event occurs only when the item itself has been changed in some manner.</span></span> <span data-ttu-id="7471d-160">例如，如果项的值从10更改为42，则将发生事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-160">For example, if the value of an item is changed from 10 to 42, the event will occur.</span></span> <span data-ttu-id="7471d-161">这不应与 <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 项目已更改为新项的事件混淆。</span><span class="sxs-lookup"><span data-stu-id="7471d-161">This should not be confused with the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event where the item has been changed to a new item.</span></span>  
  
 <span data-ttu-id="7471d-162">如果基础数据发生更改，也会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-162">The event will also occur if the underlying data changes.</span></span> <span data-ttu-id="7471d-163">例如，如果您更改的值 <xref:System.Data.DataRowView> ，则 <xref:System.Windows.Forms.CurrencyManager.ItemChanged> 将发生事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-163">For example, if you change the value of a <xref:System.Data.DataRowView>, the <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event will occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7471d-164">如果要创建自己的使用的控件 <xref:System.Windows.Forms.CurrencyManager> ，则应使用 <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> 而不是 <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> 事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-164">If you are creating your own control that uses the <xref:System.Windows.Forms.CurrencyManager>, you should use the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> instead of the <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7471d-165"><xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A>的属性 <xref:System.ComponentModel.ListChangedEventArgs> 使你能够确定已发生的操作的类型。</span><span class="sxs-lookup"><span data-stu-id="7471d-165">The <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> property of the <xref:System.ComponentModel.ListChangedEventArgs> enables you to determine the type of action that has occurred.</span></span>  
  
 <span data-ttu-id="7471d-166">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="7471d-166">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-167">下面的代码示例为和事件添加事件处理程序 <xref:System.Windows.Forms.CurrencyManager.ItemChanged> <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-167">The following code example adds event handlers for the <xref:System.Windows.Forms.CurrencyManager.ItemChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.CurrencyManager.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-168">获得此 <see cref="T:System.Windows.Forms.CurrencyManager" /> 的列表。</span><span class="sxs-lookup"><span data-stu-id="7471d-168">Gets the list for this <see cref="T:System.Windows.Forms.CurrencyManager" />.</span></span></summary>
        <value><span data-ttu-id="7471d-169">包含列表的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-169">An <see cref="T:System.Collections.IList" /> that contains the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-170">属性返回的对象 <xref:System.Windows.Forms.CurrencyManager.List%2A> 可强制转换为实现接口的任何类型 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-170">The object returned by the <xref:System.Windows.Forms.CurrencyManager.List%2A> property can be cast to any type that implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="7471d-171">当您知道基础列表的类型时，通常会使用此类型。</span><span class="sxs-lookup"><span data-stu-id="7471d-171">This will be commonly used when you know the type of the underlying list.</span></span> <span data-ttu-id="7471d-172">例如，如果数据绑定到 <xref:System.Data.DataSet> ，则基础列表是 <xref:System.Data.DataView> 实现) 的 (<xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-172">For example, if you are data-bound to a <xref:System.Data.DataSet>, the underlying list is a <xref:System.Data.DataView> (which implements <xref:System.Collections.IList>).</span></span> <span data-ttu-id="7471d-173">实现接口 (的其他类不是完整列表，) 包括 <xref:System.Array> 、 <xref:System.Collections.ArrayList> 和 <xref:System.Collections.CollectionBase> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-173">Other classes that implement the interface (this is not a complete list) include <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="7471d-174">使用属性的方式 <xref:System.Windows.Forms.CurrencyManager.List%2A> 取决于实现接口的类 <xref:System.Collections.IList> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-174">How you use the <xref:System.Windows.Forms.CurrencyManager.List%2A> property depends on the class that implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="7471d-175">例如，可以使用 <xref:System.Windows.Forms.CurrencyManager.List%2A> 属性来确定列表的名称。</span><span class="sxs-lookup"><span data-stu-id="7471d-175">For example, you can use the <xref:System.Windows.Forms.CurrencyManager.List%2A> property to determine the name of the list.</span></span> <span data-ttu-id="7471d-176">如果数据源实现了 <xref:System.ComponentModel.ITypedList> 接口，则可以使用 <xref:System.ComponentModel.ITypedList.GetListName%2A> 方法返回当前表的名称。</span><span class="sxs-lookup"><span data-stu-id="7471d-176">If the data source implements the <xref:System.ComponentModel.ITypedList> interface, you can use the <xref:System.ComponentModel.ITypedList.GetListName%2A> method to return the name of the current table.</span></span> <span data-ttu-id="7471d-177">下面的 c # 代码对此进行了演示：</span><span class="sxs-lookup"><span data-stu-id="7471d-177">This is shown in the C# code below:</span></span>  
  
```csharp  
private void PrintCurrentListName(DataGrid myDataGrid){   
   CurrencyManager myCM = (CurrencyManager)   
   BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];   
   IList myList = myCM.List;   
   ITypedList thisList = (ITypedList) myList;   
   Console.WriteLine(thisList.GetListName(null));   
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="7471d-178">下面的代码示例允许用户编辑一组记录，但不添加任何新记录。</span><span class="sxs-lookup"><span data-stu-id="7471d-178">The following code example allows users to edit a set of records, but not add any new ones.</span></span> <span data-ttu-id="7471d-179">在 <xref:System.Windows.Forms.DataGrid.Navigate> 控件的事件中 <xref:System.Windows.Forms.DataGrid> ， <xref:System.Collections.IList> 由属性返回的将 <xref:System.Windows.Forms.CurrencyManager.List%2A> 强制转换为 <xref:System.Data.DataView> 变量。</span><span class="sxs-lookup"><span data-stu-id="7471d-179">In the <xref:System.Windows.Forms.DataGrid.Navigate> event of a <xref:System.Windows.Forms.DataGrid> control, the <xref:System.Collections.IList> returned by the <xref:System.Windows.Forms.CurrencyManager.List%2A> property is cast to a <xref:System.Data.DataView> variable.</span></span> <span data-ttu-id="7471d-180"><xref:System.Data.DataView> 的 <xref:System.Data.DataView.AllowNew%2A> 属性设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="7471d-180">The <xref:System.Data.DataView.AllowNew%2A> property of the <xref:System.Data.DataView> is set to `false`.</span></span>  
  
 [!code-cpp[CurrencyManager.List Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CurrencyManager.List Example/CPP/list.cpp#1)]
 [!code-csharp[CurrencyManager.List Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CurrencyManager.List Example/CS/list.cs#1)]
 [!code-vb[CurrencyManager.List Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CurrencyManager.List Example/VB/list.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-181">当列表或列表中的项更改时发生。</span><span class="sxs-lookup"><span data-stu-id="7471d-181">Occurs when the list changes or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-182"><xref:System.Windows.Forms.CurrencyManager.ListChanged> <xref:System.Windows.Forms.CurrencyManager> 当使用、和等方法对项进行更改时，类将引发事件 <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-182">The <xref:System.Windows.Forms.CurrencyManager.ListChanged> event is thrown by the <xref:System.Windows.Forms.CurrencyManager> class when changes to an item are made using methods such as <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>.</span></span> <span data-ttu-id="7471d-183">如果在数据源实现接口时直接编辑数据源，也会发生此事件 <xref:System.ComponentModel.IBindingListView> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-183">This event can also occur when the data source is edited directly if it implements the <xref:System.ComponentModel.IBindingListView> interface.</span></span>  
  
 <span data-ttu-id="7471d-184">关联 `OnListChanged` 方法是此类中的私有方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-184">The associated `OnListChanged` method is a private method in this class.</span></span>  
  
 <span data-ttu-id="7471d-185">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="7471d-185">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-186">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="7471d-186">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="7471d-187">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-187">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="7471d-188">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="7471d-188">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="7471d-189">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-189">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="7471d-190">若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.CurrencyManager> `CurrencyManager1` 。</span><span class="sxs-lookup"><span data-stu-id="7471d-190">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`.</span></span> <span data-ttu-id="7471d-191">然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-191">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#192](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#192)]
 [!code-vb[System.Windows.Forms.EventExamples#192](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#192)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="listposition">
      <MemberSignature Language="C#" Value="protected int listposition;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 listposition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.listposition" />
      <MemberSignature Language="VB.NET" Value="Protected listposition As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int listposition;" />
      <MemberSignature Language="F#" Value="val mutable listposition : int" Usage="System.Windows.Forms.CurrencyManager.listposition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-192">指定 <see cref="T:System.Windows.Forms.CurrencyManager" /> 在列表中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="7471d-192">Specifies the current position of the <see cref="T:System.Windows.Forms.CurrencyManager" /> in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-193">如果属性的值 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 大于0，则 <xref:System.Windows.Forms.CurrencyManager.listposition> 字段为介于0到1之间的数字 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-193">If the value of the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property is greater than 0, the <xref:System.Windows.Forms.CurrencyManager.listposition> field is a number between 0 and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1.</span></span> <span data-ttu-id="7471d-194">如果 <xref:System.Windows.Forms.CurrencyManager.Count%2A> 为0， <xref:System.Windows.Forms.CurrencyManager.listposition> 则为-1。</span><span class="sxs-lookup"><span data-stu-id="7471d-194">If <xref:System.Windows.Forms.CurrencyManager.Count%2A> is 0, <xref:System.Windows.Forms.CurrencyManager.listposition> is -1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
      </Docs>
    </Member>
    <Member MemberName="MetaDataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MetaDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MetaDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MetaDataChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MetaDataChanged;" />
      <MemberSignature Language="F#" Value="member this.MetaDataChanged : EventHandler " Usage="member this.MetaDataChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-195">在 <see cref="P:System.Windows.Forms.CurrencyManager.List" /> 的元数据更改后发生。</span><span class="sxs-lookup"><span data-stu-id="7471d-195">Occurs when the metadata of the <see cref="P:System.Windows.Forms.CurrencyManager.List" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-196">的元数据 <xref:System.Windows.Forms.CurrencyManager.List%2A> 包含基础的架构 <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-196">The metadata of the <xref:System.Windows.Forms.CurrencyManager.List%2A> consists of the schema of the underlying <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7471d-197"><xref:System.Windows.Forms.CurrencyManager.MetaDataChanged>当该架构发生更改时，将引发该事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-197">The <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event is raised when that schema has changed.</span></span> <span data-ttu-id="7471d-198">例如， <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 当 <xref:System.Data.DataColumn> 以编程方式将添加到时，将引发事件 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-198">For example, the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event is raised when a <xref:System.Data.DataColumn> is programmatically added to a <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="7471d-199">有关处理事件的详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="7471d-199">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-200">下面的代码示例演示如何使用此成员。</span><span class="sxs-lookup"><span data-stu-id="7471d-200">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="7471d-201">在此示例中，事件处理程序报告事件的发生 <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-201">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event.</span></span> <span data-ttu-id="7471d-202">此报表可帮助你了解何时发生事件，并可帮助你进行调试。</span><span class="sxs-lookup"><span data-stu-id="7471d-202">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="7471d-203">若要报告多个事件或频繁发生的事件，请考虑 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 将消息替换为多行或将其追加到多行 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-203">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="7471d-204">若要运行示例代码，请将其粘贴到包含名为的类型的实例的项目中 <xref:System.Windows.Forms.CurrencyManager> `CurrencyManager1` 。</span><span class="sxs-lookup"><span data-stu-id="7471d-204">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`.</span></span> <span data-ttu-id="7471d-205">然后，确保事件处理程序与事件相关联 <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-205">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#193](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#193)]
 [!code-vb[System.Windows.Forms.EventExamples#193](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#193)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7471d-206">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-206">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7471d-207">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-207">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7471d-208">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-208">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7471d-209">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-209">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Windows.Forms.ItemChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (e As ItemChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Windows::Forms::ItemChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit&#xA;override this.OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit" Usage="currencyManager.OnItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7471d-210">包含事件数据的 <see cref="T:System.Windows.Forms.ItemChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-210">An <see cref="T:System.Windows.Forms.ItemChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7471d-211">引发 <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-211">Raises the <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-212">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7471d-212">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7471d-213">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="7471d-213">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="7471d-214"><xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="7471d-214">The <xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7471d-215">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="7471d-215">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7471d-216">当 <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-216">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMetaDataChanged">
      <MemberSignature Language="C#" Value="protected internal void OnMetaDataChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnMetaDataChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnMetaDataChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnMetaDataChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnMetaDataChanged : EventArgs -&gt; unit" Usage="currencyManager.OnMetaDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7471d-217">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-217">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7471d-218">引发 <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-218">Raises the <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-219">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7471d-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7471d-220">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="7471d-220">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="7471d-221"><xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="7471d-221">The <xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7471d-222">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="7471d-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7471d-223">当 <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-223">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="currencyManager.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7471d-224">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7471d-224">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7471d-225">引发 <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-225">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-226">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7471d-226">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7471d-227">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="7471d-227">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="7471d-228"><xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="7471d-228">The <xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7471d-229">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="7471d-229">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7471d-230">当 <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> 在派生类中重写时，请确保调用基类的 <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="7471d-230">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.CurrencyManager.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7471d-231">获取或设置在列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="7471d-231">Gets or sets the position you are at within the list.</span></span></summary>
        <value><span data-ttu-id="7471d-232">0 和 <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> 减 1 之间的一个数。</span><span class="sxs-lookup"><span data-stu-id="7471d-232">A number between 0 and <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> minus 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-233">类的一个重要属性 <xref:System.Windows.Forms.CurrencyManager> 是 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="7471d-233">An important property of the <xref:System.Windows.Forms.CurrencyManager> class is the <xref:System.Windows.Forms.CurrencyManager.Position%2A> property.</span></span> <span data-ttu-id="7471d-234">在项列表中，只能查看整个列表中的一个项。</span><span class="sxs-lookup"><span data-stu-id="7471d-234">In a list of items, you can view only one item out of the entire list.</span></span> <span data-ttu-id="7471d-235">若要确定查看了哪一项，请将设置 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 为介于列表开头 (0 之间的一个数字) ，将 <xref:System.Windows.Forms.CurrencyManager.Count%2A> (列表的末尾) 减1。</span><span class="sxs-lookup"><span data-stu-id="7471d-235">To determine which item is viewed, set the <xref:System.Windows.Forms.CurrencyManager.Position%2A> to a number between 0 (the beginning of the list) and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1 (the end of the list).</span></span>  
  
 <span data-ttu-id="7471d-236">因此，会 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 确定绑定到相同的所有控件在列表中的货币或位置 <xref:System.Windows.Forms.CurrencyManager> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-236">Therefore, the <xref:System.Windows.Forms.CurrencyManager.Position%2A> determines the currency, or place in the list, of all controls bound to the same <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="7471d-237">例如，假设有一个包含两个名为 "FirstName" 和 "LastName" 的列的列表。</span><span class="sxs-lookup"><span data-stu-id="7471d-237">For example, imagine a list consisting of two columns called "FirstName" and "LastName".</span></span> <span data-ttu-id="7471d-238">两个 <xref:System.Windows.Forms.TextBox> 控件绑定到同一个列表; 第一个控件绑定到第一列，第二个控件绑定到第二列。</span><span class="sxs-lookup"><span data-stu-id="7471d-238">Two <xref:System.Windows.Forms.TextBox> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column.</span></span> <span data-ttu-id="7471d-239">当 <xref:System.Windows.Forms.CurrencyManager.Position%2A> common 的 <xref:System.Windows.Forms.CurrencyManager> 设置为第三个位置时，这两个控件将在列表中显示该位置的相应值。</span><span class="sxs-lookup"><span data-stu-id="7471d-239">When the <xref:System.Windows.Forms.CurrencyManager.Position%2A> of the common <xref:System.Windows.Forms.CurrencyManager> is set to the third position, both controls display the appropriate values for that position in the list.</span></span> <span data-ttu-id="7471d-240">换言之，如果第三个位置的项由名字 "John" 和姓氏 "Smith" 组成，则绑定控件将显示 "John" 和 "Smith"。</span><span class="sxs-lookup"><span data-stu-id="7471d-240">In other words, if the item at position three consists of the first name "John" and the last name "Smith", the bound controls will display "John" and "Smith".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-241">下面的代码示例使用 <xref:System.Windows.Forms.CurrencyManager.Position%2A> 属性允许在列表中导航。</span><span class="sxs-lookup"><span data-stu-id="7471d-241">The following code examples use the <xref:System.Windows.Forms.CurrencyManager.Position%2A> property to allow navigation through a list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Position Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Position Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Position Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="currencyManager.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-242">强制重新填充数据绑定列表。</span><span class="sxs-lookup"><span data-stu-id="7471d-242">Forces a repopulation of the data-bound list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-243">如果 <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> 数据源在更改时不支持通知 (例如，如果它是) ，则使用方法 <xref:System.Array> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-243">Use the <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> method when the data source does not support notification when it is changed (for example, if it is an <xref:System.Array>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-244">下面的代码示例创建一个数组，并将其绑定到一个 <xref:System.Windows.Forms.TextBox> 控件，然后更改一个值。</span><span class="sxs-lookup"><span data-stu-id="7471d-244">The following code example creates an array and binds it to a <xref:System.Windows.Forms.TextBox> control, and then changes one value.</span></span> <span data-ttu-id="7471d-245"><xref:System.Windows.Forms.CurrencyManager.Refresh%2A>可以调用方法来更新控件显示的值 <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-245">The <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> method can be called to update the value displayed by the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveAt : int -&gt; unit" Usage="currencyManager.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="7471d-246">要从列表中移除的项的索引。</span><span class="sxs-lookup"><span data-stu-id="7471d-246">The index of the item to remove from the list.</span></span></param>
        <summary><span data-ttu-id="7471d-247">删除指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="7471d-247">Removes the item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-248"><xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A>方法旨在允许复杂控件（如 <xref:System.Windows.Forms.DataGrid> 控件）从列表中移除项。</span><span class="sxs-lookup"><span data-stu-id="7471d-248">The <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> method was designed to allow complex controls, such as the <xref:System.Windows.Forms.DataGrid> control, to remove items from the list.</span></span> <span data-ttu-id="7471d-249">不应使用此方法来实际移除项。</span><span class="sxs-lookup"><span data-stu-id="7471d-249">You should not use this method to actually remove items.</span></span> <span data-ttu-id="7471d-250">而应使用 <xref:System.Data.DataView.Delete%2A> 类的方法 <xref:System.Data.DataView> 来删除项。</span><span class="sxs-lookup"><span data-stu-id="7471d-250">Instead, use the <xref:System.Data.DataView.Delete%2A> method of the <xref:System.Data.DataView> class to delete items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-251">下面的代码示例使用 <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> 方法在列表中的位置0移除项。</span><span class="sxs-lookup"><span data-stu-id="7471d-251">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> method to remove the item at position 0 in the list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="7471d-252">指定的 <paramref name="index" /> 处没有行。</span><span class="sxs-lookup"><span data-stu-id="7471d-252">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.AddNew" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public override void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResumeBinding();" />
      <MemberSignature Language="F#" Value="override this.ResumeBinding : unit -&gt; unit" Usage="currencyManager.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-253">继续数据绑定。</span><span class="sxs-lookup"><span data-stu-id="7471d-253">Resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-254"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>和 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 是两种允许在简单数据绑定方案中暂时挂起和恢复的方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-254"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of in a simple data binding scenario.</span></span> <span data-ttu-id="7471d-255">如果在进行验证之前必须允许用户对数据字段进行多次编辑，通常会挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="7471d-255">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="7471d-256">例如，如果必须根据第二个字段更改一个字段，但在验证第一个字段时将导致第二个字段出现错误。</span><span class="sxs-lookup"><span data-stu-id="7471d-256">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7471d-257">使用 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 可防止在调用之前将更改推送到数据源， <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 但不会阻止数据源中的更改影响绑定控件。</span><span class="sxs-lookup"><span data-stu-id="7471d-257">Using <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> is called but does not prevent changes in the data source from affecting the bound controls.</span></span> <span data-ttu-id="7471d-258">使用复杂数据绑定的控件（如 <xref:System.Windows.Forms.DataGridView> 控件）根据更改事件（例如事件）更新其值 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-258">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="7471d-259">调用此方法不会阻止这些事件发生。</span><span class="sxs-lookup"><span data-stu-id="7471d-259">Calling this method will not prevent these events from occurring.</span></span> <span data-ttu-id="7471d-260">出于此原因， <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 和 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 旨在用于简单绑定控件（如） <xref:System.Windows.Forms.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-260">For this reason, <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> are designed for use with simple-bound controls, such as a <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="7471d-261">或者，如果 <xref:System.Windows.Forms.BindingSource.ListChanged> 通过将属性设置为来禁止显示事件，则可以在复杂的绑定方案中使用这些方法 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="7471d-261">Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-262">下面的代码示例演示如何使用 <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-262">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> method.</span></span>  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public override void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SuspendBinding();" />
      <MemberSignature Language="F#" Value="override this.SuspendBinding : unit -&gt; unit" Usage="currencyManager.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-263">挂起数据绑定，以防止所做的更改对绑定数据源进行更新。</span><span class="sxs-lookup"><span data-stu-id="7471d-263">Suspends data binding to prevents changes from updating the bound data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471d-264"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>和 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 方法允许在简单的绑定方案中暂时挂起和恢复数据绑定。</span><span class="sxs-lookup"><span data-stu-id="7471d-264">The <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> methods allow the temporary suspension and resumption of data binding in a simple binding scenario.</span></span> <span data-ttu-id="7471d-265">如果用户必须在进行验证之前对数据字段进行多次编辑，通常会挂起数据绑定。</span><span class="sxs-lookup"><span data-stu-id="7471d-265">You would typically suspend data binding if the user must make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="7471d-266">例如，如果必须根据第二个字段更改一个字段，但在验证第一个字段时将导致第二个字段出现错误。</span><span class="sxs-lookup"><span data-stu-id="7471d-266">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7471d-267"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>在调用之前，阻止将更改应用于数据源 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> ，但实际上不会阻止任何事件发生。</span><span class="sxs-lookup"><span data-stu-id="7471d-267"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being applied to the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="7471d-268">使用复杂数据绑定的控件（如 <xref:System.Windows.Forms.DataGridView> 控件）根据更改事件（例如事件）更新其值 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 。</span><span class="sxs-lookup"><span data-stu-id="7471d-268">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events, such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="7471d-269">因此，调用 <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 不会阻止复杂绑定控件接收事件以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="7471d-269">Therefore, calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent complex-bound controls from receiving events to update the data source.</span></span> <span data-ttu-id="7471d-270">出于此原因， <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> 和 <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> 旨在用于简单绑定控件（如 <xref:System.Windows.Forms.TextBox> 控件）。</span><span class="sxs-lookup"><span data-stu-id="7471d-270">For this reason, <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="7471d-271">或者，如果 <xref:System.Windows.Forms.BindingSource.ListChanged> 通过将属性设置为来禁止显示事件，则可以在复杂的绑定方案中使用这些方法 <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="7471d-271">Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7471d-272">下面的代码示例演示如何使用 <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7471d-272">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> method.</span></span>  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#1)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#1)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected override void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="override this.UpdateIsBinding : unit -&gt; unit" Usage="currencyManager.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7471d-273">更新绑定的状态。</span><span class="sxs-lookup"><span data-stu-id="7471d-273">Updates the status of the binding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
