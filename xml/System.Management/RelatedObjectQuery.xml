<Type Name="RelatedObjectQuery" FullName="System.Management.RelatedObjectQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5faac3d86fd1e0c47b082a6653e2360a7b7b1085" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89942905" /></Metadata><TypeSignature Language="C#" Value="public class RelatedObjectQuery : System.Management.WqlObjectQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelatedObjectQuery extends System.Management.WqlObjectQuery" />
  <TypeSignature Language="DocId" Value="T:System.Management.RelatedObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class RelatedObjectQuery&#xA;Inherits WqlObjectQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelatedObjectQuery : System::Management::WqlObjectQuery" />
  <TypeSignature Language="F#" Value="type RelatedObjectQuery = class&#xA;    inherit WqlObjectQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.WqlObjectQuery</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 WQL ASSOCIATORS OF 数据查询**。 它可以用于实例查询和架构查询。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelatedObjectQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelatedObjectQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 这是无参数构造函数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelatedObjectQuery (string queryOrSourceObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string queryOrSourceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryOrSourceObject As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelatedObjectQuery(System::String ^ queryOrSourceObject);" />
      <MemberSignature Language="F#" Value="new System.Management.RelatedObjectQuery : string -&gt; System.Management.RelatedObjectQuery" Usage="new System.Management.RelatedObjectQuery queryOrSourceObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryOrSourceObject" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="queryOrSourceObject">查询字符串或源对象的路径。</param>
        <summary>初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 如果可以将指定的字符串成功地分析为 WQL 查询，则认为该字符串是查询字符串；否则，将假定它是查询的源对象的路径。 在此情况下，假定该查询为实例查询。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelatedObjectQuery (string sourceObject, string relatedClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceObject, string relatedClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceObject As String, relatedClass As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelatedObjectQuery(System::String ^ sourceObject, System::String ^ relatedClass);" />
      <MemberSignature Language="F#" Value="new System.Management.RelatedObjectQuery : string * string -&gt; System.Management.RelatedObjectQuery" Usage="new System.Management.RelatedObjectQuery (sourceObject, relatedClass)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceObject" Type="System.String" />
        <Parameter Name="relatedClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceObject">该查询的源对象的路径。</param>
        <param name="relatedClass">相关对象的类。</param>
        <summary>根据给定源对象和相关类初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelatedObjectQuery (bool isSchemaQuery, string sourceObject, string relatedClass, string relationshipClass, string relatedQualifier, string relationshipQualifier, string relatedRole, string thisRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isSchemaQuery, string sourceObject, string relatedClass, string relationshipClass, string relatedQualifier, string relationshipQualifier, string relatedRole, string thisRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isSchemaQuery As Boolean, sourceObject As String, relatedClass As String, relationshipClass As String, relatedQualifier As String, relationshipQualifier As String, relatedRole As String, thisRole As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelatedObjectQuery(bool isSchemaQuery, System::String ^ sourceObject, System::String ^ relatedClass, System::String ^ relationshipClass, System::String ^ relatedQualifier, System::String ^ relationshipQualifier, System::String ^ relatedRole, System::String ^ thisRole);" />
      <MemberSignature Language="F#" Value="new System.Management.RelatedObjectQuery : bool * string * string * string * string * string * string * string -&gt; System.Management.RelatedObjectQuery" Usage="new System.Management.RelatedObjectQuery (isSchemaQuery, sourceObject, relatedClass, relationshipClass, relatedQualifier, relationshipQualifier, relatedRole, thisRole)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSchemaQuery" Type="System.Boolean" />
        <Parameter Name="sourceObject" Type="System.String" />
        <Parameter Name="relatedClass" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relatedQualifier" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="relatedRole" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isSchemaQuery">若为 <see langword="true" />，则指示这是架构查询；否则为 <see langword="false" />。</param>
        <param name="sourceObject">源类的路径。</param>
        <param name="relatedClass">相关对象所需的基类。</param>
        <param name="relationshipClass">关系类型。</param>
        <param name="relatedQualifier">需要在相关对象中存在的限定符。</param>
        <param name="relationshipQualifier">需要在关系中存在的限定符。</param>
        <param name="relatedRole">相关对象需要在关系中扮演的角色。</param>
        <param name="thisRole">源类需要在关系中扮演的角色。</param>
        <summary>使用给定的参数集，为架构查询初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 此构造函数只能用于架构查询：第一个参数必须设置为 <see langword="true" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelatedObjectQuery (string sourceObject, string relatedClass, string relationshipClass, string relatedQualifier, string relationshipQualifier, string relatedRole, string thisRole, bool classDefinitionsOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourceObject, string relatedClass, string relationshipClass, string relatedQualifier, string relationshipQualifier, string relatedRole, string thisRole, bool classDefinitionsOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceObject As String, relatedClass As String, relationshipClass As String, relatedQualifier As String, relationshipQualifier As String, relatedRole As String, thisRole As String, classDefinitionsOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelatedObjectQuery(System::String ^ sourceObject, System::String ^ relatedClass, System::String ^ relationshipClass, System::String ^ relatedQualifier, System::String ^ relationshipQualifier, System::String ^ relatedRole, System::String ^ thisRole, bool classDefinitionsOnly);" />
      <MemberSignature Language="F#" Value="new System.Management.RelatedObjectQuery : string * string * string * string * string * string * string * bool -&gt; System.Management.RelatedObjectQuery" Usage="new System.Management.RelatedObjectQuery (sourceObject, relatedClass, relationshipClass, relatedQualifier, relationshipQualifier, relatedRole, thisRole, classDefinitionsOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceObject" Type="System.String" />
        <Parameter Name="relatedClass" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relatedQualifier" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="relatedRole" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="classDefinitionsOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceObject">源对象的路径。</param>
        <param name="relatedClass">相关对象所需的类。</param>
        <param name="relationshipClass">关系类型。</param>
        <param name="relatedQualifier">需要在相关对象中存在的限定符。</param>
        <param name="relationshipQualifier">需要在关系中存在的限定符。</param>
        <param name="relatedRole">相关对象需要在关系中扮演的角色。</param>
        <param name="thisRole">源对象需要在关系中扮演的角色。</param>
        <param name="classDefinitionsOnly">如果只返回相关对象的类定义，则为 <see langword="true" />；否则为 false。</param>
        <summary>按照给定的参数集初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildQuery">
      <MemberSignature Language="C#" Value="protected internal void BuildQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BuildQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.BuildQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BuildQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BuildQuery();" />
      <MemberSignature Language="F#" Value="member this.BuildQuery : unit -&gt; unit" Usage="relatedObjectQuery.BuildQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>根据当前属性值生成查询字符串。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassDefinitionsOnly">
      <MemberSignature Language="C#" Value="public bool ClassDefinitionsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClassDefinitionsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassDefinitionsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClassDefinitionsOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClassDefinitionsOnly : bool with get, set" Usage="System.Management.RelatedObjectQuery.ClassDefinitionsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示对于符合查询的所有实例只返回它们的类定义。 此参数只对实例查询有效。</summary>
        <value>返回一个 <see cref="T:System.Boolean" /> 值，该值指示对于符合查询的所有实例只返回它们的类定义。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新标志。  
  
## <a name="property-value"></a>属性值  
 `true` 如果查询只请求结果集的类定义，则为; 否则为。否则为 `false` 。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="relatedObjectQuery.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建对象的一个副本。</summary>
        <returns>所复制的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="IsSchemaQuery">
      <MemberSignature Language="C#" Value="public bool IsSchemaQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSchemaQuery" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.IsSchemaQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSchemaQuery As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSchemaQuery { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSchemaQuery : bool with get, set" Usage="System.Management.RelatedObjectQuery.IsSchemaQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示这是架构查询还是实例查询。</summary>
        <value>返回一个 <see cref="T:System.Boolean" /> 值，该值指示这是否为架构查询。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的查询类型。  
  
## <a name="property-value"></a>属性值  
 `true` 如果应对该架构计算此查询，则为; 否则为。 `false` 如果对实例求值，则为。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseQuery">
      <MemberSignature Language="C#" Value="protected internal override void ParseQuery (string query);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ParseQuery(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ParseQuery (query As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ParseQuery(System::String ^ query);" />
      <MemberSignature Language="F#" Value="override this.ParseQuery : string -&gt; unit" Usage="relatedObjectQuery.ParseQuery query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">要分析的查询字符串。</param>
        <summary>分析查询字符串并相应地设置属性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatedClass">
      <MemberSignature Language="C#" Value="public string RelatedClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelatedClass" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.RelatedClass" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelatedClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedClass : string with get, set" Usage="System.Management.RelatedObjectQuery.RelatedClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置终结点对象的类（相关类）。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含相关类名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的相关类。  
  
## <a name="property-value"></a>属性值  
 包含相关类名的字符串。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 下面的示例设置与关联的 WMI 类 <xref:System.Management.RelatedObjectQuery> 。  
  
 [!code-csharp[wminet_RelatedObjectQuery_RelatedClass#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_RelatedObjectQuery_RelatedClass/cs/RelatedObjectQuery_RelatedClass.cs#1)]
 [!code-vb[wminet_RelatedObjectQuery_RelatedClass#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_RelatedObjectQuery_RelatedClass/vb/RelatedObjectQuery_RelatedClass.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatedQualifier">
      <MemberSignature Language="C#" Value="public string RelatedQualifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelatedQualifier" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.RelatedQualifier" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedQualifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelatedQualifier { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedQualifier : string with get, set" Usage="System.Management.RelatedObjectQuery.RelatedQualifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置需要在相关对象中定义的限定符。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含相关对象所需的限定符的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的限定符。  
  
## <a name="property-value"></a>属性值  
 一个字符串，包含相关对象所需的限定符的名称。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatedRole">
      <MemberSignature Language="C#" Value="public string RelatedRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelatedRole" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.RelatedRole" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedRole As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelatedRole { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedRole : string with get, set" Usage="System.Management.RelatedObjectQuery.RelatedRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置所返回的相关对象要在关系中扮演的角色。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含相关对象的角色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的角色。  
  
## <a name="property-value"></a>属性值  
 一个字符串，包含相关对象的角色。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipClass">
      <MemberSignature Language="C#" Value="public string RelationshipClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipClass" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.RelationshipClass" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipClass : string with get, set" Usage="System.Management.RelatedObjectQuery.RelationshipClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置关系（关联）的类型。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含关系类名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的关系类。  
  
## <a name="property-value"></a>属性值  
 一个包含关系类名称的字符串。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 下面的示例设置 WMI 类与之间的关系的类型 <xref:System.Management.RelatedObjectQuery> 。  
  
 [!code-csharp[wminet_RelatedObjectQuery_RelationshipClass#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_RelatedObjectQuery_RelationshipClass/cs/RelatedObjectQuery_RelationshipClass.cs#1)]
 [!code-vb[wminet_RelatedObjectQuery_RelationshipClass#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_RelatedObjectQuery_RelationshipClass/vb/RelatedObjectQuery_RelationshipClass.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipQualifier">
      <MemberSignature Language="C#" Value="public string RelationshipQualifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipQualifier" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.RelationshipQualifier" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipQualifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipQualifier { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipQualifier : string with get, set" Usage="System.Management.RelatedObjectQuery.RelationshipQualifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置需要在关系对象中定义的限定符。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含关系对象所需的限定符的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的限定符。  
  
## <a name="property-value"></a>属性值  
 一个字符串，其中包含关系对象所需的限定符的名称。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceObject">
      <MemberSignature Language="C#" Value="public string SourceObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.SourceObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceObject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceObject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceObject : string with get, set" Usage="System.Management.RelatedObjectQuery.SourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于查询的源对象。 对于实例查询，这通常是实例路径。 对于架构查询，这通常是类名。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含要用于查询的对象的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的源对象。  
  
## <a name="property-value"></a>属性值  
 一个字符串，该字符串表示要用于查询的对象的路径。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisRole">
      <MemberSignature Language="C#" Value="public string ThisRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThisRole" />
      <MemberSignature Language="DocId" Value="P:System.Management.RelatedObjectQuery.ThisRole" />
      <MemberSignature Language="VB.NET" Value="Public Property ThisRole As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThisRole { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThisRole : string with get, set" Usage="System.Management.RelatedObjectQuery.ThisRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置源对象应当在关系中扮演的角色。</summary>
        <value>返回一个 <see cref="T:System.String" /> 值，该值包含此对象的角色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性值将覆盖对象中存储的任何先前值。 重新生成查询字符串以反映新的角色。  
  
## <a name="property-value"></a>属性值  
 一个字符串，其中包含此对象的角色。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
