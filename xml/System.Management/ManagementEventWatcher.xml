<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7a685610b70211c9384a0ed808f0e80237d309c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86803780" /></Metadata><TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d63d-101">根据指定的事件查询订阅临时事件通知\*\*。</span><span class="sxs-lookup"><span data-stu-id="4d63d-101">Subscribes to temporary event notifications based on a specified *event query*.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d63d-102">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-103">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-103">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-104">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-105">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d63d-106">初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d63d-107">初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span> <span data-ttu-id="4d63d-108">若要进一步初始化，请设置对象的属性。</span><span class="sxs-lookup"><span data-stu-id="4d63d-108">For further initialization, set the properties on the object.</span></span> <span data-ttu-id="4d63d-109">这是无参数构造函数。</span><span class="sxs-lookup"><span data-stu-id="4d63d-109">This is the parameterless constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-110">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-110">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-111">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-112">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-113">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-113">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-114">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-115">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-115">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-116">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-117">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="4d63d-118"><see cref="T:System.Management.EventQuery" />，它表示一个确定观察程序将侦听的事件的 WMI 事件查询。</span><span class="sxs-lookup"><span data-stu-id="4d63d-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="4d63d-119">在给定一个 WMI 事件查询的情况下，初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例\*\*。</span><span class="sxs-lookup"><span data-stu-id="4d63d-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d63d-120">观察程序将在其中侦听事件的命名空间是当前设置的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="4d63d-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-121">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-121">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-122">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-123">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-124">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-124">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-125">在此代码示例中，客户端在创建 **Win32_Process** 实例时收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-126">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-126">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-127">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-128">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="4d63d-129">一个 WMI 事件查询，它定义观察程序将侦听的事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-129">A WMI event query, which defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="4d63d-130">在给定一个字符串形式的 WMI 事件查询的情况下，初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例\*\*。</span><span class="sxs-lookup"><span data-stu-id="4d63d-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d63d-131">观察程序将在其中侦听事件的命名空间是当前设置的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="4d63d-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-132">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-132">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-133">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-134">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-135">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-135">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-136">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-137">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-137">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-138">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-139">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="4d63d-140"><see cref="T:System.Management.ManagementScope" />，它表示观察程序将在其中侦听事件的范围（命名空间）。</span><span class="sxs-lookup"><span data-stu-id="4d63d-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="4d63d-141"><see cref="T:System.Management.EventQuery" />，它表示一个确定观察程序将侦听的事件的 WMI 事件查询。</span><span class="sxs-lookup"><span data-stu-id="4d63d-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="4d63d-142">初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例，它可侦听符合给定 WMI 事件查询的事件\*\*。</span><span class="sxs-lookup"><span data-stu-id="4d63d-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-143">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-143">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-144">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-145">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-146">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-146">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-147">在此代码示例中，客户端在创建 **Win32_Process** 实例时收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-148">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-148">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-149">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-150">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="4d63d-151">观察程序将在其中侦听事件的管理范围（命名空间）。</span><span class="sxs-lookup"><span data-stu-id="4d63d-151">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="4d63d-152">定义观察程序所要侦听的事件的查询。</span><span class="sxs-lookup"><span data-stu-id="4d63d-152">The query that defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="4d63d-153">初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例，它可侦听符合给定 WMI 事件查询的事件\*\*。</span><span class="sxs-lookup"><span data-stu-id="4d63d-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span> <span data-ttu-id="4d63d-154">对于此变体，查询和范围被指定为字符串。</span><span class="sxs-lookup"><span data-stu-id="4d63d-154">For this variant, the query and the scope are specified as strings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-155">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-155">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-156">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-157">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-158">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-158">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-159">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-160">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-160">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-161">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-162">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="4d63d-163"><see cref="T:System.Management.ManagementScope" />，它表示观察程序将在其中侦听事件的范围（命名空间）。</span><span class="sxs-lookup"><span data-stu-id="4d63d-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="4d63d-164"><see cref="T:System.Management.EventQuery" />，它表示一个确定观察程序将侦听的事件的 WMI 事件查询。</span><span class="sxs-lookup"><span data-stu-id="4d63d-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="4d63d-165"><see cref="T:System.Management.EventWatcherOptions" />，它表示用于监视事件的其他选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="4d63d-166">初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的一个新实例，它将根据指定选项侦听符合给定 WMI 事件查询的事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span></span> <span data-ttu-id="4d63d-167">对于此变体，查询和范围为指定的对象。</span><span class="sxs-lookup"><span data-stu-id="4d63d-167">For this variant, the query and the scope are specified objects.</span></span> <span data-ttu-id="4d63d-168">选项对象可指定超时和上下文信息等选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-168">The options object can specify options such as time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-169">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-169">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-170">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-171">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-172">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-172">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-173">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-174">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-174">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-175">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-176">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="4d63d-177">观察程序将在其中侦听事件的管理范围（命名空间）。</span><span class="sxs-lookup"><span data-stu-id="4d63d-177">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="4d63d-178">定义观察程序所要侦听的事件的查询。</span><span class="sxs-lookup"><span data-stu-id="4d63d-178">The query that defines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="4d63d-179"><see cref="T:System.Management.EventWatcherOptions" />，它表示用于监视事件的其他选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="4d63d-180">初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例，它可根据指定选项侦听符合给定 WMI 事件查询的事件\*\*。</span><span class="sxs-lookup"><span data-stu-id="4d63d-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span></span> <span data-ttu-id="4d63d-181">对于此变体，查询和范围被指定为字符串。</span><span class="sxs-lookup"><span data-stu-id="4d63d-181">For this variant, the query and the scope are specified as strings.</span></span> <span data-ttu-id="4d63d-182">选项对象可指定超时和上下文信息之类的选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-182">The options object can specify options such as a time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-183">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-183">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-184">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-185">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-186">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-186">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-187">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-188">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-188">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-189">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-190">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventArrived As EventArrivedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d63d-191">出现新事件时发生。</span><span class="sxs-lookup"><span data-stu-id="4d63d-191">Occurs when a new event arrives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="4d63d-192">事件数据</span><span class="sxs-lookup"><span data-stu-id="4d63d-192">Event Data</span></span>  
 <span data-ttu-id="4d63d-193">事件处理程序接收 <xref:System.Management.EventArrivedEventArgs> 类型的变量，该变量包含与此事件相关的数据。</span><span class="sxs-lookup"><span data-stu-id="4d63d-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="4d63d-194">以下 <xref:System.Management.EventArrivedEventArgs> 属性提供特定于此事件的信息。</span><span class="sxs-lookup"><span data-stu-id="4d63d-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="4d63d-195">Property</span><span class="sxs-lookup"><span data-stu-id="4d63d-195">Property</span></span>|<span data-ttu-id="4d63d-196">描述</span><span class="sxs-lookup"><span data-stu-id="4d63d-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="4d63d-197"><xref:System.Management.ManagementEventArgs.Context%2A> (继承自 <xref:System.Management.ManagementEventArgs>) </span><span class="sxs-lookup"><span data-stu-id="4d63d-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="4d63d-198">获取从触发事件的操作反射回的操作上下文。</span><span class="sxs-lookup"><span data-stu-id="4d63d-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="4d63d-199">获取上次传递的 WMI 事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-200">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-200">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-201">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-202">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-203">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-203">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d63d-204">确保清除未完成的调用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-204">Ensures that outstanding calls are cleared.</span></span> <span data-ttu-id="4d63d-205">这是该对象的析构函数。</span><span class="sxs-lookup"><span data-stu-id="4d63d-205">This is the destructor for the object.</span></span> <span data-ttu-id="4d63d-206">在 C# 中，使用析构函数语法表示终结器。</span><span class="sxs-lookup"><span data-stu-id="4d63d-206">In C#, finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-207">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-207">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-208">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-209">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-210">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-210">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d63d-211">获取或设置用于监视事件的选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-211">Gets or sets the options used to watch for events.</span></span></summary>
        <value><span data-ttu-id="4d63d-212">用于监视事件的事件选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-212">The event options used to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="4d63d-213">属性值</span><span class="sxs-lookup"><span data-stu-id="4d63d-213">Property Value</span></span>  
 <span data-ttu-id="4d63d-214">用于监视事件的选项。</span><span class="sxs-lookup"><span data-stu-id="4d63d-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-215">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-215">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-216">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-217">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-218">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-218">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-219">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-220">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-220">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-221">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-222">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d63d-223">获取或设置要应用于事件的条件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-223">Gets or sets the criteria to apply to events.</span></span></summary>
        <value><span data-ttu-id="4d63d-224">要应用于事件的查询。</span><span class="sxs-lookup"><span data-stu-id="4d63d-224">The query to apply to events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="4d63d-225">属性值</span><span class="sxs-lookup"><span data-stu-id="4d63d-225">Property Value</span></span>  
 <span data-ttu-id="4d63d-226">要应用于事件的条件，与 *事件查询*相等。</span><span class="sxs-lookup"><span data-stu-id="4d63d-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-227">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-227">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-228">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-229">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-230">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-230">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-231">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-232">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-232">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-233">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-234">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d63d-235">获取或设置要在其中监视事件的范围（命名空间或范围）。</span><span class="sxs-lookup"><span data-stu-id="4d63d-235">Gets or sets the scope in which to watch for events (namespace or scope).</span></span></summary>
        <value><span data-ttu-id="4d63d-236">要在其中监视事件的范围。</span><span class="sxs-lookup"><span data-stu-id="4d63d-236">The scope in which to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="4d63d-237">属性值</span><span class="sxs-lookup"><span data-stu-id="4d63d-237">Property Value</span></span>  
 <span data-ttu-id="4d63d-238">要在其中监视事件 (命名空间或范围) 的范围。</span><span class="sxs-lookup"><span data-stu-id="4d63d-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-239">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-239">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-240">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-241">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-242">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-242">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-243">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-244">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-244">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-245">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-246">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d63d-247">使用给定查询预订事件，并通过 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件异步传递它们。</span><span class="sxs-lookup"><span data-stu-id="4d63d-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-248">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-248">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-249">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-250">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-251">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-251">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d63d-252">取消预订而不管它是同步还是异步。</span><span class="sxs-lookup"><span data-stu-id="4d63d-252">Cancels the subscription whether it is synchronous or asynchronous.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-253">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-253">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-254">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-255">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-256">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-256">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-257">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-258">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-258">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-259">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-260">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Stopped As StoppedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d63d-261">取消预订时发生。</span><span class="sxs-lookup"><span data-stu-id="4d63d-261">Occurs when a subscription is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="4d63d-262">事件数据</span><span class="sxs-lookup"><span data-stu-id="4d63d-262">Event Data</span></span>  
 <span data-ttu-id="4d63d-263">事件处理程序接收 <xref:System.Management.StoppedEventArgs> 类型的变量，该变量包含与此事件相关的数据。</span><span class="sxs-lookup"><span data-stu-id="4d63d-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="4d63d-264">以下 <xref:System.Management.StoppedEventArgs> 属性提供特定于此事件的信息。</span><span class="sxs-lookup"><span data-stu-id="4d63d-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="4d63d-265">Property</span><span class="sxs-lookup"><span data-stu-id="4d63d-265">Property</span></span>|<span data-ttu-id="4d63d-266">描述</span><span class="sxs-lookup"><span data-stu-id="4d63d-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="4d63d-267"><xref:System.Management.ManagementEventArgs.Context%2A> (继承自 <xref:System.Management.ManagementEventArgs>) </span><span class="sxs-lookup"><span data-stu-id="4d63d-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="4d63d-268">获取从触发事件的操作反射回的操作上下文。</span><span class="sxs-lookup"><span data-stu-id="4d63d-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="4d63d-269">获取操作的完成状态。</span><span class="sxs-lookup"><span data-stu-id="4d63d-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-270">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-270">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-271">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-272">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-273">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-273">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d63d-274">等待出现下一个与指定的查询匹配的事件，然后将该事件返回。</span><span class="sxs-lookup"><span data-stu-id="4d63d-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span></span></summary>
        <returns><span data-ttu-id="4d63d-275">一个 <see cref="T:System.Management.ManagementBaseObject" />，它表示刚到达的事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d63d-276">如果事件观察程序对象包含具有指定超时的选项，则 API 将仅等待指定时间段内的下一个事件;否则，会阻止 API，直到下一个事件发生。</span><span class="sxs-lookup"><span data-stu-id="4d63d-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="4d63d-277">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="4d63d-277">.NET Framework Security</span></span>  
 <span data-ttu-id="4d63d-278">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4d63d-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="4d63d-279">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="4d63d-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="4d63d-280">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="4d63d-280">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d63d-281">下面的示例演示在创建 **Win32_Process** 的实例时客户端如何收到通知，因为事件类是 **__InstanceCreationEvent**的。</span><span class="sxs-lookup"><span data-stu-id="4d63d-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="4d63d-282">有关详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="4d63d-282">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="4d63d-283">客户端通过调用 <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> 方法来同步接收事件。</span><span class="sxs-lookup"><span data-stu-id="4d63d-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="4d63d-284">在运行此代码示例的同时，可以启动进程（如记事本）来测试此示例。</span><span class="sxs-lookup"><span data-stu-id="4d63d-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
