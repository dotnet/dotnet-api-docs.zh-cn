<Type Name="QualifierDataCollection" FullName="System.Management.QualifierDataCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2081f069101e59ac121314f4906b3ad685ce237c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86803611" /></Metadata><TypeSignature Language="C#" Value="public class QualifierDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QualifierDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.QualifierDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class QualifierDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class QualifierDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type QualifierDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fd00d-101">表示 <see cref="T:System.Management.QualifierData" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="fd00d-101">Represents a collection of <see cref="T:System.Management.QualifierData" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd00d-102">下面的示例使用类列出有关 **Win32_Service** 类的限定符信息 <xref:System.Management.QualifierData> 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-102">The following example lists qualifier information about the **Win32_Service** class using the <xref:System.Management.QualifierData> class.</span></span> <span data-ttu-id="fd00d-103">有关 **Win32_Service**的详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="fd00d-103">For more information about **Win32_Service**, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span>  
  
 [!code-csharp[wminet_QualifierDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_QualifierDataCollection/cs/QualifierDataCollection.cs#1)]
 [!code-vb[wminet_QualifierDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_QualifierDataCollection/vb/QualifierDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd00d-104">将 <see cref="T:System.Management.QualifierData" /> 对象添加到 <see cref="T:System.Management.QualifierDataCollection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="fd00d-104">Adds a <see cref="T:System.Management.QualifierData" /> object to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string qualifierName, object qualifierValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string qualifierName, object qualifierValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (qualifierName As String, qualifierValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ qualifierName, System::Object ^ qualifierValue);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="qualifierDataCollection.Add (qualifierName, qualifierValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
        <Parameter Name="qualifierValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="fd00d-105">要添加到 <see cref="T:System.Management.QualifierData" /> 的 <see cref="T:System.Management.QualifierDataCollection" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="fd00d-105">The name of the <see cref="T:System.Management.QualifierData" /> to be added to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="qualifierValue"><span data-ttu-id="fd00d-106">新限定符的值。</span><span class="sxs-lookup"><span data-stu-id="fd00d-106">The value for the new qualifier.</span></span></param>
        <summary><span data-ttu-id="fd00d-107">向 <see cref="T:System.Management.QualifierData" /> 中添加一个 <see cref="T:System.Management.QualifierDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-107">Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="fd00d-108">此重载指定限定符的名称和值。</span><span class="sxs-lookup"><span data-stu-id="fd00d-108">This overload specifies the qualifier name and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-109">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-109">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-110">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-110">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-111">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-111">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-112">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-112">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string qualifierName, object qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (qualifierName As String, qualifierValue As Object, isAmended As Boolean, propagatesToInstance As Boolean, propagatesToSubclass As Boolean, isOverridable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ qualifierName, System::Object ^ qualifierValue, bool isAmended, bool propagatesToInstance, bool propagatesToSubclass, bool isOverridable);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * bool * bool * bool * bool -&gt; unit&#xA;override this.Add : string * obj * bool * bool * bool * bool -&gt; unit" Usage="qualifierDataCollection.Add (qualifierName, qualifierValue, isAmended, propagatesToInstance, propagatesToSubclass, isOverridable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
        <Parameter Name="qualifierValue" Type="System.Object" />
        <Parameter Name="isAmended" Type="System.Boolean" />
        <Parameter Name="propagatesToInstance" Type="System.Boolean" />
        <Parameter Name="propagatesToSubclass" Type="System.Boolean" />
        <Parameter Name="isOverridable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="fd00d-113">限定符名称。</span><span class="sxs-lookup"><span data-stu-id="fd00d-113">The qualifier name.</span></span></param>
        <param name="qualifierValue"><span data-ttu-id="fd00d-114">限定符的值。</span><span class="sxs-lookup"><span data-stu-id="fd00d-114">The qualifier value.</span></span></param>
        <param name="isAmended"><span data-ttu-id="fd00d-115">如果要指定此限定符是已修正的 (<c>flavor</c>)，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-115"><see langword="true" /> to specify that this qualifier is amended (<c>flavor</c>); otherwise, <see langword="false" />.</span></span></param>
        <param name="propagatesToInstance"><span data-ttu-id="fd00d-116">若为 <see langword="true" />，则将此限定符传播给实例；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-116"><see langword="true" /> to propagate this qualifier to instances; otherwise, <see langword="false" />.</span></span></param>
        <param name="propagatesToSubclass"><span data-ttu-id="fd00d-117">若为 <see langword="true" />，则将此限定符传播给子类；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-117"><see langword="true" /> to propagate this qualifier to subclasses; otherwise, <see langword="false" />.</span></span></param>
        <param name="isOverridable"><span data-ttu-id="fd00d-118">若为 <see langword="true" />，则指定此限定符的值可在子类的实例中重写；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-118"><see langword="true" /> to specify that this qualifier's value is overridable in instances of subclasses; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd00d-119">向 <see cref="T:System.Management.QualifierData" /> 中添加一个 <see cref="T:System.Management.QualifierDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-119">Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="fd00d-120">此重载指定 <see cref="T:System.Management.QualifierData" /> 的所有属性值。</span><span class="sxs-lookup"><span data-stu-id="fd00d-120">This overload specifies all property values for a <see cref="T:System.Management.QualifierData" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-121">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-121">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-122">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-123">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-124">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-124">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd00d-125">将 <see cref="T:System.Management.QualifierDataCollection" /> 对象复制到数组。</span><span class="sxs-lookup"><span data-stu-id="fd00d-125">Copies the <see cref="T:System.Management.QualifierDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="qualifierDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fd00d-126"><see cref="T:System.Management.QualifierDataCollection" /> 所要复制到的数组。</span><span class="sxs-lookup"><span data-stu-id="fd00d-126">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="fd00d-127">复制操作开始所在的索引。</span><span class="sxs-lookup"><span data-stu-id="fd00d-127">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="fd00d-128">将 <see cref="T:System.Management.QualifierDataCollection" /> 复制到一个数组中。</span><span class="sxs-lookup"><span data-stu-id="fd00d-128">Copies the <see cref="T:System.Management.QualifierDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-129">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-129">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-130">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-131">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-132">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-132">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.QualifierData[] qualifierArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.QualifierData[] qualifierArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (qualifierArray As QualifierData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::QualifierData ^&gt; ^ qualifierArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.QualifierData[] * int -&gt; unit" Usage="qualifierDataCollection.CopyTo (qualifierArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierArray" Type="System.Management.QualifierData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="qualifierArray"><span data-ttu-id="fd00d-133"><see cref="T:System.Management.QualifierData" /> 所要复制到的 <see cref="T:System.Management.QualifierDataCollection" /> 对象的专用数组。</span><span class="sxs-lookup"><span data-stu-id="fd00d-133">The specialized array of <see cref="T:System.Management.QualifierData" /> objects to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="fd00d-134">复制操作开始所在的索引。</span><span class="sxs-lookup"><span data-stu-id="fd00d-134">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="fd00d-135">将 <see cref="T:System.Management.QualifierDataCollection" /> 复制到专用 <see cref="T:System.Management.QualifierData" /> 数组中。</span><span class="sxs-lookup"><span data-stu-id="fd00d-135">Copies the <see cref="T:System.Management.QualifierDataCollection" /> into a specialized              <see cref="T:System.Management.QualifierData" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-136">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-136">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-137">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-138">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-139">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-139">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.QualifierDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd00d-140">获取 <see cref="T:System.Management.QualifierData" /> 中 <see cref="T:System.Management.QualifierDataCollection" /> 对象的数目。</span><span class="sxs-lookup"><span data-stu-id="fd00d-140">Gets the number of <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="fd00d-141">集合中 对象的数目。</span><span class="sxs-lookup"><span data-stu-id="fd00d-141">The number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="fd00d-142">属性值</span><span class="sxs-lookup"><span data-stu-id="fd00d-142">Property Value</span></span>  
 <span data-ttu-id="fd00d-143">集合中 对象的数目。</span><span class="sxs-lookup"><span data-stu-id="fd00d-143">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-144">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-144">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-145">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-146">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-147">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-147">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.QualifierDataCollection.QualifierDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.QualifierDataCollection/QualifierDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As QualifierDataCollection.QualifierDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::QualifierDataCollection::QualifierDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.QualifierDataCollection.QualifierDataEnumerator" Usage="qualifierDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.QualifierDataCollection+QualifierDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd00d-148">返回 <see cref="T:System.Management.QualifierDataCollection" /> 的一个枚举数。</span><span class="sxs-lookup"><span data-stu-id="fd00d-148">Returns an enumerator for the <see cref="T:System.Management.QualifierDataCollection" />.</span></span> <span data-ttu-id="fd00d-149">此方法为强类型方法。</span><span class="sxs-lookup"><span data-stu-id="fd00d-149">This method is strongly typed.</span></span></summary>
        <returns><span data-ttu-id="fd00d-150">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd00d-151">仅可 `For Each` `For` 通过一次只进枚举器) 在 Visual Basic .net 语句或 c # 语句中循环访问 (。</span><span class="sxs-lookup"><span data-stu-id="fd00d-151">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="fd00d-152">包含实例的内存由 WMI 释放，因此无法倒带枚举器。</span><span class="sxs-lookup"><span data-stu-id="fd00d-152">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="fd00d-153">因此， <xref:System.Management.QualifierDataCollection.Count%2A> 不能使用方法，因为它需要倒带枚举器。</span><span class="sxs-lookup"><span data-stu-id="fd00d-153">Therefore, the <xref:System.Management.QualifierDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="fd00d-154">与传统枚举器相比，只进枚举器的速度要快得多，使用的内存更少，但它们不允许调用  <xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-154">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="fd00d-155">如果枚举数为可回退，则集合中的对象将可供多个枚举使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-155">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-156">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-156">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-157">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-157">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-158">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-158">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-159">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-159">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.QualifierDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd00d-160">获取一个值，它指示该对象是否已同步（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="fd00d-160">Gets a value indicating whether the object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="fd00d-161"><see langword="true" /> 如果对象已同步，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-161"><see langword="true" /> if the object is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="fd00d-162">属性值</span><span class="sxs-lookup"><span data-stu-id="fd00d-162">Property Value</span></span>  
 <span data-ttu-id="fd00d-163">`true` 如果对象已同步，则为; 否则为。否则为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-163">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-164">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-164">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-165">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-165">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-166">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-166">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-167">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-167">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.QualifierData this[string qualifierName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.QualifierData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(qualifierName As String) As QualifierData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::QualifierData ^ default[System::String ^] { System::Management::QualifierData ^ get(System::String ^ qualifierName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.QualifierData" Usage="System.Management.QualifierDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.QualifierData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="fd00d-168">要在 <see cref="T:System.Management.QualifierData" /> 中访问的 <see cref="T:System.Management.QualifierDataCollection" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="fd00d-168">The name of the <see cref="T:System.Management.QualifierData" /> to access in the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></param>
        <summary><span data-ttu-id="fd00d-169">从 <see cref="T:System.Management.QualifierData" /> 中获取指定的 <see cref="T:System.Management.QualifierDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-169">Gets the specified <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="fd00d-170">集合中指定限定符的数据。</span><span class="sxs-lookup"><span data-stu-id="fd00d-170">The data for a specified qualifier in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="fd00d-171">属性值</span><span class="sxs-lookup"><span data-stu-id="fd00d-171">Property Value</span></span>  
 <span data-ttu-id="fd00d-172"><xref:System.Management.QualifierData>，基于指定的名称。</span><span class="sxs-lookup"><span data-stu-id="fd00d-172">A <xref:System.Management.QualifierData>, based on the name specified.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-173">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-173">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-174">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-174">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-175">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-175">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-176">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-176">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string qualifierName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string qualifierName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (qualifierName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ qualifierName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="qualifierDataCollection.Remove qualifierName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifierName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qualifierName"><span data-ttu-id="fd00d-177">要删除的 <see cref="T:System.Management.QualifierData" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="fd00d-177">The name of the <see cref="T:System.Management.QualifierData" /> to remove.</span></span></param>
        <summary><span data-ttu-id="fd00d-178">按名称从 <see cref="T:System.Management.QualifierData" /> 移除 <see cref="T:System.Management.QualifierDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-178">Removes a <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" /> by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-179">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-179">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-180">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-180">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-181">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-181">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-182">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-182">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.QualifierDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.QualifierDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd00d-183">获取要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="fd00d-183">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="fd00d-184">要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="fd00d-184">The object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="fd00d-185">属性值</span><span class="sxs-lookup"><span data-stu-id="fd00d-185">Property Value</span></span>  
 <span data-ttu-id="fd00d-186">要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="fd00d-186">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="fd00d-187">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="fd00d-187">.NET Framework Security</span></span>  
 <span data-ttu-id="fd00d-188">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="fd00d-188">Full trust for the immediate caller.</span></span> <span data-ttu-id="fd00d-189">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="fd00d-189">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="fd00d-190">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="fd00d-190">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="qualifierDataCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd00d-191">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.QualifierDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-191">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="fd00d-192"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Management.QualifierDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="fd00d-192">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.QualifierDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="fd00d-193">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="fd00d-193">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="fd00d-194">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="fd00d-194">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fd00d-195">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="fd00d-195">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fd00d-196">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="fd00d-196">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fd00d-197"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="fd00d-197"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="fd00d-198">在此位置，调用会 <xref:System.Collections.IEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="fd00d-198">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="fd00d-199">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="fd00d-199">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fd00d-200">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="fd00d-200"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="fd00d-201"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="fd00d-201"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fd00d-202">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-202">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fd00d-203">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-203">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fd00d-204">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ，则调用会 <xref:System.Collections.IEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="fd00d-204">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="fd00d-205">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="fd00d-205">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="fd00d-206">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="fd00d-206">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fd00d-207">如果对集合所做的更改（如添加、修改或删除元素），则枚举器将失效且不可恢复，并且对或的下一个调用将 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A> 引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="fd00d-207">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="fd00d-208">如果在和之间修改集合 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A> ，则 <xref:System.Collections.IEnumerator.Current%2A> 将返回它设置为的元素，即使枚举器已失效也是如此。</span><span class="sxs-lookup"><span data-stu-id="fd00d-208">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="fd00d-209">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="fd00d-209">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="fd00d-210">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="fd00d-210">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fd00d-211">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="fd00d-211">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fd00d-212">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="fd00d-212">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
