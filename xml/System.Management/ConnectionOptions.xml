<Type Name="ConnectionOptions" FullName="System.Management.ConnectionOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70a93ab11618865fa286208c631b59fc774add63" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89920799" /></Metadata><TypeSignature Language="C#" Value="public class ConnectionOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.ConnectionOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ConnectionOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionOptions : System::Management::ManagementOptions" />
  <TypeSignature Language="F#" Value="type ConnectionOptions = class&#xA;    inherit ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定生成 WMI 连接所需的所有设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>创建使用默认连接选项连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions/cs/ConnectionOptions.cs#1)]
 [!code-vb[wminet_ConnectionOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions/vb/ConnectionOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建新的 ConnectionOption。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ConnectionOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConnectionOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值，为连接操作初始化 <see cref="T:System.Management.ConnectionOptions" /> 类的新实例。 这是无参数构造函数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>创建使用默认连接选项连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions/cs/ConnectionOptions.cs#1)]
 [!code-vb[wminet_ConnectionOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions/vb/ConnectionOptions.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionOptions (string locale, string username, System.Security.SecureString password, string authority, System.Management.ImpersonationLevel impersonation, System.Management.AuthenticationLevel authentication, bool enablePrivileges, System.Management.ManagementNamedValueCollection context, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string locale, string username, class System.Security.SecureString password, string authority, valuetype System.Management.ImpersonationLevel impersonation, valuetype System.Management.AuthenticationLevel authentication, bool enablePrivileges, class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (locale As String, username As String, password As SecureString, authority As String, impersonation As ImpersonationLevel, authentication As AuthenticationLevel, enablePrivileges As Boolean, context As ManagementNamedValueCollection, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConnectionOptions(System::String ^ locale, System::String ^ username, System::Security::SecureString ^ password, System::String ^ authority, System::Management::ImpersonationLevel impersonation, System::Management::AuthenticationLevel authentication, bool enablePrivileges, System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Management.ConnectionOptions : string * string * System.Security.SecureString * string * System.Management.ImpersonationLevel * System.Management.AuthenticationLevel * bool * System.Management.ManagementNamedValueCollection * TimeSpan -&gt; System.Management.ConnectionOptions" Usage="new System.Management.ConnectionOptions (locale, username, password, authority, impersonation, authentication, enablePrivileges, context, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="locale" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="username" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="authority" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="impersonation" Type="System.Management.ImpersonationLevel" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="authentication" Type="System.Management.AuthenticationLevel" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enablePrivileges" Type="System.Boolean" Index="6" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" Index="7" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="8" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="locale">将用于连接的区域设置。</param>
        <param name="username">将用于连接的用户名。 如果为 null，则使用当前已登录用户的凭据。</param>
        <param name="password">给定的用户名的密码。 如果用户名也为 null，则使用的凭据将是当前已登录用户的凭据。</param>
        <param name="authority">将用于验证指定用户的授权。</param>
        <param name="impersonation">将用于连接的 COM 模拟级别。</param>
        <param name="authentication">将用于连接的 COM 身份验证级别。</param>
        <param name="enablePrivileges">若为 true，则启用特殊的用户特权；否则为 false。 只有在执行需要特殊的 Windows NT 用户特权的操作时，才应使用此参数。</param>
        <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
        <param name="timeout">留待将来使用。</param>
        <summary>创建新的 ConnectionOption。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionOptions (string locale, string username, string password, string authority, System.Management.ImpersonationLevel impersonation, System.Management.AuthenticationLevel authentication, bool enablePrivileges, System.Management.ManagementNamedValueCollection context, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string locale, string username, string password, string authority, valuetype System.Management.ImpersonationLevel impersonation, valuetype System.Management.AuthenticationLevel authentication, bool enablePrivileges, class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (locale As String, username As String, password As String, authority As String, impersonation As ImpersonationLevel, authentication As AuthenticationLevel, enablePrivileges As Boolean, context As ManagementNamedValueCollection, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConnectionOptions(System::String ^ locale, System::String ^ username, System::String ^ password, System::String ^ authority, System::Management::ImpersonationLevel impersonation, System::Management::AuthenticationLevel authentication, bool enablePrivileges, System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Management.ConnectionOptions : string * string * string * string * System.Management.ImpersonationLevel * System.Management.AuthenticationLevel * bool * System.Management.ManagementNamedValueCollection * TimeSpan -&gt; System.Management.ConnectionOptions" Usage="new System.Management.ConnectionOptions (locale, username, password, authority, impersonation, authentication, enablePrivileges, context, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="locale" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="impersonation" Type="System.Management.ImpersonationLevel" />
        <Parameter Name="authentication" Type="System.Management.AuthenticationLevel" />
        <Parameter Name="enablePrivileges" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="locale">将用于连接的区域设置。</param>
        <param name="username">将用于连接的用户名。 如果为 null，则使用当前已登录用户的凭据。</param>
        <param name="password">给定的用户名的密码。 如果用户名也为 null，则使用的凭据将是当前已登录用户的凭据。</param>
        <param name="authority">将用于验证指定用户的授权。</param>
        <param name="impersonation">将用于连接的 COM 模拟级别。</param>
        <param name="authentication">将用于连接的 COM 身份验证级别。</param>
        <param name="enablePrivileges">若为 <see langword="true" />，则启用特殊的用户特权；否则为 <see langword="false" />。 只有在执行需要特殊的 Windows NT 用户特权的操作时，才应使用此参数。</param>
        <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
        <param name="timeout">留待将来使用。</param>
        <summary>使用指定的值，初始化将用于 WMI 连接的 <see cref="T:System.Management.ConnectionOptions" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>使用所需的连接选项创建连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions-9#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions-9/cs/ConnectionOptions-9.cs#1)]
 [!code-vb[wminet_ConnectionOptions-9#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions-9/vb/ConnectionOptions-9.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.Management.AuthenticationLevel Authentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.AuthenticationLevel Authentication" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public Property Authentication As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::AuthenticationLevel Authentication { System::Management::AuthenticationLevel get(); void set(System::Management::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.Management.AuthenticationLevel with get, set" Usage="System.Management.ConnectionOptions.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于此连接中的操作的 COM 身份验证级别。</summary>
        <value>返回 <see cref="T:System.Management.AuthenticationLevel" /> 枚举值，该值指示连接到本地或远程计算机时使用的 COM 身份验证级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Windows 2000 及更低版本上，WMI 服务将请求连接级别的身份验证，而在 Windows XP 和更高版本中，它将请求数据包级身份验证。 如果客户端需要特定身份验证设置，则可以使用此属性来控制此特定连接上的身份验证级别。 例如， <xref:System.Management.AuthenticationLevel.PacketPrivacy?displayProperty=nameWithType> 如果客户端要求对所有通信进行加密，则可以将属性设置为。  
  
## <a name="property-value"></a>属性值  
 要用于此连接中的操作的 COM 身份验证级别。 默认值为 <xref:System.Management.AuthenticationLevel.Unchanged?displayProperty=nameWithType> ，指示客户端将根据标准 DCOM 协商过程使用服务器请求的身份验证级别。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>使用所需的连接选项创建连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions_Authentication#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Authentication/cs/ConnectionOptions_Authentication.cs#1)]
 [!code-vb[wminet_ConnectionOptions_Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Authentication/vb/ConnectionOptions_Authentication.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Management.AuthenticationLevel" />
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.Authority" />
      <MemberSignature Language="VB.NET" Value="Public Property Authority As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Authority { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Authority : string with get, set" Usage="System.Management.ConnectionOptions.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将用于验证指定用户的授权。</summary>
        <value>返回 <see cref="T:System.String" />，它定义了用于对指定用户进行身份验证的授权。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性必须按如下方式传递：如果以字符串 "Kerberos：" 开头，则将使用 Kerberos 身份验证，并且此属性应包含 Kerberos 主体名称。 例如，  
  
```  
Kerberos:<principal name>  
```  
  
 如果属性值以字符串 "NTLMDOMAIN：" 开头，则将使用 NTLM 身份验证，并且属性应包含 NTLM 域名。 例如，  
  
```  
NTLMDOMAIN:<domain name>  
```  
  
 如果属性为 null，则将使用 NTLM 身份验证，并将使用当前用户的 NTLM 域。  
  
## <a name="property-value"></a>属性值  
 否则 `null` ，此属性可以包含要在其中获取要进行身份验证的用户的 WINDOWS NT/windows 2000 域的名称。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>使用所需的连接选项创建连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions_Authority#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Authority/cs/ConnectionOptions_Authority.cs#1)]
 [!code-vb[wminet_ConnectionOptions_Authority#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Authority/vb/ConnectionOptions_Authority.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ConnectionOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="connectionOptions.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回对象的一个副本。</summary>
        <returns>克隆的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="EnablePrivileges">
      <MemberSignature Language="C#" Value="public bool EnablePrivileges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePrivileges" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.EnablePrivileges" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePrivileges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePrivileges { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePrivileges : bool with get, set" Usage="System.Management.ConnectionOptions.EnablePrivileges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否需要为连接操作启用用户特权。 只有在执行的操作需要启用某种用户特权（例如，重新启动计算机）时，才应使用此属性。</summary>
        <value>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否需要为连接操作启用用户特权。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a>属性值  
 `true` 如果需要为连接操作启用用户特权，则为;否则为 `false` 。 默认值是 `false`。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.Management.ImpersonationLevel Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.ImpersonationLevel Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ImpersonationLevel Impersonation { System::Management::ImpersonationLevel get(); void set(System::Management::ImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.Management.ImpersonationLevel with get, set" Usage="System.Management.ConnectionOptions.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于此连接中的操作的 COM 模拟级别。</summary>
        <value>返回 <see cref="T:System.Management.ImpersonationLevel" /> 枚举值，该值指示用于连接到 WMI 的模拟级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Management.ImpersonationLevel.Impersonate?displayProperty=nameWithType>当提供程序是受信任的应用程序或服务时，此设置很有用。 它使提供程序无需为请求的操作执行客户端标识和访问检查。 但是，如果出于某种原因无法信任该访问接口，则允许它模拟客户端可能构成安全威胁。 在这种情况下，我们建议将此属性设置为较低的值，例如 <xref:System.Management.ImpersonationLevel.Identify?displayProperty=nameWithType> 。 请注意，这可能会导致提供程序执行请求的操作失败，缺少权限不足或无法执行访问检查。  
  
## <a name="property-value"></a>属性值  
 要用于此连接中的操作的 COM 模拟级别。 默认值为 <xref:System.Management.ImpersonationLevel.Impersonate?displayProperty=nameWithType> ，指示 WMI 提供程序在此连接中执行请求的操作时可模拟客户端。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>使用所需的连接选项创建连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Impersonation/cs/ConnectionOptions_Impersonation.cs#1)]
 [!code-vb[wminet_ConnectionOptions_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Impersonation/vb/ConnectionOptions_Impersonation.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public string Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Locale" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Locale { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Locale : string with get, set" Usage="System.Management.ConnectionOptions.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将用于连接操作的区域设置。</summary>
        <value>返回 <see cref="T:System.String" /> 值，该值用于连接到 WMI 时使用的区域设置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于 Microsoft 区域设置标识符，字符串的格式为 "MS_*xxx*"，其中 *xxx* 是十六进制格式的字符串，用于指示区域设置标识 (LCID) ;例如，美国英语显示为 "MS_409"。  
  
## <a name="property-value"></a>属性值  
 默认值为 DEFAULTLOCALE。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>使用所需的连接选项创建连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions_Locale#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Locale/cs/ConnectionOptions_Locale.cs#1)]
 [!code-vb[wminet_ConnectionOptions_Locale#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions_Locale/vb/ConnectionOptions_Locale.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.Management.ConnectionOptions.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置指定用户的密码。</summary>
        <value>返回 <see cref="T:System.String" /> 值，该值用于连接到 WMI 时使用的密码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空字符串 ( "" ) 指定有效的零长度密码。  
  
 硬编码密码是一种安全威胁。  使用安全预防措施（如加密密码）或在设置属性时提示用户输入密码 <xref:System.Management.ConnectionOptions.Password%2A> 。  
  
## <a name="property-value"></a>属性值  
 默认值是 `null`。 如果用户名为 `null` ，则使用的凭据将是当前已登录用户的凭据。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurePassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString SecurePassword { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString SecurePassword" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.SecurePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurePassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ SecurePassword {  void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurePassword : System.Security.SecureString" Usage="System.Management.ConnectionOptions.SecurePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置指定用户的密码。</summary>
        <value>返回用于连接到 WMI 所使用密码的 SecureString 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
空白 <xref:System.Security.SecureString> ( "" ) 指定有效的零长度密码。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.Management.ConnectionOptions.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.Management.ConnectionOptions.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将用于连接操作的用户名。</summary>
        <value>返回 <see cref="T:System.String" /> 值，该值用作连接到 WMI 时使用的用户名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果用户名来自当前域之外的域，则该字符串可能包含域名和用户名，用反斜杠分隔：字符串 "username" = "EnterDomainHere \\ \EnterUsernameHere"。 `strUser`参数不能为空字符串。  
  
## <a name="property-value"></a>属性值  
 `null` 如果连接将使用当前登录的用户，则为;否则，表示用户名的字符串。 默认值是 `null`。  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 此成员不能由部分信任的代码使用。 有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 以下示例连接到远程计算机，并显示有关远程计算机上的操作系统的信息。 <xref:System.Management.ConnectionOptions>使用所需的连接选项创建连接到远程计算机的。  
  
 [!code-csharp[wminet_ConnectionOptions_UserName#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ConnectionOptions_UserName/cs/ConnectionOptions_Username.cs#1)]
 [!code-vb[wminet_ConnectionOptions_UserName#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ConnectionOptions_UserName/vb/ConnectionOptions_Username.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
