<Type Name="ManagementOperationObserver" FullName="System.Management.ManagementOperationObserver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="747e47eeee8fcb220ac7a067298debc1bf482d63" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83953928" /></Metadata><TypeSignature Language="C#" Value="public class ManagementOperationObserver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementOperationObserver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementOperationObserver" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementOperationObserver" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementOperationObserver" />
  <TypeSignature Language="F#" Value="type ManagementOperationObserver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理异步操作和处理异步接收的管理信息和事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何执行异步实例枚举。 该示例使用 <xref:System.Management.ManagementOperationObserver> 类异步处理管理信息和事件。  
  
 [!code-csharp[wminet_ManagementOperationObserver#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/cs/ManagementOperationObserver.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/vb/ManagementOperationObserver.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementOperationObserver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementOperationObserver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementOperationObserver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Management.ManagementOperationObserver" /> 类的新实例。 这就是无参数构造函数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 部分信任的程式碼無法使用此成員。 有关详细信息，请参阅[从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 下面的示例演示如何执行异步实例枚举。 该示例使用 <xref:System.Management.ManagementOperationObserver> 类异步处理管理信息和事件。  
  
 [!code-csharp[wminet_ManagementOperationObserver#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/cs/ManagementOperationObserver.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/vb/ManagementOperationObserver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementOperationObserver.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="managementOperationObserver.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消所有未完成的操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 部分信任的程式碼無法使用此成員。 有关详细信息，请参阅[从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event System.Management.CompletedEventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.CompletedEventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As CompletedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::CompletedEventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : System.Management.CompletedEventHandler " Usage="member this.Completed : System.Management.CompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As CompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.CompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>完成操作后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>事件数据  
 事件处理程序接收 <xref:System.Management.CompletedEventArgs> 类型的变量，该变量包含与此事件相关的数据。 以下 <xref:System.Management.CompletedEventArgs> 属性提供特定于此事件的信息。  
  
|属性|说明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> （继承自 <xref:System.Management.ManagementEventArgs>）|获取从触发事件的操作反射回的操作上下文。|  
|<xref:System.Management.CompletedEventArgs.Status%2A>|获取操作的完成状态。|  
|<xref:System.Management.CompletedEventArgs.StatusObject%2A>|获取或设置 WMI 对象内的其他状态信息。 这可能为 null。|  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 部分信任的程式碼無法使用此成員。 有关详细信息，请参阅[从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 下面的示例演示如何执行异步实例枚举。 该示例使用 <xref:System.Management.ManagementOperationObserver> 类异步处理管理信息和事件。  
  
 [!code-csharp[wminet_ManagementOperationObserver_Completed#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_Completed/cs/ManagementOperationObserver_Completed.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver_Completed#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_Completed/vb/ManagementOperationObserver_Completed.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectPut">
      <MemberSignature Language="C#" Value="public event System.Management.ObjectPutEventHandler ObjectPut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ObjectPutEventHandler ObjectPut" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.ObjectPut" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectPut As ObjectPutEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ObjectPutEventHandler ^ ObjectPut;" />
      <MemberSignature Language="F#" Value="member this.ObjectPut : System.Management.ObjectPutEventHandler " Usage="member this.ObjectPut : System.Management.ObjectPutEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ObjectPut As ObjectPutEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ObjectPutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>成功提交对象后发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>事件数据  
 事件处理程序接收 <xref:System.Management.ObjectPutEventArgs> 类型的变量，该变量包含与此事件相关的数据。 以下 <xref:System.Management.ObjectPutEventArgs> 属性提供特定于此事件的信息。  
  
|属性|说明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> （继承自 <xref:System.Management.ManagementEventArgs>）|获取从触发事件的操作反射回的操作上下文。|  
|<xref:System.Management.ObjectPutEventArgs.Path%2A>|获取已放置对象的标识。|  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 部分信任的程式碼無法使用此成員。 有关详细信息，请参阅[从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectReady">
      <MemberSignature Language="C#" Value="public event System.Management.ObjectReadyEventHandler ObjectReady;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ObjectReadyEventHandler ObjectReady" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.ObjectReady" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectReady As ObjectReadyEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ObjectReadyEventHandler ^ ObjectReady;" />
      <MemberSignature Language="F#" Value="member this.ObjectReady : System.Management.ObjectReadyEventHandler " Usage="member this.ObjectReady : System.Management.ObjectReadyEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ObjectReady As ObjectReadyEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ObjectReadyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新对象可用时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>事件数据  
 事件处理程序接收 <xref:System.Management.ObjectReadyEventArgs> 类型的变量，该变量包含与此事件相关的数据。 以下 <xref:System.Management.ObjectReadyEventArgs> 属性提供特定于此事件的信息。  
  
|属性|说明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> （继承自 <xref:System.Management.ManagementEventArgs>）|获取从触发事件的操作反射回的操作上下文。|  
|<xref:System.Management.ObjectReadyEventArgs.NewObject%2A>|获取新返回的对象。|  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 部分信任的程式碼無法使用此成員。 有关详细信息，请参阅[从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
   
  
## Examples  
 下面的示例演示如何执行异步实例枚举。 该示例使用 <xref:System.Management.ManagementOperationObserver> 类异步处理管理信息和事件。  
  
 [!code-csharp[wminet_ManagementOperationObserver_ObjectReady#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_ObjectReady/cs/ManagementOperationObserver_ObjectReady.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver_ObjectReady#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_ObjectReady/vb/ManagementOperationObserver_ObjectReady.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public event System.Management.ProgressEventHandler Progress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ProgressEventHandler Progress" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.Progress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Progress As ProgressEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ProgressEventHandler ^ Progress;" />
      <MemberSignature Language="F#" Value="member this.Progress : System.Management.ProgressEventHandler " Usage="member this.Progress : System.Management.ProgressEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Progress As ProgressEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>它的出现是为了指示正在进行的操作的进度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>事件数据  
 事件处理程序接收 <xref:System.Management.ProgressEventArgs> 类型的变量，该变量包含与此事件相关的数据。 以下 <xref:System.Management.ProgressEventArgs> 属性提供特定于此事件的信息。  
  
|属性|说明|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> （继承自 <xref:System.Management.ManagementEventArgs>）|获取从触发事件的操作反射回的操作上下文。|  
|<xref:System.Management.ProgressEventArgs.Current%2A>|获取操作已完成的当前工作量。 这总是小于或等于 <xref:System.Management.ProgressEventArgs.UpperBound%2A>。|  
|<xref:System.Management.ProgressEventArgs.Message%2A>|获取或设置有关操作进度的可选附加信息。|  
|<xref:System.Management.ProgressEventArgs.UpperBound%2A>|获取该操作需要完成的总工作量。|  
  
## <a name="net-framework-security"></a>.NET Framework 安全性  
 对直接调用方的完全信任。 部分信任的程式碼無法使用此成員。 有关详细信息，请参阅[从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
