<Type Name="PropertyDataCollection" FullName="System.Management.PropertyDataCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ecca63f978dc1500a512edced64a0807afb2820" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89938235" /></Metadata><TypeSignature Language="C#" Value="public class PropertyDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.PropertyDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type PropertyDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e7fba-101">表示 WMI 对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="e7fba-101">Represents the set of properties of a WMI object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7fba-102">下面的示例使用类列出有关 **Win32_OperatingSystem** 类的信息 <xref:System.Management.PropertyData> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-102">The following example lists information about the **Win32_OperatingSystem** class using the <xref:System.Management.PropertyData> class.</span></span> <span data-ttu-id="e7fba-103">有关 **Win32_OperatingSystem**的详细信息，请参阅 [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) 文档。</span><span class="sxs-lookup"><span data-stu-id="e7fba-103">For more information about **Win32_OperatingSystem**, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span>  
  
 [!code-csharp[wminet_PropertyDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/cs/PropertyDataCollection.cs#1)]
 [!code-vb[wminet_PropertyDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection/vb/PropertyDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7fba-104">添加新的 <see cref="T:System.Management.PropertyData" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e7fba-104">Adds a new <see cref="T:System.Management.PropertyData" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="propertyDataCollection.Add (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="e7fba-105">新属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e7fba-105">The name of the new property.</span></span></param>
        <param name="propertyValue"><span data-ttu-id="e7fba-106">属性的值（不能为 null）。</span><span class="sxs-lookup"><span data-stu-id="e7fba-106">The value of the property (cannot be null).</span></span></param>
        <summary><span data-ttu-id="e7fba-107">添加新的、带有指定值的 <see cref="T:System.Management.PropertyData" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-107">Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value.</span></span> <span data-ttu-id="e7fba-108">值不能为 null，并且必须能够转换为公共信息模型 (CIM) 类型。</span><span class="sxs-lookup"><span data-stu-id="e7fba-108">The value cannot be null and must be convertible to a Common Information Model (CIM) type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7fba-109">只能将属性添加到类定义，而不能添加到实例。</span><span class="sxs-lookup"><span data-stu-id="e7fba-109">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="e7fba-110">仅当在中的调用时，此方法才有效 <xref:System.Management.PropertyDataCollection> <xref:System.Management.ManagementClass> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-110">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-111">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-111">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-112">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-112">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-113">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-113">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-114">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-114">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, System.Management.CimType propertyType, bool isArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, valuetype System.Management.CimType propertyType, bool isArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, propertyType As CimType, isArray As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Management::CimType propertyType, bool isArray);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Management.CimType * bool -&gt; unit" Usage="propertyDataCollection.Add (propertyName, propertyType, isArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Management.CimType" />
        <Parameter Name="isArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="e7fba-115">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e7fba-115">The name of the property.</span></span></param>
        <param name="propertyType"><span data-ttu-id="e7fba-116">属性的公共信息模型 (CIM) 类型。</span><span class="sxs-lookup"><span data-stu-id="e7fba-116">The Common Information Model (CIM) type of the property.</span></span></param>
        <param name="isArray"><span data-ttu-id="e7fba-117">若为 <see langword="true" />，则指定属性为数组类型；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-117"><see langword="true" /> to specify that the property is an array type; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e7fba-118">添加新的、没有赋值的 <see cref="T:System.Management.PropertyData" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-118">Adds a new <see cref="T:System.Management.PropertyData" /> with no assigned value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7fba-119">只能将属性添加到类定义，而不能添加到实例。</span><span class="sxs-lookup"><span data-stu-id="e7fba-119">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="e7fba-120">仅当在中的调用时，此方法才有效 <xref:System.Management.PropertyDataCollection> <xref:System.Management.ManagementClass> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-120">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-121">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-121">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-122">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-123">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-124">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-124">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, object propertyValue, System.Management.CimType propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, object propertyValue, valuetype System.Management.CimType propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, propertyValue As Object, propertyType As CimType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Object ^ propertyValue, System::Management::CimType propertyType);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Management.CimType -&gt; unit" Usage="propertyDataCollection.Add (propertyName, propertyValue, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Management.CimType" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="e7fba-125">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e7fba-125">The name of the property.</span></span></param>
        <param name="propertyValue"><span data-ttu-id="e7fba-126">属性的值（可以为 null）。</span><span class="sxs-lookup"><span data-stu-id="e7fba-126">The value of the property (which can be null).</span></span></param>
        <param name="propertyType"><span data-ttu-id="e7fba-127">属性的 CIM 类型。</span><span class="sxs-lookup"><span data-stu-id="e7fba-127">The CIM type of the property.</span></span></param>
        <summary><span data-ttu-id="e7fba-128">添加一个具有指定值和公共信息模型 (CIM) 类型的新 <see cref="T:System.Management.PropertyData" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-128">Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value and Common Information Model (CIM) type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7fba-129">只能将属性添加到类定义，而不能添加到实例。</span><span class="sxs-lookup"><span data-stu-id="e7fba-129">Properties can only be added to class definitions, not to instances.</span></span> <span data-ttu-id="e7fba-130">仅当在中的调用时，此方法才有效 <xref:System.Management.PropertyDataCollection> <xref:System.Management.ManagementClass> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-130">This method is only valid when invoked on a <xref:System.Management.PropertyDataCollection> in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-131">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-131">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-132">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-132">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-133">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-133">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-134">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-134">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7fba-135">将 <see cref="T:System.Management.PropertyDataCollection" /> 对象复制到数组。</span><span class="sxs-lookup"><span data-stu-id="e7fba-135">Copies the <see cref="T:System.Management.PropertyDataCollection" /> object into an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="propertyDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e7fba-136"><see cref="T:System.Management.PropertyDataCollection" /> 所要复制到的数组。</span><span class="sxs-lookup"><span data-stu-id="e7fba-136">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="e7fba-137">复制操作开始所在的索引。</span><span class="sxs-lookup"><span data-stu-id="e7fba-137">The index from which to start copying.</span></span></param>
        <summary><span data-ttu-id="e7fba-138">将 <see cref="T:System.Management.PropertyDataCollection" /> 复制到一个数组中。</span><span class="sxs-lookup"><span data-stu-id="e7fba-138">Copies the <see cref="T:System.Management.PropertyDataCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-139">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-139">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-140">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-141">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-142">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-142">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.PropertyData[] propertyArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.PropertyData[] propertyArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (propertyArray As PropertyData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::PropertyData ^&gt; ^ propertyArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.PropertyData[] * int -&gt; unit" Usage="propertyDataCollection.CopyTo (propertyArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyArray" Type="System.Management.PropertyData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyArray"><span data-ttu-id="e7fba-143">将包含要复制的 <see cref="T:System.Management.PropertyDataCollection" /> 的目标数组。</span><span class="sxs-lookup"><span data-stu-id="e7fba-143">The destination array to contain the copied <see cref="T:System.Management.PropertyDataCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="e7fba-144">目标数组中开始复制处的索引。</span><span class="sxs-lookup"><span data-stu-id="e7fba-144">The index in the destination array from which to start copying.</span></span></param>
        <summary><span data-ttu-id="e7fba-145">将 <see cref="T:System.Management.PropertyDataCollection" /> 复制到一个专用的 <see cref="T:System.Management.PropertyData" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="e7fba-145">Copies the <see cref="T:System.Management.PropertyDataCollection" /> to a specialized <see cref="T:System.Management.PropertyData" /> object array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-146">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-146">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-147">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-147">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-148">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-148">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-149">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-149">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.PropertyDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7fba-150">获取 <see cref="T:System.Management.PropertyDataCollection" /> 中的对象的数目。</span><span class="sxs-lookup"><span data-stu-id="e7fba-150">Gets the number of objects in the <see cref="T:System.Management.PropertyDataCollection" />.</span></span></summary>
        <value><span data-ttu-id="e7fba-151">返回一个 <see cref="T:System.Int32" /> 值，该值表示集合中对象的数目。</span><span class="sxs-lookup"><span data-stu-id="e7fba-151">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e7fba-152">属性值</span><span class="sxs-lookup"><span data-stu-id="e7fba-152">Property Value</span></span>  
 <span data-ttu-id="e7fba-153">集合中 对象的数目。</span><span class="sxs-lookup"><span data-stu-id="e7fba-153">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-154">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-154">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-155">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-155">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-156">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-156">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-157">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-157">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.PropertyDataCollection.PropertyDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.PropertyDataCollection/PropertyDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As PropertyDataCollection.PropertyDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::PropertyDataCollection::PropertyDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.PropertyDataCollection.PropertyDataEnumerator" Usage="propertyDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.PropertyDataCollection+PropertyDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7fba-158">返回此 <see cref="T:System.Management.PropertyDataCollection" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="e7fba-158">Returns the enumerator for this <see cref="T:System.Management.PropertyDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="e7fba-159">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-159">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7fba-160">仅可 `For Each` `For` 通过一次只进枚举器) 在 Visual Basic .net 语句或 c # 语句中循环访问 (。</span><span class="sxs-lookup"><span data-stu-id="e7fba-160">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="e7fba-161">包含实例的内存由 WMI 释放，因此无法倒带枚举器。</span><span class="sxs-lookup"><span data-stu-id="e7fba-161">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="e7fba-162">因此， <xref:System.Management.PropertyDataCollection.Count%2A> 不能使用方法，因为它需要倒带枚举器。</span><span class="sxs-lookup"><span data-stu-id="e7fba-162">Therefore, the <xref:System.Management.PropertyDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="e7fba-163">与传统枚举器相比，只进枚举器的速度要快得多，使用的内存更少，但它们不允许调用 <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-163">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="e7fba-164">如果枚举数为可回退，则集合中的对象将可供多个枚举使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-164">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-165">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-165">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-166">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-166">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-167">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-167">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-168">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-168">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.PropertyDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7fba-169">获取一个指示对象是否已同步的值。</span><span class="sxs-lookup"><span data-stu-id="e7fba-169">Gets a value indicating whether the object is synchronized.</span></span></summary>
        <value><span data-ttu-id="e7fba-170">返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e7fba-170">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e7fba-171">属性值</span><span class="sxs-lookup"><span data-stu-id="e7fba-171">Property Value</span></span>  
 <span data-ttu-id="e7fba-172">`true` 如果对象已同步，则为; 否则为。否则为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-172">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-173">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-173">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-174">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-174">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-175">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-175">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-176">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-176">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.PropertyData this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.PropertyData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(propertyName As String) As PropertyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::PropertyData ^ default[System::String ^] { System::Management::PropertyData ^ get(System::String ^ propertyName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.PropertyData" Usage="System.Management.PropertyDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.PropertyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="e7fba-177">要检索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e7fba-177">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="e7fba-178">使用 [] 语法从 <see cref="T:System.Management.PropertyDataCollection" /> 中获取指定属性。</span><span class="sxs-lookup"><span data-stu-id="e7fba-178">Gets the specified property from the <see cref="T:System.Management.PropertyDataCollection" />, using [] syntax.</span></span> <span data-ttu-id="e7fba-179">此属性是 <see cref="T:System.Management.PropertyDataCollection" /> 类的索引器。</span><span class="sxs-lookup"><span data-stu-id="e7fba-179">This property is the indexer for the <see cref="T:System.Management.PropertyDataCollection" /> class.</span></span></summary>
        <value><span data-ttu-id="e7fba-180">返回一个 <see cref="T:System.Management.PropertyData" />，它包含集合中指定属性的数据。</span><span class="sxs-lookup"><span data-stu-id="e7fba-180">Returns a <see cref="T:System.Management.PropertyData" /> containing the data for a specified property in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e7fba-181">属性值</span><span class="sxs-lookup"><span data-stu-id="e7fba-181">Property Value</span></span>  
 <span data-ttu-id="e7fba-182"><xref:System.Management.PropertyData>，基于指定的名称。</span><span class="sxs-lookup"><span data-stu-id="e7fba-182">A <xref:System.Management.PropertyData>, based on the name specified.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-183">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-183">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-184">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-185">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-186">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-186">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7fba-187">下面的示例从获取 **可用空间** 属性 <xref:System.Management.ManagementClass> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-187">The following example gets the **Freespace** property from a <xref:System.Management.ManagementClass>.</span></span>  
  
 [!code-csharp[wminet_PropertyDataCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/cs/PropertyDataCollection_Item.cs#1)]
 [!code-vb[wminet_PropertyDataCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_PropertyDataCollection_Item/vb/PropertyDataCollection_Item.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="propertyDataCollection.Remove propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="e7fba-188">要删除的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="e7fba-188">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="e7fba-189">从 <see cref="T:System.Management.PropertyData" /> 中移除 <see cref="T:System.Management.PropertyDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-189">Removes a <see cref="T:System.Management.PropertyData" /> from the <see cref="T:System.Management.PropertyDataCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7fba-190">属性只能从类定义中删除，而不能从实例中删除。</span><span class="sxs-lookup"><span data-stu-id="e7fba-190">Properties can only be removed from class definitions, not from instances.</span></span> <span data-ttu-id="e7fba-191">仅当对中的属性集合调用此方法时，此方法才有效 <xref:System.Management.ManagementClass> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-191">This method is only valid when invoked on a property collection in a <xref:System.Management.ManagementClass>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-192">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-192">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-193">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-193">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-194">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-194">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-195">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-195">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.PropertyDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.PropertyDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7fba-196">获取要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="e7fba-196">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="e7fba-197">返回一个 <see cref="T:System.Object" /> 值，该值包含要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="e7fba-197">Returns an <see cref="T:System.Object" /> value containing the object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e7fba-198">属性值</span><span class="sxs-lookup"><span data-stu-id="e7fba-198">Property Value</span></span>  
 <span data-ttu-id="e7fba-199">要用于同步的对象。</span><span class="sxs-lookup"><span data-stu-id="e7fba-199">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e7fba-200">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="e7fba-200">.NET Framework Security</span></span>  
 <span data-ttu-id="e7fba-201">对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="e7fba-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="e7fba-202">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="e7fba-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e7fba-203">有关详细信息，请参阅 [从部分受信任的代码使用库](/dotnet/framework/misc/using-libraries-from-partially-trusted-code)。</span><span class="sxs-lookup"><span data-stu-id="e7fba-203">For more information, see [Using Libraries from Partially Trusted Code](/dotnet/framework/misc/using-libraries-from-partially-trusted-code).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="propertyDataCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7fba-204">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.PropertyDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-204">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.PropertyDataCollection" />.</span></span></summary>
        <returns><span data-ttu-id="e7fba-205"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Management.PropertyDataCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7fba-205">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.PropertyDataCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="e7fba-206">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="e7fba-206">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="e7fba-207">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="e7fba-207">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e7fba-208">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="e7fba-208">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e7fba-209">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="e7fba-209">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e7fba-210"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="e7fba-210"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="e7fba-211">在此位置，调用会 <xref:System.Collections.IEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="e7fba-211">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="e7fba-212">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="e7fba-212">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="e7fba-213">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="e7fba-213"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="e7fba-214"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="e7fba-214"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e7fba-215">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-215">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e7fba-216">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-216">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e7fba-217">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ，则调用会 <xref:System.Collections.IEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="e7fba-217">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="e7fba-218">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="e7fba-218">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="e7fba-219">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="e7fba-219">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e7fba-220">如果对集合所做的更改（如添加、修改或删除元素），则枚举器将失效且不可恢复，并且对或的下一个调用将 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A> 引发 <xref:System.InvalidOperationException> 。</span><span class="sxs-lookup"><span data-stu-id="e7fba-220">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e7fba-221">如果在和之间修改集合 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A> ，则 <xref:System.Collections.IEnumerator.Current%2A> 将返回它设置为的元素，即使枚举器已失效也是如此。</span><span class="sxs-lookup"><span data-stu-id="e7fba-221">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="e7fba-222">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="e7fba-222">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="e7fba-223">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="e7fba-223">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e7fba-224">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="e7fba-224">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="e7fba-225">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="e7fba-225">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
