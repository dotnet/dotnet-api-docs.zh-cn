<Type Name="Collection&lt;T&gt;" FullName="System.Collections.ObjectModel.Collection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c88530c9361cbaeee18ea7eb0c9d6411ef3468d1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86779392" /></Metadata><TypeSignature Language="C#" Value="public class Collection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Collection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.Collection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Collection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Collection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IList" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public class Collection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Collection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="VB.NET" Value="Public Class Collection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Collection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Collection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Count = {Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Count = {Count}")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="91e9f-101">集合中的元素类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-101">The type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="91e9f-102">提供泛型集合的基类。</span><span class="sxs-lookup"><span data-stu-id="91e9f-102">Provides the base class for a generic collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-103"><xref:System.Collections.ObjectModel.Collection%601>类可通过创建其构造类型之一的实例立即使用; 只需指定要包含在集合中的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-103">The <xref:System.Collections.ObjectModel.Collection%601> class can be used immediately by creating an instance of one of its constructed types; all you have to do is specify the type of object to be contained in the collection.</span></span> <span data-ttu-id="91e9f-104">此外，你可以从任何构造类型派生你自己的集合类型，也可以从类本身派生泛型集合类型 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-104">In addition, you can derive your own collection type from any constructed type, or derive a generic collection type from the <xref:System.Collections.ObjectModel.Collection%601> class itself.</span></span>  
  
 <span data-ttu-id="91e9f-105"><xref:System.Collections.ObjectModel.Collection%601>类提供受保护的方法，这些方法可用于自定义添加和移除项、清除集合或设置现有项的值时的行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-105">The <xref:System.Collections.ObjectModel.Collection%601> class provides protected methods that can be used to customize its behavior when adding and removing items, clearing the collection, or setting the value of an existing item.</span></span>  
  
 <span data-ttu-id="91e9f-106">大多数 <xref:System.Collections.ObjectModel.Collection%601> 对象都可以修改。</span><span class="sxs-lookup"><span data-stu-id="91e9f-106">Most <xref:System.Collections.ObjectModel.Collection%601> objects can be modified.</span></span> <span data-ttu-id="91e9f-107">但是， <xref:System.Collections.ObjectModel.Collection%601> 不能修改使用只读对象初始化的对象 <xref:System.Collections.Generic.IList%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-107">However, a <xref:System.Collections.ObjectModel.Collection%601> object that is initialized with a read-only <xref:System.Collections.Generic.IList%601> object cannot be modified.</span></span> <span data-ttu-id="91e9f-108"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601>有关此类的只读版本，请参阅。</span><span class="sxs-lookup"><span data-stu-id="91e9f-108">See <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="91e9f-109">可以使用整数索引访问此集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-109">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="91e9f-110">此集合中的索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="91e9f-110">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="91e9f-111"><xref:System.Collections.ObjectModel.Collection%601> 接受 `null` 作为引用类型的有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-111"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-112">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="91e9f-112">This section contains two code examples.</span></span> <span data-ttu-id="91e9f-113">第一个示例演示类的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-113">The first example demonstrates several properties and methods of the <xref:System.Collections.ObjectModel.Collection%601> class.</span></span> <span data-ttu-id="91e9f-114">第二个示例演示如何从构造类型派生集合类 <xref:System.Collections.ObjectModel.Collection%601> ，以及如何重写的受保护方法 <xref:System.Collections.ObjectModel.Collection%601> 以提供自定义行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-114">The second example shows how to derive a collection class from a constructed type of <xref:System.Collections.ObjectModel.Collection%601>, and how to override the protected methods of <xref:System.Collections.ObjectModel.Collection%601> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="91e9f-115">示例 1</span><span class="sxs-lookup"><span data-stu-id="91e9f-115">Example 1</span></span>  
  
 <span data-ttu-id="91e9f-116">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-116">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-117">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-117">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-118">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-118">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-119">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-119">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-120">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-120">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-121">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-121">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 <span data-ttu-id="91e9f-122">示例 2</span><span class="sxs-lookup"><span data-stu-id="91e9f-122">Example 2</span></span>  
  
 <span data-ttu-id="91e9f-123">下面的代码示例演示如何从泛型类的构造类型派生集合类 <xref:System.Collections.ObjectModel.Collection%601> ，以及如何重写受保护的、、和 <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A> 方法， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A> 以便为 <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> 、、和方法提供自定义行为， <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 并设置 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-123">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="91e9f-124">此示例提供的自定义行为是在 `Changed` 每个受保护的方法末尾引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-124">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="91e9f-125">`Dinosaurs`类 `Collection<string>` Visual Basic) 继承 (， `Collection(Of String)` 并定义 `Changed` 事件，该事件使用 `DinosaursChangedEventArgs` 类作为事件信息，并使用枚举来标识更改类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-125">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="91e9f-126">此代码示例调用多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-126">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="91e9f-127"><see langword="Shared" />此类型) 成员 Visual Basic 的公共静态 (是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="91e9f-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="91e9f-128">但不保证所有实例成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="91e9f-128">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="91e9f-129"><see cref="T:System.Collections.ObjectModel.Collection`1" />只要不修改集合，就可以同时支持多个读取器。</span><span class="sxs-lookup"><span data-stu-id="91e9f-129">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="91e9f-130">尽管如此，枚举集合本身并不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="91e9f-130">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="91e9f-131">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-131">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="91e9f-132">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-132">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-133">提供此基类是为了使实现者可以更轻松地创建自定义集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-133">This base class is provided to make it easier for implementers to create a custom collection.</span></span> <span data-ttu-id="91e9f-134">鼓励实现者扩展此基类，而不是自行创建。</span><span class="sxs-lookup"><span data-stu-id="91e9f-134">Implementers are encouraged to extend this base class instead of creating their own.</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="91e9f-135">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="91e9f-135">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91e9f-136">初始化 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="91e9f-136">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91e9f-137">初始化为空的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="91e9f-137">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class that is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-138">此构造函数是一个 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-138">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-139">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-139">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-140">此代码示例使用构造函数创建字符串集合 <xref:System.Collections.ObjectModel.Collection%601.%23ctor> ， <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 并使用方法来添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-140">The code example creates a collection of strings with the <xref:System.Collections.ObjectModel.Collection%601.%23ctor> constructor, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-141">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-141">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-142">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-142">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-143">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-143">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-144">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-144">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection (System.Collections.Generic.IList&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection(System::Collections::Generic::IList&lt;T&gt; ^ list);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.Collection&lt;'T&gt; : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.Collections.ObjectModel.Collection&lt;'T&gt;" Usage="new System.Collections.ObjectModel.Collection&lt;'T&gt; list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="91e9f-145">由新的集合包装的列表。</span><span class="sxs-lookup"><span data-stu-id="91e9f-145">The list that is wrapped by the new collection.</span></span></param>
        <summary><span data-ttu-id="91e9f-146">将 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 类的新实例初始化为指定列表的包装。</span><span class="sxs-lookup"><span data-stu-id="91e9f-146">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class as a wrapper for the specified list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-147">不复制列表的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-147">The elements of the list are not copied.</span></span> <span data-ttu-id="91e9f-148">此列表由集合包装，因此，对列表中的元素的后续更改可通过来查看 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-148">The list is wrapped by the collection, so that subsequent changes to the elements of the list are visible through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="91e9f-149">此构造函数是一个 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-149">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91e9f-150"><paramref name="list" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-150"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="collection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="91e9f-151">要添加到 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 末尾的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-151">The object to be added to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span> <span data-ttu-id="91e9f-152">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-152">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-153">将一个对象添加到 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的末尾。</span><span class="sxs-lookup"><span data-stu-id="91e9f-153">Adds an object to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-154"><xref:System.Collections.ObjectModel.Collection%601> 接受 `null` 作为引用类型的有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-154"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="91e9f-155">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-155">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-156">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-156">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-157">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-157">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-158">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-158">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-159">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-159">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-160">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-160">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-161">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-161">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91e9f-162">从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除所有元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-162">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-163"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> 将设置为零，同时还会释放集合元素中其他对象的引用。</span><span class="sxs-lookup"><span data-stu-id="91e9f-163"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="91e9f-164">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-164">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-165">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-165">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-166">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-166">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-167">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-167">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-168">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-168">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-169">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-169">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-170">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-170">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-171">派生类可以重写 <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /> 来更改此方法的行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-171">Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /> to change the behavior of this method.</span></span></para></block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberSignature Language="F#" Value="abstract member ClearItems : unit -&gt; unit&#xA;override this.ClearItems : unit -&gt; unit" Usage="collection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91e9f-172">从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除所有元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-172">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-173"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> 将设置为零，同时还会释放集合元素中其他对象的引用。</span><span class="sxs-lookup"><span data-stu-id="91e9f-173"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="91e9f-174">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-174">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-175">下面的代码示例演示如何从泛型类的构造类型派生集合类 <xref:System.Collections.ObjectModel.Collection%601> ，以及如何重写受保护的、、和 <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A> 方法， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A> 以便为 <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> 、、和方法提供自定义行为， <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 并设置 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-175">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="91e9f-176">此示例提供的自定义行为是在 `Changed` 每个受保护的方法末尾引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-176">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="91e9f-177">`Dinosaurs`类 `Collection<string>` Visual Basic) 继承 (， `Collection(Of String)` 并定义 `Changed` 事件，该事件使用 `DinosaursChangedEventArgs` 类作为事件信息，并使用枚举来标识更改类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-177">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="91e9f-178">此代码示例调用多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-178">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-179">派生类可以重写此方法以更改方法的行为 <see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-179">Derived classes can override this method to change the behavior of the <see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /> method.</span></span></para></block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="collection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="91e9f-180">要在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-180">The object to locate in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span> <span data-ttu-id="91e9f-181">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-181">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-182">确定某元素是否在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-182">Determines whether an element is in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <returns><span data-ttu-id="91e9f-183">如果在 <see langword="true" /> 中找到 <paramref name="item" />，则为 <see cref="T:System.Collections.ObjectModel.Collection`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-183"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ObjectModel.Collection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-184">如果 <xref:System.Collections.ObjectModel.Collection%601> 对象是使用无参数构造函数创建的，则此方法使用的默认相等比较 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 器 `T` （列表中的值的类型）来确定相等性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-184">If the <xref:System.Collections.ObjectModel.Collection%601> object is created using the parameterless constructor, this method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span> <span data-ttu-id="91e9f-185">如果类型 `T` 未实现 <xref:System.IEquatable%601> 接口，则 <xref:System.Object.Equals%2A> 使用方法。</span><span class="sxs-lookup"><span data-stu-id="91e9f-185">If type `T` does not implement the <xref:System.IEquatable%601> interface, the <xref:System.Object.Equals%2A> method is used.</span></span>  
  
 <span data-ttu-id="91e9f-186">如果通过将 <xref:System.Collections.Generic.IList%601> 对象传递给构造函数来创建集合对象，则该 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法将由 <xref:System.Collections.Generic.IEqualityComparer%601> 该对象使用的接口确定 <xref:System.Collections.Generic.IList%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-186">If the Collection object is created by passing an <xref:System.Collections.Generic.IList%601> object to the constructor, the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method will be determined by the <xref:System.Collections.Generic.IEqualityComparer%601> interface used by that <xref:System.Collections.Generic.IList%601> object.</span></span>  
  
 <span data-ttu-id="91e9f-187">此方法执行线性搜索;因此，平均执行时间与成正比 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-187">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="91e9f-188">也就是说，此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-188">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="91e9f-189">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="91e9f-189">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="collection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="91e9f-190">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="91e9f-190">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span> <span data-ttu-id="91e9f-191"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-191">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="91e9f-192"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="91e9f-192">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="91e9f-193">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-193">Copies the entire <see cref="T:System.Collections.ObjectModel.Collection`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-194">此方法使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 复制元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-194">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="91e9f-195">元素 <xref:System.Array> 按枚举器循环访问的相同顺序复制到中 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-195">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="91e9f-196">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-196">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91e9f-197"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-197"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-198"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-198"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-199">源 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span><span class="sxs-lookup"><span data-stu-id="91e9f-199">The number of elements in the source <see cref="T:System.Collections.ObjectModel.Collection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1">P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-200">获取 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中实际包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="91e9f-200">Gets the number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <value><span data-ttu-id="91e9f-201"><see cref="T:System.Collections.ObjectModel.Collection`1" /> 中实际包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="91e9f-201">The number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-202">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-202">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-203">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-203">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-204">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-204">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-205">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-205">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-206">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-206">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-207">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-207">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-208">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-208">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91e9f-209">返回遍历 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的枚举器。</span><span class="sxs-lookup"><span data-stu-id="91e9f-209">Returns an enumerator that iterates through the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <returns><span data-ttu-id="91e9f-210"><see cref="T:System.Collections.Generic.IEnumerator`1" /> 的一个 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-210">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-211">C `foreach` + + 中的 c # 语言 (在 `for each` `For Each` Visual Basic 中) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-211">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="91e9f-212">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="91e9f-212">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="91e9f-213">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-213">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="91e9f-214">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="91e9f-214">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="91e9f-215">在此位置上，未定义 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="91e9f-215">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="91e9f-216">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-216">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="91e9f-217">在调用 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 之前，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-217"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="91e9f-218"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-218"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="91e9f-219">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-219">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="91e9f-220">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-220">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="91e9f-221">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ， <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 则未定义。</span><span class="sxs-lookup"><span data-stu-id="91e9f-221">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="91e9f-222">无法再次将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为集合的第一个元素；必须改为创建新的枚举器实例。</span><span class="sxs-lookup"><span data-stu-id="91e9f-222">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="91e9f-223">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="91e9f-223">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="91e9f-224">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="91e9f-224">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="91e9f-225">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="91e9f-225">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="91e9f-226">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-226">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="91e9f-227">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-227">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="91e9f-228">中集合的默认实现 <xref:System.Collections.Generic?displayProperty=nameWithType> 不同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-228">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="91e9f-229">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-229">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="collection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="91e9f-230">要在 <see cref="T:System.Collections.Generic.List`1" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-230">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="91e9f-231">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-231">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-232">搜索指定的对象，并返回整个 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-232">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <returns><span data-ttu-id="91e9f-233">如果找到，则为整个 <paramref name="item" /> 中 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 第一个匹配项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="91e9f-233">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-234"><xref:System.Collections.ObjectModel.Collection%601>向前搜索从第一个元素开始，到最后一个元素结束。</span><span class="sxs-lookup"><span data-stu-id="91e9f-234">The <xref:System.Collections.ObjectModel.Collection%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="91e9f-235">此方法使用的默认相等比较器 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> `T` （列表中的值的类型）确定相等性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-235">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="91e9f-236">此方法执行线性搜索;因此，平均执行时间与成正比 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-236">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="91e9f-237">也就是说，此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-237">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-238">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-238">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-239">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-239">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-240">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-240">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-241">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-241">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-242">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-242">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-243">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-243">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="91e9f-244">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="91e9f-244">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="collection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-245">应插入 <paramref name="item" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-245">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="91e9f-246">要插入的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-246">The object to insert.</span></span> <span data-ttu-id="91e9f-247">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-247">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-248">将元素插入 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="91e9f-248">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-249"><xref:System.Collections.ObjectModel.Collection%601> 接受 `null` 作为引用类型的有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-249"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="91e9f-250">如果 `index` 等于 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ， `item` 则将添加到的末尾 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-250">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="91e9f-251">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-251">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-252"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-252"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="91e9f-253">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-253">-or-</span></span> 
 <span data-ttu-id="91e9f-254"><paramref name="index" /> 大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-254"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-255">派生类可以重写 <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /> 来更改此方法的行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-255">Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /> to change the behavior of this method.</span></span></para></block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : int * 'T -&gt; unit&#xA;override this.InsertItem : int * 'T -&gt; unit" Usage="collection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-256">应插入 <paramref name="item" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-256">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="91e9f-257">要插入的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-257">The object to insert.</span></span> <span data-ttu-id="91e9f-258">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-258">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-259">将元素插入 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处。</span><span class="sxs-lookup"><span data-stu-id="91e9f-259">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-260"><xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> 意味着在派生类中被重写。</span><span class="sxs-lookup"><span data-stu-id="91e9f-260">The <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> is meant to be overridden in a derived class.</span></span> <span data-ttu-id="91e9f-261">有关将项插入 <xref:System.Collections.ObjectModel.Collection%601> 中的公共方法，请参阅 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>。</span><span class="sxs-lookup"><span data-stu-id="91e9f-261">For a public method to insert an item in the <xref:System.Collections.ObjectModel.Collection%601>, see <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>.</span></span>  
  
 <span data-ttu-id="91e9f-262"><xref:System.Collections.ObjectModel.Collection%601> 接受 `null` 作为引用类型的有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-262"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="91e9f-263">如果 `index` 等于 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ， `item` 则将添加到的末尾 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-263">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="91e9f-264">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-264">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-265">下面的代码示例演示如何从泛型类的构造类型派生集合类 <xref:System.Collections.ObjectModel.Collection%601> ，以及如何重写受保护的、、和 <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A> 方法， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A> 以便为 <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> 、、和方法提供自定义行为， <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 并设置 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-265">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="91e9f-266">此示例提供的自定义行为是在 `Changed` 每个受保护的方法末尾引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-266">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="91e9f-267">`Dinosaurs`类 `Collection<string>` Visual Basic) 继承 (， `Collection(Of String)` 并定义 `Changed` 事件，该事件使用 `DinosaursChangedEventArgs` 类作为事件信息，并使用枚举来标识更改类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-267">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="91e9f-268">此代码示例调用多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-268">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-269"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-269"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="91e9f-270">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-270">-or-</span></span> 
 <span data-ttu-id="91e9f-271"><paramref name="index" /> 大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-271"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-272">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-272">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="91e9f-273">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-273">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="91e9f-274">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-274">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-275"><xref:System.Collections.ObjectModel.Collection%601> 接受 `null` 作为引用类型的有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-275"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="91e9f-276">通过此属性，可以使用以下语法来访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="91e9f-276">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="91e9f-277">C # 语言使用 [this](/dotnet/csharp/language-reference/keywords/this) 关键字来定义索引器，而不是实现 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-277">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span> <span data-ttu-id="91e9f-278">Visual Basic 将 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="91e9f-278">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="91e9f-279">检索此属性的值是一个 O (1) 操作;设置属性也是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-279">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-280">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-280">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-281">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-281">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-282">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-282">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-283">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-283">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-284">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-284">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-285">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-285">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-286"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-286"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="91e9f-287">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-287">-or-</span></span> 
 <span data-ttu-id="91e9f-288"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-288"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-289">派生类可以重写 <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /> ，以更改设置此属性的行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-289">Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /> to change the behavior of setting this property.</span></span></para></block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-290">获取 <see cref="T:System.Collections.Generic.IList`1" /> 周围的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="91e9f-290">Gets a <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <value><span data-ttu-id="91e9f-291"><see cref="T:System.Collections.Generic.IList`1" /> 周围的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="91e9f-291">A <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-292">包装器提供类的功能 <xref:System.Collections.Generic.IList%601> 并公开的所有元素 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-292">The wrapper provides the functionality of the <xref:System.Collections.Generic.IList%601> class and exposes all the elements of the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="91e9f-293">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-293">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="collection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="91e9f-294">要从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中删除的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-294">The object to remove from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span> <span data-ttu-id="91e9f-295">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-295">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-296">从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除特定对象的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="91e9f-296">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <returns><span data-ttu-id="91e9f-297">如果成功移除了 <paramref name="item" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-297"><see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="91e9f-298">如果在原始 <see langword="false" /> 中没有找到 <paramref name="item" />，此方法也会返回 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-298">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-299">此方法使用的默认相等比较器 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> `T` （列表中的值的类型）确定相等性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-299">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="91e9f-300">此方法执行线性搜索;因此，平均执行时间与成正比 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-300">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="91e9f-301">也就是说，此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-301">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-302">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-302">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-303">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-303">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-304">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-304">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-305">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-305">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-306">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-306">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-307">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-307">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-308">派生类可以重写 <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> 来更改此方法的行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-308">Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</span></span></para></block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <related type="Article" href="/dotnet/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections"><span data-ttu-id="91e9f-309">在集合中执行不区分区域性的字符串操作</span><span class="sxs-lookup"><span data-stu-id="91e9f-309">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-310">要移除的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-310">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="91e9f-311">移除 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-311">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-312">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-312">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-313">下面的代码示例演示了的多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-313">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="91e9f-314">此代码示例创建一个字符串集合，使用 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 方法添加多个字符串，显示 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> ，并列出字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-314">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="91e9f-315">该示例使用 <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> 方法来查找字符串的索引，并使用 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 方法来确定字符串是否在集合中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-315">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="91e9f-316">该示例使用方法插入字符串 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> ，并使用 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> c # ) 中索引器 (的默认属性检索和设置字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-316">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="91e9f-317">该示例使用方法和索引按字符串标识删除字符串 <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-317">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="91e9f-318">最后， <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 使用方法从集合中清除所有字符串。</span><span class="sxs-lookup"><span data-stu-id="91e9f-318">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-319"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-319"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="91e9f-320">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-320">-or-</span></span> 
 <span data-ttu-id="91e9f-321"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-321"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="91e9f-322">派生类可以重写 <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> 来更改此方法的行为。</span><span class="sxs-lookup"><span data-stu-id="91e9f-322">Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</span></span></para></block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : int -&gt; unit&#xA;override this.RemoveItem : int -&gt; unit" Usage="collection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-323">要移除的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-323">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="91e9f-324">移除 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-324">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-325">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-325">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-326">下面的代码示例演示如何从泛型类的构造类型派生集合类 <xref:System.Collections.ObjectModel.Collection%601> ，以及如何重写受保护的、、和 <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A> 方法， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A> 以便为 <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> 、、和方法提供自定义行为， <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 并设置 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-326">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="91e9f-327">此示例提供的自定义行为是在 `Changed` 每个受保护的方法末尾引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-327">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="91e9f-328">`Dinosaurs`类 `Collection<string>` Visual Basic) 继承 (， `Collection(Of String)` 并定义 `Changed` 事件，该事件使用 `DinosaursChangedEventArgs` 类作为事件信息，并使用枚举来标识更改类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-328">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="91e9f-329">此代码示例调用多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-329">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-330"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-330"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="91e9f-331">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-331">-or-</span></span> 
 <span data-ttu-id="91e9f-332"><paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-332"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit&#xA;override this.SetItem : int * 'T -&gt; unit" Usage="collection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-333">待替换元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-333">The zero-based index of the element to replace.</span></span></param>
        <param name="item"><span data-ttu-id="91e9f-334">位于指定索引处的元素的新值。</span><span class="sxs-lookup"><span data-stu-id="91e9f-334">The new value for the element at the specified index.</span></span> <span data-ttu-id="91e9f-335">对于引用类型，该值可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-335">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="91e9f-336">替换指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-336">Replaces the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-337"><xref:System.Collections.ObjectModel.Collection%601> 接受 `null` 作为引用类型的有效值，并允许重复元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-337"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="91e9f-338">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-338">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91e9f-339">下面的代码示例演示如何从泛型类的构造类型派生集合类 <xref:System.Collections.ObjectModel.Collection%601> ，以及如何重写受保护的、、和 <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A> 方法， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A> 以便为 <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> 、、和方法提供自定义行为， <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> 并设置 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-339">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="91e9f-340">此示例提供的自定义行为是在 `Changed` 每个受保护的方法末尾引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-340">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="91e9f-341">`Dinosaurs`类 `Collection<string>` Visual Basic) 继承 (， `Collection(Of String)` 并定义 `Changed` 事件，该事件使用 `DinosaursChangedEventArgs` 类作为事件信息，并使用枚举来标识更改类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-341">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="91e9f-342">此代码示例调用多个属性和方法 <xref:System.Collections.ObjectModel.Collection%601> 来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="91e9f-342">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-343"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-343"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="91e9f-344">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-344">-or-</span></span> 
 <span data-ttu-id="91e9f-345"><paramref name="index" /> 大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-345"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-346">获取一个值，该值指示 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="91e9f-346">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="91e9f-347">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.Generic.ICollection`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-347"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="91e9f-348">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-348">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-349">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-349">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="91e9f-350">只读集合就是一个集合，其中包含阻止修改集合的包装器;因此，如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="91e9f-350">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="91e9f-351">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-351">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="collection.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="91e9f-352">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="91e9f-352">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="91e9f-353"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-353">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="91e9f-354"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="91e9f-354">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="91e9f-355">从特定的 <see cref="T:System.Collections.ICollection" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-355">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="91e9f-356">如果源的类型 <xref:System.Collections.ICollection> 不能自动强制转换为目标的类型 `array` ，则引发的非泛型实现 <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> <xref:System.InvalidCastException> ，而泛型实现将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-356">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="91e9f-357">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-357">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91e9f-358"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-358"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-359"><paramref name="index" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="91e9f-359"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-360"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="91e9f-360"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="91e9f-361">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-361">-or-</span></span> 
 <span data-ttu-id="91e9f-362"><paramref name="array" /> 没有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-362"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="91e9f-363">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-363">-or-</span></span> 
<span data-ttu-id="91e9f-364">源 <see cref="T:System.Collections.ICollection" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span><span class="sxs-lookup"><span data-stu-id="91e9f-364">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="91e9f-365">- 或 -</span><span class="sxs-lookup"><span data-stu-id="91e9f-365">-or-</span></span> 
<span data-ttu-id="91e9f-366">无法自动将源 <see cref="T:System.Collections.ICollection" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-366">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-367">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="91e9f-367">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="91e9f-368">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-368"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="91e9f-369">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-369">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-370">中集合的默认实现 <xref:System.Collections.Generic?displayProperty=nameWithType> 不同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-370">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="91e9f-371">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="91e9f-371">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="91e9f-372">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-372">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="91e9f-373">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-373">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="91e9f-374"><xref:System.Collections.ICollection.SyncRoot%2A> 返回一个对象，该对象可用于同步对的访问 <xref:System.Collections.ICollection> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-374"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="91e9f-375">仅当所有线程在访问集合之前锁定此对象时，同步才有效。</span><span class="sxs-lookup"><span data-stu-id="91e9f-375">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="91e9f-376">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-376">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-377">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-377">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="91e9f-378">用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-378">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="91e9f-379">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回当前实例。</span><span class="sxs-lookup"><span data-stu-id="91e9f-379">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-380">中集合的默认实现 <xref:System.Collections.Generic?displayProperty=nameWithType> 不同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-380">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="91e9f-381">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="91e9f-381">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="91e9f-382">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-382">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="91e9f-383">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-383">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="91e9f-384"><xref:System.Collections.ICollection.SyncRoot%2A> 返回一个对象，该对象可用于同步对的访问 <xref:System.Collections.ICollection> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-384"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="91e9f-385">仅当所有线程在访问集合之前锁定此对象时，同步才有效。</span><span class="sxs-lookup"><span data-stu-id="91e9f-385">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="91e9f-386">下面的代码演示 <xref:System.Collections.ICollection.SyncRoot%2A> c #、c + + 和 Visual Basic 的属性的用法。</span><span class="sxs-lookup"><span data-stu-id="91e9f-386">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="91e9f-387">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-387">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91e9f-388">返回循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="91e9f-388">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="91e9f-389">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-389">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-390">C `foreach` + + 中的 c # 语言 (在 `for each` `For Each` Visual Basic 中) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-390">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="91e9f-391">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="91e9f-391">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="91e9f-392">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-392">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="91e9f-393">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="91e9f-393">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="91e9f-394"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="91e9f-394"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="91e9f-395">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="91e9f-395">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="91e9f-396">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-396">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="91e9f-397">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="91e9f-397"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="91e9f-398"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-398"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="91e9f-399">如果 <xref:System.Collections.IEnumerator.MoveNext%2A> 越过集合的末尾，则枚举器将定位在集合中最后一个元素之后，并 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-399">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="91e9f-400">当枚举器位于此位置时，对的后续调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 也将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-400">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="91e9f-401">如果最后一次调用 <xref:System.Collections.IEnumerator.MoveNext%2A> 返回 `false` ， <xref:System.Collections.IEnumerator.Current%2A> 则未定义。</span><span class="sxs-lookup"><span data-stu-id="91e9f-401">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="91e9f-402">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="91e9f-402">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="91e9f-403">只要集合保持不变，枚举器就仍有效。</span><span class="sxs-lookup"><span data-stu-id="91e9f-403">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="91e9f-404">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="91e9f-404">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="91e9f-405">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="91e9f-405">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="91e9f-406">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="91e9f-406">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="91e9f-407">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-407">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="91e9f-408">中集合的默认实现 <xref:System.Collections.Generic?displayProperty=nameWithType> 不同步。</span><span class="sxs-lookup"><span data-stu-id="91e9f-408">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="91e9f-409">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-409">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="collection.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91e9f-410">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-410">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="91e9f-411">将某项添加到 <see cref="T:System.Collections.IList" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91e9f-411">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="91e9f-412">新元素的插入位置。</span><span class="sxs-lookup"><span data-stu-id="91e9f-412">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-413">此方法是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-413">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-414"><paramref name="value" /> 是一个无法赋值给 <see cref="T:System.Collections.IList" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-414"><paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="collection.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91e9f-415">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-415">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="91e9f-416">确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</span><span class="sxs-lookup"><span data-stu-id="91e9f-416">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="91e9f-417">如果在 <see cref="T:System.Collections.IList" /> 中找到了 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-417"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-418">此方法通过首先确定是否 `value` 为类型 `T` (或 null) ，然后调用来确定相等性 <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-418">This method determines equality by first determining whether `value` is of type `T` (or null) and then calling <xref:System.Collections.ObjectModel.Collection%601.Contains%2A>.</span></span>  
  
 <span data-ttu-id="91e9f-419">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-419">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-420"><paramref name="value" /> 是一个无法赋值给 <see cref="T:System.Collections.IList" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-420"><paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="collection.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91e9f-421">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-421">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="91e9f-422">确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-422">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="91e9f-423">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="91e9f-423">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-424">此方法使用默认比较器确定相等性 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-424">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="91e9f-425"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 检查类型是否 `T` 实现 <xref:System.IComparable%601?displayProperty=nameWithType> 并使用该实现（如果可用）。</span><span class="sxs-lookup"><span data-stu-id="91e9f-425"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="91e9f-426">如果不是，则 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 检查类型是否 `T` 实现 <xref:System.IComparable?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-426">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="91e9f-427">如果类型 `T` 未实现任何一个接口，则此方法使用 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-427">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="91e9f-428">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-428">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-429"><paramref name="value" /> 是一个无法赋值给 <see cref="T:System.Collections.IList" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-429"><paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="collection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-430">应插入 <paramref name="value" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-430">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="91e9f-431">要插入到 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-431">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="91e9f-432">将某项插入 <see cref="T:System.Collections.IList" /> 中指定的索引处。</span><span class="sxs-lookup"><span data-stu-id="91e9f-432">Inserts an item into the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-433">如果 `index` 等于 <xref:System.Collections.IList> 中的项数，则将 `value` 追加到末尾。</span><span class="sxs-lookup"><span data-stu-id="91e9f-433">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="91e9f-434">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-434">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-435"><paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-435"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-436"><paramref name="value" /> 是一个无法赋值给 <see cref="T:System.Collections.IList" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-436"><paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-437">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="91e9f-437">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="91e9f-438">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-438"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="91e9f-439">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-439">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-440">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-440">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="91e9f-441">具有固定大小的集合就是一个集合，其中包含阻止添加和移除元素的包装;因此，如果对基础集合进行了更改，包括添加或删除元素，则固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="91e9f-441">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="91e9f-442">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-442">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91e9f-443">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="91e9f-443">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="91e9f-444">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-444"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="91e9f-445">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-445">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-446">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-446">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="91e9f-447">只读集合就是一个集合，其中包含阻止修改集合的包装器;因此，如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="91e9f-447">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="91e9f-448">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="91e9f-448">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberSignature Language="C#" Value="object? System.Collections.IList.Item[int index] { get; set; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="91e9f-449">要获取或设置的元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-449">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="91e9f-450">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-450">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="91e9f-451">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="91e9f-451">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-452">通过此属性，可以使用以下语法来访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="91e9f-452">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="91e9f-453">C # 语言使用 [this](/dotnet/csharp/language-reference/keywords/this) 关键字来定义索引器，而不是实现 <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="91e9f-453">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="91e9f-454">Visual Basic 将 <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="91e9f-454">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="91e9f-455">检索此属性的值是一个 O (1) 操作;设置属性也是 O (1) 操作。</span><span class="sxs-lookup"><span data-stu-id="91e9f-455">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="91e9f-456"><paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="91e9f-456"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-457">已设置属性，且 <paramref name="value" /> 属于不能对 <see cref="T:System.Collections.IList" /> 赋值的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-457">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="collection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91e9f-458">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="91e9f-458">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="91e9f-459">从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="91e9f-459">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91e9f-460">此方法使用默认比较器确定相等性 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-460">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="91e9f-461"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 检查类型是否 `T` 实现 <xref:System.IComparable%601?displayProperty=nameWithType> 并使用该实现（如果可用）。</span><span class="sxs-lookup"><span data-stu-id="91e9f-461"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="91e9f-462">如果不是，则 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 检查类型是否 `T` 实现 <xref:System.IComparable?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-462">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="91e9f-463">如果类型 `T` 未实现任何一个接口，则此方法使用 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-463">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="91e9f-464">此方法是 O (`n`) 操作，其中 `n` 是 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 。</span><span class="sxs-lookup"><span data-stu-id="91e9f-464">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="91e9f-465"><paramref name="value" /> 是一个无法赋值给 <see cref="T:System.Collections.IList" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="91e9f-465"><paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
