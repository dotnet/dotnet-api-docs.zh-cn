<Type Name="ModelService" FullName="System.Activities.Presentation.Services.ModelService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53fadfa4c6c94dd4ae597c1a4c8165bae6957ca2" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86837359" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelService abstract" />
  <TypeSignature Language="F#" Value="type ModelService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="740af-101">此类是设计器用来与模型交互的主要入口点。</span><span class="sxs-lookup"><span data-stu-id="740af-101">This class is the main entry point that the designer uses to interact with the model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-102">服务在您创建派生类时必须实现的公共方法与受保护方法之间有所区别。</span><span class="sxs-lookup"><span data-stu-id="740af-102">The service has a split between public and protected methods that you must implement when you create a derived class.</span></span> <span data-ttu-id="740af-103">公共方法可由任何对象调用；</span><span class="sxs-lookup"><span data-stu-id="740af-103">The public methods are callable by anyone.</span></span> <span data-ttu-id="740af-104">而受保护方法只能由该模型调用。</span><span class="sxs-lookup"><span data-stu-id="740af-104">The protected methods are invoked by the model.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="740af-105">创建一个新的 <see cref="T:System.Activities.Presentation.Services.ModelService" />。</span><span class="sxs-lookup"><span data-stu-id="740af-105">Creates a new <see cref="T:System.Activities.Presentation.Services.ModelService" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItem">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="740af-106">创建给定类型的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-106">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span></span> <span data-ttu-id="740af-107">当用户希望创建新项时，此方法由 <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="740af-107">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (item As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="740af-108">要克隆和包装的项。</span><span class="sxs-lookup"><span data-stu-id="740af-108">The item to clone and wrap.</span></span></param>
        <summary><span data-ttu-id="740af-109">接受一个现有的实例并创建一个模型项，该模型项是现有实例的深层克隆。</span><span class="sxs-lookup"><span data-stu-id="740af-109">Takes an existing instance and creates a model item that is a deep clone of the instance.</span></span></summary>
        <returns><span data-ttu-id="740af-110">一个新创建的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />，它是现有项的克隆。</span><span class="sxs-lookup"><span data-stu-id="740af-110">The newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is a clone of the existing item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (itemType As Type, options As CreateOptions, ParamArray arguments As Object()) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(Type ^ itemType, System::Activities::Presentation::Model::CreateOptions options, ... cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : Type * System.Activities.Presentation.Model.CreateOptions * obj[] -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateItem (itemType, options, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
        <Parameter Name="options" Type="System.Activities.Presentation.Model.CreateOptions" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="740af-111">要创建的项的类型。</span><span class="sxs-lookup"><span data-stu-id="740af-111">The type of item to create.</span></span></param>
        <param name="options"><span data-ttu-id="740af-112">创建选项。</span><span class="sxs-lookup"><span data-stu-id="740af-112">Creation options.</span></span> <span data-ttu-id="740af-113">可以指定是否要对某个项初始化默认值。</span><span class="sxs-lookup"><span data-stu-id="740af-113">You can specify whether you would like to initialize default values for an item.</span></span></param>
        <param name="arguments"><span data-ttu-id="740af-114">该项的构造函数的自变量数组。</span><span class="sxs-lookup"><span data-stu-id="740af-114">An array of arguments to the constructor of the item.</span></span></param>
        <summary><span data-ttu-id="740af-115">创建给定类型的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-115">Creates a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> for a given type.</span></span> <span data-ttu-id="740af-116">当用户希望创建新项时，此方法由 <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="740af-116">This method is called by <see cref="T:System.Activities.Presentation.Model.ModelFactory" /> when the user wants to create a new item.</span></span></summary>
        <returns><span data-ttu-id="740af-117">新创建的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-117">The newly created <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMemberItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Type type, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateStaticMemberItem (type As Type, memberName As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateStaticMemberItem(Type ^ type, System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="abstract member CreateStaticMemberItem : Type * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.CreateStaticMemberItem (type, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="740af-118">包含所引用的静态成员的类型。</span><span class="sxs-lookup"><span data-stu-id="740af-118">The type that contains the static member being referenced.</span></span></param>
        <param name="memberName"><span data-ttu-id="740af-119">所引用的静态成员的名称。</span><span class="sxs-lookup"><span data-stu-id="740af-119">The name of the static member being referenced.</span></span></param>
        <summary><span data-ttu-id="740af-120">创建一个表示给定类的静态成员值的新模型项。</span><span class="sxs-lookup"><span data-stu-id="740af-120">Creates a new model item that represents the value of a static member of the given class.</span></span></summary>
        <returns><span data-ttu-id="740af-121">返回 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-121">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-122">例如，若要将对 `Brushes.Red` 的引用添加到模型中，请调用此方法，并使用 `typeof(Brushes)` 和字符串“Red”作为其参数。</span><span class="sxs-lookup"><span data-stu-id="740af-122">For example, to add a reference to `Brushes.Red` to the model, call this method with `typeof(Brushes)` and the string "Red" as the parameters.</span></span> <span data-ttu-id="740af-123">它将以 `{x:Static Brushes.Red}` 的形式序列化为 XAML。</span><span class="sxs-lookup"><span data-stu-id="740af-123">This will be serialized into XAML as `{x:Static Brushes.Red}`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="740af-124">从给定的查找起点开始查找匹配的模型项。</span><span class="sxs-lookup"><span data-stu-id="740af-124">Finds matching model items given a starting point from which to look.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-125">所有查找步程都是递归的。</span><span class="sxs-lookup"><span data-stu-id="740af-125">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate&lt;Type&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Predicate`1&lt;class System.Type&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, match As Predicate(Of Type)) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Predicate&lt;Type ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Predicate&lt;Type&gt; -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="startingItem"><span data-ttu-id="740af-126">要从其开始搜索的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-126">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span></span> <span data-ttu-id="740af-127">此项上面的项将被忽略。</span><span class="sxs-lookup"><span data-stu-id="740af-127">Items above this item will be ignored.</span></span> <span data-ttu-id="740af-128">此项以及层次结构中位于此项下面的任何项都将包括在搜索中。</span><span class="sxs-lookup"><span data-stu-id="740af-128">This item, and any item below it in the hierarchy, will be included in the search.</span></span> <span data-ttu-id="740af-129">如果此值为 <see langword="null" />，则改为使用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" />。</span><span class="sxs-lookup"><span data-stu-id="740af-129">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span></span></param>
        <param name="match"><span data-ttu-id="740af-130">一个允许使用更复杂的类型匹配的谓词。</span><span class="sxs-lookup"><span data-stu-id="740af-130">A predicate that allows more complex type matching to be used.</span></span> <span data-ttu-id="740af-131">此方法将枚举给定父范围中与该谓词相匹配的所有项。</span><span class="sxs-lookup"><span data-stu-id="740af-131">This method will enumerate all items within the given parent scope that match the predicate.</span></span></param>
        <summary><span data-ttu-id="740af-132">从给定的查找起点开始查找匹配的模型项。</span><span class="sxs-lookup"><span data-stu-id="740af-132">Finds matching model items given a starting point from which to look.</span></span></summary>
        <returns><span data-ttu-id="740af-133">一个 <see cref="T:System.Collections.Generic.IEnumerable`1" />，它包含与查询相匹配的所有模型项。</span><span class="sxs-lookup"><span data-stu-id="740af-133">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-134">所有查找步程都是递归的。</span><span class="sxs-lookup"><span data-stu-id="740af-134">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="740af-135"><paramref name="match" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="740af-135"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, type As Type) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.Activities.Presentation.Model.ModelItem * Type -&gt; seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="modelService.Find (startingItem, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="startingItem"><span data-ttu-id="740af-136">要从其开始搜索的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-136">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from which to start the search.</span></span> <span data-ttu-id="740af-137">此项上面的项将被忽略。</span><span class="sxs-lookup"><span data-stu-id="740af-137">Items above this item will be ignored.</span></span> <span data-ttu-id="740af-138">此项以及层次结构中位于此项下面的任何项都将包括在搜索中。</span><span class="sxs-lookup"><span data-stu-id="740af-138">This item, and any item below it in the hierarchy, will be included in the search.</span></span> <span data-ttu-id="740af-139">如果此值为 <see langword="null" />，则改为使用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" />。</span><span class="sxs-lookup"><span data-stu-id="740af-139">If this value is <see langword="null" />, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> is used instead.</span></span></param>
        <param name="type"><span data-ttu-id="740af-140">要查找的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="740af-140">The <see cref="T:System.Type" /> of the object to find.</span></span> <span data-ttu-id="740af-141">此方法将枚举给定父范围中具有所请求的类型的所有项。</span><span class="sxs-lookup"><span data-stu-id="740af-141">This method will enumerate all items within the given parent scope that are of the requested type.</span></span></param>
        <summary><span data-ttu-id="740af-142">从给定的查找起点开始查找匹配的模型项。</span><span class="sxs-lookup"><span data-stu-id="740af-142">Finds matching model items given a starting point from which to look.</span></span></summary>
        <returns><span data-ttu-id="740af-143">一个 <see cref="T:System.Collections.Generic.IEnumerable`1" />，它包含与查询相匹配的所有模型项。</span><span class="sxs-lookup"><span data-stu-id="740af-143">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains all model items that match the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-144">所有查找步程都是递归的。</span><span class="sxs-lookup"><span data-stu-id="740af-144">All walks are recursive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="740af-145"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="740af-145"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="740af-146">查找给定范围中具有给定名称的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-146">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-147">`null`如果找不到模型项，则返回。</span><span class="sxs-lookup"><span data-stu-id="740af-147">Returns `null` if the model item could not be located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromName (scope As ModelItem, name As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FromName : System.Activities.Presentation.Model.ModelItem * string -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="740af-148">要提供的可选范围。</span><span class="sxs-lookup"><span data-stu-id="740af-148">An optional scope to provide.</span></span> <span data-ttu-id="740af-149">如果未提供范围，则使用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> 作为范围。</span><span class="sxs-lookup"><span data-stu-id="740af-149">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span></span> <span data-ttu-id="740af-150">如果提供了范围，将使用层次结构中最近的 <see cref="T:System.Windows.Markup.INameScope" /> 来查找该项。</span><span class="sxs-lookup"><span data-stu-id="740af-150">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span></span></param>
        <param name="name"><span data-ttu-id="740af-151">要查找的名称。</span><span class="sxs-lookup"><span data-stu-id="740af-151">The name to locate.</span></span></param>
        <summary><span data-ttu-id="740af-152">查找给定范围中具有给定名称的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-152">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <returns><span data-ttu-id="740af-153">一个 <see cref="T:System.Activities.Presentation.Model.ModelItem" />，其名称与 <paramref name="name" /> 匹配；如果未找到匹配，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="740af-153">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="740af-154"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="740af-154"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype System.StringComparison comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromName (scope As ModelItem, name As String, comparison As StringComparison) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name, StringComparison comparison);" />
      <MemberSignature Language="F#" Value="abstract member FromName : System.Activities.Presentation.Model.ModelItem * string * StringComparison -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelService.FromName (scope, name, comparison)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="comparison" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="740af-155">要提供的可选范围。</span><span class="sxs-lookup"><span data-stu-id="740af-155">An optional scope to provide.</span></span> <span data-ttu-id="740af-156">如果未提供范围，则使用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> 作为范围。</span><span class="sxs-lookup"><span data-stu-id="740af-156">If the scope is not provided, <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> will be used as a scope.</span></span> <span data-ttu-id="740af-157">如果提供了范围，将使用层次结构中最近的 <see cref="T:System.Windows.Markup.INameScope" /> 来查找该项。</span><span class="sxs-lookup"><span data-stu-id="740af-157">If the scope is provided, the nearest <see cref="T:System.Windows.Markup.INameScope" /> in the hierarchy will be used to locate the item.</span></span></param>
        <param name="name"><span data-ttu-id="740af-158">要查找的名称。</span><span class="sxs-lookup"><span data-stu-id="740af-158">The name to locate.</span></span></param>
        <param name="comparison"><span data-ttu-id="740af-159">确定比较名称的方法。</span><span class="sxs-lookup"><span data-stu-id="740af-159">Determines how the name should be compared.</span></span> <span data-ttu-id="740af-160">默认为与序号进行比较。</span><span class="sxs-lookup"><span data-stu-id="740af-160">The default is to compare against ordinal.</span></span></param>
        <summary><span data-ttu-id="740af-161">查找给定范围中具有给定名称的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="740af-161">Locates the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> in the given scope with the given name.</span></span></summary>
        <returns><span data-ttu-id="740af-162">一个 <see cref="T:System.Activities.Presentation.Model.ModelItem" />，其名称与 <paramref name="name" /> 匹配；如果未找到匹配，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="740af-162">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> whose name matches <paramref name="name" />, or <see langword="null" /> if no match was found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="740af-163"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="740af-163"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ModelChanged">
      <MemberSignature Language="C#" Value="public abstract event EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Services.ModelService.ModelChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Custom Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event EventHandler&lt;System::Activities::Presentation::Services::ModelChangedEventArgs ^&gt; ^ ModelChanged;" />
      <MemberSignature Language="F#" Value="member this.ModelChanged : EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " Usage="member this.ModelChanged : System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740af-164">当模型中有更改时引发此事件。</span><span class="sxs-lookup"><span data-stu-id="740af-164">This event is raised when something in the model has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-165">可以使用事件中的事件自变量来查找更改的内容。</span><span class="sxs-lookup"><span data-stu-id="740af-165">The event arguments in the event can be used to find what has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelService.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Services.ModelService.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="740af-166">对象层次结构的根。</span><span class="sxs-lookup"><span data-stu-id="740af-166">The root of the object hierarchy.</span></span></summary>
        <value><span data-ttu-id="740af-167">形式的模型层次结构的根 <see cref="T:System.Activities.Presentation.Model.ModelItem" /> 。</span><span class="sxs-lookup"><span data-stu-id="740af-167">The root of the model hierarchy as a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="740af-168">对于线性存储区，其根是存储区中的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="740af-168">For linear stores, the root is the first object in the store.</span></span> <span data-ttu-id="740af-169">对于表示对象树的存储区，它返回树中最顶部的节点。</span><span class="sxs-lookup"><span data-stu-id="740af-169">For stores that represent a tree of objects, this returns the topmost node of the tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
