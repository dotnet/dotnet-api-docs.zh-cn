<Type Name="ApplicationQueuingAttribute" FullName="System.EnterpriseServices.ApplicationQueuingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b381ddcbb8979367a61a7b725a37c08a6acc075" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86817937" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ApplicationQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ApplicationQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6490-101">为标记的程序集启用队列支持，并启用应用程序从“消息队列”队列读取方法调用。</span><span class="sxs-lookup"><span data-stu-id="b6490-101">Enables queuing support for the marked assembly and enables the application to read method calls from Message Queuing queues.</span></span> <span data-ttu-id="b6490-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b6490-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6490-103">有关实例的初始属性值的列表 <xref:System.EnterpriseServices.ApplicationQueuingAttribute> ，请参见 <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="b6490-103">For a list of initial property values for an instance of <xref:System.EnterpriseServices.ApplicationQueuingAttribute>, see the <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="b6490-104">有关使用特性的详细信息，请参阅 [特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="b6490-104">For more information about using attributes, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6490-105">下面的代码示例演示如何使用 <xref:System.EnterpriseServices.ApplicationQueuingAttribute> 类型。</span><span class="sxs-lookup"><span data-stu-id="b6490-105">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ApplicationQueuingAttribute> type.</span></span>  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#0)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ApplicationQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6490-106">初始化 <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" /> 类的新实例，并且为程序集启用队列支持以及初始化 <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />、<see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" /> 和 <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />。</span><span class="sxs-lookup"><span data-stu-id="b6490-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" /> class, enabling queuing support for the assembly and initializing <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />, <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />, and <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6490-107">下表显示了实例的初始属性值 <xref:System.EnterpriseServices.ApplicationQueuingAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="b6490-107">The following table shows initial property values for an instance of <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.</span></span>  
  
|<span data-ttu-id="b6490-108">属性</span><span class="sxs-lookup"><span data-stu-id="b6490-108">Property</span></span>|<span data-ttu-id="b6490-109">“值”</span><span class="sxs-lookup"><span data-stu-id="b6490-109">Value</span></span>|  
|--------------|-----------|  
|`Enabled`|`true`|  
|`QueueListenerEnabled`|`false`|  
|`MaxListenerThreads`|<span data-ttu-id="b6490-110">零 (0)</span><span class="sxs-lookup"><span data-stu-id="b6490-110">zero (0)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b6490-111">下面的代码示例创建一个新的 <xref:System.EnterpriseServices.ApplicationQueuingAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="b6490-111">The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.</span></span>  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6490-112">获取或设置一个值，该值指示是否启用队列支持。</span><span class="sxs-lookup"><span data-stu-id="b6490-112">Gets or sets a value indicating whether queuing support is enabled.</span></span></summary>
        <value><span data-ttu-id="b6490-113">如果启用队列支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6490-113"><see langword="true" /> if queuing support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b6490-114">构造函数设置的默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b6490-114">The default value set by the constructor is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6490-115">默认情况下，应用程序不能使用排队的组件。</span><span class="sxs-lookup"><span data-stu-id="b6490-115">Applications are not able to use queued components by default.</span></span> <span data-ttu-id="b6490-116">通过实例化， <xref:System.EnterpriseServices.ApplicationQueuingAttribute> 应用程序可以使用排队的组件; 但是，它不会使应用程序侦听来自客户端的已排队消息。</span><span class="sxs-lookup"><span data-stu-id="b6490-116">Instantiating <xref:System.EnterpriseServices.ApplicationQueuingAttribute> enables an application to use queued components; however, it does not enable the application to listen for queued messages from clients.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6490-117">下面的代码示例获取并设置属性的属性的值 `ApplicationQueuing` <xref:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b6490-117">The following code example gets and sets the value of an `ApplicationQueuing` attribute's <xref:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled%2A> property.</span></span>  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxListenerThreads">
      <MemberSignature Language="C#" Value="public int MaxListenerThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxListenerThreads" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxListenerThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxListenerThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxListenerThreads : int with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6490-118">获取或设置用于从队列提取消息并激活相应组件的线程的数目。</span><span class="sxs-lookup"><span data-stu-id="b6490-118">Gets or sets the number of threads used to extract messages from the queue and activate the corresponding component.</span></span></summary>
        <value><span data-ttu-id="b6490-119">用于处理到达队列中的消息的线程的最大数目。</span><span class="sxs-lookup"><span data-stu-id="b6490-119">The maximum number of threads to use for processing messages arriving in the queue.</span></span> <span data-ttu-id="b6490-120">默认值为零。</span><span class="sxs-lookup"><span data-stu-id="b6490-120">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6490-121">此属性的有效范围是0到1000。</span><span class="sxs-lookup"><span data-stu-id="b6490-121">The valid range for this property is 0 to 1000.</span></span> <span data-ttu-id="b6490-122">默认值为零。</span><span class="sxs-lookup"><span data-stu-id="b6490-122">The default is zero.</span></span> <span data-ttu-id="b6490-123">对于新创建的应用程序，该设置派生自当前用于确定侦听器线程默认数量的算法：服务器中 Cpu 数的16倍。</span><span class="sxs-lookup"><span data-stu-id="b6490-123">For a newly created application, the setting is derived from the algorithm currently used for determining the default number of listener threads: 16 times the number of CPUs in the server.</span></span>  
  
 <span data-ttu-id="b6490-124">有关详细信息，请 `QcListenerMaxThreads` 参阅 [应用程序集合](/windows/win32/cossdk/applications#qclistenermaxthreads)中的。</span><span class="sxs-lookup"><span data-stu-id="b6490-124">For more information, see `QcListenerMaxThreads` in [Applications collection](/windows/win32/cossdk/applications#qclistenermaxthreads).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b6490-125">下面的代码示例获取并设置属性的属性的值 `ApplicationQueuing` <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b6490-125">The following code example gets and sets the value of an `ApplicationQueuing` attribute's <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads%2A> property.</span></span>  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueListenerEnabled">
      <MemberSignature Language="C#" Value="public bool QueueListenerEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueueListenerEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueListenerEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueueListenerEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueueListenerEnabled : bool with get, set" Usage="System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6490-126">获取或设置一个值，该值指示应用程序是否将从客户端接受已排队的组件调用。</span><span class="sxs-lookup"><span data-stu-id="b6490-126">Gets or sets a value indicating whether the application will accept queued component calls from clients.</span></span></summary>
        <value><span data-ttu-id="b6490-127">如果应用程序接受已排队的组件调用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6490-127"><see langword="true" /> if the application accepts queued component calls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b6490-128">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6490-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b6490-129">下面的代码示例获取并设置属性的属性的值 `ApplicationQueuing` <xref:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b6490-129">The following code example gets and sets the value of an `ApplicationQueuing` attribute's <xref:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled%2A> property.</span></span>  
  
 [!code-csharp[EnterpriseServicesApplicationQueuingAttribute#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesApplicationQueuingAttribute/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
