<Type Name="ContextUtil" FullName="System.EnterpriseServices.ContextUtil">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cf1a03b3bc6c572a7060c505253ecce34b770d9" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="77226019" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContextUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ContextUtil" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextUtil sealed" />
  <TypeSignature Language="F#" Value="type ContextUtil = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b500f-101">获取有关 COM+ 对象上下文的信息。</span><span class="sxs-lookup"><span data-stu-id="b500f-101">Obtains information about the COM+ object context.</span></span> <span data-ttu-id="b500f-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b500f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-103"><xref:System.EnterpriseServices.ContextUtil>是首选的用于获取 COM + 上下文信息的类。</span><span class="sxs-lookup"><span data-stu-id="b500f-103"><xref:System.EnterpriseServices.ContextUtil> is the preferred class to use for obtaining COM+ context information.</span></span> <span data-ttu-id="b500f-104">由于此类的成员都是 `static` （ `shared` 在 Visual Basic 中），因此，不需要在使用之前对其进行实例化。</span><span class="sxs-lookup"><span data-stu-id="b500f-104">Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-105">下面的代码示例演示如何使用 <xref:System.EnterpriseServices.ContextUtil> 创建事务性 <xref:System.EnterpriseServices.ServicedComponent> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-105">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil> to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public static Guid ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid" Usage="System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-106">获取一个 GUID，它表示包含组件的活动。</span><span class="sxs-lookup"><span data-stu-id="b500f-106">Gets a GUID representing the activity containing the component.</span></span></summary>
        <value><span data-ttu-id="b500f-107">如果当前上下文是某个活动的一部分，则为该活动的 GUID；否则为 <see langword="GUID_NULL" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-107">The GUID for an activity if the current context is part of an activity; otherwise, <see langword="GUID_NULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-108">下面的代码示例获取属性的值 <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-108">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesContextUtil#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesContextUtil#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-109">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-109">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-110">获取当前应用程序的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-110">Gets a GUID for the current application.</span></span></summary>
        <value><span data-ttu-id="b500f-111">当前应用程序的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-111">The GUID for the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-112">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="b500f-112">The following code example demonstrates the use of this property.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-113">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-113">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b500f-114">此平台不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="b500f-114">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstanceId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstanceId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-115">获取当前应用程序实例的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-115">Gets a GUID for the current application instance.</span></span></summary>
        <value><span data-ttu-id="b500f-116">当前应用程序实例的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-116">The GUID for the current application instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-117">下面的代码示例获取属性的值 <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-117">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesContextUtil#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesContextUtil#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-118">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-118">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b500f-119">此平台不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="b500f-119">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public static Guid ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ContextId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ContextId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : Guid" Usage="System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-120">获取当前上下文的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-120">Gets a GUID for the current context.</span></span></summary>
        <value><span data-ttu-id="b500f-121">当前上下文的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-121">The GUID for the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-122">下面的示例代码演示如何使用此特性。</span><span class="sxs-lookup"><span data-stu-id="b500f-122">The following example code demonstrates the use of this attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-123">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-123">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeactivateOnReturn">
      <MemberSignature Language="C#" Value="public static bool DeactivateOnReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DeactivateOnReturn" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DeactivateOnReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DeactivateOnReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeactivateOnReturn : bool with get, set" Usage="System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-124">获取或设置 COM+ 上下文中的 <see langword="done" /> 位。</span><span class="sxs-lookup"><span data-stu-id="b500f-124">Gets or sets the <see langword="done" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="b500f-125">如果该方法返回时将停用此对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-125"><see langword="true" /> if the object is to be deactivated when the method returns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b500f-126">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-127">COM + `done` 位确定对象在完成其工作后保持活动状态的时间，并且可能会影响事务的持续时间。</span><span class="sxs-lookup"><span data-stu-id="b500f-127">The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction.</span></span> <span data-ttu-id="b500f-128">当方法调用返回时，COM + 将检查 `done` 位。</span><span class="sxs-lookup"><span data-stu-id="b500f-128">When a method call returns, COM+ inspects the `done` bit.</span></span> <span data-ttu-id="b500f-129">如果 `done` 位为 `true` ，com + 将停用该对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-129">If the `done` bit is `true`, COM+ deactivates the object.</span></span> <span data-ttu-id="b500f-130">如果 `done` 位为 `false` ，则不停用对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-130">If the `done` bit is `false`, the object is not deactivated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-131">下面的代码示例演示如何使用 <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> 属性来确保在 <xref:System.EnterpriseServices.ServicedComponent> 方法调用后停用。</span><span class="sxs-lookup"><span data-stu-id="b500f-131">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-132">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-132">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableCommit">
      <MemberSignature Language="C#" Value="public static void DisableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.DisableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCommit();" />
      <MemberSignature Language="F#" Value="static member DisableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.DisableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b500f-133">在 COM+ 上下文中将 <see langword="consistent" /> 位和 <see langword="done" /> 位设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-133">Sets both the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-134">如果系统询问，COM + 上下文会投票中止当前事务，但不会在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-134">If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-135">下面的代码示例调用 <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b500f-135">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#3)]
 [!code-csharp[EnterpriseServicesContextUtil#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesContextUtil#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-136">没有 COM+ 上下文可用。</span><span class="sxs-lookup"><span data-stu-id="b500f-136">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableCommit">
      <MemberSignature Language="C#" Value="public static void EnableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.EnableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCommit();" />
      <MemberSignature Language="F#" Value="static member EnableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.EnableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b500f-137">在 COM+ 上下文中将 <see langword="consistent" /> 位设置为 <see langword="true" />，并将 <see langword="done" /> 位设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-137">Sets the <see langword="consistent" /> bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-138">如果系统提示，COM + 上下文将提交当前事务，但不会在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-138">If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-139">下面的代码示例调用 <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b500f-139">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#4)]
 [!code-csharp[EnterpriseServicesContextUtil#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesContextUtil#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-140">没有 COM+ 上下文可用。</span><span class="sxs-lookup"><span data-stu-id="b500f-140">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamedProperty">
      <MemberSignature Language="C#" Value="public static object GetNamedProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNamedProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNamedProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetNamedProperty : string -&gt; obj" Usage="System.EnterpriseServices.ContextUtil.GetNamedProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b500f-141">请求的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b500f-141">The name of the requested property.</span></span></param>
        <summary><span data-ttu-id="b500f-142">从 COM+ 上下文返回命名的属性。</span><span class="sxs-lookup"><span data-stu-id="b500f-142">Returns a named property from the COM+ context.</span></span></summary>
        <returns><span data-ttu-id="b500f-143">上下文的命名的属性。</span><span class="sxs-lookup"><span data-stu-id="b500f-143">The named property for the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-144">这对于获取 Active Server Pages （ASP）提供的 Internet Information Services （IIS）内部对象非常有用。</span><span class="sxs-lookup"><span data-stu-id="b500f-144">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-145">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-145">There is no COM+ context available.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsCallerInRole">
      <MemberSignature Language="C#" Value="public static bool IsCallerInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCallerInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCallerInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCallerInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="static member IsCallerInRole : string -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsCallerInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="b500f-146">要检查的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="b500f-146">The name of the role to check.</span></span></param>
        <summary><span data-ttu-id="b500f-147">确定调用方是否属于指定角色。</span><span class="sxs-lookup"><span data-stu-id="b500f-147">Determines whether the caller is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="b500f-148">如果调用方属于指定角色，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-148"><see langword="true" /> if the caller is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-149">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-149">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContext">
      <MemberSignature Language="C#" Value="public static bool IsDefaultContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsDefaultContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefaultContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefaultContext();" />
      <MemberSignature Language="F#" Value="static member IsDefaultContext : unit -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsDefaultContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b500f-150">确定已维护的组件在默认上下文中是否激活。</span><span class="sxs-lookup"><span data-stu-id="b500f-150">Determines whether the serviced component is activated in the default context.</span></span> <span data-ttu-id="b500f-151">在默认上下文中激活那些没有 COM+ 目录信息的已维护组件。</span><span class="sxs-lookup"><span data-stu-id="b500f-151">Serviced components that do not have COM+ catalog information are activated in the default context.</span></span></summary>
        <returns><span data-ttu-id="b500f-152">如果在默认上下文中激活已维护组件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-152"><see langword="true" /> if the serviced component is activated in the default context; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public static bool IsInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInTransaction : bool" Usage="System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-153">获取一个值，该值指示当前上下文是否为事务性上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-153">Gets a value that indicates whether the current context is transactional.</span></span></summary>
        <value><span data-ttu-id="b500f-154">如果当前上下文是事务性的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-154"><see langword="true" /> if the current context is transactional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-155">下面的代码示例获取属性的值 <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-155">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#5)]
 [!code-csharp[EnterpriseServicesContextUtil#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#5)]
 [!code-vb[EnterpriseServicesContextUtil#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-156">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-156">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSecurityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSecurityEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityEnabled : bool" Usage="System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-157">获取一个值，该值指示基于角色的安全性在当前上下文中是否处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="b500f-157">Gets a value that indicates whether role-based security is active in the current context.</span></span></summary>
        <value><span data-ttu-id="b500f-158">如果当前上下文启用了安全性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-158"><see langword="true" /> if the current context has security enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-159">下面的代码示例获取属性的值 <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-159">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#6](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#6)]
 [!code-csharp[EnterpriseServicesContextUtil#6](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#6)]
 [!code-vb[EnterpriseServicesContextUtil#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-160">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-160">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MyTransactionVote">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.EnterpriseServices.TransactionVote MyTransactionVote" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MyTransactionVote As TransactionVote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::EnterpriseServices::TransactionVote MyTransactionVote { System::EnterpriseServices::TransactionVote get(); void set(System::EnterpriseServices::TransactionVote value); };" />
      <MemberSignature Language="F#" Value="member this.MyTransactionVote : System.EnterpriseServices.TransactionVote with get, set" Usage="System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionVote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-161">获取或设置 COM+ 上下文中的 <see langword="consistent" /> 位。</span><span class="sxs-lookup"><span data-stu-id="b500f-161">Gets or sets the <see langword="consistent" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="b500f-162"><see cref="T:System.EnterpriseServices.TransactionVote" /> 值之一，可以是 <see langword="Commit" /> 或 <see langword="Abort" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-162">One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either <see langword="Commit" /> or <see langword="Abort" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-163">当 <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> 设置为时 `Commit` ，com + `consistent` 位设置为， `true` com + 上下文投票以提交事务。</span><span class="sxs-lookup"><span data-stu-id="b500f-163">When <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction.</span></span> <span data-ttu-id="b500f-164">如果 <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> 将设置为 `Abort` ，则将该 `consistent` 位设置为， `false` com + 上下文将投票以中止该事务。</span><span class="sxs-lookup"><span data-stu-id="b500f-164">If <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction.</span></span> <span data-ttu-id="b500f-165">该位的默认值 `consistent` 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="b500f-165">The default value of the `consistent` bit is `true`.</span></span>  
  
 <span data-ttu-id="b500f-166">`consistent`位将投票转换为提交或中止执行它的事务，而位则会完成 `done` 投票。</span><span class="sxs-lookup"><span data-stu-id="b500f-166">The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote.</span></span> <span data-ttu-id="b500f-167">`consistent`当 `done` `true` 方法调用返回或对象停用时，com + 将检查位。</span><span class="sxs-lookup"><span data-stu-id="b500f-167">COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates.</span></span> <span data-ttu-id="b500f-168">尽管对象的 `consistent` 位可以在每个方法调用中重复更改，但只有最后的更改计数。</span><span class="sxs-lookup"><span data-stu-id="b500f-168">Although an object's `consistent` bit can change repeatedly within each method call, only the last change counts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-169">下面的代码示例演示如何使用 <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> 属性创建事务性 <xref:System.EnterpriseServices.ServicedComponent> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-169">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-170">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-170">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public static Guid PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid PartitionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PartitionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid PartitionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.PartitionId : Guid" Usage="System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-171">获取当前分区的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-171">Gets a GUID for the current partition.</span></span></summary>
        <value><span data-ttu-id="b500f-172">当前分区的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-172">The GUID for the current partition.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-173">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-173">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b500f-174">此平台不是 Windows XP 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="b500f-174">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAbort">
      <MemberSignature Language="C#" Value="public static void SetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAbort();" />
      <MemberSignature Language="F#" Value="static member SetAbort : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b500f-175">在 COM+ 上下文中将 <see langword="consistent" /> 位设置为 <see langword="false" />，并将 <see langword="done" /> 位设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-175">Sets the <see langword="consistent" /> bit to <see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-176">如果系统询问，上下文会投票中止当前事务，并在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-176">If asked, the context votes to abort the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-177">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="b500f-177">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-178">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-178">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetComplete">
      <MemberSignature Language="C#" Value="public static void SetComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetComplete();" />
      <MemberSignature Language="F#" Value="static member SetComplete : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b500f-179">在 COM+ 上下文中设置 <see langword="consistent" /> 位，并将 <see langword="done" /> 位设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-179">Sets the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-180">如果系统询问，COM + 上下文将提交当前事务，并在方法返回时停用该对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-180">If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b500f-181">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="b500f-181">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-182">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-182">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetNamedProperty">
      <MemberSignature Language="C#" Value="public static void SetNamedProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNamedProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNamedProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNamedProperty(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNamedProperty : string * obj -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetNamedProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b500f-183">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b500f-183">The name of the property to set.</span></span></param>
        <param name="value"><span data-ttu-id="b500f-184">表示要设置的属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-184">Object that represents the property value to set.</span></span></param>
        <summary><span data-ttu-id="b500f-185">设置 COM+ 上下文的命名属性。</span><span class="sxs-lookup"><span data-stu-id="b500f-185">Sets the named property for the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-186">这对于获取 Active Server Pages （ASP）提供的 Internet Information Services （IIS）内部对象非常有用。</span><span class="sxs-lookup"><span data-stu-id="b500f-186">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-187">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-187">There is no COM+ context available.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction SystemTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.Transaction SystemTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemTransaction As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Transactions::Transaction ^ SystemTransaction { System::Transactions::Transaction ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemTransaction : System.Transactions.Transaction" Usage="System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-188">获取当前事务上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-188">Gets the current transaction context.</span></span></summary>
        <value><span data-ttu-id="b500f-189">表示当前事务上下文的 <see cref="T:System.Transactions.Transaction" />。</span><span class="sxs-lookup"><span data-stu-id="b500f-189">A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-190">如果访问此属性时不存在任何事务上下文，则将创建并返回一个新的事务上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-190">If no transaction context exists when this property is accessed, a new transaction context is created and returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-191">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-191">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public static object Transaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object Transaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Transaction As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ Transaction { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : obj" Usage="System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-192">获取描述当前 COM+ DTC 事务的对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-192">Gets an object describing the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="b500f-193">表示当前事务的对象。</span><span class="sxs-lookup"><span data-stu-id="b500f-193">An object that represents the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b500f-194"><xref:System.EnterpriseServices.ITransaction>如果事务是 COM + DTC 事务，则返回的对象支持接口。</span><span class="sxs-lookup"><span data-stu-id="b500f-194">The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-195">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-195">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public static Guid TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid TransactionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : Guid" Usage="System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b500f-196">获取当前 COM+ DTC 事务的 GUID。</span><span class="sxs-lookup"><span data-stu-id="b500f-196">Gets the GUID of the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="b500f-197">一个 GUID，表示当前 COM+ DTC 事务（如果存在该事务）。</span><span class="sxs-lookup"><span data-stu-id="b500f-197">A GUID representing the current COM+ DTC transaction, if one exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b500f-198">下面的代码示例获取属性的值 <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="b500f-198">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#7](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#7)]
 [!code-csharp[EnterpriseServicesContextUtil#7](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#7)]
 [!code-vb[EnterpriseServicesContextUtil#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="b500f-199">没有可用的 COM+ 上下文。</span><span class="sxs-lookup"><span data-stu-id="b500f-199">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
