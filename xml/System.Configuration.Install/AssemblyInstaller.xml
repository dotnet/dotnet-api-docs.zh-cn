<Type Name="AssemblyInstaller" FullName="System.Configuration.Install.AssemblyInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ce4a7fd687af97d937a9f1a87a18da8cd5ad029" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89789375" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyInstaller : System.Configuration.Install.Installer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyInstaller extends System.Configuration.Install.Installer" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.AssemblyInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInstaller&#xA;Inherits Installer" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInstaller : System::Configuration::Install::Installer" />
  <TypeSignature Language="F#" Value="type AssemblyInstaller = class&#xA;    inherit Installer" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.Installer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>加载一个程序集，并运行其中的所有安装程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 在下面的示例中， <xref:System.Configuration.Install.AssemblyInstaller> 通过调用 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数来创建。 设置此对象的属性，并 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 调用和方法以安装 `MyAssembly.exe` 程序集。  
  
 [!code-cpp[AssemblyInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller/CPP/assemblyinstaller.cpp#1)]
 [!code-csharp[AssemblyInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller/CS/assemblyinstaller.cs#1)]
 [!code-vb[AssemblyInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller/VB/assemblyinstaller.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Install.AssemblyInstaller" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Install.AssemblyInstaller" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数以及 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 类的和 <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 方法 <xref:System.Configuration.Install.AssemblyInstaller> 。  
  
 <xref:System.Configuration.Install.AssemblyInstaller>通过调用构造函数来创建 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 。 设置此对象的属性，并 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 调用和方法以安装 `MyAssembly_Install.exe` 程序集。  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller (System.Reflection.Assembly assembly, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assembly As Assembly, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::Reflection::Assembly ^ assembly, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : System.Reflection.Assembly * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (assembly, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assembly">要安装的 <see cref="T:System.Reflection.Assembly" />。</param>
        <param name="commandLine">在为程序集安装创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象时要使用的命令行。 可以为 null 值。</param>
        <summary>初始化 <see cref="T:System.Configuration.Install.AssemblyInstaller" /> 类的新实例，并且指定要安装的程序集以及在创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象时要使用的命令行。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller (string filename, string[] commandLine);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string[] commandLine) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, commandLine As String())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::String ^ filename, cli::array &lt;System::String ^&gt; ^ commandLine);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : string * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (filename, commandLine)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public AssemblyInstaller (string fileName, string[] commandLine);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string[] commandLine) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, commandLine As String())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::String ^ fileName, cli::array &lt;System::String ^&gt; ^ commandLine);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : string * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (fileName, commandLine)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="commandLine" Type="System.String[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="filename">要安装的程序集的文件名。</param>
        <param name="fileName">要安装的程序集的文件名。</param>
        <param name="commandLine">在为程序集安装创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象时要使用的命令行。 可以为 null 值。</param>
        <summary>初始化 <see cref="T:System.Configuration.Install.AssemblyInstaller" /> 类的新实例，并且指定在为程序集安装创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象时要安装的程序集的文件名和要使用的命令行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 在下面的示例中， <xref:System.Configuration.Install.AssemblyInstaller> 通过 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 使用要安装的程序集和将命令行参数数组作为参数来调用构造函数来创建。  
  
 [!code-cpp[AssemblyInstaller_Uninstall#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CPP/assemblyinstaller_uninstall.cpp#1)]
 [!code-csharp[AssemblyInstaller_Uninstall#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CS/assemblyinstaller_uninstall.cs#1)]
 [!code-vb[AssemblyInstaller_Uninstall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Uninstall/VB/assemblyinstaller_uninstall.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly with get, set" Usage="System.Configuration.Install.AssemblyInstaller.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要安装的程序集。</summary>
        <value><see cref="T:System.Reflection.Assembly" />，它定义要安装的程序集。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">属性值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Reflection.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="CheckIfInstallable">
      <MemberSignature Language="C#" Value="public static void CheckIfInstallable (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIfInstallable(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckIfInstallable (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckIfInstallable(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member CheckIfInstallable : string -&gt; unit" Usage="System.Configuration.Install.AssemblyInstaller.CheckIfInstallable assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">要在其中搜索安装程序的程序集。</param>
        <summary>检查是否可以安装指定的程序集。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable%2A>方法确定是否可以安装指定的程序集。 若要避免引发异常，文件必须满足以下条件：  
  
-   文件已存在。  
  
-   文件是 .NET Framework 程序集。  
  
-   可从文件中读取公共类型。  
  
-   至少有一个公共的非抽象类扩展 <xref:System.Configuration.Install.Installer> 类并包含 <xref:System.ComponentModel.RunInstallerAttribute.Yes> 特性。  
  
-   可以创建每个安装程序的实例。  
  
> [!NOTE]
>  如果程序集有效但不包含安装程序，则会引发异常。 此行为与安装时的行为不同，因为安装空程序集不是错误。  
  
   
  
## Examples  
 在下面的示例中， <xref:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable%2A> 方法将应用于存在的程序集和不存在的程序集，并将调用结果显示到控制台。  
  
 [!code-cpp[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/CPP/assemblyinstaller_checkifinstallable.cpp#1)]
 [!code-csharp[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/CS/assemblyinstaller_checkifinstallable.cs#1)]
 [!code-vb[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/VB/assemblyinstaller_checkifinstallable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">不能安装指定的程序集。</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public string[] CommandLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommandLine" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandLine As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommandLine { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string[] with get, set" Usage="System.Configuration.Install.AssemblyInstaller.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在为程序集安装创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象时要使用的命令行。</summary>
        <value><see cref="T:System.String" /> 类型的数组，它代表在为程序集安装创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象时要使用的命令行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 在下面的示例中，的 <xref:System.Configuration.Install.AssemblyInstaller.CommandLine%2A> 属性 <xref:System.Configuration.Install.AssemblyInstaller> 设置为日志文件名称。  
  
 [!code-cpp[AssemblyInstaller_Rollback#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#3)]
 [!code-csharp[AssemblyInstaller_Rollback#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#3)]
 [!code-vb[AssemblyInstaller_Rollback#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" />，它包含安装程序集合中所有安装程序都运行后计算机的状态。</param>
        <summary>完成安装事务。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 此实例中的所有安装程序的方法都成功时，才会调用此方法 <xref:System.Configuration.Install.InstallerCollection> 。 此方法然后调用 <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 集合中每个安装程序的方法。  
  
 将您可能需要执行的任何信息存储在保存状态下的正确卸载操作 <xref:System.Collections.IDictionary> ，并将其传递给 <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> 方法。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数以及 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 类的和 <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 方法 <xref:System.Configuration.Install.AssemblyInstaller> 。  
  
 <xref:System.Configuration.Install.AssemblyInstaller>类是通过调用 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数创建的。 设置此对象的属性，并 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 调用和方法以安装 `MyAssembly_Install.exe` 程序集。  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 参数为 <see langword="null" />。  
  
- 或 - 
保存的状态 <see cref="T:System.Collections.IDictionary" /> 可能已损坏。  
  
- 或 - 
未能找到文件。</exception>
        <exception cref="T:System.Exception">该集合中的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.Committing" /> 事件处理程序出现错误。  
  
- 或 - 
该集合中的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.Committed" /> 事件处理程序出现错误。  
  
- 或 - 
在安装的 <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> 阶段发生异常。 该异常被忽略，安装继续进行。 但是，安装完成后应用程序可能无法正常工作。  
  
- 或 - 
在一个程序集中未找到安装程序类型。  
  
- 或 - 
未能创建一个安装程序类型的实例。</exception>
        <exception cref="T:System.Configuration.Install.InstallException">在安装的 <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> 阶段发生异常。 该异常被忽略，安装继续进行。 但是，安装完成后应用程序可能无法正常工作。</exception>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Configuration.Install.AssemblyInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取安装程序集合中所有安装程序的帮助文字。</summary>
        <value>安装程序集合中所有安装程序的帮助文本，包括每个安装程序的用途说明以及可以传递给每个安装程序并为其所识别的（安装程序的）命令行选项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 InstallUtil.exe 实用程序就是安装程序的一个示例。  
  
   
  
## Examples  
 在下面的示例中，的 <xref:System.Configuration.Install.AssemblyInstaller.HelpText%2A> 属性将 <xref:System.Configuration.Install.AssemblyInstaller> 显示在控制台中。  
  
 [!code-cpp[AssemblyInstaller_HelpText#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CPP/assemblyinstaller_helptext.cpp#2)]
 [!code-csharp[AssemblyInstaller_HelpText#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CS/assemblyinstaller_helptext.cs#2)]
 [!code-vb[AssemblyInstaller_HelpText#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_HelpText/VB/assemblyinstaller_helptext.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Install savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> 用于保存执行提交、回滚或卸载操作所需的信息。</param>
        <summary>执行安装。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 此实例的属性中包含的每个安装程序的方法 <xref:System.Configuration.Install.Installer.Installers%2A> 。 在 <xref:System.Collections.IDictionary> `savedState` 包含的安装程序运行后，将更新由参数指定的对象，以反映安装的状态。 如果所有 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 方法均成功，则 <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 调用方法。 否则，将 <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> 调用方法。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数以及 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 类的和 <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 方法 <xref:System.Configuration.Install.AssemblyInstaller> 。  
  
 类的对象 <xref:System.Configuration.Install.AssemblyInstaller> 是通过调用构造函数创建的 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 。 设置此对象的属性，并 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> 调用和方法以安装 "MyAssembly_Install.exe" 程序集。  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 参数为 <see langword="null" />。  
  
- 或 - 
未能找到文件。</exception>
        <exception cref="T:System.Exception">该集合的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.BeforeInstall" /> 事件处理程序发生异常。  
  
- 或 - 
该集合的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> 事件处理程序发生异常。  
  
- 或 - 
在一个程序集中未找到安装程序类型。  
  
- 或 - 
未能创建一个安装程序类型的实例。</exception>
        <block subset="none" type="usage"><para><see cref="T:System.Collections.IDictionary" /> <paramref name="savedState" /> 传递给方法时，由参数指定的不应为空 <see cref="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)" /> 。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Configuration.Install.AssemblyInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要安装的程序集的路径。</summary>
        <value>要安装的程序集的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 在下面的示例中， <xref:System.Configuration.Install.AssemblyInstaller> 通过调用 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数来创建。 <xref:System.Configuration.Install.AssemblyInstaller.Path%2A>设置此对象的属性。  
  
 [!code-cpp[AssemblyInstaller_Rollback#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#2)]
 [!code-csharp[AssemblyInstaller_Rollback#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#2)]
 [!code-vb[AssemblyInstaller_Rollback#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> 包含计算机的安装前状态。</param>
        <summary>将计算机还原为安装前的状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 回滚将计算机还原到安装前的状态。 <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A>如果 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 此 <xref:System.Configuration.Install.Installer> 实例或安装程序集合中的任何安装程序的方法无法正确运行，则调用方法。 通过在集合中调用安装程序的方法而生成的任何异常 <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> 将被忽略，并且其他安装程序的回滚将继续。  
  
   
  
## Examples  
 在下面的示例中， <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> 调用方法以撤消指定程序集上的安装过程。  
  
 [!code-cpp[AssemblyInstaller_Rollback#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#1)]
 [!code-csharp[AssemblyInstaller_Rollback#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#1)]
 [!code-vb[AssemblyInstaller_Rollback#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 参数为 <see langword="null" />。  
  
- 或 - 
保存的状态 <see cref="T:System.Collections.IDictionary" /> 可能已损坏。  
  
- 或 - 
未能找到文件。</exception>
        <exception cref="T:System.Exception">该集合的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.BeforeRollback" /> 事件处理程序发生异常。  
  
- 或 - 
该集合的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.AfterRollback" /> 事件处理程序发生异常。  
  
- 或 - 
在安装的 <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> 阶段发生异常。 该异常被忽略，回滚继续进行。 但是，回滚完成后计算机可能无法完全还原为其初始状态。  
  
- 或 - 
在一个程序集中未找到安装程序类型。  
  
- 或 - 
未能创建一个安装程序类型的实例。</exception>
        <exception cref="T:System.Configuration.Install.InstallException">在安装的 <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> 阶段发生异常。 该异常被忽略，回滚继续进行。 但是，回滚完成后计算机可能无法完全还原为其初始状态。</exception>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" />，它包含计算机的安装后状态。</param>
        <summary>移除安装。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可删除先前完成的安装。 如果 <xref:System.Configuration.Install.Installer.Uninstall%2A> 集合中的某个安装程序的方法失败，仍将为其余的安装程序调用该方法。 如果卸载失败，则不会将计算机回滚到其预卸载状态。  
  
> [!NOTE]
>  尽管 <xref:System.Configuration.Install.Installer.Install%2A> 和 <xref:System.Configuration.Install.Installer.Commit%2A> 方法在安装之后保存计算机的状态，但在 <xref:System.Collections.IDictionary> `savedState` 安装完成后，可能会在某个时间点删除包含参数的文件。 如果文件已删除，则 `savedState` 参数为 `null` 。  
  
   
  
## Examples  
 在下面的示例中，在 <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> 安装并提交作为参数传递给构造函数的程序集后，将调用方法。  
  
 [!code-cpp[AssemblyInstaller_Uninstall#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CPP/assemblyinstaller_uninstall.cpp#2)]
 [!code-csharp[AssemblyInstaller_Uninstall#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CS/assemblyinstaller_uninstall.cs#2)]
 [!code-vb[AssemblyInstaller_Uninstall#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Uninstall/VB/assemblyinstaller_uninstall.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">保存的状态 <see cref="T:System.Collections.IDictionary" /> 可能已损坏。  
  
- 或 - 
未能找到文件。</exception>
        <exception cref="T:System.Exception">该集合中的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" /> 事件处理程序出现错误。  
  
- 或 - 
该集合中的一个安装程序的 <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> 事件处理程序出现错误。  
  
- 或 - 
卸载时发生异常。 该异常被忽略，卸载继续进行。 但是，卸载完成后应用程序可能未完全卸载。  
  
- 或 - 
在一个程序集中未找到安装程序类型。  
  
- 或 - 
未能创建一个安装程序类型的实例。  
  
- 或 - 
未能删除文件。</exception>
        <exception cref="T:System.Configuration.Install.InstallException">卸载时发生异常。 该异常被忽略，卸载继续进行。 但是，卸载完成后应用程序可能未完全卸载。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseNewContext">
      <MemberSignature Language="C#" Value="public bool UseNewContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNewContext" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.UseNewContext" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNewContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNewContext { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNewContext : bool with get, set" Usage="System.Configuration.Install.AssemblyInstaller.UseNewContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否为程序集安装创建新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象。</summary>
        <value>如果要为程序集安装创建一个新的 <see cref="T:System.Configuration.Install.InstallContext" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置此属性将 `true` 创建名为 "{Assembly name}" 的新文件。Installutil.installlog "来记录此程序集的消息。 <xref:System.Configuration.Install.AssemblyInstaller.UseNewContext%2A>用于 `false` 阻止创建新文件的设置。  
  
   
  
## Examples  
 在下面的示例中， <xref:System.Configuration.Install.AssemblyInstaller> 通过调用 <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> 构造函数来创建。 <xref:System.Configuration.Install.AssemblyInstaller.UseNewContext%2A>此对象的属性设置为 `true` ，并对 <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> 该 `MyAssembly_HelpText.exe` 程序集调用方法。 由于此原因，日志消息显示在控制台上。  
  
 [!code-cpp[AssemblyInstaller_HelpText#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CPP/assemblyinstaller_helptext.cpp#1)]
 [!code-csharp[AssemblyInstaller_HelpText#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CS/assemblyinstaller_helptext.cs#1)]
 [!code-vb[AssemblyInstaller_HelpText#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_HelpText/VB/assemblyinstaller_helptext.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
