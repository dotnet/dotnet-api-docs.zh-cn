<Type Name="InstallException" FullName="System.Configuration.Install.InstallException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c07507f8066bf4e9af1020eac7aa0022100ca6b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83938598" /></Metadata><TypeSignature Language="C#" Value="public class InstallException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InstallException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallException" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallException : SystemException" />
  <TypeSignature Language="F#" Value="type InstallException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在安装的提交、回滚或卸载阶段发生错误时引发的异常。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例加上 <xref:System.Configuration.Install.InstallException.%23ctor%2A> 构造函数中的示例，共同构成了一个示例，其中显示了一个具有自己的安装程序的程序集。 安装程序名为 `MyInstaller`，该属性具有 `RunInstallerAttribute`属性，指示此安装程序将由[installutil.exe （安装程序工具）](/dotnet/framework/tools/installutil-exe-installer-tool)调用。 [Installutil.exe （安装程序工具）](/dotnet/framework/tools/installutil-exe-installer-tool)调用 <xref:System.Configuration.Install.Installer.Commit%2A>、<xref:System.Configuration.Install.Installer.Rollback%2A>、<xref:System.Configuration.Install.Installer.Install%2A> 和 <xref:System.Configuration.Install.Installer.Uninstall%2A>的方法。 <xref:System.Configuration.Install.Installer.Commit%2A> 中的代码假定在可以提交程序集之前存在名为 `FileDoesNotExist.txt` 的文件。 如果 `FileDoesNotExist.txt` 的文件不存在，<xref:System.Configuration.Install.Installer.Commit%2A> 会引发 <xref:System.Configuration.Install.InstallException>。 这种情况同样适用于 <xref:System.Configuration.Install.Installer.Uninstall%2A> 仅当名为 `FileDoesNotExist.txt` 的文件存在时才会发生卸载。 否则，会引发 <xref:System.Configuration.Install.InstallException>。 在 <xref:System.Configuration.Install.Installer.Rollback%2A>中，将执行代码片段，这可能会引发异常。 如果引发异常，则将捕获该异常，并在传递给它的异常引发 <xref:System.Configuration.Install.InstallException>。  
  
> [!NOTE]
>  在 Installutil.exe 的帮助下运行此示例。 在命令提示符下键入以下命令：  
  
 `Installutil InstallException.exe`  
  
 - 或 -  
  
 `Installutil /u InstallException.exe`  
  
 [!code-cpp[InstallException#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#1)]
 [!code-csharp[InstallException#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#1)]
 [!code-vb[InstallException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
    <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallException" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示了 <xref:System.Configuration.Install.InstallException.%23ctor%2A> 构造函数。 它是 <xref:System.Configuration.Install.InstallException> 类的示例的一部分。  
  
 在此示例中，Installutil.exe 调用 <xref:System.Configuration.Install.Installer.Commit%2A> 方法。 <xref:System.Configuration.Install.Installer.Commit%2A> 中的代码假定在可以提交程序集之前存在名为 `FileDoesNotExist.txt` 的文件。 如果 `FileDoesNotExist.txt` 的文件不存在，<xref:System.Configuration.Install.Installer.Commit%2A> 会引发 <xref:System.Configuration.Install.InstallException>。  
  
> [!NOTE]
>  此示例演示如何使用 <xref:System.Configuration.Install.InstallException> 构造函数的重载版本之一。 有关可能可用的其他示例，请参阅各个重载主题。  
  
 [!code-cpp[InstallException#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#2)]
 [!code-csharp[InstallException#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#2)]
 [!code-vb[InstallException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallException : string -&gt; System.Configuration.Install.InstallException" Usage="new System.Configuration.Install.InstallException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">要显示给用户的消息。</param>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallException" /> 类的新实例，并指定要显示给用户的消息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示了 <xref:System.Configuration.Install.InstallException.%23ctor%2A> 构造函数。 它是 <xref:System.Configuration.Install.InstallException> 类的示例的一部分。  
  
 在此示例中，Installutil.exe 调用 <xref:System.Configuration.Install.Installer.Uninstall%2A> 方法。 仅当名为 `FileDoesNotExist.txt` 的文件存在时才会发生卸载。 否则，会引发 <xref:System.Configuration.Install.InstallException>。  
  
> [!NOTE]
>  此示例演示如何使用 <xref:System.Configuration.Install.InstallException> 构造函数的重载版本之一。 有关可能可用的其他示例，请参阅各个重载主题。  
  
 [!code-cpp[InstallException#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#4)]
 [!code-csharp[InstallException#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#4)]
 [!code-vb[InstallException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstallException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstallException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Configuration.Install.InstallException" Usage="new System.Configuration.Install.InstallException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">包含有关源或目标的上下文信息的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>使用序列化数据初始化 <see cref="T:System.Configuration.Install.InstallException" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallException : string * Exception -&gt; System.Configuration.Install.InstallException" Usage="new System.Configuration.Install.InstallException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">要显示给用户的消息。</param>
        <param name="innerException">引起当前异常的异常。 如果 <paramref name="innerException" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</param>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallException" /> 类的新实例，并指定要向用户显示的消息，以及对作为该异常原因的内部异常的引用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
