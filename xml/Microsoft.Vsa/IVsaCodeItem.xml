<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e60214d0bdd16f7e1fabde2ee1729c52b35a600d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86683020" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf8f6-101">表示要通过脚本引擎编译的代码项。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-101">Represents a code item to be compiled by the script engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cf8f6-102">指定的代码项可以包含类、模块或其他源文本。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-102">The specified code item can contain classes, modules, or other source text.</span></span>

<span data-ttu-id="cf8f6-103">调用 IVsaCodeItem 接口的任何成员都不需要任何权限。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-103">No permissions are required for calling any members of the IVsaCodeItem interface.</span></span>

<span data-ttu-id="cf8f6-104">脚本引擎实现此接口以便添加代码项。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-104">The script engine implements this interface in order to add code items.</span></span>

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName"><span data-ttu-id="cf8f6-105">事件源的编程名称。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-105">A programmatic name of the event source.</span></span></param>
        <param name="eventSourceType"><span data-ttu-id="cf8f6-106">事件源的类型名称。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-106">The type name of the event source.</span></span></param>
        <summary><span data-ttu-id="cf8f6-107">将事件源添加到代码项中。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-107">Adds an event source to the code item.</span></span> <span data-ttu-id="cf8f6-108">代码项通过调用 IVsaSite.GetEventSourceInstance 方法（由宿主实现），使用事件源将事件挂钩到命名事件源。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-108">The code item uses the event source to hook up an event to the named event source by calling the IVsaSite.GetEventSourceInstance method, which is implemented by the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cf8f6-109">脚本引擎使用 AddEventSource 方法提供的信息将事件挂钩到命名事件源。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-109">The script engine uses information provided by the AddEventSource method to hook up events to the named event source.</span></span> <span data-ttu-id="cf8f6-110">它通过调用由主机实现的 (由. Ivsasite.geteventsourceinstance 方法获取事件源。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-110">It obtains event sources by calling the IVsaSite.GetEventSourceInstance method, which is implemented by the host.</span></span> <span data-ttu-id="cf8f6-111">AddEventSource 方法创建一个类，用于处理由宿主提供的对象引发的事件。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-111">The AddEventSource method creates a class that handles events raised by a host-provided object.</span></span>

> [!NOTE]
> <span data-ttu-id="cf8f6-112">JScript .NET 脚本引擎不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-112">The JScript .NET script engine does not support this method.</span></span> <span data-ttu-id="cf8f6-113">如果 JScript .NET 引擎必须挂钩某个事件，则必须使用全局项来执行此操作。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-113">In cases where the JScript .NET engine must hook up an event, you must do so using a global item.</span></span> <span data-ttu-id="cf8f6-114">JScript .NET 引擎使用 AppGlobal 项类型，而不是事件源。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-114">Rather than event sources, the JScript .NET engine uses AppGlobal item types.</span></span> <span data-ttu-id="cf8f6-115">有关详细信息，请参阅 VsaItemType。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-115">For more information, see VsaItemType.</span></span>


<span data-ttu-id="cf8f6-116">在代码项中，你可以按名称访问事件源对象，并可在访问后针对对象编写事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-116">Within the code item, you can access the event source object by name, and, once accessed, you can write event handlers against the object.</span></span> <span data-ttu-id="cf8f6-117">事件源类型作为字符串（而不是类型对象）传递，以方便非托管主机实现事件源。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-117">The event source type is passed as a string rather than as a Type object to facilitate implementing event sources by unmanaged hosts.</span></span>

<span data-ttu-id="cf8f6-118">编译器使用 eventSourceType 参数绑定到类型所提供的方法。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-118">The compiler uses the eventSourceType parameter to bind to methods provided by the type.</span></span> <span data-ttu-id="cf8f6-119">稍后在脚本引擎调用 (由. Ivsasite.geteventsourceinstance 方法请求类型对象的实例时，也会使用此方法。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-119">It is also used later when the script engine calls the IVsaSite.GetEventSourceInstance method to request an instance of the Type object.</span></span>

<span data-ttu-id="cf8f6-120">有关为脚本引擎挂接事件的机制的详细信息，请参阅 (由. Ivsasite.geteventsourceinstance 方法。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-120">For more information about the mechanisms for hooking up events for the script engine, see the IVsaSite.GetEventSourceInstance method.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="cf8f6-121">要追加到代码项的文本。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-121">The text to be appended to the code item.</span></span></param>
        <summary><span data-ttu-id="cf8f6-122">将指定的文本追加到代码项尾部。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-122">Appends specified text to the end of the code item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cf8f6-123">追加的源文本不会进行验证。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-123">Appended source text is not subjected to validation.</span></span> <span data-ttu-id="cf8f6-124">出于此原因，错误（如果有）将在下一次调用 IVsaEngine 方法时出现。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-124">For this reason, errors, if any, will surface on the next call to the IVsaEngine.Compile method.</span></span>

<span data-ttu-id="cf8f6-125">追加的源文本以单个字符串的形式提供。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-125">The appended source text is provided as a single string.</span></span> <span data-ttu-id="cf8f6-126">如果字符串需要任何格式，则必须自行提供。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-126">Should the string require any formatting, you must provide this yourself.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf8f6-127">获取在代码项中表示的代码文档对象模型 (CodeDOM)。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-127">Gets the code document object model (CodeDOM) represented in the code item.</span></span></summary>
        <value><span data-ttu-id="cf8f6-128">代码项的 CodeDOM。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-128">The CodeDOM for the code item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cf8f6-129">CodeDOM 属性通常作为脚本引擎的编译步骤的一部分生成，因此在调用 IVsaEngine 方法之前，该属性不可用。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-129">The CodeDOM property is typically generated as part of the compilation step of the script engine, so it is not available until after a call to the IVsaEngine.Compile method.</span></span> <span data-ttu-id="cf8f6-130">某些 VSA 实现可能能够动态提供 CodeDOM，无需显式编译步骤，但主机不能依赖于这种行为。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-130">Some VSA implementations may be able to provide the CodeDOM dynamically, without the need for an explicit compilation step, but hosts cannot rely on this behavior.</span></span> <span data-ttu-id="cf8f6-131">某些脚本引擎（例如，JScript .NET 脚本引擎）不支持此行为。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-131">Some script engines, for example, the JScript .NET script engine, do not support this behavior.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName"><span data-ttu-id="cf8f6-132">要移除的事件源的编程名称。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-132">The programmatic name of the event source to be removed.</span></span></param>
        <summary><span data-ttu-id="cf8f6-133">从代码项中移除指定的事件源。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-133">Removes the specified event source from the code item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cf8f6-134">删除事件源不会从源文本中删除基础事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-134">Removing an event source does not remove the underlying event handler from source text.</span></span> <span data-ttu-id="cf8f6-135">相反，事件不再向事件处理程序引发通知。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-135">Rather, events no longer raise notifications to the event handler.</span></span> <span data-ttu-id="cf8f6-136">因此，如果删除事件源但将基础函数保留在源代码中，则会收到编译器错误。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-136">Therefore, you will get a compiler error if you delete an event source but leave the underlying function in the source code.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf8f6-137">获取或设置指定的代码项的文本，包括自动生成的代码（如果有）。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-137">Gets or sets the text of a specified code item, including auto-generated code, if any.</span></span></summary>
        <value><span data-ttu-id="cf8f6-138">代码项的源文本。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-138">The source text of the code item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="cf8f6-139">设置此属性时，不会对文本进行验证。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-139">When you set this property, the text is not subjected to validation.</span></span> <span data-ttu-id="cf8f6-140">出于此原因，错误（如果有）将在下一次调用 IVsaEngine 方法时出现。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-140">For this reason, errors, if any, will surface on the next call to the IVsaEngine.Compile method.</span></span>

<span data-ttu-id="cf8f6-141">SourceText 属性以一个大字符串的形式返回源文本，包括格式化字符，如回车符。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-141">The SourceText property returns the source text in one large string, including formatting characters such as carriage returns.</span></span>

<span data-ttu-id="cf8f6-142">若要获取此属性，引擎不能关闭。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-142">To get this property the engine must not be closed.</span></span> <span data-ttu-id="cf8f6-143">若要设置此属性，引擎不得关闭，并且引擎不得运行。</span><span class="sxs-lookup"><span data-stu-id="cf8f6-143">To set this property the engine must not be closed, and the engine must not be running.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
