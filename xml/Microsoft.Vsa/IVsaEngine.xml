<Type Name="IVsaEngine" FullName="Microsoft.Vsa.IVsaEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="154d2bad6cefcbe1646e90fe5f24c9a5c2aada54" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89966578" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaEngine" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaEngine" />
  <TypeSignature Language="F#" Value="type IVsaEngine = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("E0C0FFE1-7eea-4ee2-b7e4-0080c7eb0b74")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("E0C0FFE1-7eea-4ee2-b7e4-0080c7eb0b74")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0863d-101">定义脚本引擎必须支持的方法和属性，并提供对脚本引擎的编程访问。</span><span class="sxs-lookup"><span data-stu-id="0863d-101">Defines the methods and properties that a script engine must support and provides programmatic access to the script engine.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="Microsoft.Vsa.IVsaEngine.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-102">获取由 <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> 方法生成的运行程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="0863d-102">Gets a reference to the running assembly generated by the <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> method.</span></span></summary>
        <value><span data-ttu-id="0863d-103">对当前正在运行的程序集的引用。</span><span class="sxs-lookup"><span data-stu-id="0863d-103">Reference to the currently running assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iVsaEngine.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0863d-104">关闭脚本引擎并释放所有资源。</span><span class="sxs-lookup"><span data-stu-id="0863d-104">Closes the script engine and releases all resources.</span></span> <span data-ttu-id="0863d-105">如果脚本引擎当前正在运行，则首先调用 <see cref="M:Microsoft.Vsa.IVsaEngine.Reset" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="0863d-105">If the script engine is currently running, the <see cref="M:Microsoft.Vsa.IVsaEngine.Reset" /> method is called first.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iVsaEngine.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0863d-106">使脚本引擎编译现有的源状态。</span><span class="sxs-lookup"><span data-stu-id="0863d-106">Causes the script engine to compile the existing source state.</span></span></summary>
        <returns><span data-ttu-id="0863d-107">成功编译时，返回 <see langword="true" />，这表示可以在新编译的程序集上调用 <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="0863d-107"><see langword="true" /> on successful compilation, indicating that the <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> method can be called on the newly compiled assembly.</span></span> <span data-ttu-id="0863d-108">如果编译失败，则返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0863d-108"><see langword="false" /> if the compilation failed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence with get, set" Usage="Microsoft.Vsa.IVsaEngine.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-109">提供用于验证当前对象的标识的证据。</span><span class="sxs-lookup"><span data-stu-id="0863d-109">Provides evidence for the purpose of validating the current object's identity.</span></span></summary>
        <value><span data-ttu-id="0863d-110">对证据对象的引用。</span><span class="sxs-lookup"><span data-stu-id="0863d-110">A reference to an Evidence object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDebugInfo">
      <MemberSignature Language="C#" Value="public bool GenerateDebugInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateDebugInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.GenerateDebugInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateDebugInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateDebugInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateDebugInfo : bool with get, set" Usage="Microsoft.Vsa.IVsaEngine.GenerateDebugInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-111">获取或设置指示脚本引擎是否会在调用 <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> 方法时产生调试信息的布尔值。</span><span class="sxs-lookup"><span data-stu-id="0863d-111">Gets or sets a Boolean value that signifies whether the script engine produces debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public object GetOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.GetOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOption : string -&gt; obj" Usage="iVsaEngine.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0863d-112">要获取的选项的名称。</span><span class="sxs-lookup"><span data-stu-id="0863d-112">The name of the option to get.</span></span></param>
        <summary><span data-ttu-id="0863d-113">获取脚本引擎实现特定的选项。</span><span class="sxs-lookup"><span data-stu-id="0863d-113">Gets implementation-specific options for a script engine.</span></span></summary>
        <returns><span data-ttu-id="0863d-114">选项的值。</span><span class="sxs-lookup"><span data-stu-id="0863d-114">The value of the option.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitNew">
      <MemberSignature Language="C#" Value="public void InitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.InitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitNew();" />
      <MemberSignature Language="F#" Value="abstract member InitNew : unit -&gt; unit" Usage="iVsaEngine.InitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0863d-115">提供有关初始化阶段已完成并且已准备好脚本引擎来添加 <see cref="T:Microsoft.Vsa.IVsaItem" /> 对象的通知。</span><span class="sxs-lookup"><span data-stu-id="0863d-115">Provides a notification that the initialization phase is complete and that the script engine is prepared for the addition of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="Microsoft.Vsa.IVsaEngine.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-116">获取一个值，该值指示在调用 <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> 方法时是否将脚本引擎设置为生成调试信息。</span><span class="sxs-lookup"><span data-stu-id="0863d-116">Gets a value that indicates whether the script engine is set to produce debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called.</span></span></summary>
        <value><span data-ttu-id="0863d-117"><see langword="true" /> 如果脚本引擎设置为在调用方法时生成调试信息 <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> ，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="0863d-117"><see langword="true" /> if the script engine is set to produce debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Vsa.IVsaEngine.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-118">获取一个值，该值指示脚本引擎的源状态是否自上次保存操作或是自最初加载脚本引擎以来已更改。</span><span class="sxs-lookup"><span data-stu-id="0863d-118">Gets a value that indicates whether the script engine's source state has changed since the last save operation, or since the script engine was originally loaded.</span></span></summary>
        <value><span data-ttu-id="0863d-119"><see langword="true" /> 如果脚本引擎标记为 "已修改" (即 "脏" ) ;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="0863d-119"><see langword="true" /> if the script engine is marked as modified (that is, "dirty"); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0863d-120">默认值是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0863d-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Microsoft.Vsa.IVsaEngine.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-121">获取一个值，该值指示脚本引擎当前是否处于运行模式。</span><span class="sxs-lookup"><span data-stu-id="0863d-121">Gets a value that indicates whether the script engine is currently in run mode.</span></span></summary>
        <value><span data-ttu-id="0863d-122"><see langword="true" /> 如果脚本引擎正在运行，则为;否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="0863d-122"><see langword="true" /> if the script engine is running; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0863d-123">此属性的默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0863d-123">The default value for this property is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public bool IsValidIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidIdentifier (identifier As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidIdentifier(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="iVsaEngine.IsValidIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"><span data-ttu-id="0863d-124">作为标识符提供的字符串值。</span><span class="sxs-lookup"><span data-stu-id="0863d-124">A string value provided as identifier.</span></span></param>
        <summary><span data-ttu-id="0863d-125">检查提供的标识符是否对脚本引擎有效。</span><span class="sxs-lookup"><span data-stu-id="0863d-125">Checks whether the supplied identifier is valid for the script engine.</span></span></summary>
        <returns><span data-ttu-id="0863d-126">如果标识符有效，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0863d-126"><see langword="true" /> if the identifier is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaItems Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vsa.IVsaItems Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IVsaItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::IVsaItems ^ Items { Microsoft::Vsa::IVsaItems ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : Microsoft.Vsa.IVsaItems" Usage="Microsoft.Vsa.IVsaEngine.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.IVsaItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-127">获取 <see cref="T:Microsoft.Vsa.IVsaItems" /> 对象的 <see cref="T:Microsoft.Vsa.IVsaItem" /> 集合，这些对象表示使用 CreateItem 方法添加到脚本引擎的所有项，包括代码项、引用项和全局项。</span><span class="sxs-lookup"><span data-stu-id="0863d-127">Gets the <see cref="T:Microsoft.Vsa.IVsaItems" /> collection of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects, which represent all items added to the script engine using the CreateItem method, including code items, reference items, and global items.</span></span></summary>
        <value><span data-ttu-id="0863d-128">使用 CreateItem 方法添加到脚本引擎的所有项的集合，包括代码项、引用项和全局项。</span><span class="sxs-lookup"><span data-stu-id="0863d-128">A collection of all items added to the script engine using the CreateItem method, including code items, reference items, and global items.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="Microsoft.Vsa.IVsaEngine.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-129">获取脚本引擎支持的编程语言的非本地化名称。</span><span class="sxs-lookup"><span data-stu-id="0863d-129">Gets the non-localized name of the programming language supported by the script engine.</span></span></summary>
        <value><span data-ttu-id="0863d-130">脚本引擎支持的编程语言的英文名称。</span><span class="sxs-lookup"><span data-stu-id="0863d-130">The English-language name of the programming language supported by the script engine.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="Microsoft.Vsa.IVsaEngine.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-131">获取或设置在报告异常消息时所使用的地理区域设置和语言。</span><span class="sxs-lookup"><span data-stu-id="0863d-131">Gets or sets the geographical locale and language in which to report exception messages.</span></span></summary>
        <value><span data-ttu-id="0863d-132">表示要在其中报告异常消息的区域设置的整数值。</span><span class="sxs-lookup"><span data-stu-id="0863d-132">An integer value representing the locale in which exception messages are to be reported.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSourceState">
      <MemberSignature Language="C#" Value="public void LoadSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.LoadSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member LoadSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="iVsaEngine.LoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="0863d-133">从中加载指定源项的站点。</span><span class="sxs-lookup"><span data-stu-id="0863d-133">The site from which the specified source items is loaded.</span></span></param>
        <summary><span data-ttu-id="0863d-134">指示脚本引擎按照实现 <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> 接口的宿主提供对象的指定，从持久性点加载源项。</span><span class="sxs-lookup"><span data-stu-id="0863d-134">Directs the script engine to load source items from their point of persistence, as specified by the host-provided object that implements the <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-135">获取或设置脚本引擎的显示名称，该名称主要用于在托管环境中向用户标识各个脚本引擎。</span><span class="sxs-lookup"><span data-stu-id="0863d-135">Gets or sets the display name of the script engine that is used primarily for identifying individual script engines to users in a hosted environment.</span></span></summary>
        <value><span data-ttu-id="0863d-136">脚本引擎的 Name 属性的值，该值可能为空字符串。</span><span class="sxs-lookup"><span data-stu-id="0863d-136">The value of the script engine's Name property, which may be the empty string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iVsaEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0863d-137">从运行状态中移除脚本引擎，并自动断开与绑定事件处理程序的连接。</span><span class="sxs-lookup"><span data-stu-id="0863d-137">Removes the script engine from the running state and disconnects automatically bound event handlers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeCache">
      <MemberSignature Language="C#" Value="public void RevokeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.RevokeCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeCache();" />
      <MemberSignature Language="F#" Value="abstract member RevokeCache : unit -&gt; unit" Usage="iVsaEngine.RevokeCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0863d-138">为脚本引擎将缓存程序集无效化，由其根名字对象指定。</span><span class="sxs-lookup"><span data-stu-id="0863d-138">Invalidates the cached assembly for a script engine, as specified by its root moniker.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMoniker">
      <MemberSignature Language="C#" Value="public string RootMoniker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootMoniker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />
      <MemberSignature Language="VB.NET" Value="Public Property RootMoniker As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootMoniker { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootMoniker : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.RootMoniker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-139">获取或设置脚本引擎的根名字对象。</span><span class="sxs-lookup"><span data-stu-id="0863d-139">Gets or sets a script engine's root moniker.</span></span></summary>
        <value><span data-ttu-id="0863d-140">RootMoniker 属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="0863d-140">The current value of the RootMoniker property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-141">获取或设置脚本引擎使用的根命名空间。</span><span class="sxs-lookup"><span data-stu-id="0863d-141">Gets or sets the root namespace used by the script engine.</span></span></summary>
        <value><span data-ttu-id="0863d-142">根命名空间的字符串值。</span><span class="sxs-lookup"><span data-stu-id="0863d-142">The string value of the root namespace.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="abstract member Run : unit -&gt; unit" Usage="iVsaEngine.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0863d-143">启动脚本引擎中已编译代码的执行，并绑定所有事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="0863d-143">Initiates execution of compiled code in the script engine and binds all event handlers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompiledState">
      <MemberSignature Language="C#" Value="public void SaveCompiledState (out byte[] pe, out byte[] pdb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; pdb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCompiledState (ByRef pe As Byte(), ByRef pdb As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pdb);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompiledState : Byte[] * Byte[] -&gt; unit" Usage="iVsaEngine.SaveCompiledState (pe, pdb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]" RefType="out" />
        <Parameter Name="pdb" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe"><span data-ttu-id="0863d-144">脚本引擎的编译状态。</span><span class="sxs-lookup"><span data-stu-id="0863d-144">The compiled state of the script engine.</span></span></param>
        <param name="pdb"><span data-ttu-id="0863d-145">指定与 PE（可移植可执行文件）对应的 .PDB 文件中包含的调试信息。</span><span class="sxs-lookup"><span data-stu-id="0863d-145">Specifies debugging information contained in the .PDB file corresponding to the PE (portable executable).</span></span></param>
        <summary><span data-ttu-id="0863d-146">保存脚本引擎的编译状态；它还可选择保存调试信息。</span><span class="sxs-lookup"><span data-stu-id="0863d-146">Saves the compiled state of the script engine; optionally, it also saves debugging information.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSourceState">
      <MemberSignature Language="C#" Value="public void SaveSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SaveSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member SaveSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="iVsaEngine.SaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="0863d-147"><see cref="T:Microsoft.Vsa.IVsaPersistSite" /> 接口建立的用于保存源状态的站点。</span><span class="sxs-lookup"><span data-stu-id="0863d-147">The site established by the <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interface to which source state is saved.</span></span></param>
        <summary><span data-ttu-id="0863d-148">指示脚本引擎将其源状态保存到指定 <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0863d-148">Directs the script engine to persist its source state to the specified <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public void SetOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SetOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOption : string * obj -&gt; unit" Usage="iVsaEngine.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0863d-149">要设置的选项的名称。</span><span class="sxs-lookup"><span data-stu-id="0863d-149">The name of the option to set.</span></span></param>
        <param name="value"><span data-ttu-id="0863d-150">所设置的选项的值。</span><span class="sxs-lookup"><span data-stu-id="0863d-150">The value for the option being set.</span></span></param>
        <summary><span data-ttu-id="0863d-151">设置脚本引擎特定于实现的选项。</span><span class="sxs-lookup"><span data-stu-id="0863d-151">Sets implementation-specific options for a script engine.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaSite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vsa.IVsaSite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As IVsaSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::IVsaSite ^ Site { Microsoft::Vsa::IVsaSite ^ get(); void set(Microsoft::Vsa::IVsaSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : Microsoft.Vsa.IVsaSite with get, set" Usage="Microsoft.Vsa.IVsaEngine.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.IVsaSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-152">获取或设置由主机实现的 <see cref="T:Microsoft.Vsa.IVsaSite" /> 对象，脚本引擎使用此对象与主机通信。</span><span class="sxs-lookup"><span data-stu-id="0863d-152">Gets or sets the host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host.</span></span></summary>
        <value><span data-ttu-id="0863d-153">对当前对象的引用 <see cref="T:Microsoft.Vsa.IVsaSite" /> 。</span><span class="sxs-lookup"><span data-stu-id="0863d-153">A reference to the current <see cref="T:Microsoft.Vsa.IVsaSite" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="Microsoft.Vsa.IVsaEngine.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0863d-154">获取由该脚本引擎支持的当前版本的语言编译器，格式为 Major.Minor.Revision.Build。</span><span class="sxs-lookup"><span data-stu-id="0863d-154">Gets the current version of the language compiler supported by the script engine, in the form Major.Minor.Revision.Build.</span></span></summary>
        <value><span data-ttu-id="0863d-155">当前版本的字符串值，格式为 "主要版本. 次要版本. 内部版本. 修订版本"。</span><span class="sxs-lookup"><span data-stu-id="0863d-155">String value of the current version, in the format Major.Minor.Revision.Build.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
