<Type Name="TempFileCollection" FullName="System.CodeDom.Compiler.TempFileCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83546ad41ff244c517b2da8364f87c2b6f950546" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967832" /></Metadata><TypeSignature Language="C#" Value="public class TempFileCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.TempFileCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TempFileCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TempFileCollection : IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TempFileCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TempFileCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6bd36-101">表示临时文件的集合。</span><span class="sxs-lookup"><span data-stu-id="6bd36-101">Represents a collection of temporary files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-102"><xref:System.CodeDom.Compiler.TempFileCollection> 可用于生成唯一的文件名并跟踪文件列表。</span><span class="sxs-lookup"><span data-stu-id="6bd36-102"><xref:System.CodeDom.Compiler.TempFileCollection> can be used to generate unique file names and to keep track of a list of files.</span></span> <span data-ttu-id="6bd36-103">这对于在管理编译器生成的中间文件（有时会在使用后会删除）的列表时，这可能 <xref:System.CodeDom.Compiler.ICodeCompiler> 非常有用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-103">This can be useful to <xref:System.CodeDom.Compiler.ICodeCompiler> implementers when managing a list of compiler-generated intermediate files, which are sometimes deleted after use.</span></span>  
  
 <span data-ttu-id="6bd36-104">若要在中指定一个目录以生成唯一的临时文件名，请使用适当的重载构造函数。</span><span class="sxs-lookup"><span data-stu-id="6bd36-104">To specify a directory to generate unique temporary file names in, use an appropriately overloaded constructor.</span></span> <span data-ttu-id="6bd36-105">你还可以使用构造函数重载来指示在释放集合或调用 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 方法时，如果未指定添加到集合中的文件是否应在使用 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 或 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 方法时被删除。</span><span class="sxs-lookup"><span data-stu-id="6bd36-105">You can also use a constructor overload to indicate whether files added to the collection should, if not specified otherwise when using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> or <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods, be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.</span></span>  
  
 <span data-ttu-id="6bd36-106">使用 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 方法可将任何目录中的文件添加到 <xref:System.CodeDom.Compiler.TempFileCollection> 的实例。</span><span class="sxs-lookup"><span data-stu-id="6bd36-106">A file in any directory can be added to an instance of <xref:System.CodeDom.Compiler.TempFileCollection> using the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> method.</span></span>  
  
 <span data-ttu-id="6bd36-107">若要为特定文件扩展名的临时文件生成唯一名称，请调用 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 并指定要生成的文件名的扩展名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-107">To generate a unique name for a temporary file of a particular file extension, call <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and specify the extension of the file name to generate.</span></span> <span data-ttu-id="6bd36-108"><xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 方法将返回一个字符串，该字符串由 <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> 属性所指定的目录中指定扩展名的文件名的完整路径组成。</span><span class="sxs-lookup"><span data-stu-id="6bd36-108">The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will return a string consisting of a full path to a file name of the specified extension in the directory specified by the <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> property.</span></span> <span data-ttu-id="6bd36-109"><xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 方法将只为每个文件扩展名返回一个唯一的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-109">The <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method will only return one unique file name per file name extension.</span></span>  
  
 <span data-ttu-id="6bd36-110"><xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 和 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 方法都具有重载，可用于指定在释放集合或调用 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 方法时是否应删除文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-110">Both the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> methods have overloads that allow you to specify whether the files should be deleted when the collection is disposed or the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called.</span></span>  
  
 <span data-ttu-id="6bd36-111"><xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 方法将删除该集合中的所有文件，但标记为的文件除外。</span><span class="sxs-lookup"><span data-stu-id="6bd36-111">The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method will delete all the files in the collection except those that are marked to be kept.</span></span>  
  
 <span data-ttu-id="6bd36-112"><xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> 属性指示基文件名的完整路径，没有文件扩展名，用于生成 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 方法返回的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-112">The <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A> property indicates a full path to the base file name, without a file name extension, used to generate the file names returned by the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bd36-113">此类包含应用于所有成员的类级别的链接要求和继承要求。</span><span class="sxs-lookup"><span data-stu-id="6bd36-113">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="6bd36-114">当直接调用方或派生类不具有完全信任权限时，将引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="6bd36-114">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="6bd36-115">有关安全要求的详细信息，请参阅[链接要求](/dotnet/framework/misc/link-demands)和[继承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="6bd36-115">For details about security demands, see [Link Demands](/dotnet/framework/misc/link-demands) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bd36-116">下面的示例演示如何使用 <xref:System.CodeDom.Compiler.TempFileCollection> 类和 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 和 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6bd36-116">The following example shows the use of the <xref:System.CodeDom.Compiler.TempFileCollection> class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.</span></span>  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#1)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6bd36-117">初始化 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6bd36-117">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bd36-118">使用默认值初始化 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6bd36-118">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-119">这是一个无参数的构造函数，它使用默认设置来初始化集合。</span><span class="sxs-lookup"><span data-stu-id="6bd36-119">This is a parameterless constructor that initializes the collection with default settings.</span></span> <span data-ttu-id="6bd36-120">默认情况下，此临时文件集合会将这些文件存储在默认的临时目录中，并将在生成并使用临时文件后将其删除。</span><span class="sxs-lookup"><span data-stu-id="6bd36-120">By default, this temporary files collection will store the files in a default temporary directory and will delete the temporary files after they have been generated and used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tempDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection(System::String ^ tempDir);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.TempFileCollection : string -&gt; System.CodeDom.Compiler.TempFileCollection" Usage="new System.CodeDom.Compiler.TempFileCollection tempDir" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tempDir"><span data-ttu-id="6bd36-121">用于存储临时文件的临时目录的路径。</span><span class="sxs-lookup"><span data-stu-id="6bd36-121">A path to the temporary directory to use for storing the temporary files.</span></span></param>
        <summary><span data-ttu-id="6bd36-122">使用指定的临时目录初始化 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 类的新实例，该临时目录默认情况下设置为在生成并使用临时文件后将这些文件删除。</span><span class="sxs-lookup"><span data-stu-id="6bd36-122">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory that is set to delete the temporary files after their generation and use, by default.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TempFileCollection (string tempDir, bool keepFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tempDir, bool keepFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tempDir As String, keepFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TempFileCollection(System::String ^ tempDir, bool keepFiles);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.Compiler.TempFileCollection : string * bool -&gt; System.CodeDom.Compiler.TempFileCollection" Usage="new System.CodeDom.Compiler.TempFileCollection (tempDir, keepFiles)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tempDir" Type="System.String" />
        <Parameter Name="keepFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tempDir"><span data-ttu-id="6bd36-123">用于存储临时文件的临时目录的路径。</span><span class="sxs-lookup"><span data-stu-id="6bd36-123">A path to the temporary directory to use for storing the temporary files.</span></span></param>
        <param name="keepFiles"><span data-ttu-id="6bd36-124">如果使用临时文件后应保留它们，则为 <see langword="true" />；如果应删除临时文件，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-124"><see langword="true" /> if the temporary files should be kept after use; <see langword="false" /> if the temporary files should be deleted.</span></span></param>
        <summary><span data-ttu-id="6bd36-125">使用指定的临时目录和指定的值初始化 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 类的新实例，该值指示默认情况下生成并使用临时文件后是保留这些文件还是将它们删除。</span><span class="sxs-lookup"><span data-stu-id="6bd36-125">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> class using the specified temporary directory and specified value indicating whether to keep or delete the temporary files after their generation and use, by default.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-126">`keepFiles` 的值用于设置 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 参数。</span><span class="sxs-lookup"><span data-stu-id="6bd36-126">The value of `keepFiles` is used to set the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> parameter.</span></span> <span data-ttu-id="6bd36-127">在编译器活动完成后，将根据集合中 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 属性的值保留或删除集合中的临时文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-127">The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property in the collection.</span></span> <span data-ttu-id="6bd36-128">将每个文件添加到集合中时，<xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 的当前值将与其关联，除非它是使用具有 `keepFile` 参数的方法添加的，在这种情况下，该值用于该特定文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-128">As each file is added to the collection, the current value of <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is associated with it, unless it is added with a method that has a `keepFile` parameter, in which case that value is used for that specific file.</span></span> <span data-ttu-id="6bd36-129">调用 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 方法时，如果 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> `true`，则将删除所有文件，包括使用 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 值 `true`添加的文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-129">When the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method is called, if <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> is `true`, all files are deleted, including those added with a <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> value of `true`.</span></span> <span data-ttu-id="6bd36-130">这允许在编译后暂时保留特定文件（这些文件被标识为保留文件），以便进行错误报告，然后在不再需要时删除。</span><span class="sxs-lookup"><span data-stu-id="6bd36-130">This allows specific files, those identified as being keep files, to be temporarily retained after compilation for purposes such as error reporting, then deleted when they are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddExtension">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6bd36-131">将具有指定文件扩展名的文件名添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="6bd36-131">Adds a file name with the specified file name extension to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtension (fileExtension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddExtension(System::String ^ fileExtension);" />
      <MemberSignature Language="F#" Value="member this.AddExtension : string -&gt; string" Usage="tempFileCollection.AddExtension fileExtension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileExtension"><span data-ttu-id="6bd36-132">要添加到集合中的自动生成的临时文件的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-132">The file name extension for the auto-generated temporary file name to add to the collection.</span></span></param>
        <summary><span data-ttu-id="6bd36-133">将具有指定文件扩展名的文件名添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="6bd36-133">Adds a file name with the specified file name extension to the collection.</span></span></summary>
        <returns><span data-ttu-id="6bd36-134">刚添加到集合中的具有指定扩展名的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-134">A file name with the specified extension that was just added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-135">此方法返回具有已添加到临时文件集合中的指定扩展名的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-135">This method returns a file name with the specified extension that has been added to the temporary files collection.</span></span> <span data-ttu-id="6bd36-136">其他代码仍必须创建文件，然后才能使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-136">Other code must still create the file before it can be used.</span></span>  
  
 <span data-ttu-id="6bd36-137">对于每个文件扩展名，只能调用一次此方法，这是因为如果用相同的扩展名调用此方法，它将返回相同的名称。</span><span class="sxs-lookup"><span data-stu-id="6bd36-137">This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtension">
      <MemberSignature Language="C#" Value="public string AddExtension (string fileExtension, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddExtension(string fileExtension, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExtension (fileExtension As String, keepFile As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddExtension(System::String ^ fileExtension, bool keepFile);" />
      <MemberSignature Language="F#" Value="member this.AddExtension : string * bool -&gt; string" Usage="tempFileCollection.AddExtension (fileExtension, keepFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileExtension" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileExtension"><span data-ttu-id="6bd36-138">要添加到集合中的自动生成的临时文件的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-138">The file name extension for the auto-generated temporary file name to add to the collection.</span></span></param>
        <param name="keepFile"><span data-ttu-id="6bd36-139">如果使用后应保留文件，则为 <see langword="true" />；如果应删除文件，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-139"><see langword="true" /> if the file should be kept after use; <see langword="false" /> if the file should be deleted.</span></span></param>
        <summary><span data-ttu-id="6bd36-140">将具有指定文件扩展名的文件名添加到集合，并使用指定的值指示是删除还是保留该文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-140">Adds a file name with the specified file name extension to the collection, using the specified value indicating whether the file should be deleted or retained.</span></span></summary>
        <returns><span data-ttu-id="6bd36-141">刚添加到集合中的具有指定扩展名的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-141">A file name with the specified extension that was just added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-142">此方法返回具有已添加到临时文件集合中的指定扩展名的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-142">This method returns a file name with the specified extension that has been added to the temporary files collection.</span></span> <span data-ttu-id="6bd36-143">其他代码仍必须创建文件，然后才能使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-143">Other code must still create the file before it can be used.</span></span>  
  
 <span data-ttu-id="6bd36-144">对于每个文件扩展名，只能调用一次此方法，这是因为如果用相同的扩展名调用此方法，它将返回相同的名称。</span><span class="sxs-lookup"><span data-stu-id="6bd36-144">This method can be called only once for each file name extension, because it will return the same name if it is called with the same extension.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6bd36-145"><paramref name="fileExtension" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="6bd36-145"><paramref name="fileExtension" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFile">
      <MemberSignature Language="C#" Value="public void AddFile (string fileName, bool keepFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFile(string fileName, bool keepFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFile (fileName As String, keepFile As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFile(System::String ^ fileName, bool keepFile);" />
      <MemberSignature Language="F#" Value="member this.AddFile : string * bool -&gt; unit" Usage="tempFileCollection.AddFile (fileName, keepFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="keepFile" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="6bd36-146">要添加到集合的文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-146">The name of the file to add to the collection.</span></span></param>
        <param name="keepFile"><span data-ttu-id="6bd36-147">如果使用后应保留文件，则为 <see langword="true" />；如果应删除文件，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-147"><see langword="true" /> if the file should be kept after use; <see langword="false" /> if the file should be deleted.</span></span></param>
        <summary><span data-ttu-id="6bd36-148">将指定的文件添加到集合，并使用指定的值指示在释放集合或调用 <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> 方法时是否保留该文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-148">Adds the specified file to the collection, using the specified value indicating whether to keep the file after the collection is disposed or when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bd36-149">下面的示例演示如何使用 <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29> 方法添加要保存到集合中的文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-149">The following example shows the use of the <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%28System.String%2CSystem.Boolean%29> method to add a file that is to be kept to the collection.</span></span> <span data-ttu-id="6bd36-150">此代码示例是为 <xref:System.CodeDom.Compiler.TempFileCollection> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="6bd36-150">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.</span></span>  
  
 [!code-csharp[System.CodeDom.Compiler.TempFileCollection#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/CS/program.cs#2)]
 [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.Compiler.TempFileCollection/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6bd36-151"><paramref name="fileName" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="6bd36-151"><paramref name="fileName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="6bd36-152">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6bd36-152">-or-</span></span> 
 <span data-ttu-id="6bd36-153"><paramref name="fileName" /> 是重复项。</span><span class="sxs-lookup"><span data-stu-id="6bd36-153"><paramref name="fileName" /> is a duplicate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BasePath">
      <MemberSignature Language="C#" Value="public string BasePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BasePath" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.BasePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BasePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BasePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BasePath : string" Usage="System.CodeDom.Compiler.TempFileCollection.BasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-154">获取基文件名的完整路径，该基文件名不带文件扩展名，位于临时目录路径上，用于生成该集合的临时文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-154">Gets the full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</span></span></summary>
        <value><span data-ttu-id="6bd36-155">基文件名的完整路径，该基文件名不带文件扩展名，位于临时目录路径上，用于生成该集合的临时文件名。</span><span class="sxs-lookup"><span data-stu-id="6bd36-155">The full path to the base file name, without a file name extension, on the temporary directory path, that is used to generate temporary file names for the collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6bd36-156">如果未设置 <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> 属性或者将其设置为 <see langword="null" />，则不会将 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> 授予 <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> 属性指出的临时目录。</span><span class="sxs-lookup"><span data-stu-id="6bd36-156">If the <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> property has not been set or is set to <see langword="null" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> is not granted for the temporary directory indicated by the <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] fileNames, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(string[] fileNames, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (fileNames As String(), start As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::String ^&gt; ^ fileNames, int start);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : string[] * int -&gt; unit" Usage="tempFileCollection.CopyTo (fileNames, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileNames"><span data-ttu-id="6bd36-157">要复制到的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6bd36-157">The array of strings to copy to.</span></span></param>
        <param name="start"><span data-ttu-id="6bd36-158">数组索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="6bd36-158">The index of the array to begin copying to.</span></span></param>
        <summary><span data-ttu-id="6bd36-159">从指定的索引处开始，将集合的成员复制到指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="6bd36-159">Copies the members of the collection to the specified string, beginning at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.CodeDom.Compiler.TempFileCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-160">获取集合中文件的数目。</span><span class="sxs-lookup"><span data-stu-id="6bd36-160">Gets the number of files in the collection.</span></span></summary>
        <value><span data-ttu-id="6bd36-161">集合中的文件数。</span><span class="sxs-lookup"><span data-stu-id="6bd36-161">The number of files in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="tempFileCollection.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bd36-162">删除此集合中没有标记为保留的临时文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-162">Deletes the temporary files within this collection that were not marked to be kept.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-163"><xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 方法将检查集合中的每个文件，以逐个确定是否要保留或删除该文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-163">The <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method examines each file in the collection to determine, on an individual basis, whether the file is to be kept or deleted.</span></span> <span data-ttu-id="6bd36-164">使用采用 `keepFile` 参数的 add 方法将文件添加到集合时，可以将文件显式标记为保留。</span><span class="sxs-lookup"><span data-stu-id="6bd36-164">Files can be explicitly marked to be kept when added to the collection using add methods that take a `keepFile` parameter.</span></span> <span data-ttu-id="6bd36-165">使用没有 `keepFile` 参数的 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 重载向集合添加文件时，<xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 属性的值将用作默认的 "保留文件" 指示器。</span><span class="sxs-lookup"><span data-stu-id="6bd36-165">When adding a file to the collection using the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter the value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default keep file indicator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tempFileCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6bd36-166">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="6bd36-166"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6bd36-167">释放 <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="6bd36-167">Releases the unmanaged resources used by the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-168">此方法由 public `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-168">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6bd36-169">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="6bd36-169">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6bd36-170"><xref:System.Object.Finalize%2A> 调用 `disposing` 设置为 `false`的 `Dispose`。</span><span class="sxs-lookup"><span data-stu-id="6bd36-170"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6bd36-171">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.CodeDom.Compiler.TempFileCollection> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="6bd36-171">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.CodeDom.Compiler.TempFileCollection> references.</span></span> <span data-ttu-id="6bd36-172">此方法将调用每个被引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="6bd36-172">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6bd36-173">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-173">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="6bd36-174">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="6bd36-174">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="6bd36-175">有关如何实现 <see langword="Dispose(Boolean)" />的详细信息，请参阅[实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="6bd36-175">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="6bd36-176">有关 <see langword="Dispose" /> 和 <see cref="M:System.Object.Finalize" />的详细信息，请参阅[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="6bd36-176">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <related type="Article" href="/dotnet/standard/garbage-collection/implementing-dispose"><span data-ttu-id="6bd36-177">实现 Dispose 方法</span><span class="sxs-lookup"><span data-stu-id="6bd36-177">Implementing a Dispose method</span></span></related>
        <related type="Article" href="/dotnet/standard/garbage-collection/unmanaged"><span data-ttu-id="6bd36-178">清理非托管资源</span><span class="sxs-lookup"><span data-stu-id="6bd36-178">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TempFileCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TempFileCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tempFileCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bd36-179">在垃圾回收收回此对象之前尝试删除这些临时文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-179">Attempts to delete the temporary files before this object is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-180">此方法将重写 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>，并通过调用 `Dispose(false)`来清理资源。</span><span class="sxs-lookup"><span data-stu-id="6bd36-180">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="6bd36-181">重写 `Dispose(Boolean)` 以自定义清理。</span><span class="sxs-lookup"><span data-stu-id="6bd36-181">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="6bd36-182">应用程序代码不应调用此方法;在垃圾回收过程中会自动调用对象的 `Finalize` 方法，除非已通过调用 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 方法禁用了垃圾回收器终止。</span><span class="sxs-lookup"><span data-stu-id="6bd36-182">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6bd36-183">有关详细信息，请参阅[Finalize 方法和析构函数](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))、[清理非托管资源](/dotnet/standard/garbage-collection/unmanaged)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="6bd36-183">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tempFileCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bd36-184">获取一个枚举数，该枚举数可枚举集合的成员。</span><span class="sxs-lookup"><span data-stu-id="6bd36-184">Gets an enumerator that can enumerate the members of the collection.</span></span></summary>
        <returns><span data-ttu-id="6bd36-185">包含集合成员的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-185">An <see cref="T:System.Collections.IEnumerator" /> that contains the collection's members.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepFiles">
      <MemberSignature Language="C#" Value="public bool KeepFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepFiles" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.KeepFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepFiles : bool with get, set" Usage="System.CodeDom.Compiler.TempFileCollection.KeepFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-186">获取或设置一个值，该值指示默认情况下在调用 <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> 方法或释放集合时是否保留这些文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-186">Gets or sets a value indicating whether to keep the files, by default, when the <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> method is called or the collection is disposed.</span></span></summary>
        <value><span data-ttu-id="6bd36-187">如果应保留文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-187"><see langword="true" /> if the files should be kept; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-188">如果调用没有 `keepFile` 参数的 <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> 重载来向集合添加临时文件，则 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> 属性的值将用作默认值。</span><span class="sxs-lookup"><span data-stu-id="6bd36-188">The value of the <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> property is used as the default value when the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> overload that does not have a `keepFile` parameter is called to add a temporary file to the collection.</span></span> <span data-ttu-id="6bd36-189">集合中的每个临时文件都有一个关联的 "保留文件" 标志，该标志根据每个文件确定是否要保留或删除该文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-189">Each temporary file in the collection has an associated keep file flag that determines, on a per-file basis, whether that file is to be kept or deleted.</span></span> <span data-ttu-id="6bd36-190">编译完成后，会根据其关联的 "保留文件" 值自动保留或删除文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-190">Files are automatically kept or deleted on completion of the compilation based on their associated keep files value.</span></span> <span data-ttu-id="6bd36-191">但是，编译完成后，可以通过设置 <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false 并调用 <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> 方法来释放保留的文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-191">However, after compilation is complete, files that were kept can be released by setting <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> false and calling the <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> method.</span></span>  <span data-ttu-id="6bd36-192">这将导致删除所有文件。</span><span class="sxs-lookup"><span data-stu-id="6bd36-192">This will result in all files being deleted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int start);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, start As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int start) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="tempFileCollection.System.Collections.ICollection.CopyTo (array, start)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="6bd36-193">作为从 <see cref="T:System.Array" /> 复制的元素目标的一维 <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-193">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="6bd36-194"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="6bd36-194">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="start"><span data-ttu-id="6bd36-195">数组中从零开始的索引，在此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="6bd36-195">The zero-based index in array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="6bd36-196">从目标数组中指定的索引位置开始，将集合中的元素复制到该数组中。</span><span class="sxs-lookup"><span data-stu-id="6bd36-196">Copies the elements of the collection to an array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-197">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6bd36-197">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6bd36-198">它只能在 <xref:System.CodeDom.Compiler.TempFileCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-198">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-199">获取集合中包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="6bd36-199">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="6bd36-200"><see cref="T:System.Collections.ICollection" /> 中包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="6bd36-200">The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-201">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6bd36-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6bd36-202">它只能在 <xref:System.CodeDom.Compiler.TempFileCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-202">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-203">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="6bd36-203">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="6bd36-204">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-204"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-205">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6bd36-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6bd36-206">它只能在 <xref:System.CodeDom.Compiler.TempFileCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-206">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-207">获取可用于同步对集合的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="6bd36-207">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="6bd36-208">用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="6bd36-208">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-209">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6bd36-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6bd36-210">它只能在 <xref:System.CodeDom.Compiler.TempFileCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-210">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tempFileCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bd36-211">返回循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="6bd36-211">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="6bd36-212">一个可用于遍历集合的<see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="6bd36-212">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-213">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6bd36-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6bd36-214">它只能在 <xref:System.CodeDom.Compiler.TempFileCollection> 实例被强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-214">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="tempFileCollection.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bd36-215">执行与释放或重置非托管资源关联的应用程序定义的任务。</span><span class="sxs-lookup"><span data-stu-id="6bd36-215">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bd36-216">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="6bd36-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6bd36-217">它只能在 <xref:System.CodeDom.Compiler.TempFileCollection> 实例被强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="6bd36-217">It can be used only when the <xref:System.CodeDom.Compiler.TempFileCollection> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="TempDir">
      <MemberSignature Language="C#" Value="public string TempDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TempDir" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.TempFileCollection.TempDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TempDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TempDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TempDir : string" Usage="System.CodeDom.Compiler.TempFileCollection.TempDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bd36-218">获取用来存储临时文件的临时目录。</span><span class="sxs-lookup"><span data-stu-id="6bd36-218">Gets the temporary directory to store the temporary files in.</span></span></summary>
        <value><span data-ttu-id="6bd36-219">用来存储临时文件的临时目录。</span><span class="sxs-lookup"><span data-stu-id="6bd36-219">The temporary directory to store the temporary files in.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
