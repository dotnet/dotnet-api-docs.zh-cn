<Type Name="CodeGenerator" FullName="System.CodeDom.Compiler.CodeGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="365e36558395bc27a7eae882fe392506b5fe6c4c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86667977" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeGenerator : System.CodeDom.Compiler.ICodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeGenerator extends System.Object implements class System.CodeDom.Compiler.ICodeGenerator" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeGenerator&#xA;Implements ICodeGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGenerator abstract : System::CodeDom::Compiler::ICodeGenerator" />
  <TypeSignature Language="F#" Value="type CodeGenerator = class&#xA;    interface ICodeGenerator" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.CodeDom.Compiler.ICodeGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3d2bf-101">提供 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 接口的示例实现。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-101">Provides an example implementation of the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> interface.</span></span> <span data-ttu-id="3d2bf-102">此类为抽象类。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-103">这是一种非常有用的基类，代码生成器从派生。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-103">This is a useful base class for code generators to derive from.</span></span> <span data-ttu-id="3d2bf-104">代码生成器能够按照代码文档对象模型 (CodeDOM) 图的结构，以特定语言呈现源代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-104">Code generators are capable of rendering source code in a specific language according to the structure of a Code Document Object Model (CodeDOM) graph.</span></span> <span data-ttu-id="3d2bf-105">此类提供了许多函数和方法，可从 CodeDOM 图中生成特定类型的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-105">This class provides many functions and methods to generate specific types of code from a CodeDOM graph.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d2bf-106">此类包含应用于所有成员的类级别的链接要求和继承要求。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-106">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="3d2bf-107"><xref:System.Security.SecurityException>当直接调用方或派生类不具有完全信任权限时，将引发。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-107">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="3d2bf-108">有关安全要求的详细信息，请参阅 [链接要求](/dotnet/framework/misc/link-demands) 和 [继承要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-108">For details about security demands, see [Link Demands](/dotnet/framework/misc/link-demands) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.CodeCompiler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeGenerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d2bf-109">初始化 <see cref="T:System.CodeDom.Compiler.CodeGenerator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-109">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueOnNewLine">
      <MemberSignature Language="C#" Value="protected virtual void ContinueOnNewLine (string st);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ContinueOnNewLine(string st) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ContinueOnNewLine (st As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ContinueOnNewLine(System::String ^ st);" />
      <MemberSignature Language="F#" Value="abstract member ContinueOnNewLine : string -&gt; unit&#xA;override this.ContinueOnNewLine : string -&gt; unit" Usage="codeGenerator.ContinueOnNewLine st" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="st" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="st"><span data-ttu-id="3d2bf-110">要写在新行上的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-110">The string to write on the new line.</span></span></param>
        <summary><span data-ttu-id="3d2bf-111">生成行继续符并在新的一行上输出指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-111">Generates a line-continuation character and outputs the specified string on a new line.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d2bf-112">当实现支持行继续符的语言的代码生成器 (例如，Visual Basic) 时，此方法应输出行继续符，然后再输出换行符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-112">When implementing a code generator for a language that supports a line-continuation character (for example, Visual Basic), this method should output the line-continuation character before it outputs a newline character.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="protected abstract string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string" Usage="codeGenerator.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-113">要为其创建转义标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-113">The string to create an escaped identifier for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-114">创建指定值的转义标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-114">Creates an escaped identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-115">值的转义标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-115">The escaped identifier for the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-116"><xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A> 测试标识符是否与保留关键字或语言关键字冲突，如果是，则返回具有特定于语言的转义代码格式的等效名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-116"><xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="3d2bf-117">返回的名称被称为转义标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-117">The returned name is referred to an escaped identifier.</span></span> <span data-ttu-id="3d2bf-118">转义标识符包含相同的 `value` 内容，但包含转义代码格式设置，以使其区别于冲突关键字。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-118">The escaped identifier contains the same `value` but includes escape code formatting to differentiate it from conflicting keywords.</span></span> <span data-ttu-id="3d2bf-119">例如， `value` 前面可能有一个 at 符号 ( "@" ) 或用方括号分隔 ( "[" 和 "]" ) 以创建转义标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-119">For example, `value` could be preceded by an at sign ("@") or delimited by square brackets ("[" and "]") to create an escaped identifier.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d2bf-120">此方法的默认实现不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-120">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="protected abstract string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string" Usage="codeGenerator.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-121">要为其创建有效标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-121">A string to create a valid identifier for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-122">为指定的值创建有效标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-122">Creates a valid identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-123">该值的有效标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-123">A valid identifier for the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-124"><xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A> 测试标识符是否与保留关键字或语言关键字冲突，如果是，则返回一个不冲突的有效标识符名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-124"><xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, returns a valid identifier name that does not conflict.</span></span> <span data-ttu-id="3d2bf-125">返回的标识符包含相同的标识符 `value` ，但包含转义代码格式设置，以使其与冲突关键字区分开来。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-125">The returned identifier contains the same `value` but includes escape code formatting to differentiate it from conflicting keywords.</span></span> <span data-ttu-id="3d2bf-126">通常，如果该值需要修改，则其前面带有下划线 "_"。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-126">Typically, if the value requires modification, it is preceded by an underscore "_".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d2bf-127">此方法的默认实现不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-127">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentClass">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeTypeDeclaration CurrentClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration CurrentClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentClass As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::CodeDom::CodeTypeDeclaration ^ CurrentClass { System::CodeDom::CodeTypeDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentClass : System.CodeDom.CodeTypeDeclaration" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-128">获取当前类的代码类型声明。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-128">Gets the code type declaration for the current class.</span></span></summary>
        <value><span data-ttu-id="3d2bf-129">当前类的代码类型声明。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-129">The code type declaration for the current class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMember">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeTypeMember CurrentMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeMember CurrentMember" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentMember As CodeTypeMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::CodeDom::CodeTypeMember ^ CurrentMember { System::CodeDom::CodeTypeMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMember : System.CodeDom.CodeTypeMember" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-130">获取类的当前成员。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-130">Gets the current member of the class.</span></span></summary>
        <value><span data-ttu-id="3d2bf-131">类的当前成员。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-131">The current member of the class.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMemberName">
      <MemberSignature Language="C#" Value="protected string CurrentMemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentMemberName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentMemberName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CurrentMemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMemberName : string" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentMemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-132">获取当前成员名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-132">Gets the current member name.</span></span></summary>
        <value><span data-ttu-id="3d2bf-133">当前成员名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-133">The name of the current member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTypeName">
      <MemberSignature Language="C#" Value="protected string CurrentTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentTypeName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ CurrentTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTypeName : string" Usage="System.CodeDom.Compiler.CodeGenerator.CurrentTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-134">获取当前类名。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-134">Gets the current class name.</span></span></summary>
        <value><span data-ttu-id="3d2bf-135">当前类名。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-135">The current class name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateArgumentReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateArgumentReferenceExpression (System.CodeDom.CodeArgumentReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateArgumentReferenceExpression(class System.CodeDom.CodeArgumentReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateArgumentReferenceExpression (e As CodeArgumentReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateArgumentReferenceExpression(System::CodeDom::CodeArgumentReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateArgumentReferenceExpression : System.CodeDom.CodeArgumentReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateArgumentReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeArgumentReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-136"><see cref="T:System.CodeDom.CodeArgumentReferenceExpression" />，指示要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-136">A <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-137">为指定的参数引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-137">Generates code for the specified argument reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeArgumentReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateArrayCreateExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateArrayCreateExpression (System.CodeDom.CodeArrayCreateExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateArrayCreateExpression(class System.CodeDom.CodeArrayCreateExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateArrayCreateExpression (e As CodeArrayCreateExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateArrayCreateExpression(System::CodeDom::CodeArrayCreateExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateArrayCreateExpression : System.CodeDom.CodeArrayCreateExpression -&gt; unit" Usage="codeGenerator.GenerateArrayCreateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeArrayCreateExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-138"><see cref="T:System.CodeDom.CodeArrayCreateExpression" />，指示要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-138">A <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-139">为指定的数组创建表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-139">Generates code for the specified array creation expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeArrayCreateExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateArrayIndexerExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateArrayIndexerExpression (System.CodeDom.CodeArrayIndexerExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateArrayIndexerExpression(class System.CodeDom.CodeArrayIndexerExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateArrayIndexerExpression (e As CodeArrayIndexerExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateArrayIndexerExpression(System::CodeDom::CodeArrayIndexerExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateArrayIndexerExpression : System.CodeDom.CodeArrayIndexerExpression -&gt; unit" Usage="codeGenerator.GenerateArrayIndexerExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeArrayIndexerExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-140"><see cref="T:System.CodeDom.CodeArrayIndexerExpression" />，指示要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-140">A <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-141">为指定的数组索引器表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-141">Generates code for the specified array indexer expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeArrayIndexerExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAssignStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAssignStatement (System.CodeDom.CodeAssignStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAssignStatement(class System.CodeDom.CodeAssignStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAssignStatement (e As CodeAssignStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAssignStatement(System::CodeDom::CodeAssignStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAssignStatement : System.CodeDom.CodeAssignStatement -&gt; unit" Usage="codeGenerator.GenerateAssignStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeAssignStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-142"><see cref="T:System.CodeDom.CodeAssignStatement" />，指示要为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-142">A <see cref="T:System.CodeDom.CodeAssignStatement" /> that indicates the statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-143">为指定的赋值语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-143">Generates code for the specified assignment statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAssignStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAttachEventStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAttachEventStatement (System.CodeDom.CodeAttachEventStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAttachEventStatement(class System.CodeDom.CodeAttachEventStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAttachEventStatement (e As CodeAttachEventStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAttachEventStatement(System::CodeDom::CodeAttachEventStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAttachEventStatement : System.CodeDom.CodeAttachEventStatement -&gt; unit" Usage="codeGenerator.GenerateAttachEventStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeAttachEventStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-144"><see cref="T:System.CodeDom.CodeAttachEventStatement" />，指示要为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-144">A <see cref="T:System.CodeDom.CodeAttachEventStatement" /> that indicates the statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-145">为指定的附加事件语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-145">Generates code for the specified attach event statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttachEventStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAttributeDeclarationsEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAttributeDeclarationsEnd (System.CodeDom.CodeAttributeDeclarationCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAttributeDeclarationsEnd(class System.CodeDom.CodeAttributeDeclarationCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAttributeDeclarationsEnd (attributes As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAttributeDeclarationsEnd(System::CodeDom::CodeAttributeDeclarationCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAttributeDeclarationsEnd : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="codeGenerator.GenerateAttributeDeclarationsEnd attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-146"><see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />，指示要为其生成代码的特性块结尾。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-146">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the end of the attribute block to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-147">为指定的特性块结尾生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-147">Generates code for the specified attribute block end.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateAttributeDeclarationsStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateAttributeDeclarationsStart (System.CodeDom.CodeAttributeDeclarationCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateAttributeDeclarationsStart(class System.CodeDom.CodeAttributeDeclarationCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateAttributeDeclarationsStart (attributes As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateAttributeDeclarationsStart(System::CodeDom::CodeAttributeDeclarationCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GenerateAttributeDeclarationsStart : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="codeGenerator.GenerateAttributeDeclarationsStart attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-148"><see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />，指示要为其生成代码的特性块起始。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-148">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the start of the attribute block to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-149">为指定的特性块起始生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-149">Generates code for the specified attribute block start.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateBaseReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateBaseReferenceExpression (System.CodeDom.CodeBaseReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateBaseReferenceExpression(class System.CodeDom.CodeBaseReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateBaseReferenceExpression (e As CodeBaseReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateBaseReferenceExpression(System::CodeDom::CodeBaseReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateBaseReferenceExpression : System.CodeDom.CodeBaseReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateBaseReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeBaseReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-150"><see cref="T:System.CodeDom.CodeBaseReferenceExpression" />，指示要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-150">A <see cref="T:System.CodeDom.CodeBaseReferenceExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-151">为指定的基引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-151">Generates code for the specified base reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeBaseReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateBinaryOperatorExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateBinaryOperatorExpression (System.CodeDom.CodeBinaryOperatorExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateBinaryOperatorExpression(class System.CodeDom.CodeBinaryOperatorExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateBinaryOperatorExpression (e As CodeBinaryOperatorExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateBinaryOperatorExpression(System::CodeDom::CodeBinaryOperatorExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateBinaryOperatorExpression : System.CodeDom.CodeBinaryOperatorExpression -&gt; unit&#xA;override this.GenerateBinaryOperatorExpression : System.CodeDom.CodeBinaryOperatorExpression -&gt; unit" Usage="codeGenerator.GenerateBinaryOperatorExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeBinaryOperatorExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-152"><see cref="T:System.CodeDom.CodeBinaryOperatorExpression" />，指示要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-152">A <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-153">为指定的二进制运算符表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-153">Generates code for the specified binary operator expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3d2bf-154"><paramref name="e" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-154"><paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeBinaryOperatorExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCastExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateCastExpression (System.CodeDom.CodeCastExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCastExpression(class System.CodeDom.CodeCastExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateCastExpression (e As CodeCastExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateCastExpression(System::CodeDom::CodeCastExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCastExpression : System.CodeDom.CodeCastExpression -&gt; unit" Usage="codeGenerator.GenerateCastExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCastExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-155"><see cref="T:System.CodeDom.CodeCastExpression" />，指示要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-155">A <see cref="T:System.CodeDom.CodeCastExpression" /> that indicates the expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-156">为指定的转换表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-156">Generates code for the specified cast expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCastExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="3d2bf-157">要为其生成代码的类成员。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-157">The class member to generate code for.</span></span></param>
        <param name="writer"><span data-ttu-id="3d2bf-158">要向其输出代码的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-158">The text writer to output code to.</span></span></param>
        <param name="options"><span data-ttu-id="3d2bf-159">要在生成代码时使用的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-159">The options to use when generating the code.</span></span></param>
        <summary><span data-ttu-id="3d2bf-160">使用指定的文本编写器和代码生成器选项为指定的类成员生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-160">Generates code for the specified class member using the specified text writer and code generator options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-161">根据上下文，将以不同的方式生成成员的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-161">Code for members is generated differently depending on the context.</span></span> <span data-ttu-id="3d2bf-162">例如，接口上的方法或枚举上的字段的代码的生成方式与类上同一个成员的代码不同。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-162">For example, code for methods on an interface or fields on an enumeration is generated differently from code for the same member on a class.</span></span> <span data-ttu-id="3d2bf-163">此实现假定正在为类上下文生成成员。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-163">This implementation assumes that the member is being generated for the class context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3d2bf-164"><see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /> 属性不为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-164">The <see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /> property is not <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateComment">
      <MemberSignature Language="C#" Value="protected abstract void GenerateComment (System.CodeDom.CodeComment e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateComment(class System.CodeDom.CodeComment e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateComment (e As CodeComment)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateComment(System::CodeDom::CodeComment ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateComment : System.CodeDom.CodeComment -&gt; unit" Usage="codeGenerator.GenerateComment e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeComment" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-165">要为其生成代码的 <see cref="T:System.CodeDom.CodeComment" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-165">A <see cref="T:System.CodeDom.CodeComment" /> to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-166">为指定的注释生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-166">Generates code for the specified comment.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeComment" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCommentStatement">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCommentStatement (System.CodeDom.CodeCommentStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCommentStatement(class System.CodeDom.CodeCommentStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCommentStatement (e As CodeCommentStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCommentStatement(System::CodeDom::CodeCommentStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCommentStatement : System.CodeDom.CodeCommentStatement -&gt; unit&#xA;override this.GenerateCommentStatement : System.CodeDom.CodeCommentStatement -&gt; unit" Usage="codeGenerator.GenerateCommentStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCommentStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-167">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-167">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-168">为指定的注释语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-168">Generates code for the specified comment statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3d2bf-169"><paramref name="e" /> 的 <see cref="P:System.CodeDom.CodeCommentStatement.Comment" /> 属性未设置。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-169">The <see cref="P:System.CodeDom.CodeCommentStatement.Comment" /> property of <paramref name="e" /> is not set.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeCommentStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCommentStatements">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCommentStatements (System.CodeDom.CodeCommentStatementCollection e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCommentStatements(class System.CodeDom.CodeCommentStatementCollection e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCommentStatements (e As CodeCommentStatementCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCommentStatements(System::CodeDom::CodeCommentStatementCollection ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCommentStatements : System.CodeDom.CodeCommentStatementCollection -&gt; unit&#xA;override this.GenerateCommentStatements : System.CodeDom.CodeCommentStatementCollection -&gt; unit" Usage="codeGenerator.GenerateCommentStatements e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCommentStatementCollection" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-170">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-170">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-171">为指定的注释语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-171">Generates code for the specified comment statements.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCommentStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCompileUnit">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCompileUnit (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCompileUnit(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCompileUnit (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCompileUnit(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCompileUnit : System.CodeDom.CodeCompileUnit -&gt; unit&#xA;override this.GenerateCompileUnit : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateCompileUnit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-172">要为其生成代码的编译单元。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-172">The compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-173">为指定的编译单元生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-173">Generates code for the specified compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCompileUnitEnd">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCompileUnitEnd (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCompileUnitEnd(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCompileUnitEnd (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCompileUnitEnd(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCompileUnitEnd : System.CodeDom.CodeCompileUnit -&gt; unit&#xA;override this.GenerateCompileUnitEnd : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateCompileUnitEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-174">要为其生成代码的编译单元。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-174">The compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-175">为编译单元结尾生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-175">Generates code for the end of a compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCompileUnitStart">
      <MemberSignature Language="C#" Value="protected virtual void GenerateCompileUnitStart (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateCompileUnitStart(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateCompileUnitStart (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateCompileUnitStart(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCompileUnitStart : System.CodeDom.CodeCompileUnit -&gt; unit&#xA;override this.GenerateCompileUnitStart : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateCompileUnitStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-176">要为其生成代码的编译单元。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-176">The compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-177">为编译单元起始生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-177">Generates code for the start of a compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateConditionStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateConditionStatement (System.CodeDom.CodeConditionStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateConditionStatement(class System.CodeDom.CodeConditionStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateConditionStatement (e As CodeConditionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateConditionStatement(System::CodeDom::CodeConditionStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateConditionStatement : System.CodeDom.CodeConditionStatement -&gt; unit" Usage="codeGenerator.GenerateConditionStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeConditionStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-178">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-178">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-179">为指定的条件语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-179">Generates code for the specified conditional statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-180">对于大多数语言，此方法将为语句生成代码 `if` 。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-180">For most languages, this method will generate code for an `if` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeConditionStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateConstructor">
      <MemberSignature Language="C#" Value="protected abstract void GenerateConstructor (System.CodeDom.CodeConstructor e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateConstructor(class System.CodeDom.CodeConstructor e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateConstructor (e As CodeConstructor, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateConstructor(System::CodeDom::CodeConstructor ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateConstructor : System.CodeDom.CodeConstructor * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateConstructor (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeConstructor" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-181">要为其生成代码的构造函数。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-181">The constructor to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="3d2bf-182">此构造函数构造的对象类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-182">The type of the object that this constructor constructs.</span></span></param>
        <summary><span data-ttu-id="3d2bf-183">为指定的构造函数生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-183">Generates code for the specified constructor.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeConstructor" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDecimalValue">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDecimalValue (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDecimalValue(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDecimalValue (d As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDecimalValue(System::Decimal d);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDecimalValue : decimal -&gt; unit&#xA;override this.GenerateDecimalValue : decimal -&gt; unit" Usage="codeGenerator.GenerateDecimalValue d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="3d2bf-184">为其生成代码的十进制值。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-184">The decimal value to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-185">为指定的十进制值生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-185">Generates code for the specified decimal value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDefaultValueExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDefaultValueExpression (System.CodeDom.CodeDefaultValueExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDefaultValueExpression(class System.CodeDom.CodeDefaultValueExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDefaultValueExpression (e As CodeDefaultValueExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDefaultValueExpression(System::CodeDom::CodeDefaultValueExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDefaultValueExpression : System.CodeDom.CodeDefaultValueExpression -&gt; unit&#xA;override this.GenerateDefaultValueExpression : System.CodeDom.CodeDefaultValueExpression -&gt; unit" Usage="codeGenerator.GenerateDefaultValueExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDefaultValueExpression" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-186">要为其生成代码的引用。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-186">The reference to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-187">为对默认值的指定引用生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-187">Generates code for the specified reference to a default value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDelegateCreateExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateDelegateCreateExpression (System.CodeDom.CodeDelegateCreateExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDelegateCreateExpression(class System.CodeDom.CodeDelegateCreateExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateDelegateCreateExpression (e As CodeDelegateCreateExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateDelegateCreateExpression(System::CodeDom::CodeDelegateCreateExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDelegateCreateExpression : System.CodeDom.CodeDelegateCreateExpression -&gt; unit" Usage="codeGenerator.GenerateDelegateCreateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDelegateCreateExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-188">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-188">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-189">为指定的委托创建表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-189">Generates code for the specified delegate creation expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeDelegateCreateExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDelegateInvokeExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateDelegateInvokeExpression (System.CodeDom.CodeDelegateInvokeExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDelegateInvokeExpression(class System.CodeDom.CodeDelegateInvokeExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateDelegateInvokeExpression (e As CodeDelegateInvokeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateDelegateInvokeExpression(System::CodeDom::CodeDelegateInvokeExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDelegateInvokeExpression : System.CodeDom.CodeDelegateInvokeExpression -&gt; unit" Usage="codeGenerator.GenerateDelegateInvokeExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDelegateInvokeExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-190">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-190">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-191">为指定的委托调用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-191">Generates code for the specified delegate invoke expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeDelegateInvokeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDirectionExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDirectionExpression (System.CodeDom.CodeDirectionExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDirectionExpression(class System.CodeDom.CodeDirectionExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDirectionExpression (e As CodeDirectionExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDirectionExpression(System::CodeDom::CodeDirectionExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDirectionExpression : System.CodeDom.CodeDirectionExpression -&gt; unit&#xA;override this.GenerateDirectionExpression : System.CodeDom.CodeDirectionExpression -&gt; unit" Usage="codeGenerator.GenerateDirectionExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeDirectionExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-192">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-192">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-193">为指定的方向表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-193">Generates code for the specified direction expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeDirectionExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateDirectives">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDirectives (System.CodeDom.CodeDirectiveCollection directives);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDirectives(class System.CodeDom.CodeDirectiveCollection directives) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDirectives (directives As CodeDirectiveCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDirectives(System::CodeDom::CodeDirectiveCollection ^ directives);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDirectives : System.CodeDom.CodeDirectiveCollection -&gt; unit&#xA;override this.GenerateDirectives : System.CodeDom.CodeDirectiveCollection -&gt; unit" Usage="codeGenerator.GenerateDirectives directives" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directives" Type="System.CodeDom.CodeDirectiveCollection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directives"><span data-ttu-id="3d2bf-194">要为其生成代码的代码指令。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-194">The code directives to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-195">为指定的代码指令生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-195">Generates code for the specified code directives.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDoubleValue">
      <MemberSignature Language="C#" Value="protected virtual void GenerateDoubleValue (double d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateDoubleValue(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateDoubleValue (d As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateDoubleValue(double d);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDoubleValue : double -&gt; unit&#xA;override this.GenerateDoubleValue : double -&gt; unit" Usage="codeGenerator.GenerateDoubleValue d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="3d2bf-196">要为其生成代码的值。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-196">The value to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-197">为双精度浮点数生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-197">Generates code for a double-precision floating point number.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateEntryPointMethod">
      <MemberSignature Language="C#" Value="protected abstract void GenerateEntryPointMethod (System.CodeDom.CodeEntryPointMethod e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEntryPointMethod(class System.CodeDom.CodeEntryPointMethod e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateEntryPointMethod (e As CodeEntryPointMethod, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateEntryPointMethod(System::CodeDom::CodeEntryPointMethod ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateEntryPointMethod : System.CodeDom.CodeEntryPointMethod * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateEntryPointMethod (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeEntryPointMethod" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-198">代码的入口点。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-198">The entry point for the code.</span></span></param>
        <param name="c"><span data-ttu-id="3d2bf-199">声明类型的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-199">The code that declares the type.</span></span></param>
        <summary><span data-ttu-id="3d2bf-200">为指定的入口点方法生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-200">Generates code for the specified entry point method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeEntryPointMethod" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateEvent">
      <MemberSignature Language="C#" Value="protected abstract void GenerateEvent (System.CodeDom.CodeMemberEvent e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEvent(class System.CodeDom.CodeMemberEvent e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateEvent (e As CodeMemberEvent, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateEvent(System::CodeDom::CodeMemberEvent ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateEvent : System.CodeDom.CodeMemberEvent * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateEvent (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberEvent" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-201">要为其生成代码的成员事件。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-201">The member event to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="3d2bf-202">发生此事件的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-202">The type of the object that this event occurs on.</span></span></param>
        <summary><span data-ttu-id="3d2bf-203">为指定的事件生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-203">Generates code for the specified event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberEvent" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateEventReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateEventReferenceExpression (System.CodeDom.CodeEventReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateEventReferenceExpression(class System.CodeDom.CodeEventReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateEventReferenceExpression (e As CodeEventReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateEventReferenceExpression(System::CodeDom::CodeEventReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateEventReferenceExpression : System.CodeDom.CodeEventReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateEventReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeEventReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-204">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-204">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-205">为指定的事件引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-205">Generates code for the specified event reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeEventReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateExpression">
      <MemberSignature Language="C#" Value="protected void GenerateExpression (System.CodeDom.CodeExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateExpression(class System.CodeDom.CodeExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateExpression (e As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateExpression(System::CodeDom::CodeExpression ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateExpression : System.CodeDom.CodeExpression -&gt; unit" Usage="codeGenerator.GenerateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-206">要为其生成代码的代码表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-206">The code expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-207">为指定的代码表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-207">Generates code for the specified code expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3d2bf-208"><paramref name="e" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-208"><paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3d2bf-209"><paramref name="e" /> 不是有效的 <see cref="T:System.CodeDom.CodeStatement" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-209"><paramref name="e" /> is not a valid <see cref="T:System.CodeDom.CodeStatement" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateExpressionStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateExpressionStatement (System.CodeDom.CodeExpressionStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateExpressionStatement(class System.CodeDom.CodeExpressionStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateExpressionStatement (e As CodeExpressionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateExpressionStatement(System::CodeDom::CodeExpressionStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateExpressionStatement : System.CodeDom.CodeExpressionStatement -&gt; unit" Usage="codeGenerator.GenerateExpressionStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpressionStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-210">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-210">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-211">为指定的表达式语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-211">Generates code for the specified expression statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateField">
      <MemberSignature Language="C#" Value="protected abstract void GenerateField (System.CodeDom.CodeMemberField e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateField(class System.CodeDom.CodeMemberField e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateField (e As CodeMemberField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateField(System::CodeDom::CodeMemberField ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateField : System.CodeDom.CodeMemberField -&gt; unit" Usage="codeGenerator.GenerateField e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberField" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-212">要为其生成代码的字段。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-212">The field to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-213">为指定的成员字段生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-213">Generates code for the specified member field.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberField" />
      </Docs>
    </Member>
    <Member MemberName="GenerateFieldReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateFieldReferenceExpression (System.CodeDom.CodeFieldReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateFieldReferenceExpression(class System.CodeDom.CodeFieldReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateFieldReferenceExpression (e As CodeFieldReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateFieldReferenceExpression(System::CodeDom::CodeFieldReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateFieldReferenceExpression : System.CodeDom.CodeFieldReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateFieldReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeFieldReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-214">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-214">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-215">为指定的字段引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-215">Generates code for the specified field reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeFieldReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGotoStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateGotoStatement (System.CodeDom.CodeGotoStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateGotoStatement(class System.CodeDom.CodeGotoStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateGotoStatement (e As CodeGotoStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateGotoStatement(System::CodeDom::CodeGotoStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateGotoStatement : System.CodeDom.CodeGotoStatement -&gt; unit" Usage="codeGenerator.GenerateGotoStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeGotoStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-216">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-216">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-217">为指定的 <see langword="goto" /> 语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-217">Generates code for the specified <see langword="goto" /> statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeGotoStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateIndexerExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateIndexerExpression (System.CodeDom.CodeIndexerExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateIndexerExpression(class System.CodeDom.CodeIndexerExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateIndexerExpression (e As CodeIndexerExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateIndexerExpression(System::CodeDom::CodeIndexerExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateIndexerExpression : System.CodeDom.CodeIndexerExpression -&gt; unit" Usage="codeGenerator.GenerateIndexerExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeIndexerExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-218">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-218">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-219">为指定的索引器表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-219">Generates code for the specified indexer expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeIndexerExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateIterationStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateIterationStatement (System.CodeDom.CodeIterationStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateIterationStatement(class System.CodeDom.CodeIterationStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateIterationStatement (e As CodeIterationStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateIterationStatement(System::CodeDom::CodeIterationStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateIterationStatement : System.CodeDom.CodeIterationStatement -&gt; unit" Usage="codeGenerator.GenerateIterationStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeIterationStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-220">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-220">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-221">为指定的迭代语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-221">Generates code for the specified iteration statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-222">对于大多数语言，此方法将为 `for` 循环或循环生成代码 `while` 。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-222">For most languages, this method will generate code for a `for` loop or a `while` loop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeIterationStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateLabeledStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateLabeledStatement (System.CodeDom.CodeLabeledStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLabeledStatement(class System.CodeDom.CodeLabeledStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateLabeledStatement (e As CodeLabeledStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateLabeledStatement(System::CodeDom::CodeLabeledStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateLabeledStatement : System.CodeDom.CodeLabeledStatement -&gt; unit" Usage="codeGenerator.GenerateLabeledStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeLabeledStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-223">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-223">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-224">为指定的标记语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-224">Generates code for the specified labeled statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLabeledStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragmaEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateLinePragmaEnd (System.CodeDom.CodeLinePragma e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLinePragmaEnd(class System.CodeDom.CodeLinePragma e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateLinePragmaEnd (e As CodeLinePragma)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateLinePragmaEnd(System::CodeDom::CodeLinePragma ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateLinePragmaEnd : System.CodeDom.CodeLinePragma -&gt; unit" Usage="codeGenerator.GenerateLinePragmaEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeLinePragma" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-225">要为其生成代码的行杂注的结尾。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-225">The end of the line pragma to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-226">为指定的行杂注结尾生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-226">Generates code for the specified line pragma end.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="GenerateLinePragmaStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateLinePragmaStart (System.CodeDom.CodeLinePragma e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLinePragmaStart(class System.CodeDom.CodeLinePragma e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateLinePragmaStart (e As CodeLinePragma)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateLinePragmaStart(System::CodeDom::CodeLinePragma ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateLinePragmaStart : System.CodeDom.CodeLinePragma -&gt; unit" Usage="codeGenerator.GenerateLinePragmaStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeLinePragma" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-227">要为其生成代码的行杂注起始。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-227">The start of the line pragma to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-228">为指定的行杂注起始生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-228">Generates code for the specified line pragma start.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethod">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethod (System.CodeDom.CodeMemberMethod e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethod(class System.CodeDom.CodeMemberMethod e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethod (e As CodeMemberMethod, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethod(System::CodeDom::CodeMemberMethod ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethod : System.CodeDom.CodeMemberMethod * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateMethod (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-229">要为其生成代码的成员方法。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-229">The member method to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="3d2bf-230">发生此方法的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-230">The type of the object that this method occurs on.</span></span></param>
        <summary><span data-ttu-id="3d2bf-231">为指定的方法生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-231">Generates code for the specified method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberMethod" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethodInvokeExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethodInvokeExpression (System.CodeDom.CodeMethodInvokeExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethodInvokeExpression(class System.CodeDom.CodeMethodInvokeExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethodInvokeExpression (e As CodeMethodInvokeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethodInvokeExpression(System::CodeDom::CodeMethodInvokeExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethodInvokeExpression : System.CodeDom.CodeMethodInvokeExpression -&gt; unit" Usage="codeGenerator.GenerateMethodInvokeExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMethodInvokeExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-232">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-232">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-233">为指定的方法调用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-233">Generates code for the specified method invoke expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMethodInvokeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethodReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethodReferenceExpression (System.CodeDom.CodeMethodReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethodReferenceExpression(class System.CodeDom.CodeMethodReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethodReferenceExpression (e As CodeMethodReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethodReferenceExpression(System::CodeDom::CodeMethodReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethodReferenceExpression : System.CodeDom.CodeMethodReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateMethodReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMethodReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-234">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-234">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-235">为指定的方法引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-235">Generates code for the specified method reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMethodReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMethodReturnStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateMethodReturnStatement (System.CodeDom.CodeMethodReturnStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateMethodReturnStatement(class System.CodeDom.CodeMethodReturnStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateMethodReturnStatement (e As CodeMethodReturnStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateMethodReturnStatement(System::CodeDom::CodeMethodReturnStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateMethodReturnStatement : System.CodeDom.CodeMethodReturnStatement -&gt; unit" Usage="codeGenerator.GenerateMethodReturnStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMethodReturnStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-236">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-236">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-237">为指定的方法返回语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-237">Generates code for the specified method return statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMethodReturnStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespace">
      <MemberSignature Language="C#" Value="protected virtual void GenerateNamespace (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespace(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateNamespace (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateNamespace(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespace : System.CodeDom.CodeNamespace -&gt; unit&#xA;override this.GenerateNamespace : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespace e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-238">要为其生成代码的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-238">The namespace to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-239">为指定的命名空间生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-239">Generates code for the specified namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateNamespaceEnd (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespaceEnd(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateNamespaceEnd (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateNamespaceEnd(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespaceEnd : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespaceEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-240">要为其生成代码的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-240">The namespace to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-241">为命名空间结尾生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-241">Generates code for the end of a namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceImport">
      <MemberSignature Language="C#" Value="protected abstract void GenerateNamespaceImport (System.CodeDom.CodeNamespaceImport e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespaceImport(class System.CodeDom.CodeNamespaceImport e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateNamespaceImport (e As CodeNamespaceImport)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateNamespaceImport(System::CodeDom::CodeNamespaceImport ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespaceImport : System.CodeDom.CodeNamespaceImport -&gt; unit" Usage="codeGenerator.GenerateNamespaceImport e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespaceImport" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-242">要为其生成代码的命名空间导入。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-242">The namespace import to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-243">为指定的命名空间导入生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-243">Generates code for the specified namespace import.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespaceImport" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceImports">
      <MemberSignature Language="C#" Value="protected void GenerateNamespaceImports (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateNamespaceImports(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateNamespaceImports (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateNamespaceImports(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateNamespaceImports : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespaceImports e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-244">要为其生成代码的命名空间导入。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-244">The namespace import to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-245">为指定的命名空间导入生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-245">Generates code for the specified namespace import.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaces">
      <MemberSignature Language="C#" Value="protected void GenerateNamespaces (System.CodeDom.CodeCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateNamespaces(class System.CodeDom.CodeCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateNamespaces (e As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateNamespaces(System::CodeDom::CodeCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateNamespaces : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeGenerator.GenerateNamespaces e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-246">要为其生成命名空间的编译单元。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-246">The compile unit to generate namespaces for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-247">为指定编译单元中的命名空间生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-247">Generates code for the namespaces in the specified compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateNamespaceStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateNamespaceStart (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateNamespaceStart(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateNamespaceStart (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateNamespaceStart(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateNamespaceStart : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateNamespaceStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-248">要为其生成代码的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-248">The namespace to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-249">为命名空间起始生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-249">Generates code for the start of a namespace.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateObjectCreateExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateObjectCreateExpression (System.CodeDom.CodeObjectCreateExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateObjectCreateExpression(class System.CodeDom.CodeObjectCreateExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateObjectCreateExpression (e As CodeObjectCreateExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateObjectCreateExpression(System::CodeDom::CodeObjectCreateExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateObjectCreateExpression : System.CodeDom.CodeObjectCreateExpression -&gt; unit" Usage="codeGenerator.GenerateObjectCreateExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeObjectCreateExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-250">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-250">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-251">为指定的对象创建表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-251">Generates code for the specified object creation expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeObjectCreateExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateParameterDeclarationExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateParameterDeclarationExpression (System.CodeDom.CodeParameterDeclarationExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateParameterDeclarationExpression(class System.CodeDom.CodeParameterDeclarationExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateParameterDeclarationExpression (e As CodeParameterDeclarationExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateParameterDeclarationExpression(System::CodeDom::CodeParameterDeclarationExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateParameterDeclarationExpression : System.CodeDom.CodeParameterDeclarationExpression -&gt; unit&#xA;override this.GenerateParameterDeclarationExpression : System.CodeDom.CodeParameterDeclarationExpression -&gt; unit" Usage="codeGenerator.GenerateParameterDeclarationExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeParameterDeclarationExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-252">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-252">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-253">为指定的参数声明表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-253">Generates code for the specified parameter declaration expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpression" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePrimitiveExpression">
      <MemberSignature Language="C#" Value="protected virtual void GeneratePrimitiveExpression (System.CodeDom.CodePrimitiveExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePrimitiveExpression(class System.CodeDom.CodePrimitiveExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GeneratePrimitiveExpression (e As CodePrimitiveExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GeneratePrimitiveExpression(System::CodeDom::CodePrimitiveExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GeneratePrimitiveExpression : System.CodeDom.CodePrimitiveExpression -&gt; unit&#xA;override this.GeneratePrimitiveExpression : System.CodeDom.CodePrimitiveExpression -&gt; unit" Usage="codeGenerator.GeneratePrimitiveExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodePrimitiveExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-254">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-254">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-255">为指定的基元表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-255">Generates code for the specified primitive expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3d2bf-256"><paramref name="e" /> 使用无效的数据类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-256"><paramref name="e" /> uses an invalid data type.</span></span> <span data-ttu-id="3d2bf-257">只有以下数据类型才是有效的：</span><span class="sxs-lookup"><span data-stu-id="3d2bf-257">Only the following data types are valid:</span></span> 
<span data-ttu-id="3d2bf-258">-   string</span><span class="sxs-lookup"><span data-stu-id="3d2bf-258">-   string</span></span> 
<span data-ttu-id="3d2bf-259">-   char</span><span class="sxs-lookup"><span data-stu-id="3d2bf-259">-   char</span></span> 
<span data-ttu-id="3d2bf-260">-   byte</span><span class="sxs-lookup"><span data-stu-id="3d2bf-260">-   byte</span></span> 
<span data-ttu-id="3d2bf-261">-   Int16</span><span class="sxs-lookup"><span data-stu-id="3d2bf-261">-   Int16</span></span> 
<span data-ttu-id="3d2bf-262">-   Int32</span><span class="sxs-lookup"><span data-stu-id="3d2bf-262">-   Int32</span></span> 
<span data-ttu-id="3d2bf-263">-   Int64</span><span class="sxs-lookup"><span data-stu-id="3d2bf-263">-   Int64</span></span> 
<span data-ttu-id="3d2bf-264">-   Single</span><span class="sxs-lookup"><span data-stu-id="3d2bf-264">-   Single</span></span> 
<span data-ttu-id="3d2bf-265">-   Double</span><span class="sxs-lookup"><span data-stu-id="3d2bf-265">-   Double</span></span> 
<span data-ttu-id="3d2bf-266">-   Decimal</span><span class="sxs-lookup"><span data-stu-id="3d2bf-266">-   Decimal</span></span></exception>
        <altmember cref="T:System.CodeDom.CodePrimitiveExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProperty">
      <MemberSignature Language="C#" Value="protected abstract void GenerateProperty (System.CodeDom.CodeMemberProperty e, System.CodeDom.CodeTypeDeclaration c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateProperty(class System.CodeDom.CodeMemberProperty e, class System.CodeDom.CodeTypeDeclaration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateProperty (e As CodeMemberProperty, c As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateProperty(System::CodeDom::CodeMemberProperty ^ e, System::CodeDom::CodeTypeDeclaration ^ c);" />
      <MemberSignature Language="F#" Value="abstract member GenerateProperty : System.CodeDom.CodeMemberProperty * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateProperty (e, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeMemberProperty" />
        <Parameter Name="c" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-267">要为其生成代码的属性。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-267">The property to generate code for.</span></span></param>
        <param name="c"><span data-ttu-id="3d2bf-268">发生此属性的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-268">The type of the object that this property occurs on.</span></span></param>
        <summary><span data-ttu-id="3d2bf-269">为指定的属性生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-269">Generates code for the specified property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeMemberProperty" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePropertyReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GeneratePropertyReferenceExpression (System.CodeDom.CodePropertyReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePropertyReferenceExpression(class System.CodeDom.CodePropertyReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GeneratePropertyReferenceExpression (e As CodePropertyReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GeneratePropertyReferenceExpression(System::CodeDom::CodePropertyReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GeneratePropertyReferenceExpression : System.CodeDom.CodePropertyReferenceExpression -&gt; unit" Usage="codeGenerator.GeneratePropertyReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodePropertyReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-270">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-270">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-271">为指定的属性引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-271">Generates code for the specified property reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodePropertyReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GeneratePropertySetValueReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GeneratePropertySetValueReferenceExpression (System.CodeDom.CodePropertySetValueReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GeneratePropertySetValueReferenceExpression(class System.CodeDom.CodePropertySetValueReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GeneratePropertySetValueReferenceExpression (e As CodePropertySetValueReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GeneratePropertySetValueReferenceExpression(System::CodeDom::CodePropertySetValueReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GeneratePropertySetValueReferenceExpression : System.CodeDom.CodePropertySetValueReferenceExpression -&gt; unit" Usage="codeGenerator.GeneratePropertySetValueReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodePropertySetValueReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-272">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-272">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-273">为指定的属性设置值引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-273">Generates code for the specified property set value reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodePropertySetValueReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateRemoveEventStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateRemoveEventStatement (System.CodeDom.CodeRemoveEventStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateRemoveEventStatement(class System.CodeDom.CodeRemoveEventStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateRemoveEventStatement (e As CodeRemoveEventStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateRemoveEventStatement(System::CodeDom::CodeRemoveEventStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateRemoveEventStatement : System.CodeDom.CodeRemoveEventStatement -&gt; unit" Usage="codeGenerator.GenerateRemoveEventStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeRemoveEventStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-274">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-274">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-275">为指定的移除事件语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-275">Generates code for the specified remove event statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeRemoveEventStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSingleFloatValue">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSingleFloatValue (float s);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSingleFloatValue(float32 s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSingleFloatValue (s As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateSingleFloatValue(float s);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSingleFloatValue : single -&gt; unit&#xA;override this.GenerateSingleFloatValue : single -&gt; unit" Usage="codeGenerator.GenerateSingleFloatValue s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3d2bf-276">要为其生成代码的值。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-276">The value to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-277">为单精度浮点数生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-277">Generates code for a single-precision floating point number.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetCompileUnit">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSnippetCompileUnit (System.CodeDom.CodeSnippetCompileUnit e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetCompileUnit(class System.CodeDom.CodeSnippetCompileUnit e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSnippetCompileUnit (e As CodeSnippetCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateSnippetCompileUnit(System::CodeDom::CodeSnippetCompileUnit ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetCompileUnit : System.CodeDom.CodeSnippetCompileUnit -&gt; unit&#xA;override this.GenerateSnippetCompileUnit : System.CodeDom.CodeSnippetCompileUnit -&gt; unit" Usage="codeGenerator.GenerateSnippetCompileUnit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetCompileUnit" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-278">要为其生成代码的原义代码片段编译单元。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-278">The literal code fragment compile unit to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-279">输出指定的原义代码片段编译单元的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-279">Outputs the code of the specified literal code fragment compile unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetCompileUnit" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateSnippetExpression (System.CodeDom.CodeSnippetExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetExpression(class System.CodeDom.CodeSnippetExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateSnippetExpression (e As CodeSnippetExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateSnippetExpression(System::CodeDom::CodeSnippetExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetExpression : System.CodeDom.CodeSnippetExpression -&gt; unit" Usage="codeGenerator.GenerateSnippetExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-280">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-280">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-281">输出指定的原义代码片段表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-281">Outputs the code of the specified literal code fragment expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetMember">
      <MemberSignature Language="C#" Value="protected abstract void GenerateSnippetMember (System.CodeDom.CodeSnippetTypeMember e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetMember(class System.CodeDom.CodeSnippetTypeMember e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateSnippetMember (e As CodeSnippetTypeMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateSnippetMember(System::CodeDom::CodeSnippetTypeMember ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetMember : System.CodeDom.CodeSnippetTypeMember -&gt; unit" Usage="codeGenerator.GenerateSnippetMember e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetTypeMember" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-282">要为其生成代码的成员。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-282">The member to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-283">输出指定的原义代码片段类成员的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-283">Outputs the code of the specified literal code fragment class member.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetTypeMember" />
      </Docs>
    </Member>
    <Member MemberName="GenerateSnippetStatement">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSnippetStatement (System.CodeDom.CodeSnippetStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSnippetStatement(class System.CodeDom.CodeSnippetStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSnippetStatement (e As CodeSnippetStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateSnippetStatement(System::CodeDom::CodeSnippetStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSnippetStatement : System.CodeDom.CodeSnippetStatement -&gt; unit&#xA;override this.GenerateSnippetStatement : System.CodeDom.CodeSnippetStatement -&gt; unit" Usage="codeGenerator.GenerateSnippetStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeSnippetStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-284">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-284">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-285">输出指定的原义代码片段语句的代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-285">Outputs the code of the specified literal code fragment statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeSnippetStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateStatement">
      <MemberSignature Language="C#" Value="protected void GenerateStatement (System.CodeDom.CodeStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateStatement(class System.CodeDom.CodeStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateStatement (e As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateStatement(System::CodeDom::CodeStatement ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateStatement : System.CodeDom.CodeStatement -&gt; unit" Usage="codeGenerator.GenerateStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-286">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-286">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-287">为指定的语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-287">Generates code for the specified statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3d2bf-288"><paramref name="e" /> 不是有效的 <see cref="T:System.CodeDom.CodeStatement" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-288"><paramref name="e" /> is not a valid <see cref="T:System.CodeDom.CodeStatement" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateStatements">
      <MemberSignature Language="C#" Value="protected void GenerateStatements (System.CodeDom.CodeStatementCollection stms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateStatements(class System.CodeDom.CodeStatementCollection stms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateStatements (stms As CodeStatementCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateStatements(System::CodeDom::CodeStatementCollection ^ stms);" />
      <MemberSignature Language="F#" Value="member this.GenerateStatements : System.CodeDom.CodeStatementCollection -&gt; unit" Usage="codeGenerator.GenerateStatements stms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stms" Type="System.CodeDom.CodeStatementCollection" />
      </Parameters>
      <Docs>
        <param name="stms"><span data-ttu-id="3d2bf-289">要为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-289">The statements to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-290">为指定的语句集合生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-290">Generates code for the specified statement collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="GenerateThisReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateThisReferenceExpression (System.CodeDom.CodeThisReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateThisReferenceExpression(class System.CodeDom.CodeThisReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateThisReferenceExpression (e As CodeThisReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateThisReferenceExpression(System::CodeDom::CodeThisReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateThisReferenceExpression : System.CodeDom.CodeThisReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateThisReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeThisReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-291">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-291">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-292">为指定的引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-292">Generates code for the specified this reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeThisReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateThrowExceptionStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateThrowExceptionStatement (System.CodeDom.CodeThrowExceptionStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateThrowExceptionStatement(class System.CodeDom.CodeThrowExceptionStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateThrowExceptionStatement (e As CodeThrowExceptionStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateThrowExceptionStatement(System::CodeDom::CodeThrowExceptionStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateThrowExceptionStatement : System.CodeDom.CodeThrowExceptionStatement -&gt; unit" Usage="codeGenerator.GenerateThrowExceptionStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeThrowExceptionStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-293">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-293">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-294">为指定的引发异常语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-294">Generates code for the specified throw exception statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeThrowExceptionStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTryCatchFinallyStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTryCatchFinallyStatement (System.CodeDom.CodeTryCatchFinallyStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTryCatchFinallyStatement(class System.CodeDom.CodeTryCatchFinallyStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTryCatchFinallyStatement (e As CodeTryCatchFinallyStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTryCatchFinallyStatement(System::CodeDom::CodeTryCatchFinallyStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTryCatchFinallyStatement : System.CodeDom.CodeTryCatchFinallyStatement -&gt; unit" Usage="codeGenerator.GenerateTryCatchFinallyStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTryCatchFinallyStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-295">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-295">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-296">为指定的 <c>try-catch finally</c> 语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-296">Generates code for the specified <c>try-catch-finally</c> statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTryCatchFinallyStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeConstructor">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTypeConstructor (System.CodeDom.CodeTypeConstructor e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeConstructor(class System.CodeDom.CodeTypeConstructor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTypeConstructor (e As CodeTypeConstructor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTypeConstructor(System::CodeDom::CodeTypeConstructor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeConstructor : System.CodeDom.CodeTypeConstructor -&gt; unit" Usage="codeGenerator.GenerateTypeConstructor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeConstructor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-297">要为其生成代码的类构造函数。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-297">The class constructor to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-298">为指定的类构造函数生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-298">Generates code for the specified class constructor.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeConstructor" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeEnd">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTypeEnd (System.CodeDom.CodeTypeDeclaration e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeEnd(class System.CodeDom.CodeTypeDeclaration e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTypeEnd (e As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTypeEnd(System::CodeDom::CodeTypeDeclaration ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeEnd : System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateTypeEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-299">要为其生成代码的类结尾。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-299">The end of the class to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-300">为指定的类结尾生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-300">Generates code for the specified end of the class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeOfExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateTypeOfExpression (System.CodeDom.CodeTypeOfExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeOfExpression(class System.CodeDom.CodeTypeOfExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateTypeOfExpression (e As CodeTypeOfExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateTypeOfExpression(System::CodeDom::CodeTypeOfExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeOfExpression : System.CodeDom.CodeTypeOfExpression -&gt; unit&#xA;override this.GenerateTypeOfExpression : System.CodeDom.CodeTypeOfExpression -&gt; unit" Usage="codeGenerator.GenerateTypeOfExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeOfExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-301">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-301">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-302">为指定的表达式类型生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-302">Generates code for the specified type of expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeOfExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeReferenceExpression">
      <MemberSignature Language="C#" Value="protected virtual void GenerateTypeReferenceExpression (System.CodeDom.CodeTypeReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeReferenceExpression(class System.CodeDom.CodeTypeReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateTypeReferenceExpression (e As CodeTypeReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GenerateTypeReferenceExpression(System::CodeDom::CodeTypeReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeReferenceExpression : System.CodeDom.CodeTypeReferenceExpression -&gt; unit&#xA;override this.GenerateTypeReferenceExpression : System.CodeDom.CodeTypeReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateTypeReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-303">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-303">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-304">为指定的类型引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-304">Generates code for the specified type reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypes">
      <MemberSignature Language="C#" Value="protected void GenerateTypes (System.CodeDom.CodeNamespace e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void GenerateTypes(class System.CodeDom.CodeNamespace e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub GenerateTypes (e As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void GenerateTypes(System::CodeDom::CodeNamespace ^ e);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypes : System.CodeDom.CodeNamespace -&gt; unit" Usage="codeGenerator.GenerateTypes e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-305">要为其生成类的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-305">The namespace to generate classes for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-306">为指定的命名空间及其包含的类生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-306">Generates code for the specified namespace and the classes it contains.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeNamespace" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeStart">
      <MemberSignature Language="C#" Value="protected abstract void GenerateTypeStart (System.CodeDom.CodeTypeDeclaration e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTypeStart(class System.CodeDom.CodeTypeDeclaration e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateTypeStart (e As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateTypeStart(System::CodeDom::CodeTypeDeclaration ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateTypeStart : System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeGenerator.GenerateTypeStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-307">要为其生成代码的类开头。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-307">The start of the class to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-308">为指定的类开头生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-308">Generates code for the specified start of the class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GenerateVariableDeclarationStatement">
      <MemberSignature Language="C#" Value="protected abstract void GenerateVariableDeclarationStatement (System.CodeDom.CodeVariableDeclarationStatement e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateVariableDeclarationStatement(class System.CodeDom.CodeVariableDeclarationStatement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateVariableDeclarationStatement (e As CodeVariableDeclarationStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateVariableDeclarationStatement(System::CodeDom::CodeVariableDeclarationStatement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateVariableDeclarationStatement : System.CodeDom.CodeVariableDeclarationStatement -&gt; unit" Usage="codeGenerator.GenerateVariableDeclarationStatement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeVariableDeclarationStatement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-309">为其生成代码的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-309">The statement to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-310">为指定的变量声明语句生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-310">Generates code for the specified variable declaration statement.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeVariableDeclarationStatement" />
      </Docs>
    </Member>
    <Member MemberName="GenerateVariableReferenceExpression">
      <MemberSignature Language="C#" Value="protected abstract void GenerateVariableReferenceExpression (System.CodeDom.CodeVariableReferenceExpression e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateVariableReferenceExpression(class System.CodeDom.CodeVariableReferenceExpression e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub GenerateVariableReferenceExpression (e As CodeVariableReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void GenerateVariableReferenceExpression(System::CodeDom::CodeVariableReferenceExpression ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GenerateVariableReferenceExpression : System.CodeDom.CodeVariableReferenceExpression -&gt; unit" Usage="codeGenerator.GenerateVariableReferenceExpression e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-311">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-311">The expression to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-312">为指定的变量引用表达式生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-312">Generates code for the specified variable reference expression.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeVariableReferenceExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="protected abstract string GetTypeOutput (System.CodeDom.CodeTypeReference value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTypeOutput (value As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeGenerator.GetTypeOutput value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-313">将返回其名称的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-313">The type whose name will be returned.</span></span></param>
        <summary><span data-ttu-id="3d2bf-314">获取指定数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-314">Gets the name of the specified data type.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-315">数据类型引用的名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-315">The name of the data type reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeReference" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="protected int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.Indent" />
      <MemberSignature Language="VB.NET" Value="Protected Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.CodeDom.Compiler.CodeGenerator.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-316">获取或设置每个缩进级别的缩进空间量。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-316">Gets or sets the amount of spaces to indent each indentation level.</span></span></summary>
        <value><span data-ttu-id="3d2bf-317">每个缩进级别的缩进间隔数。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-317">The number of spaces to indent for each indentation level.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-318">通常缩进代码段以方便识别。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-318">Segments of code are commonly indented for ease of recognition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentClass">
      <MemberSignature Language="C#" Value="protected bool IsCurrentClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentClass { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentClass : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-319">获取一个值，该值指示正在生成的当前对象是否为类。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-319">Gets a value indicating whether the current object being generated is a class.</span></span></summary>
        <value><span data-ttu-id="3d2bf-320">如果当前对象是类，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-320"><see langword="true" /> if the current object is a class; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentDelegate">
      <MemberSignature Language="C#" Value="protected bool IsCurrentDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentDelegate" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentDelegate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentDelegate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentDelegate : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-321">获取一个值，该值指示正在生成的当前对象是否为委托。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-321">Gets a value indicating whether the current object being generated is a delegate.</span></span></summary>
        <value><span data-ttu-id="3d2bf-322">如果当前对象是委托，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-322"><see langword="true" /> if the current object is a delegate; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentEnum">
      <MemberSignature Language="C#" Value="protected bool IsCurrentEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentEnum" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentEnum { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentEnum : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-323">获取一个值，该值指示正在生成的当前对象是否为枚举。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-323">Gets a value indicating whether the current object being generated is an enumeration.</span></span></summary>
        <value><span data-ttu-id="3d2bf-324">如果当前对象是枚举，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-324"><see langword="true" /> if the current object is an enumeration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentInterface">
      <MemberSignature Language="C#" Value="protected bool IsCurrentInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentInterface" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentInterface As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentInterface { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentInterface : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-325">获取一个值，该值指示正在生成的当前对象是否为接口。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-325">Gets a value indicating whether the current object being generated is an interface.</span></span></summary>
        <value><span data-ttu-id="3d2bf-326">如果当前对象是接口，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-326"><see langword="true" /> if the current object is an interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentStruct">
      <MemberSignature Language="C#" Value="protected bool IsCurrentStruct { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentStruct" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsCurrentStruct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsCurrentStruct { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentStruct : bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-327">获取一个值，该值指示生成的当前对象是否为值类型或结构。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-327">Gets a value indicating whether the current object being generated is a value type or struct.</span></span></summary>
        <value><span data-ttu-id="3d2bf-328">如果当前对象为值类型或结构，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-328"><see langword="true" /> if the current object is a value type or struct; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="protected abstract bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="codeGenerator.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-329">要测试其是否与有效的标识符发生冲突的值。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-329">The value to test for conflicts with valid identifiers.</span></span></param>
        <summary><span data-ttu-id="3d2bf-330">获取一个值，该值指示指定的值是否为有效的标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-330">Gets a value indicating whether the specified value is a valid identifier.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-331">如果该值是有效的标识符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-331"><see langword="true" /> if the value is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidLanguageIndependentIdentifier">
      <MemberSignature Language="C#" Value="public static bool IsValidLanguageIndependentIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidLanguageIndependentIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidLanguageIndependentIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidLanguageIndependentIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidLanguageIndependentIdentifier : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-332">要测试其有效性的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-332">The string to test for validity.</span></span></param>
        <summary><span data-ttu-id="3d2bf-333">获取一个值，该值指示指定的字符串是否为有效的标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-333">Gets a value indicating whether the specified string is a valid identifier.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-334">如果指定的字符串是有效标识符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-334"><see langword="true" /> if the specified string is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-335">此方法检查指定的字符串，以确保它不包含可用于对标识符字段进行转义的特定字符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-335">This method checks the specified string to ensure that it does not contain certain characters that can be used to escape an identifier field.</span></span> <span data-ttu-id="3d2bf-336"><xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A>方法调用此方法以执行字符串验证。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-336">The <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> method calls this method to perform string validation.</span></span> <span data-ttu-id="3d2bf-337">调用 <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> 方法并在 <xref:System.CodeDom.CodeCompileUnit> 生成代码之前传递，可以防止使用特定字符序列在标识符字段中包含隐藏代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-337">Calling the <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> method and passing a <xref:System.CodeDom.CodeCompileUnit> before generating code from it can prevent the use of certain character sequences to include hidden code within an identifier field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)" />
      </Docs>
    </Member>
    <Member MemberName="NullToken">
      <MemberSignature Language="C#" Value="protected abstract string NullToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullToken" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.NullToken" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property NullToken As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ NullToken { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NullToken : string" Usage="System.CodeDom.Compiler.CodeGenerator.NullToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-338">获取表示 <see langword="null" /> 的标记。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-338">Gets the token that represents <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="3d2bf-339">表示 <see langword="null" /> 的标记。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-339">The token that represents <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected System.CodeDom.Compiler.CodeGeneratorOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeGeneratorOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As CodeGeneratorOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::CodeDom::Compiler::CodeGeneratorOptions ^ Options { System::CodeDom::Compiler::CodeGeneratorOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.Compiler.CodeGeneratorOptions" Usage="System.CodeDom.Compiler.CodeGenerator.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeGeneratorOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-340">获取供代码生成器使用的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-340">Gets the options to be used by the code generator.</span></span></summary>
        <value><span data-ttu-id="3d2bf-341">一个对象，指示供代码生成器使用的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-341">An object that indicates the options for the code generator to use.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="protected System.IO.TextWriter Output { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeGenerator.Output" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Output As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Output : System.IO.TextWriter" Usage="System.CodeDom.Compiler.CodeGenerator.Output" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d2bf-342">获取用于输出的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-342">Gets the text writer to use for output.</span></span></summary>
        <value><span data-ttu-id="3d2bf-343">要用于输出的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-343">The text writer to use for output.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="OutputAttributeArgument">
      <MemberSignature Language="C#" Value="protected virtual void OutputAttributeArgument (System.CodeDom.CodeAttributeArgument arg);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputAttributeArgument(class System.CodeDom.CodeAttributeArgument arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputAttributeArgument (arg As CodeAttributeArgument)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputAttributeArgument(System::CodeDom::CodeAttributeArgument ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member OutputAttributeArgument : System.CodeDom.CodeAttributeArgument -&gt; unit&#xA;override this.OutputAttributeArgument : System.CodeDom.CodeAttributeArgument -&gt; unit" Usage="codeGenerator.OutputAttributeArgument arg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="arg"><span data-ttu-id="3d2bf-344">要为其生成代码的特性参数。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-344">The attribute argument to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-345">输出特性块中的一个参数。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-345">Outputs an argument in an attribute block.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeArgument" />
      </Docs>
    </Member>
    <Member MemberName="OutputAttributeDeclarations">
      <MemberSignature Language="C#" Value="protected virtual void OutputAttributeDeclarations (System.CodeDom.CodeAttributeDeclarationCollection attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputAttributeDeclarations(class System.CodeDom.CodeAttributeDeclarationCollection attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputAttributeDeclarations (attributes As CodeAttributeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputAttributeDeclarations(System::CodeDom::CodeAttributeDeclarationCollection ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputAttributeDeclarations : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit&#xA;override this.OutputAttributeDeclarations : System.CodeDom.CodeAttributeDeclarationCollection -&gt; unit" Usage="codeGenerator.OutputAttributeDeclarations attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-346">要为其生成代码的特性。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-346">The attributes to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-347">为指定的特性声明集合生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-347">Generates code for the specified attribute declaration collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputDirection">
      <MemberSignature Language="C#" Value="protected virtual void OutputDirection (System.CodeDom.FieldDirection dir);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputDirection(valuetype System.CodeDom.FieldDirection dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputDirection (dir As FieldDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputDirection(System::CodeDom::FieldDirection dir);" />
      <MemberSignature Language="F#" Value="abstract member OutputDirection : System.CodeDom.FieldDirection -&gt; unit&#xA;override this.OutputDirection : System.CodeDom.FieldDirection -&gt; unit" Usage="codeGenerator.OutputDirection dir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.CodeDom.FieldDirection" />
      </Parameters>
      <Docs>
        <param name="dir"><span data-ttu-id="3d2bf-348">指示字段特性的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-348">One of the enumeration values that indicates the attribute of the field.</span></span></param>
        <summary><span data-ttu-id="3d2bf-349">为指定的 <see cref="T:System.CodeDom.FieldDirection" /> 生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-349">Generates code for the specified <see cref="T:System.CodeDom.FieldDirection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.FieldDirection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OutputExpressionList">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3d2bf-350">为指定的表达式列表生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-350">Generates code for the specified expression list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OutputExpressionList">
      <MemberSignature Language="C#" Value="protected virtual void OutputExpressionList (System.CodeDom.CodeExpressionCollection expressions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputExpressionList(class System.CodeDom.CodeExpressionCollection expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputExpressionList (expressions As CodeExpressionCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputExpressionList(System::CodeDom::CodeExpressionCollection ^ expressions);" />
      <MemberSignature Language="F#" Value="abstract member OutputExpressionList : System.CodeDom.CodeExpressionCollection -&gt; unit&#xA;override this.OutputExpressionList : System.CodeDom.CodeExpressionCollection -&gt; unit" Usage="codeGenerator.OutputExpressionList expressions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.CodeDom.CodeExpressionCollection" />
      </Parameters>
      <Docs>
        <param name="expressions"><span data-ttu-id="3d2bf-351">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-351">The expressions to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-352">为指定的表达式列表生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-352">Generates code for the specified expression list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputExpressionList">
      <MemberSignature Language="C#" Value="protected virtual void OutputExpressionList (System.CodeDom.CodeExpressionCollection expressions, bool newlineBetweenItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputExpressionList(class System.CodeDom.CodeExpressionCollection expressions, bool newlineBetweenItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputExpressionList (expressions As CodeExpressionCollection, newlineBetweenItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputExpressionList(System::CodeDom::CodeExpressionCollection ^ expressions, bool newlineBetweenItems);" />
      <MemberSignature Language="F#" Value="abstract member OutputExpressionList : System.CodeDom.CodeExpressionCollection * bool -&gt; unit&#xA;override this.OutputExpressionList : System.CodeDom.CodeExpressionCollection * bool -&gt; unit" Usage="codeGenerator.OutputExpressionList (expressions, newlineBetweenItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.CodeDom.CodeExpressionCollection" />
        <Parameter Name="newlineBetweenItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expressions"><span data-ttu-id="3d2bf-353">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-353">The expressions to generate code for.</span></span></param>
        <param name="newlineBetweenItems"><span data-ttu-id="3d2bf-354">如果在每项之后插入新行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-354"><see langword="true" /> to insert a new line after each item; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3d2bf-355">为指定的表达式列表生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-355">Generates code for the specified expression list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputFieldScopeModifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputFieldScopeModifier (System.CodeDom.MemberAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputFieldScopeModifier(valuetype System.CodeDom.MemberAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputFieldScopeModifier (attributes As MemberAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputFieldScopeModifier(System::CodeDom::MemberAttributes attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputFieldScopeModifier : System.CodeDom.MemberAttributes -&gt; unit&#xA;override this.OutputFieldScopeModifier : System.CodeDom.MemberAttributes -&gt; unit" Usage="codeGenerator.OutputFieldScopeModifier attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-356">指定特性的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-356">One of the enumeration values that specifies the attributes.</span></span></param>
        <summary><span data-ttu-id="3d2bf-357">输出对应于指定特性的字段范围修饰符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-357">Outputs a field scope modifier that corresponds to the specified attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.MemberAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputIdentifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputIdentifier (string ident);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputIdentifier(string ident) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputIdentifier (ident As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputIdentifier(System::String ^ ident);" />
      <MemberSignature Language="F#" Value="abstract member OutputIdentifier : string -&gt; unit&#xA;override this.OutputIdentifier : string -&gt; unit" Usage="codeGenerator.OutputIdentifier ident" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ident" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ident"><span data-ttu-id="3d2bf-358">要输出的标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-358">The identifier to output.</span></span></param>
        <summary><span data-ttu-id="3d2bf-359">输出指定的标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-359">Outputs the specified identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMemberAccessModifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputMemberAccessModifier (System.CodeDom.MemberAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputMemberAccessModifier(valuetype System.CodeDom.MemberAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputMemberAccessModifier (attributes As MemberAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputMemberAccessModifier(System::CodeDom::MemberAttributes attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputMemberAccessModifier : System.CodeDom.MemberAttributes -&gt; unit&#xA;override this.OutputMemberAccessModifier : System.CodeDom.MemberAttributes -&gt; unit" Usage="codeGenerator.OutputMemberAccessModifier attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-360">枚举值之一，指示要为其生成代码的成员访问修饰符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-360">One of the enumeration values that indicates the member access modifier to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-361">为指定的成员访问修饰符生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-361">Generates code for the specified member access modifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.MemberAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputMemberScopeModifier">
      <MemberSignature Language="C#" Value="protected virtual void OutputMemberScopeModifier (System.CodeDom.MemberAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputMemberScopeModifier(valuetype System.CodeDom.MemberAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputMemberScopeModifier (attributes As MemberAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputMemberScopeModifier(System::CodeDom::MemberAttributes attributes);" />
      <MemberSignature Language="F#" Value="abstract member OutputMemberScopeModifier : System.CodeDom.MemberAttributes -&gt; unit&#xA;override this.OutputMemberScopeModifier : System.CodeDom.MemberAttributes -&gt; unit" Usage="codeGenerator.OutputMemberScopeModifier attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-362">枚举值之一，指示要为其生成代码的成员范围修饰符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-362">One of the enumeration values that indicates the member scope modifier to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-363">为指定的成员范围修饰符生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-363">Generates code for the specified member scope modifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.MemberAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputOperator">
      <MemberSignature Language="C#" Value="protected virtual void OutputOperator (System.CodeDom.CodeBinaryOperatorType op);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputOperator(valuetype System.CodeDom.CodeBinaryOperatorType op) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputOperator (op As CodeBinaryOperatorType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputOperator(System::CodeDom::CodeBinaryOperatorType op);" />
      <MemberSignature Language="F#" Value="abstract member OutputOperator : System.CodeDom.CodeBinaryOperatorType -&gt; unit&#xA;override this.OutputOperator : System.CodeDom.CodeBinaryOperatorType -&gt; unit" Usage="codeGenerator.OutputOperator op" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="System.CodeDom.CodeBinaryOperatorType" />
      </Parameters>
      <Docs>
        <param name="op"><span data-ttu-id="3d2bf-364">要为其生成代码的运算符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-364">The operator to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-365">为指定的运算符生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-365">Generates code for the specified operator.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeBinaryOperatorType" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="protected virtual void OutputParameters (System.CodeDom.CodeParameterDeclarationExpressionCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputParameters(class System.CodeDom.CodeParameterDeclarationExpressionCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputParameters (parameters As CodeParameterDeclarationExpressionCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputParameters(System::CodeDom::CodeParameterDeclarationExpressionCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member OutputParameters : System.CodeDom.CodeParameterDeclarationExpressionCollection -&gt; unit&#xA;override this.OutputParameters : System.CodeDom.CodeParameterDeclarationExpressionCollection -&gt; unit" Usage="codeGenerator.OutputParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="3d2bf-366">要为其生成代码的参数声明表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-366">The parameter declaration expressions to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-367">为指定的参数生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-367">Generates code for the specified parameters.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="protected abstract void OutputType (System.CodeDom.CodeTypeReference typeRef);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputType(class System.CodeDom.CodeTypeReference typeRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OutputType (typeRef As CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OutputType(System::CodeDom::CodeTypeReference ^ typeRef);" />
      <MemberSignature Language="F#" Value="abstract member OutputType : System.CodeDom.CodeTypeReference -&gt; unit" Usage="codeGenerator.OutputType typeRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeRef" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="typeRef"><span data-ttu-id="3d2bf-368">要为其生成代码的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-368">The type to generate code for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-369">为指定的类型生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-369">Generates code for the specified type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypeAttributes">
      <MemberSignature Language="C#" Value="protected virtual void OutputTypeAttributes (System.Reflection.TypeAttributes attributes, bool isStruct, bool isEnum);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTypeAttributes(valuetype System.Reflection.TypeAttributes attributes, bool isStruct, bool isEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTypeAttributes (attributes As TypeAttributes, isStruct As Boolean, isEnum As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTypeAttributes(System::Reflection::TypeAttributes attributes, bool isStruct, bool isEnum);" />
      <MemberSignature Language="F#" Value="abstract member OutputTypeAttributes : System.Reflection.TypeAttributes * bool * bool -&gt; unit&#xA;override this.OutputTypeAttributes : System.Reflection.TypeAttributes * bool * bool -&gt; unit" Usage="codeGenerator.OutputTypeAttributes (attributes, isStruct, isEnum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="isStruct" Type="System.Boolean" />
        <Parameter Name="isEnum" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="3d2bf-370">枚举值之一，指示要为其生成代码的类型特性。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-370">One of the enumeration values that indicates the type attributes to generate code for.</span></span></param>
        <param name="isStruct"><span data-ttu-id="3d2bf-371">如果类型是结构，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-371"><see langword="true" /> if the type is a struct; otherwise, <see langword="false" />.</span></span></param>
        <param name="isEnum"><span data-ttu-id="3d2bf-372">如果类型是枚举，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-372"><see langword="true" /> if the type is an enum; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3d2bf-373">为指定的类型特性生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-373">Generates code for the specified type attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.TypeAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OutputTypeNamePair">
      <MemberSignature Language="C#" Value="protected virtual void OutputTypeNamePair (System.CodeDom.CodeTypeReference typeRef, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTypeNamePair(class System.CodeDom.CodeTypeReference typeRef, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTypeNamePair (typeRef As CodeTypeReference, name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTypeNamePair(System::CodeDom::CodeTypeReference ^ typeRef, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OutputTypeNamePair : System.CodeDom.CodeTypeReference * string -&gt; unit&#xA;override this.OutputTypeNamePair : System.CodeDom.CodeTypeReference * string -&gt; unit" Usage="codeGenerator.OutputTypeNamePair (typeRef, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeRef" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeRef"><span data-ttu-id="3d2bf-374">类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-374">The type.</span></span></param>
        <param name="name"><span data-ttu-id="3d2bf-375">对象的名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-375">The name for the object.</span></span></param>
        <summary><span data-ttu-id="3d2bf-376">为指定的对象类型和名称对生成代码。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-376">Generates code for the specified object type and name pair.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteSnippetString">
      <MemberSignature Language="C#" Value="protected abstract string QuoteSnippetString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string QuoteSnippetString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function QuoteSnippetString (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ QuoteSnippetString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member QuoteSnippetString : string -&gt; string" Usage="codeGenerator.QuoteSnippetString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-377">要转换的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-377">The string to convert.</span></span></param>
        <summary><span data-ttu-id="3d2bf-378">通过用转义码格式化指定的字符串来转换它。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-378">Converts the specified string by formatting it with escape codes.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-379">已转换的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-379">The converted string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-380">此方法返回指定字符串的修改版本，该版本已使用转义码字符进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-380">This method returns a modified version of the specified string that has been formatted with escape code characters.</span></span> <span data-ttu-id="3d2bf-381">例如，可 `/"` 用于表示 `"` 。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-381">For example, `/"` might be used to represent `"`.</span></span> <span data-ttu-id="3d2bf-382">这些转义代码用于替换指定字符串的元素，这些元素可能会与语言语法发生冲突。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-382">These escape codes are used to replace elements of the specified string that might otherwise conflict with language syntax.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="protected abstract bool Supports (System.CodeDom.Compiler.GeneratorSupport support);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport support) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Supports (support As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool Supports(System::CodeDom::Compiler::GeneratorSupport support);" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeGenerator.Supports support" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="support" Type="System.CodeDom.Compiler.GeneratorSupport" />
      </Parameters>
      <Docs>
        <param name="support"><span data-ttu-id="3d2bf-383">要测试的代码生成支持的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-383">The type of code generation support to test for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-384">获取一个值，该值指示是否提供了指定的代码生成支持。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-384">Gets a value indicating whether the specified code generation support is provided.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-385">如果提供了指定的代码生成支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-385"><see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="string ICodeGenerator.CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CreateEscapedIdentifier (value As String) As String Implements ICodeGenerator.CreateEscapedIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::CreateEscapedIdentifier;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier : string -&gt; string&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier : string -&gt; string" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-386">要为其创建转义标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-386">The string to create an escaped identifier for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-387">创建指定值的转义标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-387">Creates an escaped identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-388">值的转义标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-388">The escaped identifier for the value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier">
      <MemberSignature Language="C#" Value="string ICodeGenerator.CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CreateValidIdentifier (value As String) As String Implements ICodeGenerator.CreateValidIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::CreateValidIdentifier;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier : string -&gt; string&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier : string -&gt; string" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-389">要为其生成有效标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-389">The string to generate a valid identifier for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-390">为指定的值创建有效标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-390">Creates a valid identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-391">指定值的有效标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-391">A valid identifier for the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromCompileUnit (e As CodeCompileUnit, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromCompileUnit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromCompileUnit;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit (e, w, o)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-392">要为其生成代码的 CodeDOM 编译单元。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-392">The CodeDOM compilation unit to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="3d2bf-393">要向其输出代码的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-393">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="3d2bf-394">要用于生成代码的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-394">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="3d2bf-395">生成指定代码文档对象模型 (CodeDOM) 编译单元的代码，并使用指定选项将其输出到指定的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-395">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3d2bf-396"><paramref name="w" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-396"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="3d2bf-397"><paramref name="w" /> 可能在调用方法之前已关闭。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-397"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(class System.CodeDom.CodeExpression e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromExpression (e As CodeExpression, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromExpression" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromExpression;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression (e, w, o)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-398">要为其生成代码的表达式。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-398">The expression to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="3d2bf-399">要向其输出代码的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-399">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="3d2bf-400">要用于生成代码的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-400">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="3d2bf-401">生成指定的代码文档对象模型 (CodeDOM) 表达式的代码，并将其输出到指定文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-401">Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3d2bf-402"><paramref name="w" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-402"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="3d2bf-403"><paramref name="w" /> 可能在调用方法之前已关闭。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-403"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromNamespace (e As CodeNamespace, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromNamespace;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace (e, w, o)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-404">要为其生成代码的命名空间。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-404">The namespace to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="3d2bf-405">要向其输出代码的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-405">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="3d2bf-406">要用于生成代码的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-406">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="3d2bf-407">生成指定的代码文档对象模型 (CodeDOM) 命名空间的代码，并使用指定选项将其输出到指定文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-407">Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3d2bf-408"><paramref name="w" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-408"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="3d2bf-409"><paramref name="w" /> 可能在调用方法之前已关闭。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-409"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(class System.CodeDom.CodeStatement e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromStatement (e As CodeStatement, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromStatement" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromStatement;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement (e, w, o)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-410">包含要转换的 CodeDOM 元素的语句。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-410">The statement that contains the CodeDOM elements to translate.</span></span></param>
        <param name="w"><span data-ttu-id="3d2bf-411">要向其输出代码的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-411">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="3d2bf-412">要用于生成代码的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-412">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="3d2bf-413">生成指定代码文档对象模型 (CodeDOM) 语句的代码，并使用指定选项将其输出到指定的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-413">Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3d2bf-414"><paramref name="w" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-414"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="3d2bf-415"><paramref name="w" /> 可能在调用方法之前已关闭。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-415"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType">
      <MemberSignature Language="C#" Value="void ICodeGenerator.GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub GenerateCodeFromType (e As CodeTypeDeclaration, w As TextWriter, o As CodeGeneratorOptions) Implements ICodeGenerator.GenerateCodeFromType" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o) = System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromType;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType (e, w, o)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-416">要为其生成代码的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-416">The type to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="3d2bf-417">要向其输出代码的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-417">The text writer to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="3d2bf-418">要用于生成代码的选项。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-418">The options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="3d2bf-419">生成指定代码文档对象模型 (CodeDOM) 类型声明的代码，并使用指定选项将其输出到指定的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-419">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3d2bf-420"><paramref name="w" /> 不可用。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-420"><paramref name="w" /> is not available.</span></span> <span data-ttu-id="3d2bf-421"><paramref name="w" /> 可能在调用方法之前已关闭。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-421"><paramref name="w" /> may have been closed before the method call was made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput">
      <MemberSignature Language="C#" Value="string ICodeGenerator.GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeOutput (type As CodeTypeReference) As String Implements ICodeGenerator.GetTypeOutput" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System::CodeDom::CodeTypeReference ^ type) = System::CodeDom::Compiler::ICodeGenerator::GetTypeOutput;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="3d2bf-422">要返回的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-422">The type to return.</span></span></param>
        <summary><span data-ttu-id="3d2bf-423">获取由指定的 <see cref="T:System.CodeDom.CodeTypeReference" /> 指示的类型。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-423">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-424">数据类型引用的名称。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-424">The name of the data type reference.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier">
      <MemberSignature Language="C#" Value="bool ICodeGenerator.IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidIdentifier (value As String) As Boolean Implements ICodeGenerator.IsValidIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::IsValidIdentifier;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier : string -&gt; bool&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier : string -&gt; bool" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-425">要测试的值。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-425">The value to test.</span></span></param>
        <summary><span data-ttu-id="3d2bf-426">获取一个值，该值指示指定的值是否是当前语言的有效标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-426">Gets a value that indicates whether the specified value is a valid identifier for the current language.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-427">如果 <paramref name="value" /> 参数是有效标识符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-427"><see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.Supports">
      <MemberSignature Language="C#" Value="bool ICodeGenerator.Supports (System.CodeDom.Compiler.GeneratorSupport support);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.CodeDom.Compiler.ICodeGenerator.Supports(valuetype System.CodeDom.Compiler.GeneratorSupport support) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)" />
      <MemberSignature Language="VB.NET" Value="Function Supports (support As GeneratorSupport) As Boolean Implements ICodeGenerator.Supports" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.CodeDom.Compiler.ICodeGenerator.Supports(System::CodeDom::Compiler::GeneratorSupport support) = System::CodeDom::Compiler::ICodeGenerator::Supports;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.Supports support" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="support" Type="System.CodeDom.Compiler.GeneratorSupport" />
      </Parameters>
      <Docs>
        <param name="support"><span data-ttu-id="3d2bf-428">要为其测试生成器的功能。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-428">The capabilities to test the generator for.</span></span></param>
        <summary><span data-ttu-id="3d2bf-429">获取一个值，该值指示该生成器是否支持指定的 <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> 对象表示的语言功能。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-429">Gets a value indicating whether the generator provides support for the language features represented by the specified <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object.</span></span></summary>
        <returns><span data-ttu-id="3d2bf-430">如果支持指定的功能，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-430"><see langword="true" /> if the specified capabilities are supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier">
      <MemberSignature Language="C#" Value="void ICodeGenerator.ValidateIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateIdentifier (value As String) Implements ICodeGenerator.ValidateIdentifier" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System::String ^ value) = System::CodeDom::Compiler::ICodeGenerator::ValidateIdentifier;" />
      <MemberSignature Language="F#" Value="abstract member System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier : string -&gt; unit&#xA;override this.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier : string -&gt; unit" Usage="codeGenerator.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-431">要验证的标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-431">The identifier to validate.</span></span></param>
        <summary><span data-ttu-id="3d2bf-432">如果指定的值不是一个有效的标识符，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-432">Throws an exception if the specified value is not a valid identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdentifier">
      <MemberSignature Language="C#" Value="protected virtual void ValidateIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateIdentifier (value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ValidateIdentifier : string -&gt; unit&#xA;override this.ValidateIdentifier : string -&gt; unit" Usage="codeGenerator.ValidateIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3d2bf-433">要测试其标识符有效性的标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-433">The identifier to test for validity as an identifier.</span></span></param>
        <summary><span data-ttu-id="3d2bf-434">如果指定的字符串不是有效的标识符，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-434">Throws an exception if the specified string is not a valid identifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3d2bf-435">如果指定的标识符无效，或与保留关键字或语言关键字冲突。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-435">If the specified identifier is invalid or conflicts with reserved or language keywords.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdentifiers">
      <MemberSignature Language="C#" Value="public static void ValidateIdentifiers (System.CodeDom.CodeObject e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateIdentifiers(class System.CodeDom.CodeObject e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ValidateIdentifiers (e As CodeObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateIdentifiers(System::CodeDom::CodeObject ^ e);" />
      <MemberSignature Language="F#" Value="static member ValidateIdentifiers : System.CodeDom.CodeObject -&gt; unit" Usage="System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeObject" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3d2bf-436">要测试无效标识符的对象。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-436">An object to test for invalid identifiers.</span></span></param>
        <summary><span data-ttu-id="3d2bf-437">尝试验证指定的 <see cref="T:System.CodeDom.CodeObject" /> 或 <see cref="N:System.CodeDom" /> 树中包含的每个标识符字段。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-437">Attempts to validate each identifier field contained in the specified <see cref="T:System.CodeDom.CodeObject" /> or <see cref="N:System.CodeDom" /> tree.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2bf-438">对象的标识符字段 <xref:System.CodeDom.CodeObject> 可包含字段转义符和隐藏的代码，这可能会导致安全冲突。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-438">It is possible for the identifier fields of <xref:System.CodeDom.CodeObject> objects to contain field escape characters and hidden code which can allow security violations.</span></span> <span data-ttu-id="3d2bf-439">此方法检查树中每个的文本字段 <xref:System.CodeDom.CodeObject> 中是否有可 <xref:System.CodeDom> 用于隐藏代码的字符，如果标识符字段包含无效字符，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-439">This method checks the literal fields of each <xref:System.CodeDom.CodeObject> in a <xref:System.CodeDom> tree for characters which could be used to hide code, and throws an exception if an identifier field contains an invalid character.</span></span>  
  
 <span data-ttu-id="3d2bf-440">此方法调用 <xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A> 方法来验证指定的或树中的每个标识符 <xref:System.CodeDom.CodeObject> <xref:System.CodeDom> ，如果标识符无效或包含无效字符，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-440">This method calls the <xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A> method to validate each identifier in the specified <xref:System.CodeDom.CodeObject> or <xref:System.CodeDom> tree, and throws an exception if an identifier is invalid or contains invalid characters.</span></span>  
  
 <span data-ttu-id="3d2bf-441">调用此方法并向其传递， <xref:System.CodeDom.CodeCompileUnit> 其中包含要在生成代码时生成的代码图，以阻止使用特定字符序列（可用于在标识符字段中包含隐藏代码）。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-441">Call this method and pass it the <xref:System.CodeDom.CodeCompileUnit> containing the code graph to generate before generating code to block the use of certain character sequences that can be used to include hidden code within an identifier field.</span></span> <span data-ttu-id="3d2bf-442">任何生成代码方法都不会自动调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-442">This method is not called automatically by any generate code methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3d2bf-443">指定的 <see cref="T:System.CodeDom.CodeObject" /> 包含无效标识符。</span><span class="sxs-lookup"><span data-stu-id="3d2bf-443">The specified <see cref="T:System.CodeDom.CodeObject" /> contains an invalid identifier.</span></span></exception>
        <altmember cref="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
