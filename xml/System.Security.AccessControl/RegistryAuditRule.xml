<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a03ae80bfe63783031efc1b02c71dc07f1c2e1a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86753321" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="4.0.3.0" To="Microsoft.Win32.Registry" ToVersion="4.1.1.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="4.0.4.0" To="Microsoft.Win32.Registry" ToVersion="4.1.2.0" FrameworkAlternate="dotnet-plat-ext-3.0;net-5.0;netcore-3.0" />
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="4.0.5.0" To="Microsoft.Win32.Registry" ToVersion="4.1.3.0" FrameworkAlternate="dotnet-plat-ext-3.1;netcore-3.1" />
    <TypeForwarding From="Microsoft.Win32.Registry.AccessControl" FromVersion="5.0.0.0" To="Microsoft.Win32.Registry" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="61500-101">表示要为用户或组审核的一组访问权限。</span><span class="sxs-lookup"><span data-stu-id="61500-101">Represents a set of access rights to be audited for a user or group.</span></span> <span data-ttu-id="61500-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="61500-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61500-103"><xref:System.Security.AccessControl.RegistryAuditRule>类是 .NET Framework 提供的一组类中的一组，用于管理注册表项的 Windows 访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="61500-103">The <xref:System.Security.AccessControl.RegistryAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="61500-104">有关这些类及其与基础 Windows 访问控制结构的关系的概述，请参阅 <xref:System.Security.AccessControl.RegistrySecurity> 。</span><span class="sxs-lookup"><span data-stu-id="61500-104">For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61500-105">Windows 访问控制安全性只能应用于注册表项。</span><span class="sxs-lookup"><span data-stu-id="61500-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="61500-106">它不能应用于存储在键中的各个键/值对。</span><span class="sxs-lookup"><span data-stu-id="61500-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="61500-107">若要获取当前应用于注册表项的审核规则列表，请使用 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> 方法获取 <xref:System.Security.AccessControl.RegistrySecurity> 对象，然后使用其 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> 方法来获取对象的集合 <xref:System.Security.AccessControl.RegistryAuditRule> 。</span><span class="sxs-lookup"><span data-stu-id="61500-107">To get a list of the audit rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAuditRule> objects.</span></span>  
  
 <span data-ttu-id="61500-108"><xref:System.Security.AccessControl.RegistryAuditRule> 对象不会将一对一映射到基础自由访问控制列表中的访问控制项 (DACL) 。</span><span class="sxs-lookup"><span data-stu-id="61500-108"><xref:System.Security.AccessControl.RegistryAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="61500-109">当你获取某个注册表项的所有审核规则集时，该集包含当前用于表示所有访问控制项所需的最小规则数。</span><span class="sxs-lookup"><span data-stu-id="61500-109">When you get the set of all audit rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61500-110">在应用和删除规则时，基础访问控制项会更改。</span><span class="sxs-lookup"><span data-stu-id="61500-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="61500-111">如果可能，将合并规则中的信息以保持最小数量的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="61500-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="61500-112">因此，当您阅读当前的规则列表时，它可能看起来与您添加的所有规则的列表并不完全相同。</span><span class="sxs-lookup"><span data-stu-id="61500-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="61500-113">使用 <xref:System.Security.AccessControl.RegistryAuditRule> 对象指定要审核的用户或组的访问权限。</span><span class="sxs-lookup"><span data-stu-id="61500-113">Use <xref:System.Security.AccessControl.RegistryAuditRule> objects to specify access rights to be audited for a user or group.</span></span> <span data-ttu-id="61500-114">若要将规则应用于注册表项，请使用 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> 方法来获取 <xref:System.Security.AccessControl.RegistrySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="61500-114">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="61500-115"><xref:System.Security.AccessControl.RegistrySecurity>通过使用对象的方法添加规则来修改对象，然后使用 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> 方法重新附加安全对象。</span><span class="sxs-lookup"><span data-stu-id="61500-115">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="61500-116">对对象所做 <xref:System.Security.AccessControl.RegistrySecurity> 的更改不会影响注册表项的访问级别，直到调用方法将已 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> 更改的安全对象分配给注册表项。</span><span class="sxs-lookup"><span data-stu-id="61500-116">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="61500-117"><xref:System.Security.AccessControl.RegistryAuditRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="61500-117"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="61500-118">使用类的方法来修改注册表项的安全性， <xref:System.Security.AccessControl.RegistrySecurity> 以添加或删除规则; 执行此操作时，将修改基础访问控制项。</span><span class="sxs-lookup"><span data-stu-id="61500-118">Security for a registry key is modified by using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61500-119">初始化 <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="61500-119">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, registryRights As RegistryRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="61500-120">此规则应用到的用户或组。</span><span class="sxs-lookup"><span data-stu-id="61500-120">The user or group the rule applies to.</span></span> <span data-ttu-id="61500-121">必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="61500-121">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="registryRights"><span data-ttu-id="61500-122"><see cref="T:System.Security.AccessControl.RegistryRights" /> 值的按位组合，它指定要审核的访问类型。</span><span class="sxs-lookup"><span data-stu-id="61500-122">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="61500-123"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值的按位组合，它指定审核规则是否应用于当前注册表项的子项。</span><span class="sxs-lookup"><span data-stu-id="61500-123">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="61500-124"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 值的按位组合，它将影响将继承的审核规则传播到当前注册表项的子项的方式。</span><span class="sxs-lookup"><span data-stu-id="61500-124">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</span></span></param>
        <param name="flags"><span data-ttu-id="61500-125"><see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核是成功、失败还是包括这两种情况。</span><span class="sxs-lookup"><span data-stu-id="61500-125">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span></span></param>
        <summary><span data-ttu-id="61500-126">初始化 <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 类的新实例，指定要审核的用户或组，要审核的权限，是否考虑继承以及是否审核成功和（或）失败。</span><span class="sxs-lookup"><span data-stu-id="61500-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61500-127">所有注册表项都是容器，因此对于注册表项有意义的唯一继承标志是 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> 标志。</span><span class="sxs-lookup"><span data-stu-id="61500-127">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="61500-128">如果未指定此标志，则会忽略传播标志，并且仅影响直接密钥。</span><span class="sxs-lookup"><span data-stu-id="61500-128">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="61500-129">如果该标志存在，则将按下表所示传播规则。</span><span class="sxs-lookup"><span data-stu-id="61500-129">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="61500-130">该表假设有一个具有子子项 CS 和孙子项 GS 的子项。</span><span class="sxs-lookup"><span data-stu-id="61500-130">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="61500-131">也就是说，孙级子项的路径为 S\CS\GS。</span><span class="sxs-lookup"><span data-stu-id="61500-131">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="61500-132">传播标志</span><span class="sxs-lookup"><span data-stu-id="61500-132">Propagation flags</span></span>|<span data-ttu-id="61500-133">S</span><span class="sxs-lookup"><span data-stu-id="61500-133">S</span></span>|<span data-ttu-id="61500-134">CS</span><span class="sxs-lookup"><span data-stu-id="61500-134">CS</span></span>|<span data-ttu-id="61500-135">GS</span><span class="sxs-lookup"><span data-stu-id="61500-135">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="61500-136">X</span><span class="sxs-lookup"><span data-stu-id="61500-136">X</span></span>|<span data-ttu-id="61500-137">X</span><span class="sxs-lookup"><span data-stu-id="61500-137">X</span></span>|<span data-ttu-id="61500-138">X</span><span class="sxs-lookup"><span data-stu-id="61500-138">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="61500-139">X</span><span class="sxs-lookup"><span data-stu-id="61500-139">X</span></span>|<span data-ttu-id="61500-140">X</span><span class="sxs-lookup"><span data-stu-id="61500-140">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="61500-141">X</span><span class="sxs-lookup"><span data-stu-id="61500-141">X</span></span>|<span data-ttu-id="61500-142">X</span><span class="sxs-lookup"><span data-stu-id="61500-142">X</span></span>|  
|<span data-ttu-id="61500-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="61500-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="61500-144">X</span><span class="sxs-lookup"><span data-stu-id="61500-144">X</span></span>||  
  
 <span data-ttu-id="61500-145">孙子项的模式控制孙级子项包含的所有子项。</span><span class="sxs-lookup"><span data-stu-id="61500-145">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="61500-146">例如，如果为 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 指定了标志并且为 `inheritanceFlags` 指定了 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 传播标志 `propagationFlags` ，则此规则不会应用于直接子项，而是应用于其所有直接子子项及其包含的所有子项。</span><span class="sxs-lookup"><span data-stu-id="61500-146">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61500-147">尽管可以 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> 为指定标志，但 `inheritanceFlags` 没有任何一点要这样做。</span><span class="sxs-lookup"><span data-stu-id="61500-147">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="61500-148">出于访问控制的目的，子项中的名称/值对不是单独的对象。</span><span class="sxs-lookup"><span data-stu-id="61500-148">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="61500-149">对名称/值对的访问权限由子项的权限控制。</span><span class="sxs-lookup"><span data-stu-id="61500-149">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="61500-150">此外，由于所有子项都是容器 (也就是说，它们可以包含其他子项) ，它们不受标志的影响 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 。</span><span class="sxs-lookup"><span data-stu-id="61500-150">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="61500-151">最后，指定 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 标志不必要地使规则维护复杂化，因为这会影响兼容规则的正常组合。</span><span class="sxs-lookup"><span data-stu-id="61500-151">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="61500-152"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-152"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="61500-153">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-153">-or-</span></span> 
 <span data-ttu-id="61500-154"><paramref name="flags" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-154"><paramref name="flags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="61500-155">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-155">-or-</span></span> 
 <span data-ttu-id="61500-156"><paramref name="inheritanceFlags" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-156"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="61500-157">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-157">-or-</span></span> 
 <span data-ttu-id="61500-158"><paramref name="propagationFlags" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-158"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61500-159"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61500-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="61500-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-160">-or-</span></span> 
 <span data-ttu-id="61500-161"><paramref name="registryRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="61500-161"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61500-162"><paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span><span class="sxs-lookup"><span data-stu-id="61500-162"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, registryRights As RegistryRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="61500-163">应用此规则的用户或组的名称。</span><span class="sxs-lookup"><span data-stu-id="61500-163">The name of the user or group the rule applies to.</span></span></param>
        <param name="registryRights"><span data-ttu-id="61500-164"><see cref="T:System.Security.AccessControl.RegistryRights" /> 值的按位组合，它指定要审核的访问类型。</span><span class="sxs-lookup"><span data-stu-id="61500-164">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="61500-165"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 标志的按位组合，它指定审核规则是否应用于当前注册表项的子项。</span><span class="sxs-lookup"><span data-stu-id="61500-165">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="61500-166"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 标志的按位组合，它将影响将继承的审核规则传播到当前注册表项的子项的方式。</span><span class="sxs-lookup"><span data-stu-id="61500-166">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</span></span></param>
        <param name="flags"><span data-ttu-id="61500-167"><see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定审核是成功、失败还是包括这两种情况。</span><span class="sxs-lookup"><span data-stu-id="61500-167">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span></span></param>
        <summary><span data-ttu-id="61500-168">初始化 <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> 类的新实例，指定要审核的用户或组的名称，要审核的权限，是否考虑继承以及是否审核成功和（或）失败。</span><span class="sxs-lookup"><span data-stu-id="61500-168">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61500-169">所有注册表项都是容器，因此对于注册表项有意义的唯一继承标志是 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> 标志。</span><span class="sxs-lookup"><span data-stu-id="61500-169">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="61500-170">如果未指定此标志，则会忽略传播标志，并且仅影响直接密钥。</span><span class="sxs-lookup"><span data-stu-id="61500-170">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="61500-171">如果该标志存在，则将按下表所示传播规则。</span><span class="sxs-lookup"><span data-stu-id="61500-171">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="61500-172">该表假设有一个具有子子项 CS 和孙子项 GS 的子项。</span><span class="sxs-lookup"><span data-stu-id="61500-172">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="61500-173">也就是说，孙级子项的路径为 S\CS\GS。</span><span class="sxs-lookup"><span data-stu-id="61500-173">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="61500-174">传播标志</span><span class="sxs-lookup"><span data-stu-id="61500-174">Propagation flags</span></span>|<span data-ttu-id="61500-175">S</span><span class="sxs-lookup"><span data-stu-id="61500-175">S</span></span>|<span data-ttu-id="61500-176">CS</span><span class="sxs-lookup"><span data-stu-id="61500-176">CS</span></span>|<span data-ttu-id="61500-177">GS</span><span class="sxs-lookup"><span data-stu-id="61500-177">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="61500-178">X</span><span class="sxs-lookup"><span data-stu-id="61500-178">X</span></span>|<span data-ttu-id="61500-179">X</span><span class="sxs-lookup"><span data-stu-id="61500-179">X</span></span>|<span data-ttu-id="61500-180">X</span><span class="sxs-lookup"><span data-stu-id="61500-180">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="61500-181">X</span><span class="sxs-lookup"><span data-stu-id="61500-181">X</span></span>|<span data-ttu-id="61500-182">X</span><span class="sxs-lookup"><span data-stu-id="61500-182">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="61500-183">X</span><span class="sxs-lookup"><span data-stu-id="61500-183">X</span></span>|<span data-ttu-id="61500-184">X</span><span class="sxs-lookup"><span data-stu-id="61500-184">X</span></span>|  
|<span data-ttu-id="61500-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="61500-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="61500-186">X</span><span class="sxs-lookup"><span data-stu-id="61500-186">X</span></span>||  
  
 <span data-ttu-id="61500-187">孙子项的模式控制孙级子项包含的所有子项。</span><span class="sxs-lookup"><span data-stu-id="61500-187">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="61500-188">例如，如果为 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 指定了标志并且为 `inheritanceFlags` 指定了 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 传播标志 `propagationFlags` ，则此规则不会应用于直接子项，而是应用于其所有直接子子项及其包含的所有子项。</span><span class="sxs-lookup"><span data-stu-id="61500-188">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61500-189">尽管可以 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> 为指定标志，但 `inheritanceFlags` 没有任何一点要这样做。</span><span class="sxs-lookup"><span data-stu-id="61500-189">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="61500-190">出于访问控制的目的，子项中的名称/值对不是单独的对象。</span><span class="sxs-lookup"><span data-stu-id="61500-190">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="61500-191">对名称/值对的访问权限由子项的权限控制。</span><span class="sxs-lookup"><span data-stu-id="61500-191">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="61500-192">此外，由于所有子项都是容器 (也就是说，它们可以包含其他子项) ，它们不受标志的影响 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 。</span><span class="sxs-lookup"><span data-stu-id="61500-192">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="61500-193">最后，指定 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 标志不必要地使规则维护复杂化，因为这会影响兼容规则的正常组合。</span><span class="sxs-lookup"><span data-stu-id="61500-193">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 <span data-ttu-id="61500-194">此构造函数等效于 <xref:System.Security.Principal.NTAccount> 通过传递 `identity` 到 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数并将新创建的 <xref:System.Security.Principal.NTAccount> 对象传递给 <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> 构造函数来创建对象。</span><span class="sxs-lookup"><span data-stu-id="61500-194">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="61500-195"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-195"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="61500-196">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-196">-or-</span></span> 
 <span data-ttu-id="61500-197"><paramref name="flags" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-197"><paramref name="flags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="61500-198">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-198">-or-</span></span> 
 <span data-ttu-id="61500-199"><paramref name="inheritanceFlags" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-199"><paramref name="inheritanceFlags" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="61500-200">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-200">-or-</span></span> 
 <span data-ttu-id="61500-201"><paramref name="propagationFlags" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="61500-201"><paramref name="propagationFlags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61500-202"><paramref name="registryRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="61500-202"><paramref name="registryRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="61500-203"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61500-203"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="61500-204">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-204">-or-</span></span> 
 <span data-ttu-id="61500-205"><paramref name="identity" /> 是一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="61500-205"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="61500-206">- 或 -</span><span class="sxs-lookup"><span data-stu-id="61500-206">-or-</span></span> 
 <span data-ttu-id="61500-207"><paramref name="identity" /> 的长度超过 512 个字符。</span><span class="sxs-lookup"><span data-stu-id="61500-207"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61500-208">获取受此审核规则影响的访问权限。</span><span class="sxs-lookup"><span data-stu-id="61500-208">Gets the access rights affected by the audit rule.</span></span></summary>
        <value><span data-ttu-id="61500-209"><see cref="T:System.Security.AccessControl.RegistryRights" /> 值的按位组合，它指示受此审核规则影响的权限。</span><span class="sxs-lookup"><span data-stu-id="61500-209">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values that indicates the rights affected by the audit rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61500-210"><xref:System.Security.AccessControl.RegistryAuditRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="61500-210"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="61500-211">您可以创建表示不同用户、不同权限或不同标志组合的新审核规则 <xref:System.Security.AccessControl.AuditFlags> ，但不能修改现有审核规则。</span><span class="sxs-lookup"><span data-stu-id="61500-211">You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
