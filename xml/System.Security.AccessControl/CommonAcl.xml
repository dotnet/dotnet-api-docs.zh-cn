<Type Name="CommonAcl" FullName="System.Security.AccessControl.CommonAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="542d7c55dec2a6528ae06ecede872b5869724bbe" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86362009" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonAcl : System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonAcl extends System.Security.AccessControl.GenericAcl" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonAcl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonAcl&#xA;Inherits GenericAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonAcl abstract : System::Security::AccessControl::GenericAcl" />
  <TypeSignature Language="F#" Value="type CommonAcl = class&#xA;    inherit GenericAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract CommonAcl extends System.Security.AccessControl.GenericAcl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.GenericAcl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da6ed-101">表示访问控制列表 (ACL)，并且是 <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> 和 <see cref="T:System.Security.AccessControl.SystemAcl" /> 类的基类。</span><span class="sxs-lookup"><span data-stu-id="da6ed-101">Represents an access control list (ACL) and is the base class for the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> and <see cref="T:System.Security.AccessControl.SystemAcl" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="da6ed-102">继承和访问掩码标志的某些组合是毫无意义的：</span><span class="sxs-lookup"><span data-stu-id="da6ed-102">Certain combinations of inheritance and access mask flags are meaningless:</span></span>  
  
-   <span data-ttu-id="da6ed-103">删除 (ACE) 具有零访问掩码的任何访问控制项。</span><span class="sxs-lookup"><span data-stu-id="da6ed-103">Any access control entry (ACE) with a zero-access mask is removed.</span></span>  
  
-   <span data-ttu-id="da6ed-104">删除对象 Acl 中仅有的 Ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-104">Inherit-only ACEs inside object ACLs are removed.</span></span>  
  
-   <span data-ttu-id="da6ed-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 已清除叶对象 Acl 中所有 ace 上的、、和标志。</span><span class="sxs-lookup"><span data-stu-id="da6ed-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, and <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flags on all ACEs in leaf object ACLs are cleared.</span></span>  
  
-   <span data-ttu-id="da6ed-106"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>在缺少或标志的情况中具有标志的 <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> ace <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 毫无意义，它们会被删除。</span><span class="sxs-lookup"><span data-stu-id="da6ed-106">ACEs that have an <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag are meaningless; they are removed.</span></span>  
  
-   <span data-ttu-id="da6ed-107"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 不能删除或标记中的标志 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> 。</span><span class="sxs-lookup"><span data-stu-id="da6ed-107">The <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag can be removed.</span></span>  
  
-   <span data-ttu-id="da6ed-108"><xref:System.Security.AccessControl.AuditFlags> <xref:System.Security.AccessControl.AuditFlags.Success> <xref:System.Security.AccessControl.AuditFlags.Failure> 删除 (dacl) 的值为或位于自由访问控制列表中的 ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-108">ACEs that have an <xref:System.Security.AccessControl.AuditFlags> value of <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> in discretionary access control lists (DACLs) are removed.</span></span>  
  
-   <span data-ttu-id="da6ed-109">不指定或的任何审核 ACE <xref:System.Security.AccessControl.AuditFlags.Success> <xref:System.Security.AccessControl.AuditFlags.Failure> 都将被删除。</span><span class="sxs-lookup"><span data-stu-id="da6ed-109">Any audit ACE that does not specify either <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> is removed.</span></span>  
  
-   <span data-ttu-id="da6ed-110">在 Dacl 上，删除了 SystemAudit 和 SystemAlarm Ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-110">On DACLs, SystemAudit and SystemAlarm ACEs are removed.</span></span>  
  
-   <span data-ttu-id="da6ed-111">在系统访问控制列表 (Sacl) ，会删除 AccessAllowed 和 AccessDenied Ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-111">On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</span></span>  
  
 <span data-ttu-id="da6ed-112">根据以下算法维护规范顺序：</span><span class="sxs-lookup"><span data-stu-id="da6ed-112">Canonical order is maintained according to the following algorithm:</span></span>  
  
-   <span data-ttu-id="da6ed-113">显式 Ace 优先于继承的 Ace;此规则适用于 Dacl 和 Sacl。</span><span class="sxs-lookup"><span data-stu-id="da6ed-113">Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="da6ed-114">在 Dacl 中，拒绝访问的 Ace 的优先级高于允许访问的 Ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-114">In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</span></span> <span data-ttu-id="da6ed-115">对于目录对象 Acl，非对象 Ace 位于对象 Ace 之前。</span><span class="sxs-lookup"><span data-stu-id="da6ed-115">For directory object ACLs, the nonobject ACEs come before object ACEs.</span></span>  
  
-   <span data-ttu-id="da6ed-116">所有常见 Ace 优先于 noncommon Ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-116">All common ACEs take precedence over noncommon ACEs.</span></span>  
  
-   <span data-ttu-id="da6ed-117">继承的 Ace 在 canonicity 后保持其相对顺序。</span><span class="sxs-lookup"><span data-stu-id="da6ed-117">Inherited ACEs maintain their relative order after canonicity.</span></span>  
  
-   <span data-ttu-id="da6ed-118">Dacl 和 Sacl 中都不允许识别的和自定义的 Ace。</span><span class="sxs-lookup"><span data-stu-id="da6ed-118">Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="da6ed-119">在不连续的范围内 (Dacl 上的显式 AccessDenied 和 AccessAllowed Ace，Sacl) 上的所有显式 Ace，使用 <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> <xref:System.Security.Principal.SecurityIdentifier> 与 ace 关联的对象的方法对 ace 进行排序。</span><span class="sxs-lookup"><span data-stu-id="da6ed-119">Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> methods of the <xref:System.Security.Principal.SecurityIdentifier> objects associated with the ACEs.</span></span>  
  
 <span data-ttu-id="da6ed-120">如果适用，则将相邻的 Ace 组合在一起。</span><span class="sxs-lookup"><span data-stu-id="da6ed-120">Adjacent ACEs are combined, if appropriate.</span></span>  <span data-ttu-id="da6ed-121">这会减少 ACL 的大小，而不会影响它所授予的访问控制语义。</span><span class="sxs-lookup"><span data-stu-id="da6ed-121">This reduces the size of the ACL without affecting the access control semantics it grants.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override sealed int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property BinaryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BinaryLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BinaryLength : int" Usage="System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da6ed-122">获取当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象的二进制表示形式的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="da6ed-122">Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span> <span data-ttu-id="da6ed-123">应该在使用 <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> 方法将访问控制列表封送到二进制数组中之前使用此长度。</span><span class="sxs-lookup"><span data-stu-id="da6ed-123">This length should be used before marshaling the access control list (ACL) into a binary array by using the <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</span></span></summary>
        <value><span data-ttu-id="da6ed-124">获取当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象的二进制表示形式的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="da6ed-124">The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override sealed int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.AccessControl.CommonAcl.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da6ed-125">获取当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象中访问控制项 (ACE) 的数量。</span><span class="sxs-lookup"><span data-stu-id="da6ed-125">Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <value><span data-ttu-id="da6ed-126">当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象中 ACE 的数量。</span><span class="sxs-lookup"><span data-stu-id="da6ed-126">The number of ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override sealed void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub GetBinaryForm (binaryForm As Byte(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm, int offset);" />
      <MemberSignature Language="F#" Value="override this.GetBinaryForm : byte[] * int -&gt; unit" Usage="commonAcl.GetBinaryForm (binaryForm, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm"><span data-ttu-id="da6ed-127"><see cref="T:System.Security.AccessControl.CommonAcl" /> 的内容将被封送到的字节数组。</span><span class="sxs-lookup"><span data-stu-id="da6ed-127">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> is marshaled.</span></span></param>
        <param name="offset"><span data-ttu-id="da6ed-128">开始封送的偏移量。</span><span class="sxs-lookup"><span data-stu-id="da6ed-128">The offset at which to start marshaling.</span></span></param>
        <summary><span data-ttu-id="da6ed-129">将 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象的内容从指定的偏移量开始封送到指定的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="da6ed-129">Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> object into the specified byte array beginning at the specified offset.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonical">
      <MemberSignature Language="C#" Value="public bool IsCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanonical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanonical : bool" Usage="System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da6ed-130">获取一个布尔值，该值指定当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象中的访问控制项 (ACE) 是否处于规范顺序。</span><span class="sxs-lookup"><span data-stu-id="da6ed-130">Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order.</span></span></summary>
        <value><span data-ttu-id="da6ed-131">如果当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象中的 ACE 处于规范顺序，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="da6ed-131"><see langword="true" /> if the ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainer">
      <MemberSignature Language="C#" Value="public bool IsContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContainer" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContainer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContainer : bool" Usage="System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da6ed-132">设置 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象是否为一个容器。</span><span class="sxs-lookup"><span data-stu-id="da6ed-132">Sets whether the <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></summary>
        <value><span data-ttu-id="da6ed-133">如果当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象是一个容器，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="da6ed-133"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDS">
      <MemberSignature Language="C#" Value="public bool IsDS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDS" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDS As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDS { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDS : bool" Usage="System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da6ed-134">设置当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象是否为一个目录对象的访问控制列表 (ACL)。</span><span class="sxs-lookup"><span data-stu-id="da6ed-134">Sets whether the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object access control list (ACL).</span></span></summary>
        <value><span data-ttu-id="da6ed-135">如果当前 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象是一个目录对象的 ACL，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="da6ed-135"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object ACL.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.GenericAce Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides NotOverridable Property Item(index As Integer) As GenericAce" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::GenericAce ^ default[int] { System::Security::AccessControl::GenericAce ^ get(int index); void set(int index, System::Security::AccessControl::GenericAce ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Security.AccessControl.GenericAce with get, set" Usage="System.Security.AccessControl.CommonAcl.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.GenericAce</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="da6ed-136">要获取或设置的 <see cref="T:System.Security.AccessControl.CommonAce" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="da6ed-136">The zero-based index of the <see cref="T:System.Security.AccessControl.CommonAce" /> to get or set.</span></span></param>
        <summary><span data-ttu-id="da6ed-137">获取或设置指定索引处的 <see cref="T:System.Security.AccessControl.CommonAce" />。</span><span class="sxs-lookup"><span data-stu-id="da6ed-137">Gets or sets the <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="da6ed-138">指定索引处的 <see cref="T:System.Security.AccessControl.CommonAce" />。</span><span class="sxs-lookup"><span data-stu-id="da6ed-138">The <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge (sid As SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberSignature Language="F#" Value="member this.Purge : System.Security.Principal.SecurityIdentifier -&gt; unit" Usage="commonAcl.Purge sid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="da6ed-139">要检查的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="da6ed-139">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> object to check for.</span></span></param>
        <summary><span data-ttu-id="da6ed-140">移除被此 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象包含并且与指定的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象关联的所有访问控制项 (ACE)。</span><span class="sxs-lookup"><span data-stu-id="da6ed-140">Removes all access control entries (ACEs) contained by this <see cref="T:System.Security.AccessControl.CommonAcl" /> object that are associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInheritedAces">
      <MemberSignature Language="C#" Value="public void RemoveInheritedAces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInheritedAces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInheritedAces ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInheritedAces();" />
      <MemberSignature Language="F#" Value="member this.RemoveInheritedAces : unit -&gt; unit" Usage="commonAcl.RemoveInheritedAces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da6ed-141">从此 <see cref="T:System.Security.AccessControl.CommonAcl" /> 对象移除所有继承的访问控制项 (ACE)。</span><span class="sxs-lookup"><span data-stu-id="da6ed-141">Removes all inherited access control entries (ACEs) from this <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public override sealed byte Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Revision" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Revision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Revision { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : byte" Usage="System.Security.AccessControl.CommonAcl.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da6ed-142">获取 <see cref="T:System.Security.AccessControl.CommonAcl" /> 的修订级别。</span><span class="sxs-lookup"><span data-stu-id="da6ed-142">Gets the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></summary>
        <value><span data-ttu-id="da6ed-143">一个指定 <see cref="T:System.Security.AccessControl.CommonAcl" /> 的修订级别的字节值。</span><span class="sxs-lookup"><span data-stu-id="da6ed-143">A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
