<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45fdf9e2b1d6516823a3b36e3f9f12d90fb57183" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91914023" /></Metadata><TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.IO.FileSystem.AccessControl" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示文件或目录的访问控制和审核安全。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity>类是 <xref:System.Security.AccessControl.FileSecurity> 和类的基类 <xref:System.Security.AccessControl.DirectorySecurity> 。  这些类表示系统文件或目录的所有访问权限，并定义如何审核访问尝试。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity>类将访问权限和审核权限表示为一组规则。 每个访问规则由一个 <xref:System.Security.AccessControl.FileSystemAccessRule> 对象表示，而每个审核规则由一个 <xref:System.Security.AccessControl.FileSystemAuditRule> 对象表示。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity>类是基础 Microsoft Windows 文件安全系统的抽象。 在此系统中，每个文件或目录都具有 (DACL) 的自由访问控制列表，该列表控制对文件或目录的访问，以及 (SACL) 的系统访问控制列表，该列表指定了审核的访问控制尝试。  <xref:System.Security.AccessControl.FileSystemAccessRule>和 <xref:System.Security.AccessControl.FileSystemAuditRule> 类是包含 Dacl 和 Sacl (ace) 的访问控制项的抽象类。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity>类隐藏了 dacl 和 sacl 的许多详细信息; 不必担心 ACE 顺序或 NULL dacl。  
  
 若要将新的或更改的访问控制列表 (ACL) 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Security.AccessControl.FileSecurity> 类来添加和删除访问控制列表 (ACL) 条目。  你必须提供有效的用户或组帐户以运行此示例。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 类用于表示访问规则的枚举。</summary>
        <value>一个 <see cref="T:System.Type" /> 对象，表示 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 枚举。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生自类的类将 <xref:System.Security.AccessControl.FileSystemSecurity> 重写 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> 属性，并返回它们用来表示访问权限的类型。 当使用包含多个类型的安全对象的数组或集合时，请使用此属性来确定要用于每个安全对象的正确枚举类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AccessRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">表示用户帐户的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象。</param>
        <param name="accessMask">指定访问类型的整数。</param>
        <param name="isInherited">如果该访问规则是继承的，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="inheritanceFlags"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值之一，指定如何将访问掩码传播到子对象。</param>
        <param name="propagationFlags"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 值之一，指定如何将访问控制项 (ACE) 传播到子对象。</param>
        <param name="type"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，指定允许还是拒绝访问。</param>
        <summary>使用指定的访问权限、访问控制和标志初始化 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 类的新实例，该实例表示指定用户的新的访问控制规则。</summary>
        <returns>表示指定用户的新访问控制规则的新的 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，具有指定的访问权限、访问控制和标志。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建访问控制规则的建议方法是使用类的构造函数 <xref:System.Security.AccessControl.FileSystemAccessRule> 。  
  
 方法的返回类型 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> 是基类， <xref:System.Security.AccessControl.AccessRule> 但返回值可以安全地强制转换为派生类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 参数指定了无效值。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="accessMask" /> 参数为零。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，也不是可转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 类用于表示访问规则的枚举。</summary>
        <value>一个表示 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 类的 <see cref="T:System.Type" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生自类的类将 <xref:System.Security.AccessControl.FileSystemSecurity> 重写 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> 属性，并返回用于表示访问规则的类型。 当使用包含多个类型的安全对象的数组或集合时，请使用此属性来确定要用于每个安全对象的正确访问规则类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，表示要添加到文件或目录的访问控制列表 (ACL) 权限。</param>
        <summary>将指定的访问控制列表 (ACL) 权限添加到当前文件或目录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>方法将新规则添加到对象中包含的规则列表 <xref:System.Security.AccessControl.FileSystemSecurity> 。  
  
 如果指定规则 (ACL) 的访问控制列表已存在，则该 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> 方法仍将添加规则，但有一个例外： <xref:System.Security.AccessControl.FileSystemAccessRule> 使用枚举值创建的对象将 <xref:System.Security.AccessControl.AccessControlType.Deny> 取代使用枚举值创建的对象 <xref:System.Security.AccessControl.AccessControlType.Allow> 。  
  
 若要将新的或更改的 ACL 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
 当你在未设置标志的情况下添加访问规则时 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ， <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 标志将自动添加到你的规则。  如果以后在不指定标志的情况下删除该规则 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ，将自动删除该标志。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Security.AccessControl.FileSecurity> 类来添加和删除访问控制列表 (ACL) 条目。  你必须提供有效的用户或组帐户以运行此示例。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 对象，表示要添加到文件或目录的审核规则。</param>
        <summary>将指定的审核规则添加到当前文件或目录。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>方法将新的审核规则添加到对象中包含的规则列表 <xref:System.Security.AccessControl.FileSystemSecurity> 。  
  
 如果指定的规则已存在审核规则，则该 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 方法仍将添加规则。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 方法将审核规则添加到文件中，并使用 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 方法从文件中移除审核规则。  你必须提供有效的用户或组帐户以运行此示例。  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function AuditRuleFactory (identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">表示用户帐户的 <see cref="T:System.Security.Principal.IdentityReference" /> 对象。</param>
        <param name="accessMask">指定访问类型的整数。</param>
        <param name="isInherited">如果该访问规则是继承的，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="inheritanceFlags"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值之一，指定如何将访问掩码传播到子对象。</param>
        <param name="propagationFlags"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 值之一，指定如何将访问控制项 (ACE) 传播到子对象。</param>
        <param name="flags"><see cref="T:System.Security.AccessControl.AuditFlags" /> 值之一，指定要执行的审核的类型。</param>
        <summary>初始化 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 类的新实例，它表示指定用户的指定审核规则。</summary>
        <returns>新的 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 对象，表示指定用户的指定审核规则。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建审核规则的建议方法是使用类的构造函数 <xref:System.Security.AccessControl.FileSystemAuditRule> 。  
  
 方法的返回类型 <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> 是基类， <xref:System.Security.AccessControl.AuditRule> 但返回值可以安全地强制转换为派生类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 属性指定了无效值。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> 属性为 <see langword="null" />。  
  
- 或 - 
<paramref name="accessMask" /> 属性为零。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" /> 属性既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，也不是可转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 类用于表示审核规则的类型。</summary>
        <value>一个表示 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 类的 <see cref="T:System.Type" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生自类的类将 <xref:System.Security.AccessControl.FileSystemSecurity> 重写 <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> 属性，并返回用于表示审核权限的类型。 当使用包含多个类型的安全对象的数组或集合时，请使用此属性来确定要用于每个安全对象的正确审核规则类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，表示要从文件或目录中移除的访问控制列表 (ACL) 权限。</param>
        <summary>从当前文件或目录移除所有匹配的允许或拒绝访问控制列表 (ACL) 权限。</summary>
        <returns>如果访问规则已移除，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中移除所有匹配的访问规则或所有匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 的访问规则 <xref:System.Security.AccessControl.FileSystemSecurity> 。  例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.Security.AccessControl.FileSystemAccessRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.Security.AccessControl.FileSystemRights.Read> 值和用户帐户创建的对象来删除用户的所有访问规则。  如果执行此操作， <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> 方法将删除任何指定 <xref:System.Security.AccessControl.FileSystemRights.Read> 值或值的拒绝规则 <xref:System.Security.AccessControl.FileSystemRights.Write> 。  
  
 若要将新的或更改的访问控制列表 (ACL) 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
 当你在未设置标志的情况下添加访问规则时 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ， <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 标志将自动添加到你的规则。  如果以后在不指定标志的情况下删除该规则 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ，将自动删除该标志。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Security.AccessControl.FileSecurity> 类来添加和删除访问控制列表 (ACL) 条目。  你必须提供有效的用户或组帐户以运行此示例。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，该对象指定应该从文件或目录移除其访问控制列表 (ACL) 权限的用户。</param>
        <summary>从当前文件或目录移除指定用户的所有访问控制列表 (ACL) 权限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A>方法移除指定用户 (ACL) 权限的所有访问控制列表。  方法将忽略 <xref:System.Security.AccessControl.FileSystemAccessRule> 对象中除用户帐户之外的所有值。  
  
 若要将新的或更改的 ACL 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
 当你在未设置标志的情况下添加访问规则时 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ， <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 标志将自动添加到你的规则。  如果以后在不指定标志的情况下删除该规则 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ，将自动删除该标志。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，该对象指定应该从文件或目录移除其访问控制列表 (ACL) 权限的用户。</param>
        <summary>从当前文件或目录移除单个匹配的允许或拒绝访问控制列表 (ACL) 权限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中移除指定的访问规则或指定的匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 访问规则 <xref:System.Security.AccessControl.FileSystemSecurity> 。  例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.Security.AccessControl.FileSystemAccessRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.Security.AccessControl.FileSystemRights.Read> 值和用户帐户创建的对象，为用户删除指定的访问规则。  执行此操作时， <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> 方法只删除指定值的拒绝规则 <xref:System.Security.AccessControl.FileSystemRights.Read> 。  它不会删除任何指定值的拒绝规则 <xref:System.Security.AccessControl.FileSystemRights.Write> 。  
  
 若要将新的或更改的访问控制列表 (ACL) 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
 当你在未设置标志的情况下添加访问规则时 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ， <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 标志将自动添加到你的规则。  如果以后在不指定标志的情况下删除该规则 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> ，将自动删除该标志。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 对象，表示要从文件或目录移除的审核规则。</param>
        <summary>从当前文件或目录移除所有匹配的允许或拒绝审核规则。</summary>
        <returns>如果审核规则已移除，则为 <see langword="true" />；否则为 <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中移除所有匹配的审核规则或所有匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 的审核规则 <xref:System.Security.AccessControl.FileSystemSecurity> 。  例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.Security.AccessControl.FileSystemAuditRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.Security.AccessControl.AuditFlags.Failure> 值和用户帐户创建的对象来删除用户的所有审核规则。  如果执行此操作， <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 方法将删除任何指定 <xref:System.Security.AccessControl.AuditFlags.Failure> 值或值的拒绝规则 <xref:System.Security.AccessControl.AuditFlags.Success> 。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 方法将审核规则添加到文件中，并使用 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 方法从文件中移除审核规则。  你必须提供有效的用户或组帐户以运行此示例。  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 对象，该对象指定应该从文件或目录删除其审核规则的用户。</param>
        <summary>从当前文件或目录移除指定用户的所有审核规则。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A>方法移除指定用户的所有审核规则。  它忽略 <xref:System.Security.AccessControl.FileSystemAuditRule> 对象中除用户帐户之外的所有值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 对象，表示要从文件或目录移除的审核规则。</param>
        <summary>从当前文件或目录移除单个匹配的允许或拒绝审核规则。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A>方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 从当前对象中删除指定的匹配审核规则或指定的匹配 <xref:System.Security.AccessControl.AccessControlType.Allow> 审核规则 <xref:System.Security.AccessControl.FileSystemSecurity> 。  例如，你可以使用此方法 <xref:System.Security.AccessControl.AccessControlType.Deny> 通过传递 <xref:System.Security.AccessControl.FileSystemAuditRule> 使用 <xref:System.Security.AccessControl.AccessControlType.Deny> 值、 <xref:System.Security.AccessControl.AuditFlags.Failure> 值和用户帐户创建的对象来删除用户的指定审核规则。  执行此操作时， <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> 方法只删除指定值的拒绝规则 <xref:System.Security.AccessControl.AuditFlags.Failure> 。  它不会删除任何指定值的拒绝规则 <xref:System.Security.AccessControl.AuditFlags.Success> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，表示要添加到文件或目录的访问控制列表 (ACL) 权限。</param>
        <summary>将指定的访问控制列表 (ACL) 权限添加到当前文件或目录，并移除所有匹配的 ACL 权限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>方法添加指定的访问控制列表 (ACL) 规则或覆盖与参数匹配的所有相同 ACL 规则 `rule` 。  例如，如果 `rule` 参数指定了一个 <xref:System.Security.AccessControl.FileSystemRights.Read> 值，并且该 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> 方法找到了指定该值的相同 ACL 规则 <xref:System.Security.AccessControl.FileSystemRights.Read> ，则将覆盖相同的规则。  如果该 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> 方法找到指定值的相同 ACL 规则 <xref:System.Security.AccessControl.FileSystemRights.Write> ，则相同的规则也会被覆盖。  
  
 若要将新的或更改的 ACL 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 对象，表示要为文件或目录设置的访问控制列表 (ACL) 权限。</param>
        <summary>设置当前文件或目录的指定访问控制列表 (ACL) 权限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>方法添加指定的访问控制列表 (ACL) 规则或覆盖与参数的值匹配的所有相同 ACL 规则 <xref:System.Security.AccessControl.FileSystemRights> `rule` 。  例如，如果 `rule` 参数指定了一个 <xref:System.Security.AccessControl.FileSystemRights.Read> 值，并且该 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> 方法找到了指定该值的相同 ACL 规则 <xref:System.Security.AccessControl.FileSystemRights.Read> ，则将覆盖相同的规则。  如果 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> 方法找到指定值的相同 ACL 规则 <xref:System.Security.AccessControl.FileSystemRights.Write> ，则不会覆盖相同的规则。  
  
 若要将新的或更改的 ACL 信息保存到文件中，请使用 <xref:System.IO.File.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  若要将新的或更改的 ACL 信息保存到目录中，请使用 <xref:System.IO.Directory.SetAccessControl%2A> 或 <xref:System.IO.FileInfo.SetAccessControl%2A> 方法。  
  
 若要从文件中检索 ACL 信息，请使用 <xref:System.IO.File.GetAccessControl%2A> 或 <xref:System.IO.FileInfo.GetAccessControl%2A> 方法。  若要从目录中检索 ACL 信息，请使用 <xref:System.IO.Directory.GetAccessControl%2A> 或 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">一个 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 对象，表示要为文件或目录设置的审核规则。</param>
        <summary>设置当前文件或目录的指定审核规则。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>方法添加指定的审核规则或覆盖与参数的值匹配的任何相同的审核规则 <xref:System.Security.AccessControl.FileSystemRights> `rule` 。  例如，如果 `rule` 参数指定一个值， <xref:System.Security.AccessControl.FileSystemRights.Read> 并且该 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> 方法找到指定该值的相同审核规则 <xref:System.Security.AccessControl.FileSystemRights.Read> ，则将覆盖相同的规则。  如果该 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> 方法找到指定值的相同审核规则 <xref:System.Security.AccessControl.FileSystemRights.Write> ，则不会覆盖相同的规则。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
