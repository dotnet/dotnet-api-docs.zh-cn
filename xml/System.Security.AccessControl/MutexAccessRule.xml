<Type Name="MutexAccessRule" FullName="System.Security.AccessControl.MutexAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73c9788ddaa4ca6ab1f6ac955fb90b1731b7cd84" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91903903" /></Metadata><TypeSignature Language="C#" Value="public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type MutexAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Threading.AccessControl" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="624bb-101">表示一组允许或拒绝用户或组进行访问的权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="624bb-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="624bb-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="624bb-103"><xref:System.Security.AccessControl.MutexAccessRule>类是 .NET Framework 为管理已命名的系统互斥体上的 Windows 访问控制安全性提供的一组类中的一种。</span><span class="sxs-lookup"><span data-stu-id="624bb-103">The <xref:System.Security.AccessControl.MutexAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.</span></span> <span data-ttu-id="624bb-104">有关这些类的概述及其与基础 Windows 访问控制结构的关系，请参阅 <xref:System.Security.AccessControl.MutexSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="624bb-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="624bb-105">Windows 访问控制安全性仅适用于已命名的系统互斥体。</span><span class="sxs-lookup"><span data-stu-id="624bb-105">Windows access control security is meaningful only for named system mutexes.</span></span> <span data-ttu-id="624bb-106">如果 <xref:System.Threading.Mutex> 对象表示本地 mutex，则访问控制是不相关的。</span><span class="sxs-lookup"><span data-stu-id="624bb-106">If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="624bb-107">若要获取当前应用于已命名的 mutex 的规则列表，请使用 <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> 方法获取 <xref:System.Security.AccessControl.MutexSecurity> 对象，然后使用其 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> 方法来获取对象的集合 <xref:System.Security.AccessControl.MutexAccessRule> 。</span><span class="sxs-lookup"><span data-stu-id="624bb-107">To get a list of the rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span>  
  
 <span data-ttu-id="624bb-108"><xref:System.Security.AccessControl.MutexAccessRule> 对象不会将一对一映射到基础自由访问控制列表中的访问控制项 (DACL) 。</span><span class="sxs-lookup"><span data-stu-id="624bb-108"><xref:System.Security.AccessControl.MutexAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="624bb-109">当你获取互斥体的所有访问规则集时，该集包含当前表示所有访问控制项所需的最小规则数。</span><span class="sxs-lookup"><span data-stu-id="624bb-109">When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="624bb-110">在应用和删除规则时，基础访问控制项会更改。</span><span class="sxs-lookup"><span data-stu-id="624bb-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="624bb-111">如果可能，将合并规则中的信息以保持最小数量的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="624bb-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="624bb-112">因此，当您阅读当前的规则列表时，它可能看起来与您添加的所有规则的列表并不完全相同。</span><span class="sxs-lookup"><span data-stu-id="624bb-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="624bb-113">使用 <xref:System.Security.AccessControl.MutexAccessRule> 对象指定对用户或组允许或拒绝的访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-113">Use <xref:System.Security.AccessControl.MutexAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="624bb-114"><xref:System.Security.AccessControl.MutexAccessRule>对象始终表示允许的访问权限或拒绝访问，这两种方法都不会。</span><span class="sxs-lookup"><span data-stu-id="624bb-114">A <xref:System.Security.AccessControl.MutexAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="624bb-115">若要将规则应用于已命名的系统互斥体，请使用 <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> 方法获取该 <xref:System.Security.AccessControl.MutexSecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-115">To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="624bb-116"><xref:System.Security.AccessControl.MutexSecurity>通过使用对象的方法添加规则来修改对象，然后使用 <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> 方法重新附加安全对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-116">Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="624bb-117">对对象所做的更改 <xref:System.Security.AccessControl.MutexSecurity> 不会影响已命名的 mutex 的访问级别，直到调用方法将已 <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> 更改的安全对象分配给已命名的互斥体。</span><span class="sxs-lookup"><span data-stu-id="624bb-117">Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named mutex.</span></span>  
  
 <span data-ttu-id="624bb-118"><xref:System.Security.AccessControl.MutexAccessRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="624bb-118"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="624bb-119">使用类的方法来修改互斥体的安全性， <xref:System.Security.AccessControl.MutexSecurity> 以添加或删除规则; 执行此操作时，将修改基础访问控制项。</span><span class="sxs-lookup"><span data-stu-id="624bb-119">Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="624bb-120">Windows 98 或 Windows Millennium Edition 不支持同步对象的安全性。</span><span class="sxs-lookup"><span data-stu-id="624bb-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="624bb-121">下面的代码示例演示如何创建和使用 <xref:System.Security.AccessControl.MutexAccessRule> 对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="624bb-122">该示例创建一个 <xref:System.Security.AccessControl.MutexSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="624bb-122">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="624bb-123">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="624bb-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="624bb-124">此示例不会将安全对象附加到 <xref:System.Threading.Mutex> 对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-124">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="624bb-125">可在和中找到附加安全对象的 <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> 示例 <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="624bb-125">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="624bb-126">初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="624bb-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="624bb-127">此规则应用到的用户或组。</span><span class="sxs-lookup"><span data-stu-id="624bb-127">The user or group the rule applies to.</span></span> <span data-ttu-id="624bb-128">必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="624bb-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="624bb-129"><see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-129">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="624bb-130"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="624bb-131">初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="624bb-132">若要 <xref:System.Threading.Mutex> 通过调用 <xref:System.Threading.WaitHandle.WaitOne%2A> 或方法)  (等待 <xref:System.Threading.WaitHandle.WaitAny%2A> ， <xref:System.Threading.WaitHandle.WaitAll%2A> 用户必须具有 <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-132">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="624bb-133">若要通过调用方法来释放 mutex， <xref:System.Threading.Mutex.ReleaseMutex%2A> 用户必须具有 <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-133">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> method, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="624bb-134"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="624bb-134"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="624bb-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="624bb-135">-or-</span></span> 
 <span data-ttu-id="624bb-136"><paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="624bb-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="624bb-137"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="624bb-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="624bb-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="624bb-138">-or-</span></span> 
 <span data-ttu-id="624bb-139"><paramref name="eventRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="624bb-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="624bb-140"><paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span><span class="sxs-lookup"><span data-stu-id="624bb-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::String ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : string * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="624bb-141">应用此规则的用户或组的名称。</span><span class="sxs-lookup"><span data-stu-id="624bb-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="624bb-142"><see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-142">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="624bb-143"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="624bb-144">初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="624bb-145">若要 <xref:System.Threading.Mutex> 通过调用 <xref:System.Threading.WaitHandle.WaitOne%2A> 或方法)  (等待 <xref:System.Threading.WaitHandle.WaitAny%2A> ， <xref:System.Threading.WaitHandle.WaitAll%2A> 用户必须具有 <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-145">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="624bb-146">若要通过调用方法来释放 mutex， <xref:System.Threading.Mutex.ReleaseMutex%2A> 用户必须具有 <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-146">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> methods, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 <span data-ttu-id="624bb-147">此构造函数等效于 <xref:System.Security.Principal.NTAccount> 通过传递 `identity` 到 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数并将新创建的 <xref:System.Security.Principal.NTAccount> 对象传递给 <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> 构造函数来创建对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="624bb-148">下面的代码示例演示如何使用此构造函数创建 <xref:System.Security.AccessControl.MutexAccessRule> 对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-148">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="624bb-149">该示例创建一个 <xref:System.Security.AccessControl.MutexSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="624bb-149">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="624bb-150">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="624bb-150">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="624bb-151">此示例不会将安全对象附加到 <xref:System.Threading.Mutex> 对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-151">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="624bb-152">可在和中找到附加安全对象的 <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> 示例 <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="624bb-152">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="624bb-153"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="624bb-153"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="624bb-154">- 或 -</span><span class="sxs-lookup"><span data-stu-id="624bb-154">-or-</span></span> 
 <span data-ttu-id="624bb-155"><paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="624bb-155"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="624bb-156"><paramref name="eventRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="624bb-156"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="624bb-157"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="624bb-157"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="624bb-158">- 或 -</span><span class="sxs-lookup"><span data-stu-id="624bb-158">-or-</span></span> 
 <span data-ttu-id="624bb-159"><paramref name="identity" /> 是一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="624bb-159"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="624bb-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="624bb-160">-or-</span></span> 
 <span data-ttu-id="624bb-161"><paramref name="identity" /> 的长度超过 512 个字符。</span><span class="sxs-lookup"><span data-stu-id="624bb-161"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="624bb-162">获取访问规则允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-162">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="624bb-163"><see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="624bb-163">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="624bb-164"><xref:System.Security.AccessControl.MutexAccessRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="624bb-164"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="624bb-165">您可以创建表示不同用户、不同权限或不同的新访问规则 <xref:System.Security.AccessControl.AccessControlType> ，但不能修改现有的访问规则。</span><span class="sxs-lookup"><span data-stu-id="624bb-165">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="624bb-166">下面的代码示例演示如何使用 <xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> 属性来显示对象中包含的规则集中的权限 <xref:System.Security.AccessControl.MutexSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="624bb-166">The following code example demonstrates the use of the <xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="624bb-167">该示例创建一个 <xref:System.Security.AccessControl.MutexSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="624bb-167">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="624bb-168">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="624bb-168">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="624bb-169">此示例不会将安全对象附加到 <xref:System.Threading.Mutex> 对象。</span><span class="sxs-lookup"><span data-stu-id="624bb-169">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="624bb-170">可在和中找到附加安全对象的 <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> 示例 <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="624bb-170">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
