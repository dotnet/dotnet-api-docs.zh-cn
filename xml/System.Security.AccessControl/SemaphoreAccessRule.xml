<Type Name="SemaphoreAccessRule" FullName="System.Security.AccessControl.SemaphoreAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f90e6bbfdc686a16e632ad609e217bd19b5d89ce" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86753257" /></Metadata><TypeSignature Language="C#" Value="public sealed class SemaphoreAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type SemaphoreAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4729-101">表示一组允许或拒绝用户或组进行访问的权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="b4729-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b4729-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4729-103"><xref:System.Security.AccessControl.SemaphoreAccessRule>类是 .NET Framework 为管理已命名的系统信号量上的 Windows 访问控制安全性提供的一组类中的一种。</span><span class="sxs-lookup"><span data-stu-id="b4729-103">The <xref:System.Security.AccessControl.SemaphoreAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system semaphores.</span></span> <span data-ttu-id="b4729-104">有关这些类的概述及其与基础 Windows 访问控制结构的关系，请参阅 <xref:System.Security.AccessControl.SemaphoreSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="b4729-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.SemaphoreSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4729-105">Windows 访问控制安全性仅适用于已命名的系统信号量。</span><span class="sxs-lookup"><span data-stu-id="b4729-105">Windows access control security is meaningful only for named system semaphores.</span></span> <span data-ttu-id="b4729-106">如果 <xref:System.Threading.Semaphore> 对象表示本地信号量，则访问控制是不相关的。</span><span class="sxs-lookup"><span data-stu-id="b4729-106">If a <xref:System.Threading.Semaphore> object represents a local semaphore, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="b4729-107">若要获取当前应用于命名信号量的规则列表，请使用 <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> 方法获取 <xref:System.Security.AccessControl.SemaphoreSecurity> 对象，然后使用其 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> 方法获取对象的集合 <xref:System.Security.AccessControl.SemaphoreAccessRule> 。</span><span class="sxs-lookup"><span data-stu-id="b4729-107">To get a list of the rules currently applied to a named semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.SemaphoreSecurity> object, then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.SemaphoreAccessRule> objects.</span></span>  
  
 <span data-ttu-id="b4729-108"><xref:System.Security.AccessControl.SemaphoreAccessRule> 对象不会将一对一映射到基础自由访问控制列表中的访问控制项 (DACL) 。</span><span class="sxs-lookup"><span data-stu-id="b4729-108"><xref:System.Security.AccessControl.SemaphoreAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="b4729-109">获取用于某个信号量的所有访问规则集时，该集包含表示所有访问控制项所需的最小规则数。</span><span class="sxs-lookup"><span data-stu-id="b4729-109">When you get the set of all access rules for a semaphore, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4729-110">在应用和删除规则时，基础访问控制项会更改。</span><span class="sxs-lookup"><span data-stu-id="b4729-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="b4729-111">如果可能，将合并规则中的信息以保持最小数量的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="b4729-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="b4729-112">因此，当您阅读当前的规则列表时，它可能看起来与您添加的所有规则的列表并不完全相同。</span><span class="sxs-lookup"><span data-stu-id="b4729-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="b4729-113">使用 <xref:System.Security.AccessControl.SemaphoreAccessRule> 对象指定对用户或组允许或拒绝的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-113">Use <xref:System.Security.AccessControl.SemaphoreAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="b4729-114"><xref:System.Security.AccessControl.SemaphoreAccessRule>对象始终表示允许的访问权限或拒绝访问，这两种方法都不会。</span><span class="sxs-lookup"><span data-stu-id="b4729-114">A <xref:System.Security.AccessControl.SemaphoreAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="b4729-115">若要将规则应用于已命名的系统信号量，请使用 <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> 方法来获取 <xref:System.Security.AccessControl.SemaphoreSecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-115">To apply a rule to a named system semaphore, use the <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="b4729-116"><xref:System.Security.AccessControl.SemaphoreSecurity>通过使用对象的方法添加规则来修改对象，然后使用 <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> 方法重新附加安全对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-116">Modify the <xref:System.Security.AccessControl.SemaphoreSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4729-117">对对象所做 <xref:System.Security.AccessControl.SemaphoreSecurity> 的更改不会影响已命名的信号量的访问级别，直到调用 <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> 方法将已更改的安全对象分配给已命名的信号量。</span><span class="sxs-lookup"><span data-stu-id="b4729-117">Changes you make to a <xref:System.Security.AccessControl.SemaphoreSecurity> object do not affect the access levels of the named semaphore until you call the <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named semaphore.</span></span>  
  
 <span data-ttu-id="b4729-118"><xref:System.Security.AccessControl.SemaphoreAccessRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="b4729-118"><xref:System.Security.AccessControl.SemaphoreAccessRule> objects are immutable.</span></span> <span data-ttu-id="b4729-119">使用类的方法来修改信号量的安全性， <xref:System.Security.AccessControl.SemaphoreSecurity> 以添加或删除规则; 执行此操作时，将修改基础访问控制项。</span><span class="sxs-lookup"><span data-stu-id="b4729-119">Security for a semaphore is modified using the methods of the <xref:System.Security.AccessControl.SemaphoreSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4729-120">Windows 98 或 Windows Millennium Edition 不支持同步对象的安全性。</span><span class="sxs-lookup"><span data-stu-id="b4729-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4729-121">下面的代码示例演示 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则和规则之间的分隔 <xref:System.Security.AccessControl.AccessControlType.Deny> ，并显示兼容规则中的权限组合。</span><span class="sxs-lookup"><span data-stu-id="b4729-121">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="b4729-122">该示例创建一个 <xref:System.Security.AccessControl.SemaphoreSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="b4729-122">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="b4729-123">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="b4729-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4729-124">此示例不会将安全对象附加到 <xref:System.Threading.Semaphore> 对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-124">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4729-125">可在和中找到附加安全对象的 <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> 示例 <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b4729-125">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.SemaphoreSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4729-126">初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b4729-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As SemaphoreRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.SemaphoreRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.SemaphoreAccessRule" Usage="new System.Security.AccessControl.SemaphoreAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="b4729-127">此规则应用到的用户或组。</span><span class="sxs-lookup"><span data-stu-id="b4729-127">The user or group the rule applies to.</span></span> <span data-ttu-id="b4729-128">必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="b4729-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="b4729-129"><see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指定允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-129">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="b4729-130"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="b4729-131">初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4729-132">若要输入 <xref:System.Threading.Semaphore> （例如通过调用 <xref:System.Threading.WaitHandle.WaitOne%2A> 方法），用户必须具有 <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-132">To enter a <xref:System.Threading.Semaphore>, for example by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, a user must have <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="b4729-133">若要通过调用方法退出信号量， <xref:System.Threading.Semaphore.Release%2A> 用户必须具有 <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-133">To exit the semaphore, by calling the <xref:System.Threading.Semaphore.Release%2A> method, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b4729-134"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="b4729-134"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="b4729-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4729-135">-or-</span></span> 
 <span data-ttu-id="b4729-136"><paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="b4729-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4729-137"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4729-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b4729-138">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4729-138">-or-</span></span> 
 <span data-ttu-id="b4729-139"><paramref name="eventRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="b4729-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4729-140"><paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span><span class="sxs-lookup"><span data-stu-id="b4729-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAccessRule (string identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As SemaphoreRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAccessRule(System::String ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreAccessRule : string * System.Security.AccessControl.SemaphoreRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.SemaphoreAccessRule" Usage="new System.Security.AccessControl.SemaphoreAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="b4729-141">应用此规则的用户或组的名称。</span><span class="sxs-lookup"><span data-stu-id="b4729-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="b4729-142"><see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指定允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-142">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="b4729-143"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="b4729-144">初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4729-145">若要输入 <xref:System.Threading.Semaphore> （例如通过调用 <xref:System.Threading.WaitHandle.WaitOne%2A> 方法），用户必须具有 <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-145">To enter a <xref:System.Threading.Semaphore>, for example by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, a user must have <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="b4729-146">若要通过调用方法退出信号量， <xref:System.Threading.Semaphore.Release%2A> 用户必须具有 <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-146">To exit the semaphore, by calling the <xref:System.Threading.Semaphore.Release%2A> method, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 <span data-ttu-id="b4729-147">此构造函数等效于 <xref:System.Security.Principal.NTAccount> 通过传递 `identity` 到 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数并将新创建的 <xref:System.Security.Principal.NTAccount> 对象传递给 <xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29> 构造函数来创建对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4729-148">下面的代码示例演示如何使用此构造函数创建 <xref:System.Security.AccessControl.SemaphoreAccessRule> 对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-148">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.SemaphoreAccessRule> objects.</span></span> <span data-ttu-id="b4729-149">该示例创建一个 <xref:System.Security.AccessControl.SemaphoreSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="b4729-149">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="b4729-150">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="b4729-150">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4729-151">此示例不会将安全对象附加到 <xref:System.Threading.Semaphore> 对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-151">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4729-152">可在和中找到附加安全对象的 <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> 示例 <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b4729-152">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b4729-153"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="b4729-153"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="b4729-154">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4729-154">-or-</span></span> 
 <span data-ttu-id="b4729-155"><paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="b4729-155"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4729-156"><paramref name="eventRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="b4729-156"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4729-157"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b4729-157"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b4729-158">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4729-158">-or-</span></span> 
 <span data-ttu-id="b4729-159"><paramref name="identity" /> 是一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="b4729-159"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="b4729-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b4729-160">-or-</span></span> 
 <span data-ttu-id="b4729-161"><paramref name="identity" /> 的长度超过 512 个字符。</span><span class="sxs-lookup"><span data-stu-id="b4729-161"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SemaphoreRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.SemaphoreRights SemaphoreRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemaphoreRights As SemaphoreRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::SemaphoreRights SemaphoreRights { System::Security::AccessControl::SemaphoreRights get(); };" />
      <MemberSignature Language="F#" Value="member this.SemaphoreRights : System.Security.AccessControl.SemaphoreRights" Usage="System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4729-162">获取访问规则允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-162">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="b4729-163"><see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="b4729-163">A bitwise combination of <see cref="T:System.Security.AccessControl.SemaphoreRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4729-164"><xref:System.Security.AccessControl.SemaphoreAccessRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="b4729-164"><xref:System.Security.AccessControl.SemaphoreAccessRule> objects are immutable.</span></span> <span data-ttu-id="b4729-165">您可以创建表示不同用户、不同权限或不同的新访问规则 <xref:System.Security.AccessControl.AccessControlType> ，但不能修改现有的访问规则。</span><span class="sxs-lookup"><span data-stu-id="b4729-165">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4729-166">下面的代码示例演示如何使用 <xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A> 属性来显示对象中包含的规则集中的权限 <xref:System.Security.AccessControl.SemaphoreSecurity> 。</span><span class="sxs-lookup"><span data-stu-id="b4729-166">The following code example demonstrates the use of the <xref:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights%2A> property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.SemaphoreSecurity> object.</span></span> <span data-ttu-id="b4729-167">该示例创建一个 <xref:System.Security.AccessControl.SemaphoreSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="b4729-167">The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="b4729-168">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="b4729-168">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4729-169">此示例不会将安全对象附加到 <xref:System.Threading.Semaphore> 对象。</span><span class="sxs-lookup"><span data-stu-id="b4729-169">This example does not attach the security object to a <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="b4729-170">可在和中找到附加安全对象的 <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> 示例 <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b4729-170">Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.SemaphoreSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
