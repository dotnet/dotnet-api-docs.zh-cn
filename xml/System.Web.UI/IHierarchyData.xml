<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c25eae624341b1a216e0d0bcb63719a92df0df86" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70566888" /></Metadata><TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="78227-101">公开分层数据结构的节点，包括节点对象和描述节点特征的一些属性。</span><span class="sxs-lookup"><span data-stu-id="78227-101">Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node.</span></span> <span data-ttu-id="78227-102">实现 <see cref="T:System.Web.UI.IHierarchyData" /> 接口的对象可以包含在 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 集合中，并由 ASP.NET 站点导航和数据源控件所使用。</span><span class="sxs-lookup"><span data-stu-id="78227-102">Objects that implement the <see cref="T:System.Web.UI.IHierarchyData" /> interface can be contained in <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collections, and are used by ASP.NET site navigation and data source controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-103"><xref:System.Web.UI.IHierarchyData>接口由表示层次结构节点的类实现，并跟踪其父节点和子节点的层次结构关系。</span><span class="sxs-lookup"><span data-stu-id="78227-103">The <xref:System.Web.UI.IHierarchyData> interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes.</span></span> <span data-ttu-id="78227-104">实现接口的类 <xref:System.Web.UI.IHierarchyData> 可以包含在实现接口的集合中 <xref:System.Web.UI.IHierarchicalEnumerable> 。</span><span class="sxs-lookup"><span data-stu-id="78227-104">Classes that implement the <xref:System.Web.UI.IHierarchyData> interface can be contained in collections that implement the <xref:System.Web.UI.IHierarchicalEnumerable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-105">下面的代码示例演示如何 <xref:System.Web.UI.IHierarchyData> 使用包装对象的类实现接口 <xref:System.IO.FileSystemInfo> 。</span><span class="sxs-lookup"><span data-stu-id="78227-105">The following code example demonstrates how to implement the <xref:System.Web.UI.IHierarchyData> interface with a class that wraps a <xref:System.IO.FileSystemInfo> object.</span></span> <span data-ttu-id="78227-106"><xref:System.IO.FileSystemInfo>类是层次结构数据节点的一个很好的示例， <xref:System.Web.UI.IHierarchyData> 接口表示该节点的 ASP.NET 分层数据源控件。</span><span class="sxs-lookup"><span data-stu-id="78227-106">The <xref:System.IO.FileSystemInfo> class is a good example of a hierarchical data node, which the <xref:System.Web.UI.IHierarchyData> interface represents for ASP.NET hierarchical data source controls.</span></span> <span data-ttu-id="78227-107">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.HierarchicalDataSourceControl> 。</span><span class="sxs-lookup"><span data-stu-id="78227-107">This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.</span></span>  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 <span data-ttu-id="78227-108">下面的代码示例演示如何以递归方式循环访问 <xref:System.Web.UI.IHierarchicalEnumerable> 集合， <xref:System.Web.UI.IHierarchyData> 使用方法从枚举器提取项， <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> 并使用数据项执行基本操作。</span><span class="sxs-lookup"><span data-stu-id="78227-108">The following code example demonstrates how to recursively iterate through an <xref:System.Web.UI.IHierarchicalEnumerable> collection, extract the <xref:System.Web.UI.IHierarchyData> item from the enumerator using the <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> method, and perform basic work with the data item.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78227-109">获取一个枚举对象，该对象表示当前分层节点的所有子节点。</span><span class="sxs-lookup"><span data-stu-id="78227-109">Gets an enumeration object that represents all the child nodes of the current hierarchical node.</span></span></summary>
        <returns><span data-ttu-id="78227-110">当前分层节点的子节点的 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="78227-110">An <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> collection of child nodes of the current hierarchical node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-111">您可以使用 <xref:System.Web.UI.IHierarchyData.HasChildren%2A> 属性来确定 <xref:System.Web.UI.IHierarchyData> 节点是否有子节点。</span><span class="sxs-lookup"><span data-stu-id="78227-111">You can use the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the <xref:System.Web.UI.IHierarchyData> node has child nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-112">下面的代码示例演示如何检查 <xref:System.Web.UI.IHierarchyData.HasChildren%2A> 属性以确定当前分层数据节点是否有子节点，并使用方法检索它们 <xref:System.Web.UI.IHierarchyData.GetChildren%2A> 。</span><span class="sxs-lookup"><span data-stu-id="78227-112">The following code example demonstrates how to check the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property to determine whether the current hierarchical data node has child nodes, and retrieve them using the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method.</span></span> <span data-ttu-id="78227-113">此代码示例是为接口提供的更大示例的一部分 <xref:System.Web.UI.IHierarchyData> 。</span><span class="sxs-lookup"><span data-stu-id="78227-113">This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.</span></span>  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78227-114">获取 <see cref="T:System.Web.UI.IHierarchyData" /> 对象，该对象表示当前分层节点的父节点。</span><span class="sxs-lookup"><span data-stu-id="78227-114">Gets an <see cref="T:System.Web.UI.IHierarchyData" /> object that represents the parent node of the current hierarchical node.</span></span></summary>
        <returns><span data-ttu-id="78227-115">一个 <see cref="T:System.Web.UI.IHierarchyData" /> 对象，该对象表示当前分层节点的父节点。</span><span class="sxs-lookup"><span data-stu-id="78227-115">An <see cref="T:System.Web.UI.IHierarchyData" /> object that represents the parent node of the current hierarchical node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-116"><xref:System.Web.UI.IHierarchyData>接口未定义 HasParent 方便性属性，因此调用方必须检查方法的返回值， <xref:System.Web.UI.IHierarchyData.GetParent%2A> `null` 以确定当前 <xref:System.Web.UI.IHierarchyData> 节点是否为节点所属的分层数据结构的根节点。</span><span class="sxs-lookup"><span data-stu-id="78227-116">The <xref:System.Web.UI.IHierarchyData> interface does not define a HasParent convenience property, so callers must check the return value of the <xref:System.Web.UI.IHierarchyData.GetParent%2A> method for `null` to determine whether the current <xref:System.Web.UI.IHierarchyData> node is the root node of the hierarchical data structure to which the node belongs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-117">下面的代码示例演示如何 <xref:System.Web.UI.IHierarchyData.GetParent%2A> 在实现接口的类中实现方法 <xref:System.Web.UI.IHierarchyData> 。</span><span class="sxs-lookup"><span data-stu-id="78227-117">The following code example demonstrates how to implement the <xref:System.Web.UI.IHierarchyData.GetParent%2A> method in a class that implements the <xref:System.Web.UI.IHierarchyData> interface.</span></span> <span data-ttu-id="78227-118">`FileSystemHierarchyData`类包装 <xref:System.IO.FileSystemInfo> 对象， <xref:System.Web.UI.IHierarchyData.GetParent%2A> 方法实现检查对象的类型 <xref:System.IO.FileSystemInfo> ，并根据类型返回相应的父对象。</span><span class="sxs-lookup"><span data-stu-id="78227-118">The `FileSystemHierarchyData` class wraps a <xref:System.IO.FileSystemInfo> object, and the <xref:System.Web.UI.IHierarchyData.GetParent%2A> method implementation checks the type of the <xref:System.IO.FileSystemInfo> object, and returns the appropriate parent object based on the type.</span></span> <span data-ttu-id="78227-119">此代码示例摘自为接口和类提供的更大示例的一部分 <xref:System.Web.UI.IHierarchyData> <xref:System.Web.UI.HierarchicalDataSourceControl> 。</span><span class="sxs-lookup"><span data-stu-id="78227-119">This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface and the <xref:System.Web.UI.HierarchicalDataSourceControl> class.</span></span>  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78227-120">指示 <see cref="T:System.Web.UI.IHierarchyData" /> 对象所表示的分层数据节点是否有子节点。</span><span class="sxs-lookup"><span data-stu-id="78227-120">Indicates whether the hierarchical data node that the <see cref="T:System.Web.UI.IHierarchyData" /> object represents has any child nodes.</span></span></summary>
        <value><span data-ttu-id="78227-121">如果当前节点具有子节点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78227-121"><see langword="true" /> if the current node has child nodes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-122"><xref:System.Web.UI.IHierarchyData.HasChildren%2A>属性是一个便捷属性，使调用方可以避免检查的方法的返回值 <xref:System.Web.UI.IHierarchyData.GetChildren%2A> `null` 。</span><span class="sxs-lookup"><span data-stu-id="78227-122">The <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property is a convenience property that enables callers to avoid checking the return value of the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method for `null`.</span></span> <span data-ttu-id="78227-123">如果 <xref:System.Web.UI.IHierarchyData.HasChildren%2A> 属性返回 `true` ，则调用 <xref:System.Web.UI.IHierarchyData.GetChildren%2A> 方法来检索 <xref:System.Web.UI.IHierarchicalEnumerable> 子节点的集合。</span><span class="sxs-lookup"><span data-stu-id="78227-123">If the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property returns `true`, call the <xref:System.Web.UI.IHierarchyData.GetChildren%2A> method to retrieve an <xref:System.Web.UI.IHierarchicalEnumerable> collection of child nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-124">下面的代码示例演示了 ASP.NET 分层数据绑定控件如何使用 <xref:System.Web.UI.IHierarchyData> 递归数据绑定方法中的对象。</span><span class="sxs-lookup"><span data-stu-id="78227-124">The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <xref:System.Web.UI.IHierarchyData> object in a recursive data-binding method.</span></span> <span data-ttu-id="78227-125">枚举集合中的项 <xref:System.Web.UI.IHierarchicalEnumerable> ，并 <xref:System.Web.UI.IHierarchyData> 使用方法检索每个对象 <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="78227-125">The items in an <xref:System.Web.UI.IHierarchicalEnumerable> collection are enumerated, and for each an <xref:System.Web.UI.IHierarchyData> object is retrieved using the <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> method.</span></span> <span data-ttu-id="78227-126">最后，将 <xref:System.Web.UI.IHierarchyData.HasChildren%2A> 检查属性以确定是否要进行递归。</span><span class="sxs-lookup"><span data-stu-id="78227-126">Finally, the <xref:System.Web.UI.IHierarchyData.HasChildren%2A> property is checked to determine whether to recurse.</span></span> <span data-ttu-id="78227-127">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 。</span><span class="sxs-lookup"><span data-stu-id="78227-127">This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78227-128">获取 <see cref="T:System.Web.UI.IHierarchyData" /> 对象所表示的分层数据节点。</span><span class="sxs-lookup"><span data-stu-id="78227-128">Gets the hierarchical data node that the <see cref="T:System.Web.UI.IHierarchyData" /> object represents.</span></span></summary>
        <value><span data-ttu-id="78227-129">一个 <see cref="T:System.Object" /> 分层数据节点对象。</span><span class="sxs-lookup"><span data-stu-id="78227-129">An <see cref="T:System.Object" /> hierarchical data node object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-130">尽管许多表示分层数据节点的类（如 <xref:System.Web.SiteMapNode> 类）可 <xref:System.Web.UI.IHierarchyData> 直接实现接口，但其他类只充当不实现接口的类的包装。</span><span class="sxs-lookup"><span data-stu-id="78227-130">While many classes that represent hierarchical data nodes, such as the <xref:System.Web.SiteMapNode> class, implement the <xref:System.Web.UI.IHierarchyData> interface directly, other classes only act as a wrapper for a class that does not implement the interface.</span></span> <span data-ttu-id="78227-131"><xref:System.Web.UI.IHierarchyData.Item%2A>如果业务对象在功能上等同于某个 <xref:System.Web.UI.IHierarchyData> 对象，但无法轻松地进行重新设计，则会为这些设计情况提供属性。</span><span class="sxs-lookup"><span data-stu-id="78227-131">The <xref:System.Web.UI.IHierarchyData.Item%2A> property is provided for these design situations, when business objects are functionally equivalent to an <xref:System.Web.UI.IHierarchyData> object but cannot be redesigned easily.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-132">下面的代码示例演示如何访问 <xref:System.Web.UI.IHierarchyData> 属性，使用属性检查对象的类型 <xref:System.Web.UI.IHierarchyData> <xref:System.Web.UI.IHierarchyData.Type%2A> ，并强制转换对象以执行更多类型特定的操作。</span><span class="sxs-lookup"><span data-stu-id="78227-132">The following code example demonstrates how to access <xref:System.Web.UI.IHierarchyData> properties, check the type of an <xref:System.Web.UI.IHierarchyData> object using the <xref:System.Web.UI.IHierarchyData.Type%2A> property, and cast the object to perform more type-specific operations.</span></span> <span data-ttu-id="78227-133">此代码示例是为接口提供的更大示例的一部分 <xref:System.Web.UI.IHierarchyData> 。</span><span class="sxs-lookup"><span data-stu-id="78227-133">This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.</span></span>  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78227-134">获取节点的分层路径。</span><span class="sxs-lookup"><span data-stu-id="78227-134">Gets the hierarchical path of the node.</span></span></summary>
        <value><span data-ttu-id="78227-135">一个 <see cref="T:System.String" />，标识相对当前节点的分层路径。</span><span class="sxs-lookup"><span data-stu-id="78227-135">A <see cref="T:System.String" /> that identifies the hierarchical path relative to the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-136"><xref:System.Web.UI.IHierarchyData.Path%2A>可以将属性传递给 <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> 方法，以检索 <xref:System.Web.UI.HierarchicalDataSourceView> 与标识的节点相对应的对象 <xref:System.Web.UI.IHierarchyData.Path%2A> 。</span><span class="sxs-lookup"><span data-stu-id="78227-136">The <xref:System.Web.UI.IHierarchyData.Path%2A> property can be passed to the <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> method to retrieve the <xref:System.Web.UI.HierarchicalDataSourceView> object that corresponds to the node identified by <xref:System.Web.UI.IHierarchyData.Path%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="78227-137"><xref:System.Web.UI.IHierarchyData.Path%2A>属性不应包含有关主机环境的任何敏感信息，因为它可能会在数据绑定控件中呈现给客户端。</span><span class="sxs-lookup"><span data-stu-id="78227-137">The <xref:System.Web.UI.IHierarchyData.Path%2A> property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-138">下面的代码示例演示如何 <xref:System.Web.UI.IHierarchyData.Path%2A> 在实现接口的类中实现属性 <xref:System.Web.UI.IHierarchyData> 。</span><span class="sxs-lookup"><span data-stu-id="78227-138">The following code example demonstrates how to implement the <xref:System.Web.UI.IHierarchyData.Path%2A> property in a class that implements the <xref:System.Web.UI.IHierarchyData> interface.</span></span> <span data-ttu-id="78227-139">`FileSystemHierarchyData`类包装 <xref:System.IO.FileSystemInfo> 对象， <xref:System.Web.UI.IHierarchyData.Path%2A> 属性实现返回其文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="78227-139">The `FileSystemHierarchyData` class wraps a <xref:System.IO.FileSystemInfo> object, and the <xref:System.Web.UI.IHierarchyData.Path%2A> property implementation returns its file system path.</span></span> <span data-ttu-id="78227-140">此代码示例摘自为接口和类提供的更大示例的一部分 <xref:System.Web.UI.IHierarchyData> <xref:System.Web.UI.HierarchicalDataSourceControl> 。</span><span class="sxs-lookup"><span data-stu-id="78227-140">This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface and the <xref:System.Web.UI.HierarchicalDataSourceControl> class.</span></span>  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78227-141">获取包含在 <see cref="P:System.Web.UI.IHierarchyData.Item" /> 属性中的 <see cref="T:System.Object" /> 的类型名称。</span><span class="sxs-lookup"><span data-stu-id="78227-141">Gets the name of the type of <see cref="T:System.Object" /> contained in the <see cref="P:System.Web.UI.IHierarchyData.Item" /> property.</span></span></summary>
        <value><span data-ttu-id="78227-142"><see cref="T:System.Web.UI.IHierarchyData" /> 对象表示的对象的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="78227-142">The name of the type of object that the <see cref="T:System.Web.UI.IHierarchyData" /> object represents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78227-143"><xref:System.Web.UI.IHierarchyData.Type%2A>属性不返回 <xref:System.Type?displayProperty=nameWithType> 对象中表示的对象的 <xref:System.Web.UI.IHierarchyData> 。</span><span class="sxs-lookup"><span data-stu-id="78227-143">The <xref:System.Web.UI.IHierarchyData.Type%2A> property does not return the <xref:System.Type?displayProperty=nameWithType> of the object represented in an <xref:System.Web.UI.IHierarchyData> object.</span></span> <span data-ttu-id="78227-144">它将返回数据绑定控件使用的名称，以区分层次结构中具有不同可绑定属性的项。</span><span class="sxs-lookup"><span data-stu-id="78227-144">It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78227-145">下面的代码示例演示如何将基本属性写入 <xref:System.Web.UI.IHierarchyData> <xref:System.Web.HttpResponse> 流，然后使用属性检查对象的类型， <xref:System.Web.UI.IHierarchyData> <xref:System.Web.UI.IHierarchyData.Type%2A> 并强制转换对象以执行更多类型特定的操作。</span><span class="sxs-lookup"><span data-stu-id="78227-145">The following code example demonstrates how to write the basic <xref:System.Web.UI.IHierarchyData> properties to an <xref:System.Web.HttpResponse> stream, then check the type of an <xref:System.Web.UI.IHierarchyData> object using the <xref:System.Web.UI.IHierarchyData.Type%2A> property and cast the object to perform more type-specific operations.</span></span> <span data-ttu-id="78227-146">此代码示例是为接口提供的更大示例的一部分 <xref:System.Web.UI.IHierarchyData> 。</span><span class="sxs-lookup"><span data-stu-id="78227-146">This code example is part of a larger example provided for the <xref:System.Web.UI.IHierarchyData> interface.</span></span>  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>
