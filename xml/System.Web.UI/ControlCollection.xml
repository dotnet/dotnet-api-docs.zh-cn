<Type Name="ControlCollection" FullName="System.Web.UI.ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3afbaf024c7bbb3f818ae213f8d204a3d74fdb56" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86609425" /></Metadata><TypeSignature Language="C#" Value="public class ControlCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ControlCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2718e-101">提供使 ASP.NET 服务器控件能够维护其子控件列表的集合容器。</span><span class="sxs-lookup"><span data-stu-id="2718e-101">Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-102">您可以通过属性访问类的任何属性和方法 <xref:System.Web.UI.ControlCollection> <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-102">You can access any of the properties and methods of the <xref:System.Web.UI.ControlCollection> class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2718e-103">由于 <xref:System.Web.UI.Control> 类是所有 ASP.NET 服务器控件的基类，因此所有服务器控件都继承该属性。</span><span class="sxs-lookup"><span data-stu-id="2718e-103">Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property.</span></span>  
  
 <span data-ttu-id="2718e-104">有关集合的详细信息，请参阅 [集合和数据结构](/dotnet/standard/collections/)。</span><span class="sxs-lookup"><span data-stu-id="2718e-104">For more information about collections, see [Collections and Data Structures](/dotnet/standard/collections/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-105">下面的代码示例将重写 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 方法，以创建两个控件，即名为的自定义类的两个实例 `ChildControl` ，该实例具有一个名为的字符串属性 `Message` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-105">The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`.</span></span> <span data-ttu-id="2718e-106">创建后，这两个控件将添加到中 <xref:System.Web.UI.ControlCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-106">When created, the two controls are added to the <xref:System.Web.UI.ControlCollection>.</span></span> <span data-ttu-id="2718e-107">对 <xref:System.Web.UI.ControlCollection.Add%2A> 每个控件调用方法，以将其添加到包含此版本的类 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-107">The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2718e-108">将 <xref:System.Web.UI.Control.ChildControlsCreated%2A> 属性设置为， `true` 以便不会再次创建这些控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-108">The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.</span></span>  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
    <related type="Article" href="/dotnet/standard/collections/"><span data-ttu-id="2718e-109">集合和数据结构</span><span class="sxs-lookup"><span data-stu-id="2718e-109">Collections and Data Structures</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlCollection : System.Web.UI.Control -&gt; System.Web.UI.ControlCollection" Usage="new System.Web.UI.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="2718e-110">为其创建控件集合的 ASP.NET 服务器控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-110">The ASP.NET server control that the control collection is created for.</span></span></param>
        <summary><span data-ttu-id="2718e-111">为指定的父服务器控件初始化 <see cref="T:System.Web.UI.ControlCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2718e-111">Initializes a new instance of the <see cref="T:System.Web.UI.ControlCollection" /> class for the specified parent server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-112">下面的代码示例是一个自定义 <xref:System.Web.UI.ControlCollection> 类，它重写构造函数以写入消息 (包括在 <xref:System.Web.UI.ControlCollection.Owner%2A> 创建集合的实例时) 到跟踪日志的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="2718e-112">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="2718e-113">若要使此示例正常工作，您必须对页面或应用程序启用跟踪。</span><span class="sxs-lookup"><span data-stu-id="2718e-113">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2718e-114">当 <paramref name="owner" /> 参数为 <see langword="null" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="2718e-114">Occurs if the <paramref name="owner" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Web.UI.Control -&gt; unit&#xA;override this.Add : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="2718e-115">要添加到集合中的 <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-115">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="2718e-116">将指定的 <see cref="T:System.Web.UI.Control" /> 对象添加到集合。</span><span class="sxs-lookup"><span data-stu-id="2718e-116">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-117">新控件将添加到序号索引数组的末尾。</span><span class="sxs-lookup"><span data-stu-id="2718e-117">The new control is added to the end of an ordinal index array.</span></span> <span data-ttu-id="2718e-118">控件可以是任何 ASP.NET 服务器控件的实例、所创建的自定义服务器控件或文本控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-118">The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
 <span data-ttu-id="2718e-119">若要将控件添加到集合中的特定索引位置，请使用 <xref:System.Web.UI.ControlCollection.AddAt%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2718e-119">To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-120">下面的代码示例使用 <xref:System.Web.UI.ControlCollection.Add%2A> 方法将一系列模板项（其数目从服务器控件的视图状态中获取）添加到自定义模板化控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-120">The following code example uses the <xref:System.Web.UI.ControlCollection.Add%2A> method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2718e-121">在 <paramref name="child" /> 参数未指定控件时引发。</span><span class="sxs-lookup"><span data-stu-id="2718e-121">Thrown if the <paramref name="child" /> parameter does not specify a control.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="2718e-122">在 <see cref="T:System.Web.UI.ControlCollection" /> 为只读时引发。</span><span class="sxs-lookup"><span data-stu-id="2718e-122">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public virtual void AddAt (int index, System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAt(int32 index, class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAt (index As Integer, child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAt(int index, System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member AddAt : int * System.Web.UI.Control -&gt; unit&#xA;override this.AddAt : int * System.Web.UI.Control -&gt; unit" Usage="controlCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2718e-123">数组中要添加子控件的位置。</span><span class="sxs-lookup"><span data-stu-id="2718e-123">The location in the array at which to add the child control.</span></span></param>
        <param name="child"><span data-ttu-id="2718e-124">要添加到集合中的 <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-124">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="2718e-125">将指定的 <see cref="T:System.Web.UI.Control" /> 对象添加到集合中的指定索引位置。</span><span class="sxs-lookup"><span data-stu-id="2718e-125">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection at the specified index location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-126">添加的控件可以是任何 ASP.NET 服务器控件的实例、所创建的自定义服务器控件或文本控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-126">The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-127">下面的代码示例使用 <xref:System.Web.UI.ControlCollection.AddAt%2A> 方法创建一个 <xref:System.Web.UI.LiteralControl> 名为的新 `ChildControl2` ，并将其添加到 `myButton` 控件的 <xref:System.Web.UI.ControlCollection> 集合中的索引位置1。</span><span class="sxs-lookup"><span data-stu-id="2718e-127">The following code example uses the <xref:System.Web.UI.ControlCollection.AddAt%2A> method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2718e-128"><paramref name="child" /> 参数不指定控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-128">The <paramref name="child" /> parameter does not specify a control.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2718e-129"><paramref name="index" /> 参数小于零或大于 <see cref="P:System.Web.UI.ControlCollection.Count" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="2718e-129">The <paramref name="index" /> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count" /> property.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="2718e-130"><see cref="T:System.Web.UI.ControlCollection" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="2718e-130">The <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2718e-131">从当前服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象中移除所有控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-131">Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-132"><xref:System.Web.UI.ControlCollection>重写和方法时，请使用此方法为自定义控件空 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> <xref:System.Web.UI.Control.DataBind%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-132">Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> and <xref:System.Web.UI.Control.DataBind%2A> methods.</span></span> <span data-ttu-id="2718e-133">当开发复合模板、模板化控件或模板化数据绑定控件时，请执行此操作。</span><span class="sxs-lookup"><span data-stu-id="2718e-133">Do this when you develop composite, templated controls or templated data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-134">下面的代码示例演示如何重写 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 方法，并使用 <xref:System.Web.UI.ControlCollection.Clear%2A> 方法删除以前在对象中的所有子控件 <xref:System.Web.UI.ControlCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-134">The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method, and using the <xref:System.Web.UI.ControlCollection.Clear%2A> method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="2718e-135">在这种情况下，您必须执行此操作，以使控件的过期对象 <xref:System.Web.UI.ControlCollection> 不会被不当地显示。</span><span class="sxs-lookup"><span data-stu-id="2718e-135">In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.UI.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.UI.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (c As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Web::UI::Control ^ c);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Web.UI.Control -&gt; bool&#xA;override this.Contains : System.Web.UI.Control -&gt; bool" Usage="controlCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2718e-136">要在集合中搜索的服务器控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-136">The server control to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="2718e-137">确定指定的服务器控件是否在父服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象中。</span><span class="sxs-lookup"><span data-stu-id="2718e-137">Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <returns><span data-ttu-id="2718e-138">如果集合中存在指定的服务器控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-138"><see langword="true" /> if the specified server control exists in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/CS/ctrlcollection_contains.cs.aspx#1)]
 [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/VB/ctrlcollection_contains.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (array, index)" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As Array, index As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2718e-139">要将子控件复制到的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-139">The <see cref="T:System.Array" /> to copy the child controls to.</span></span></param>
        <param name="index"><span data-ttu-id="2718e-140"><paramref name="array" /> 自其开始复制的从零开始的相关索引。</span><span class="sxs-lookup"><span data-stu-id="2718e-140">The zero-based relative index in <paramref name="array" /> where copying begins.</span></span></param>
        <summary><span data-ttu-id="2718e-141">从 <see cref="T:System.Web.UI.ControlCollection" /> 中的指定索引位置开始，将 <see cref="T:System.Array" /> 对象中存储的子控件复制到 <see cref="T:System.Array" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2718e-141">Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection" /> object to an <see cref="T:System.Array" /> object, beginning at the specified index location in the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="2718e-142"><paramref name="array" /> 不为 <see langword="null" /> 并且不是一维数组。</span><span class="sxs-lookup"><span data-stu-id="2718e-142"><paramref name="array" /> is not <see langword="null" /> and not one-dimensional.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2718e-143">为指定的 ASP.NET 服务器控件获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象中的服务器控件数。</span><span class="sxs-lookup"><span data-stu-id="2718e-143">Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection" /> object for the specified ASP.NET server control.</span></span></summary>
        <value><span data-ttu-id="2718e-144"><see cref="T:System.Web.UI.ControlCollection" /> 中的服务器控件数。</span><span class="sxs-lookup"><span data-stu-id="2718e-144">The number of server controls in the <see cref="T:System.Web.UI.ControlCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-145">下面的代码示例演示如何使用 <xref:System.Web.UI.ControlCollection.Count%2A> 属性来循环访问控件的 <xref:System.Web.UI.ControlCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="2718e-145">The following code example demonstrates how to use the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through a control's <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="2718e-146">使用 <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> 属性将验证控件是否具有子控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-146">The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> property verifies that the control has child controls.</span></span> <span data-ttu-id="2718e-147">如果 <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> 返回 `false` ，则不会运行剩余代码。</span><span class="sxs-lookup"><span data-stu-id="2718e-147">If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> returns `false`, the remaining code does not run.</span></span>  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " />
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2718e-148">检索可遍历 <see cref="T:System.Web.UI.ControlCollection" /> 对象的枚举器。</span><span class="sxs-lookup"><span data-stu-id="2718e-148">Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <returns><span data-ttu-id="2718e-149">循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="2718e-149">The enumerator to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-150">下面的代码示例创建一个方法，该方法可枚举 <xref:System.Web.UI.ControlCollection> 控件的集合 <xref:System.Web.UI.WebControls.Button> `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-150">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="2718e-151">创建枚举器后，将 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 检查该属性以确定该操作是否是线程安全的，如果不是，则 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 使用属性来获取对象，以使操作线程安全。</span><span class="sxs-lookup"><span data-stu-id="2718e-151">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="2718e-152">枚举完成后，属性的值 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 将写入为 <xref:System.Web.UI.WebControls.Label.Text%2A> <xref:System.Web.UI.WebControls.Label> 包含页上的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="2718e-152">When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Web.UI.Control -&gt; int&#xA;override this.IndexOf : System.Web.UI.Control -&gt; int" Usage="controlCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2718e-153">为其返回索引的 <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-153">The <see cref="T:System.Web.UI.Control" /> for which the index is returned.</span></span></param>
        <summary><span data-ttu-id="2718e-154">检索集合中指定 <see cref="T:System.Web.UI.Control" /> 对象的索引。</span><span class="sxs-lookup"><span data-stu-id="2718e-154">Retrieves the index of a specified <see cref="T:System.Web.UI.Control" /> object in the collection.</span></span></summary>
        <returns><span data-ttu-id="2718e-155">指定服务器控件的索引。</span><span class="sxs-lookup"><span data-stu-id="2718e-155">The index of the specified server control.</span></span> <span data-ttu-id="2718e-156">如果服务器控件当前不是集合的成员，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="2718e-156">If the server control is not currently a member of the collection, it returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-157">使用此方法可确定对象中指定服务器控件的索引位置 <xref:System.Web.UI.ControlCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-157">Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-158">下面的代码示例使用 <xref:System.Web.UI.ControlCollection.IndexOf%2A> 方法 `myLiteralControl` 在 <xref:System.Web.UI.ControlCollection> 名为的控件的集合中写入控件的索引位置 <xref:System.Web.UI.WebControls.Button> `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-158">The following code example uses the <xref:System.Web.UI.ControlCollection.IndexOf%2A> method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2718e-159">获取一个值，该值指示 <see cref="T:System.Web.UI.ControlCollection" /> 对象是否为只读。</span><span class="sxs-lookup"><span data-stu-id="2718e-159">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="2718e-160">如果控件为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-160"><see langword="true" /> if the control is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2718e-161">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-162">下面的代码示例创建一个方法，该方法可枚举 <xref:System.Web.UI.ControlCollection> 控件的集合 <xref:System.Web.UI.WebControls.Button> `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-162">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="2718e-163">创建枚举器后，将 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 检查该属性以确定该操作是否是线程安全的，如果不是，则 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 使用属性来获取对象，以使操作线程安全。</span><span class="sxs-lookup"><span data-stu-id="2718e-163">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="2718e-164">枚举完成后，属性的值 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 将写入为 <xref:System.Web.UI.WebControls.Label.Text%2A> <xref:System.Web.UI.WebControls.Label> 包含页上的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="2718e-164">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2718e-165">获取一个值，该值指示是否同步 <see cref="T:System.Web.UI.ControlCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2718e-165">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is synchronized.</span></span></summary>
        <value><span data-ttu-id="2718e-166">此属性始终为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-166">This property is always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-167">下面的代码示例创建一个方法，该方法可枚举 <xref:System.Web.UI.ControlCollection> 控件的集合 <xref:System.Web.UI.WebControls.Button> `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-167">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="2718e-168">创建枚举器后，将 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 检查该属性以确定该操作是否是线程安全的，如果不是，则 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 使用属性来获取对象，以使操作线程安全。</span><span class="sxs-lookup"><span data-stu-id="2718e-168">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="2718e-169">枚举完成后，属性的值 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 将写入为 <xref:System.Web.UI.WebControls.Label.Text%2A> <xref:System.Web.UI.WebControls.Label> 包含页上的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="2718e-169">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ default[int] { System::Web::UI::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2718e-170">服务器控件在 <see cref="T:System.Web.UI.ControlCollection" /> 中的位置。</span><span class="sxs-lookup"><span data-stu-id="2718e-170">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="2718e-171">获取对 <see cref="T:System.Web.UI.ControlCollection" /> 对象中指定索引位置的服务器控件的引用。</span><span class="sxs-lookup"><span data-stu-id="2718e-171">Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <value><span data-ttu-id="2718e-172">对控件的引用。</span><span class="sxs-lookup"><span data-stu-id="2718e-172">The reference to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-173">下面的代码示例使用 <xref:System.Web.UI.ControlCollection.Item%2A> 属性来指定在方法调用中删除的子控件的索引位置 <xref:System.Web.UI.ControlCollection.Remove%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-173">The following code example uses the <xref:System.Web.UI.ControlCollection.Item%2A> property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call.</span></span> <span data-ttu-id="2718e-174">这是通过语法来执行的 `myButton.Controls.Remove` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-174">This is performed by the `myButton.Controls.Remove` syntax.</span></span>  
  
 [!code-aspx-csharp[ControlCollection_ReSubmit_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/CS/controlcollection_copyto.cs.aspx#1)]
 [!code-aspx-vb[ControlCollection_ReSubmit_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/VB/controlcollection_copyto.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2718e-175"><paramref name="index" /> 参数小于 0，或者大于等于 <see cref="P:System.Web.UI.ControlCollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-175">The <paramref name="index" /> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Owner { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2718e-176">获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象所属的 ASP.NET 服务器控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-176">Gets the ASP.NET server control to which the <see cref="T:System.Web.UI.ControlCollection" /> object belongs.</span></span></summary>
        <value><span data-ttu-id="2718e-177"><see cref="T:System.Web.UI.Control" /> 所属的 <see cref="T:System.Web.UI.ControlCollection" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-177">The <see cref="T:System.Web.UI.Control" /> to which the <see cref="T:System.Web.UI.ControlCollection" /> belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-178">下面的代码示例是一个自定义 <xref:System.Web.UI.ControlCollection> 类，它重写 <xref:System.Web.UI.ControlCollection.%23ctor%2A> 方法以写入消息 (包括在 <xref:System.Web.UI.ControlCollection.Owner%2A> 创建集合的实例时) 到跟踪日志的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="2718e-178">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="2718e-179">若要使此示例正常工作，您必须对页面或应用程序启用跟踪。</span><span class="sxs-lookup"><span data-stu-id="2718e-179">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Web.UI.Control -&gt; unit&#xA;override this.Remove : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2718e-180">要移除的服务器控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-180">The server control to be removed.</span></span></param>
        <summary><span data-ttu-id="2718e-181">从父服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象中移除指定服务器控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-181">Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-182">若要从索引位置删除控件，请使用 <xref:System.Web.UI.ControlCollection.RemoveAt%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2718e-182">To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-183">下面的代码示例使用 <xref:System.Web.UI.ControlCollection.Remove%2A> 方法从服务器控件中删除子控件 `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-183">The following code example uses the <xref:System.Web.UI.ControlCollection.Remove%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="2718e-184">首先，代码使用 <xref:System.Web.UI.ControlCollection.Contains%2A> 方法来确定 `myChildControl` 对象中是否包含， <xref:System.Web.UI.ControlCollection> 如果是，则删除它。</span><span class="sxs-lookup"><span data-stu-id="2718e-184">First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#4)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2718e-185">要从集合中移除的服务器控件的序号索引。</span><span class="sxs-lookup"><span data-stu-id="2718e-185">The ordinal index of the server control to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="2718e-186">从 <see cref="T:System.Web.UI.ControlCollection" /> 对象中移除指定索引位置处的子控件。</span><span class="sxs-lookup"><span data-stu-id="2718e-186">Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2718e-187">若要从集合中删除基于其值的控件，请使用 <xref:System.Web.UI.ControlCollection.Remove%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2718e-187">To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2718e-188">下面的代码示例使用 <xref:System.Web.UI.ControlCollection.RemoveAt%2A> 方法从服务器控件中删除子控件 `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-188">The following code example uses the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="2718e-189">方法调用首先指定从其删除控件的索引位置1。</span><span class="sxs-lookup"><span data-stu-id="2718e-189">The method call first specifies an index location of 1 from which the control is deleted.</span></span> <span data-ttu-id="2718e-190">然后，该示例向包含页写入一个文本消息，指出该位置的控件已从集合中删除 <xref:System.Web.UI.ControlCollection> 。</span><span class="sxs-lookup"><span data-stu-id="2718e-190">The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#5)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="2718e-191">在 <see cref="T:System.Web.UI.ControlCollection" /> 为只读时引发。</span><span class="sxs-lookup"><span data-stu-id="2718e-191">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.ControlCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2718e-192">获取可用于同步控件集合访问的对象。</span><span class="sxs-lookup"><span data-stu-id="2718e-192">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="2718e-193">用于同步集合的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2718e-193">The <see cref="T:System.Object" /> used to synchronize the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2718e-194">下面的代码示例创建一个方法，该方法可枚举 <xref:System.Web.UI.ControlCollection> 控件的集合 <xref:System.Web.UI.WebControls.Button> `myButton` 。</span><span class="sxs-lookup"><span data-stu-id="2718e-194">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="2718e-195">创建枚举器后，将 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 检查该属性以确定该操作是否是线程安全的，如果不是，则 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 使用属性来获取对象，以使操作线程安全。</span><span class="sxs-lookup"><span data-stu-id="2718e-195">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="2718e-196">枚举完成后，属性的值 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 将写入为 <xref:System.Web.UI.WebControls.Label.Text%2A> <xref:System.Web.UI.WebControls.Label> 包含页上的控件的属性。</span><span class="sxs-lookup"><span data-stu-id="2718e-196">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
  </Members>
</Type>
