<Type Name="UpdatePanelUpdateMode" FullName="System.Web.UI.UpdatePanelUpdateMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c9aae85dd5f3545f4040dde5bb39ef078a710f4" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="70115408" /></Metadata><TypeSignature Language="C#" Value="public enum UpdatePanelUpdateMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdatePanelUpdateMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanelUpdateMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UpdatePanelUpdateMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UpdatePanelUpdateMode" />
  <TypeSignature Language="F#" Value="type UpdatePanelUpdateMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中内容可能的更新模式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

`UpdatePanelUpdateMode`枚举由 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A?displayProperty=nameWithType> 属性使用，并定义控件内容的可能更新模式 <xref:System.Web.UI.UpdatePanel> 。 <xref:System.Web.UI.UpdatePanel>控件要求 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A?displayProperty=nameWithType> 属性 `true` 用于进行部分页呈现。  
  
属性的默认值 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A?displayProperty=nameWithType> 为 `Always` 。  
  
如果 <xref:System.Web.UI.UpdatePanel> 控件位于另一个 <xref:System.Web.UI.UpdatePanel> 控件内并更新了父面板，则无论属性值如何，都将更新嵌套面板 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 。  
  
`Conditional`值 <xref:System.Web.UI.UpdatePanel> 在以下条件下更新控件的内容：

- 此 <xref:System.Web.UI.UpdatePanel.Update%2A?displayProperty=nameWithType> 方法是显式调用的。  
  
- 使用属性将控件定义为触发器 <xref:System.Web.UI.UpdatePanel.Triggers?displayProperty=nameWithType> ，并导致回发。 在这种情况下，控件是用于更新面板内容的显式触发器。 触发器控件可以在 <xref:System.Web.UI.UpdatePanel> 定义该触发器的控件内部或外部。  
  
- <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A?displayProperty=nameWithType>属性设置为 `true` ，并且控件的子控件 <xref:System.Web.UI.UpdatePanel> 导致回发。 在此方案中，控件的子控件 <xref:System.Web.UI.UpdatePanel> 是用于更新面板的隐式触发器。 嵌套控件的子控件 <xref:System.Web.UI.UpdatePanel> 不会导致外部 <xref:System.Web.UI.UpdatePanel> 控件被更新，除非将其显式定义为触发器。 

## Examples  
 下面的示例声明了两个 <xref:System.Web.UI.UpdatePanel> 控件。 第一个面板将 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A?displayProperty=nameWithType> 属性设置为 `Conditional` 。 默认情况下，第二个面板 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A?displayProperty=nameWithType> 设置为 `Always` 。 使用方法将两个面板外的按钮注册为异步回发控件 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A?displayProperty=nameWithType> 。 在按钮的 click 事件处理程序中， <xref:System.Web.UI.UpdatePanel.Update%2A?displayProperty=nameWithType> 如果自上次更新后超过5秒，则会调用第一个面板的方法。 在这种情况下，仅当上一次面板的更新超过5秒时，面板的内容才会更新。 第二个面板的内容始终更新。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Always = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 0" Usage="System.Web.UI.UpdatePanelUpdateMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>对于源于页面的所有回发，<see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容都会进行更新。 其中也包括异步回发。</summary>
      </Docs>
    </Member>
    <Member MemberName="Conditional">
      <MemberSignature Language="C#" Value="Conditional" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Conditional = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Conditional" />
      <MemberSignature Language="VB.NET" Value="Conditional" />
      <MemberSignature Language="C++ CLI" Value="Conditional" />
      <MemberSignature Language="F#" Value="Conditional = 1" Usage="System.Web.UI.UpdatePanelUpdateMode.Conditional" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定了更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的若干条件；有关信息信息，请参阅“备注”部分。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
