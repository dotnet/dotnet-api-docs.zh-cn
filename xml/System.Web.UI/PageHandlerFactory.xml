<Type Name="PageHandlerFactory" FullName="System.Web.UI.PageHandlerFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d44c28be7a44f8718e7b9572b0337a1f282a27c" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86316886" /></Metadata><TypeSignature Language="C#" Value="public class PageHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageHandlerFactory extends System.Object implements class System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class PageHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageHandlerFactory" />
  <TypeSignature Language="F#" Value="type PageHandlerFactory = class&#xA;    interface IHttpHandlerFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandlerFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>创建从 <see cref="T:System.Web.UI.Page" /> 类继承并实现 <see cref="T:System.Web.IHttpHandler" /> 接口的类的实例。 实例被动态地创建以处理针对 ASP.NET 文件的请求。 <see cref="T:System.Web.UI.PageHandlerFactory" /> 类是 ASP.NET 页的默认处理程序工厂实现。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.PageHandlerFactory>类实现 <xref:System.Web.IHttpHandlerFactory> 接口，为 ASP.NET 文件提供默认的 HTTP 处理程序。 <xref:System.Web.UI.PageHandlerFactory>如有必要，将调用 ASP.NET 编译系统以进行编译，并返回与该 URL 对应的确切类型，然后创建该类型的实例。 页类型从 <xref:System.Web.UI.Page> 类继承并实现 <xref:System.Web.IHttpHandler> 接口。

 若要生成自定义页面处理程序工厂，请在 <xref:System.Web.IHttpHandlerFactory> HttpHandlers 元素中实现并注册该 <xref:System.Web.UI.PageHandlerFactory> 应用程序的 Web.config 文件中的自定义类 [ (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bya7fh0a(v=vs.100)) 配置节。

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.Services.Protocols.WebServiceHandlerFactory" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398986(v=vs.100)">HTTP 处理程序和 HTTP 模块概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PageHandlerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; PageHandlerFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.PageHandlerFactory" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.PageHandlerFactory.%23ctor%2A>构造函数是无参数构造函数并将所有字段初始化为其默认值。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string virtualPath, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHandler (context As HttpContext, requestType As String, virtualPath As String, path As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ virtualPath, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler&#xA;override this.GetHandler : System.Web.HttpContext * string * string * string -&gt; System.Web.IHttpHandler" Usage="pageHandlerFactory.GetHandler (context, requestType, virtualPath, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" /> 类的实例，它提供对用于为 HTTP 请求提供服务的内部服务器对象（如 Request、Response、Session 和 Server）的引用。</param>
        <param name="requestType">客户端使用的 HTTP 数据传输方法（GET 或 POST）。</param>
        <param name="virtualPath">所请求资源的虚拟路径。</param>
        <param name="path">所请求资源的 <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> 属性。</param>
        <summary>返回 <see cref="T:System.Web.IHttpHandler" /> 接口的实例以处理请求的资源。</summary>
        <returns>处理该请求的新 <see cref="T:System.Web.IHttpHandler" />；如果不存在，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.PageHandlerFactory.GetHandler%2A>方法由 ASP.NET 运行时调用，并返回接口的有效实例 <xref:System.Web.IHttpHandler> 或 `null` 。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandler : System.Web.IHttpHandler -&gt; unit&#xA;override this.ReleaseHandler : System.Web.IHttpHandler -&gt; unit" Usage="pageHandlerFactory.ReleaseHandler handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">要重用的 <see cref="T:System.Web.IHttpHandler" />。</param>
        <summary>使工厂可以重用现有的处理程序实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      </Docs>
    </Member>
  </Members>
</Type>
