<Type Name="PageParserFilter" FullName="System.Web.UI.PageParserFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de9e3a8b879f45524bd7c359d3eec6872c8ae2fd" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86608749" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageParserFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageParserFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageParserFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageParserFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageParserFilter abstract" />
  <TypeSignature Language="F#" Value="type PageParserFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3c0eb-101">为 ASP.NET 分析器所使用的页分析器筛选器提供一个抽象基类，以确定分析时是否允许在页中包含某项。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-101">Provides an abstract base class for a page parser filter that is used by the ASP.NET parser to determine whether an item is allowed in the page at parse time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c0eb-102">下面的示例演示如何创建一个从类派生的类， <xref:System.Web.UI.PageParserFilter> 以控制 ASP.NET 页分析器的行为。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-102">The following example demonstrates how you can create a class that derives from the <xref:System.Web.UI.PageParserFilter> class to govern the behavior of the ASP.NET page parser.</span></span> <span data-ttu-id="3c0eb-103">`CustomPageParserFilter`是在页中显式拒绝代码的分析器筛选器。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-103">The `CustomPageParserFilter` is a parser filter that explicitly rejects code in the page.</span></span> <span data-ttu-id="3c0eb-104">它通过重写属性来实现此功能 <xref:System.Web.UI.PageParserFilter.AllowCode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-104">It does this by overriding the <xref:System.Web.UI.PageParserFilter.AllowCode%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.PageParserFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/CS/CustomPageParserFilter.cs#2)]
 [!code-vb[System.Web.UI.PageParserFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageParserFilter/VB/CustomPageParserFilter.vb#2)]  
  
 <span data-ttu-id="3c0eb-105">若要使用此 `CustomPageParserFilter` 示例，请将类放置在 App_Code 目录中。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-105">To use the `CustomPageParserFilter` sample, place the class in your App_Code directory.</span></span> <span data-ttu-id="3c0eb-106">必须配置 ASP.NET 分析程序，才能使用 `pages` 站点的 Web.config 配置文件的部分中的筛选器。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-106">You must configure the ASP.NET parsers to use the filter in the `pages` section of your site's Web.config configuration file.</span></span> <span data-ttu-id="3c0eb-107">下面的示例配置文件显示了的配置 `CustomPageParserFilter` 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-107">The following example configuration file shows the configuration for `CustomPageParserFilter`.</span></span> <span data-ttu-id="3c0eb-108">当配置为使用分析器筛选器时，如果在页面中遇到代码，则 ASP.NET 分析器会在生成过程中引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-108">When configured to use a parser filter, the ASP.NET parser throws an exception during the build if it encounters code in a page.</span></span>  
  
 `<?xml version="1.0" ?>`  
  
 `<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">`  
  
 `<system.web>`  
  
 `<pages`  
  
 `pageParserFilterType="Samples.AspNet.CS.CustomPageParserFilter">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageParserFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageParserFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0eb-109">初始化 <see cref="T:System.Web.UI.PageParserFilter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-109">Initializes a new instance of the <see cref="T:System.Web.UI.PageParserFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddControl">
      <MemberSignature Language="C#" Value="protected void AddControl (Type type, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddControl(class System.Type type, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AddControl(System.Type,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddControl (type As Type, attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddControl(Type ^ type, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddControl : Type * System.Collections.IDictionary -&gt; unit" Usage="pageParserFilter.AddControl (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="3c0eb-110"><see cref="T:System.Web.UI.ControlBuilder" /> 所表示的控件类型。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-110">The control type that the <see cref="T:System.Web.UI.ControlBuilder" /> represents.</span></span></param>
        <param name="attributes"><span data-ttu-id="3c0eb-111">保存所有指定标记特性的 <see cref="T:System.Collections.IDictionary" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-111">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span></span></param>
        <summary><span data-ttu-id="3c0eb-112">在页控件树的当前页分析器位置中添加 <see cref="T:System.Web.UI.ControlBuilder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-112">Adds a <see cref="T:System.Web.UI.ControlBuilder" /> object in the page control tree at the current page parser position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-113"><xref:System.Web.UI.PageParserFilter.AddControl%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-113"><xref:System.Web.UI.PageParserFilter.AddControl%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-114">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-114">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowBaseType">
      <MemberSignature Language="C#" Value="public virtual bool AllowBaseType (Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowBaseType(class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowBaseType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowBaseType (baseType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowBaseType(Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member AllowBaseType : Type -&gt; bool&#xA;override this.AllowBaseType : Type -&gt; bool" Usage="pageParserFilter.AllowBaseType baseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseType"><span data-ttu-id="3c0eb-115">表示当前页的可能基类的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-115">A <see cref="T:System.Type" /> that represents the potential base class of the current page.</span></span></param>
        <summary><span data-ttu-id="3c0eb-116">确定页是否可以从指定的 <see cref="T:System.Type" /> 派生。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-116">Determines whether the page can be derived from the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-117">如果页可以继承指定的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-117"><see langword="true" /> if the page can inherit from the specified type; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-118">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-118">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-119"><xref:System.Web.UI.TemplateParser>类确定是否允许基类型。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-119">The <xref:System.Web.UI.TemplateParser> class determines whether a base type is permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCode">
      <MemberSignature Language="C#" Value="public virtual bool AllowCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.AllowCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowCode : bool" Usage="System.Web.UI.PageParserFilter.AllowCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-120">获取一个值，该值指示 ASP.NET 分析器筛选器是否允许页上包含代码。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-120">Gets a value indicating whether an ASP.NET parser filter permits code on the page.</span></span></summary>
        <value><span data-ttu-id="3c0eb-121">如果分析器筛选器允许包含代码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-121"><see langword="true" /> if a parser filter permits code; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-122">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-122">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-123"><xref:System.Web.UI.TemplateParser>类将检查任何关联 <xref:System.Web.UI.PageParserFilter> 的实例，以确定页是否可以包含可编译的代码。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-123">The <xref:System.Web.UI.TemplateParser> class checks any associated <xref:System.Web.UI.PageParserFilter> instance to determine whether a page can contain code that can be compiled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowControl">
      <MemberSignature Language="C#" Value="public virtual bool AllowControl (Type controlType, System.Web.UI.ControlBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowControl(class System.Type controlType, class System.Web.UI.ControlBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowControl(System.Type,System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowControl (controlType As Type, builder As ControlBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowControl(Type ^ controlType, System::Web::UI::ControlBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member AllowControl : Type * System.Web.UI.ControlBuilder -&gt; bool&#xA;override this.AllowControl : Type * System.Web.UI.ControlBuilder -&gt; bool" Usage="pageParserFilter.AllowControl (controlType, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="controlType"><span data-ttu-id="3c0eb-124">表示要添加的控件类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-124">A <see cref="T:System.Type" /> that represents the type of control to add.</span></span></param>
        <param name="builder"><span data-ttu-id="3c0eb-125">用于生成指定的控件类型的 <see cref="T:System.Web.UI.ControlBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-125">A <see cref="T:System.Web.UI.ControlBuilder" /> used to build the specified type of control.</span></span></param>
        <summary><span data-ttu-id="3c0eb-126">获取一个值，该值指示此页是否允许包含指定的控件类型。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-126">Gets a value indicating whether the specified control type is allowed for this page.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-127">如果控件可用于当前页，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-127"><see langword="true" /> if the control can be used with the current page; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-128">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-128">The default value is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-129"><xref:System.Web.UI.TemplateParser>类将检查在分析时是否允许在页中使用控件。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-129">The <xref:System.Web.UI.TemplateParser> class checks to see whether controls are permitted in a page at parse time.</span></span> <span data-ttu-id="3c0eb-130">重写 <xref:System.Web.UI.PageParserFilter.AllowControl%2A> 方法以拒绝或允许页面中的特定控件。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-130">Override the <xref:System.Web.UI.PageParserFilter.AllowControl%2A> method to reject or permit specific controls in your pages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowServerSideInclude">
      <MemberSignature Language="C#" Value="public virtual bool AllowServerSideInclude (string includeVirtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowServerSideInclude(string includeVirtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowServerSideInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowServerSideInclude (includeVirtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowServerSideInclude(System::String ^ includeVirtualPath);" />
      <MemberSignature Language="F#" Value="abstract member AllowServerSideInclude : string -&gt; bool&#xA;override this.AllowServerSideInclude : string -&gt; bool" Usage="pageParserFilter.AllowServerSideInclude includeVirtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeVirtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeVirtualPath"><span data-ttu-id="3c0eb-131">指向所包含的文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-131">The virtual path to the included file.</span></span></param>
        <summary><span data-ttu-id="3c0eb-132">确定分析器是否允许在页上包含特定服务器端 include 语法。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-132">Determines whether a parser permits a specific server-side include on a page.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-133">如果分析器允许包含特定的服务器端 include 语法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-133"><see langword="true" /> if a parser permits the specific server-side include; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-134">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-134">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-135">重写 <xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A> 方法以拒绝所有或特定的服务器端包括。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-135">Override the <xref:System.Web.UI.PageParserFilter.AllowServerSideInclude%2A> method to reject all or specific server-side includes.</span></span> <span data-ttu-id="3c0eb-136">有关服务器端 include 语法的详细信息，请参阅 [服务器端包含指令语法](https://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-136">For more information about server-side include syntax, see [Server-Side Include Directive Syntax](https://msdn.microsoft.com/library/42a6925a-f68c-4690-a9c4-d710358886a9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowVirtualReference">
      <MemberSignature Language="C#" Value="public virtual bool AllowVirtualReference (string referenceVirtualPath, System.Web.UI.VirtualReferenceType referenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowVirtualReference(string referenceVirtualPath, valuetype System.Web.UI.VirtualReferenceType referenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.AllowVirtualReference(System.String,System.Web.UI.VirtualReferenceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowVirtualReference (referenceVirtualPath As String, referenceType As VirtualReferenceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowVirtualReference(System::String ^ referenceVirtualPath, System::Web::UI::VirtualReferenceType referenceType);" />
      <MemberSignature Language="F#" Value="abstract member AllowVirtualReference : string * System.Web.UI.VirtualReferenceType -&gt; bool&#xA;override this.AllowVirtualReference : string * System.Web.UI.VirtualReferenceType -&gt; bool" Usage="pageParserFilter.AllowVirtualReference (referenceVirtualPath, referenceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceVirtualPath" Type="System.String" />
        <Parameter Name="referenceType" Type="System.Web.UI.VirtualReferenceType" />
      </Parameters>
      <Docs>
        <param name="referenceVirtualPath"><span data-ttu-id="3c0eb-137">指向资源（如母版页文件、ASP.NET 页或用户控件）的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-137">The virtual path to a resource, such as a master page file, ASP.NET page, or user control.</span></span></param>
        <param name="referenceType"><span data-ttu-id="3c0eb-138">标识资源类型的 <see cref="T:System.Web.UI.VirtualReferenceType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-138">A <see cref="T:System.Web.UI.VirtualReferenceType" /> value that identifies the type of resource.</span></span></param>
        <summary><span data-ttu-id="3c0eb-139">确定分析器是否允许在页上包含对特定资源类型的虚引用。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-139">Determines whether a parser permits a virtual reference to a specific type of resource on a page.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-140">如果分析器允许对特定资源类型的虚引用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-140"><see langword="true" /> if the parser permits a virtual reference to a specific type of resource; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-141"><xref:System.Web.UI.TemplateParser>类确定是否可以从页引用特定类型的资源。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-141">The <xref:System.Web.UI.TemplateParser> class determines whether a particular type of resource can be referenced from a page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.VirtualReferenceType" />
      </Docs>
    </Member>
    <Member MemberName="CalledFromParseControl">
      <MemberSignature Language="C#" Value="protected bool CalledFromParseControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalledFromParseControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CalledFromParseControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool CalledFromParseControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CalledFromParseControl : bool" Usage="System.Web.UI.PageParserFilter.CalledFromParseControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-142">获取一个值，该值指示是否从页中调用了分析器筛选器。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-142">Gets a value that indicates whether the parser filter was called from the page.</span></span></summary>
        <value><span data-ttu-id="3c0eb-143">如果从页中调用了分析器筛选器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-143"><see langword="true" /> if a parser filter was called from the page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-144">`true`当 <xref:System.Web.UI.PageParserFilter> 通过调用类的 `ParseControl` 方法 <xref:System.Web.UI.Page> 或通过调用类的引用的方法来调用类的实现时 `ParseControl` `TemplateControl` ，此属性设置为 <xref:System.Web.UI.Page> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-144">This property is set to `true` when an implementation of the <xref:System.Web.UI.PageParserFilter> class is invoked by calling the `ParseControl` method of the <xref:System.Web.UI.Page> class or by calling the `ParseControl` method of the `TemplateControl` reference of the <xref:System.Web.UI.Page> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompilationMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.CompilationMode GetCompilationMode (System.Web.UI.CompilationMode current);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.CompilationMode GetCompilationMode(valuetype System.Web.UI.CompilationMode current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCompilationMode (current As CompilationMode) As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::CompilationMode GetCompilationMode(System::Web::UI::CompilationMode current);" />
      <MemberSignature Language="F#" Value="abstract member GetCompilationMode : System.Web.UI.CompilationMode -&gt; System.Web.UI.CompilationMode&#xA;override this.GetCompilationMode : System.Web.UI.CompilationMode -&gt; System.Web.UI.CompilationMode" Usage="pageParserFilter.GetCompilationMode current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Web.UI.CompilationMode" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="3c0eb-145">页的当前编译模式。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-145">The current compilation mode for the page.</span></span></param>
        <summary><span data-ttu-id="3c0eb-146">检索页的当前编译模式。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-146">Retrieves the current compilation mode for the page.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-147"><see cref="T:System.Web.UI.CompilationMode" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-147">One of the <see cref="T:System.Web.UI.CompilationMode" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-148"><xref:System.Web.UI.TemplateControlParser>类检查任何关联 <xref:System.Web.UI.PageParserFilter> 的实例，以将编译模式应用于当前处理的页面。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-148">The <xref:System.Web.UI.TemplateControlParser> class checks any associated <xref:System.Web.UI.PageParserFilter> instance to apply a compilation mode to the currently processed page.</span></span> <span data-ttu-id="3c0eb-149">方法的默认实现 <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> 只返回 <xref:System.Web.UI.CompilationMode> 在当前参数中传递的值。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-149">The default implementation of the <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> method simply returns the <xref:System.Web.UI.CompilationMode> value that is passed in the current parameter.</span></span> <span data-ttu-id="3c0eb-150">重写 <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> 方法以使用特定值或其他 <xref:System.Web.UI.CompilationMode> 值。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-150">Override the <xref:System.Web.UI.PageParserFilter.GetCompilationMode%2A> method to use a specific or different <xref:System.Web.UI.CompilationMode> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetNoCompileUserControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetNoCompileUserControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNoCompileUserControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.GetNoCompileUserControlType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNoCompileUserControlType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetNoCompileUserControlType();" />
      <MemberSignature Language="F#" Value="abstract member GetNoCompileUserControlType : unit -&gt; Type&#xA;override this.GetNoCompileUserControlType : unit -&gt; Type" Usage="pageParserFilter.GetNoCompileUserControlType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0eb-151">返回应该用于未动态编译的页或控件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-151">Returns a <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-152">应该用于未动态编译的页或控件的返回 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-152">The return <see cref="T:System.Type" /> that should be used for pages or controls that are not dynamically compiled.</span></span> <span data-ttu-id="3c0eb-153">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-153">The default is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-154">可以重写 <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> 方法，以指定将被视为未动态编译的页或控件的返回类型。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-154">You can override the <xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> method to specify the return type of pages or controls that are treated as if they are not dynamically compiled.</span></span> <span data-ttu-id="3c0eb-155">默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-155">The default is `null`.</span></span>  
  
 <span data-ttu-id="3c0eb-156"><xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-156"><xref:System.Web.UI.PageParserFilter.GetNoCompileUserControlType%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-157">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-157">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="pageParserFilter.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c0eb-158">初始化用于页的筛选器。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-158">Initializes a filter used for a page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-159">由于 <xref:System.Web.UI.PageParserFilter> 类不公开定义完善的公共构造函数，因此它由使用方法的页分析器初始化 <xref:System.Web.UI.PageParserFilter.Initialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-159">Because the <xref:System.Web.UI.PageParserFilter> class does not expose well-defined public constructors, it is initialized by the page parsers that use the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method.</span></span> <span data-ttu-id="3c0eb-160">重写 <xref:System.Web.UI.PageParserFilter.Initialize%2A> 方法，以便在 <xref:System.Web.UI.PageParserFilter> ASP.NET 创建并使用的实例时添加自己的自定义初始化步骤。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-160">Override the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method to add your own custom initialization steps when an instance of <xref:System.Web.UI.PageParserFilter> is created and used by ASP.NET.</span></span> <span data-ttu-id="3c0eb-161">`virtualPath`传递给方法的参数 <xref:System.Web.UI.PageParserFilter.Initialize%2A> 设置 <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> 属性，并且不能为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-161">The `virtualPath` parameter passed to the <xref:System.Web.UI.PageParserFilter.Initialize%2A> method sets the <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> property, and cannot be `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="protected int Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.Line" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Line As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Line { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Line : int" Usage="System.Web.UI.PageParserFilter.Line" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-162">获取文件中当前正在对其进行分析的行号。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-162">Gets the line number that is currently being parsed in the file.</span></span></summary>
        <value><span data-ttu-id="3c0eb-163">一个整数值，表示文件中分析器筛选器当前正在对其处理的行。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-163">The integer value representing the line in the file that the parser filter is currently processing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-164">在自定义 <xref:System.Web.UI.PageParserFilter> 实现中，使用 <xref:System.Web.UI.PageParserFilter.Line%2A> 属性来报告分析过程中发生错误的位置。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-164">In a custom <xref:System.Web.UI.PageParserFilter> implementation, use the <xref:System.Web.UI.PageParserFilter.Line%2A> property to report where errors occur during parsing.</span></span>  
  
 <span data-ttu-id="3c0eb-165"><xref:System.Web.UI.PageParserFilter.Line%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-165"><xref:System.Web.UI.PageParserFilter.Line%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-166">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-166">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfControlsAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfControlsAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfControlsAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfControlsAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfControlsAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfControlsAllowed : int" Usage="System.Web.UI.PageParserFilter.NumberOfControlsAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-167">获取分析器筛选器可为单个页分析的最大控件数。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-167">Gets the maximum number of controls that a parser filter can parse for a single page.</span></span></summary>
        <value><span data-ttu-id="3c0eb-168">分析器筛选器可为单个页分析的最大控件数。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-168">The maximum number of controls a parser filter can parse for a page.</span></span> <span data-ttu-id="3c0eb-169">默认值为 0，表示不分析任何控件。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-169">The default value is 0, which indicates that no controls are parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-170">ASP.NET 页分析器跟踪它分析的控件，如果数字超出实例设置的限制 <xref:System.Web.UI.PageParserFilter> ，则会引发 <xref:System.Web.HttpException> 异常。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-170">The ASP.NET page parser keeps track of the controls it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an <xref:System.Web.HttpException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfDirectDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int NumberOfDirectDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfDirectDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfDirectDependenciesAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfDirectDependenciesAllowed : int" Usage="System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-171">获取页分析器允许单个页包含的直接文件依赖项的最大数目。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-171">Gets the maximum number of direct file dependencies that the page parser permits for a single page.</span></span></summary>
        <value><span data-ttu-id="3c0eb-172">页分析器允许单个页包含的直接文件依赖项的最大数目。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-172">The maximum number of direct file dependencies the page parser can parse for a page.</span></span> <span data-ttu-id="3c0eb-173">默认值为 0，表示不允许任何依赖项。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-173">The default is 0, which that indicates no dependencies are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-174"><xref:System.Web.UI.TemplateParser>类跟踪它分析的直接和间接文件依赖项的数量，如果该数字超出实例设置的限制 <xref:System.Web.UI.PageParserFilter> ，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-174">The <xref:System.Web.UI.TemplateParser> class keeps track of the number of direct and indirect file dependencies it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="ParseComplete">
      <MemberSignature Language="C#" Value="public virtual void ParseComplete (System.Web.UI.ControlBuilder rootBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseComplete(class System.Web.UI.ControlBuilder rootBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ParseComplete(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ParseComplete (rootBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ParseComplete(System::Web::UI::ControlBuilder ^ rootBuilder);" />
      <MemberSignature Language="F#" Value="abstract member ParseComplete : System.Web.UI.ControlBuilder -&gt; unit&#xA;override this.ParseComplete : System.Web.UI.ControlBuilder -&gt; unit" Usage="pageParserFilter.ParseComplete rootBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="rootBuilder"><span data-ttu-id="3c0eb-175">与页分析关联的 <see cref="T:System.Web.UI.ControlBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-175">The <see cref="T:System.Web.UI.ControlBuilder" /> associated with the page parsing.</span></span></param>
        <summary><span data-ttu-id="3c0eb-176">由 ASP.NET 页分析器调用，以在完成对页的分析时通知筛选器。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-176">Called by an ASP.NET page parser to notify a filter when the parsing of a page is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessDirective">
      <MemberSignature Language="C#" Value="public virtual void PreprocessDirective (string directiveName, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreprocessDirective(string directiveName, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.PreprocessDirective(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PreprocessDirective (directiveName As String, attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PreprocessDirective(System::String ^ directiveName, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessDirective : string * System.Collections.IDictionary -&gt; unit&#xA;override this.PreprocessDirective : string * System.Collections.IDictionary -&gt; unit" Usage="pageParserFilter.PreprocessDirective (directiveName, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directiveName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="directiveName"><span data-ttu-id="3c0eb-177">页指令。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-177">The page directive.</span></span></param>
        <param name="attributes"><span data-ttu-id="3c0eb-178">从页分析的特性和值的集合。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-178">A collection of attributes and values parsed from the page.</span></span></param>
        <summary><span data-ttu-id="3c0eb-179">允许页分析器筛选器对页指令进行预处理。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-179">Allows the page parser filter to preprocess page directives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-180">页分析器 <xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A> 为分析过程中遇到的每个指令调用方法。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-180">The page parser calls the <xref:System.Web.UI.PageParserFilter.PreprocessDirective%2A> method for each directive encountered during parsing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCodeConstruct">
      <MemberSignature Language="C#" Value="public virtual bool ProcessCodeConstruct (System.Web.UI.CodeConstructType codeType, string code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessCodeConstruct(valuetype System.Web.UI.CodeConstructType codeType, string code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessCodeConstruct(System.Web.UI.CodeConstructType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessCodeConstruct (codeType As CodeConstructType, code As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessCodeConstruct(System::Web::UI::CodeConstructType codeType, System::String ^ code);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCodeConstruct : System.Web.UI.CodeConstructType * string -&gt; bool&#xA;override this.ProcessCodeConstruct : System.Web.UI.CodeConstructType * string -&gt; bool" Usage="pageParserFilter.ProcessCodeConstruct (codeType, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.Web.UI.CodeConstructType" />
        <Parameter Name="code" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeType"><span data-ttu-id="3c0eb-181"><see cref="T:System.Web.UI.CodeConstructType" /> 枚举值之一，用于标识代码构造的类型。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-181">One of the <see cref="T:System.Web.UI.CodeConstructType" /> enumeration values that identifies the type of the code construct.</span></span></param>
        <param name="code"><span data-ttu-id="3c0eb-182">将代码包含在代码构造内部的字符串文本。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-182">The string literal that contains the code inside the code construct.</span></span></param>
        <summary><span data-ttu-id="3c0eb-183">返回一个值，该值指示后续分析器筛选器是否应处理代码块。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-183">Returns a value that indicates whether a code block should be processed by subsequent parser filters.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-184">如果分析器应进一步处理代码构造，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-184"><see langword="true" /> if the parser should process a code construct further; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-185">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-185">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-186"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A>实现自定义时，可以重写方法以分析代码构造中包含的代码 <xref:System.Web.UI.PageParserFilter> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-186">You can override the <xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> method to parse code contained in code constructs when implementing a custom <xref:System.Web.UI.PageParserFilter>.</span></span> <span data-ttu-id="3c0eb-187">处理代码后， `true` 如果分析器应进一步处理代码，则此方法将返回; 否则返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-187">After processing the code, this method returns `true` if the parser should process the code further; otherwise, it returns `false`.</span></span>  
  
 <span data-ttu-id="3c0eb-188">允许的代码构造的类型为 <xref:System.Web.UI.CodeConstructType> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-188">The type of allowed code constructs are the <xref:System.Web.UI.CodeConstructType> enumeration values.</span></span>  
  
 <span data-ttu-id="3c0eb-189"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-189"><xref:System.Web.UI.PageParserFilter.ProcessCodeConstruct%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-190">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-190">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CodeConstructType" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDataBindingAttribute">
      <MemberSignature Language="C#" Value="public virtual bool ProcessDataBindingAttribute (string controlId, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessDataBindingAttribute(string controlId, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessDataBindingAttribute (controlId As String, name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessDataBindingAttribute(System::String ^ controlId, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataBindingAttribute : string * string * string -&gt; bool&#xA;override this.ProcessDataBindingAttribute : string * string * string -&gt; bool" Usage="pageParserFilter.ProcessDataBindingAttribute (controlId, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="3c0eb-191">包含数据绑定特性的控件的 ID。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-191">The ID of the control that contains the data binding attribute.</span></span></param>
        <param name="name"><span data-ttu-id="3c0eb-192">包含数据绑定表达式的特性的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-192">The name of the attribute with the data binding expression.</span></span></param>
        <param name="value"><span data-ttu-id="3c0eb-193">数据绑定表达式。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-193">The data binding expression.</span></span></param>
        <summary><span data-ttu-id="3c0eb-194">返回一个值，该值指示分析器筛选器是否处理特性中的数据绑定表达式。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-194">Returns a value that indicates whether the parser filter processes a data binding expression in an attribute.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-195">如果分析器筛选器处理数据绑定特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-195"><see langword="true" /> if the parser filter processes data binding attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-196">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-196">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-197">您可以重写 <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> 方法，以便在实现自定义类时允许分析器筛选器处理数据绑定表达式 <xref:System.Web.UI.PageParserFilter> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-197">You can override the <xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> method to allow the parser filter to process data binding expressions when implementing a custom <xref:System.Web.UI.PageParserFilter> class.</span></span> <span data-ttu-id="3c0eb-198">与特性一起使用的数据绑定表达式的一个示例是 `<%# expression %>` 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-198">An example of a data binding expression used with an attribute is `<%# expression %>`.</span></span>  
  
 <span data-ttu-id="3c0eb-199"><xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-199"><xref:System.Web.UI.PageParserFilter.ProcessDataBindingAttribute%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-200">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-200">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventHookup">
      <MemberSignature Language="C#" Value="public virtual bool ProcessEventHookup (string controlId, string eventName, string handlerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProcessEventHookup(string controlId, string eventName, string handlerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.ProcessEventHookup(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessEventHookup (controlId As String, eventName As String, handlerName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ProcessEventHookup(System::String ^ controlId, System::String ^ eventName, System::String ^ handlerName);" />
      <MemberSignature Language="F#" Value="abstract member ProcessEventHookup : string * string * string -&gt; bool&#xA;override this.ProcessEventHookup : string * string * string -&gt; bool" Usage="pageParserFilter.ProcessEventHookup (controlId, eventName, handlerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handlerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="3c0eb-201">一个控件的 ID，该控件的事件具有要处理的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-201">The ID of the control whose event has the event handler to process.</span></span></param>
        <param name="eventName"><span data-ttu-id="3c0eb-202">要筛选的 <paramref name="controlId" /> 的事件名称。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-202">The event name of the <paramref name="controlId" /> to filter on.</span></span></param>
        <param name="handlerName"><span data-ttu-id="3c0eb-203">要筛选的 <paramref name="eventName" /> 名称的处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-203">The handler of the <paramref name="eventName" /> name to filter on.</span></span></param>
        <summary><span data-ttu-id="3c0eb-204">返回一个值，该值指示分析器筛选器是否应该进一步处理事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-204">Returns a value that indicates whether event handlers should be processed further by the parser filter.</span></span></summary>
        <returns><span data-ttu-id="3c0eb-205">如果分析器处理事件处理程序，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-205"><see langword="true" /> if the parser processes event handlers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c0eb-206">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-206">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-207">可以重写 <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> 方法，以允许分析器在实现自定义类时处理事件挂钩 <xref:System.Web.UI.PageParserFilter> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-207">You can override the <xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> method to allow the parser to process event hookups when implementing a custom <xref:System.Web.UI.PageParserFilter> class.</span></span> <span data-ttu-id="3c0eb-208">事件处理程序的一个示例是为控件的事件提供处理程序 <xref:System.Web.UI.WebControls.Button.Click> <xref:System.Web.UI.WebControls.Button> 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-208">An example of an event handler is providing a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="3c0eb-209"><xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-209"><xref:System.Web.UI.PageParserFilter.ProcessEventHookup%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-210">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-210">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperty">
      <MemberSignature Language="C#" Value="protected void SetPageProperty (string filter, string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPageProperty(string filter, string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParserFilter.SetPageProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPageProperty (filter As String, name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPageProperty(System::String ^ filter, System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetPageProperty : string * string * string -&gt; unit" Usage="pageParserFilter.SetPageProperty (filter, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="3c0eb-211">一个在表达式上包含筛选器值的字符串。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-211">A string containing the value of the filter on an expression.</span></span> <span data-ttu-id="3c0eb-212">有关示例，请参见 <see cref="T:System.Web.UI.PropertyEntry" />。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-212">For an example, see <see cref="T:System.Web.UI.PropertyEntry" />.</span></span></param>
        <param name="name"><span data-ttu-id="3c0eb-213">要设置其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-213">The name of the property to set a value for.</span></span></param>
        <param name="value"><span data-ttu-id="3c0eb-214">要为属性设置的值。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-214">The value of the property to set.</span></span></param>
        <summary><span data-ttu-id="3c0eb-215">在从 <see cref="T:System.Web.UI.TemplateControl" /> 类派生的控件（包括 <see cref="T:System.Web.UI.Page" />、<see cref="T:System.Web.UI.UserControl" /> 和 <see cref="T:System.Web.UI.MasterPage" /> 控件）上设置属性。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-215">Sets a property on a control derived from the <see cref="T:System.Web.UI.TemplateControl" /> class, which includes the <see cref="T:System.Web.UI.Page" />, <see cref="T:System.Web.UI.UserControl" />, and <see cref="T:System.Web.UI.MasterPage" /> controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-216"><xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> .NET Framework 版本3.5 中引入。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-216"><xref:System.Web.UI.PageParserFilter.SetPageProperty%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3c0eb-217">有关详细信息，请参见[版本和依赖关系](/dotnet/framework/migration-guide/versions-and-dependencies)。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-217">For more information, see [Versions and Dependencies](/dotnet/framework/migration-guide/versions-and-dependencies).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PropertyEntry" />
      </Docs>
    </Member>
    <Member MemberName="TotalNumberOfDependenciesAllowed">
      <MemberSignature Language="C#" Value="public virtual int TotalNumberOfDependenciesAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalNumberOfDependenciesAllowed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TotalNumberOfDependenciesAllowed { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalNumberOfDependenciesAllowed : int" Usage="System.Web.UI.PageParserFilter.TotalNumberOfDependenciesAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-218">获取页分析器允许单个页包含的直接和间接文件依赖项的最大数目。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-218">Gets the maximum number of direct and indirect file dependencies that the page parser permits for a single page.</span></span></summary>
        <value><span data-ttu-id="3c0eb-219">页分析器可为单个页分析的直接和间接文件依赖项的最大数目。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-219">The maximum number of direct and indirect file dependencies the page parser can parse for a page.</span></span> <span data-ttu-id="3c0eb-220">默认值为 0，表示不允许任何依赖项。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-220">The default is 0, which indicates that no dependencies are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-221"><xref:System.Web.UI.TemplateParser>类跟踪它分析的直接和间接文件依赖项的数量，如果该数字超出实例设置的限制 <xref:System.Web.UI.PageParserFilter> ，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-221">The <xref:System.Web.UI.TemplateParser> class keeps track of the number of direct and indirect file dependencies it parses, and if the number exceeds the limit set by a <xref:System.Web.UI.PageParserFilter> instance, it throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PageParserFilter.NumberOfDirectDependenciesAllowed" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.UI.PageParserFilter.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c0eb-222">获取指向当前分析的页的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-222">Gets the virtual path to the page currently being parsed.</span></span></summary>
        <value><span data-ttu-id="3c0eb-223">指向 ASP.NET 页的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-223">A virtual path to an ASP.NET page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c0eb-224"><xref:System.Web.UI.PageParserFilter.VirtualPath%2A>属性始终为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="3c0eb-224">The <xref:System.Web.UI.PageParserFilter.VirtualPath%2A> property is never `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
