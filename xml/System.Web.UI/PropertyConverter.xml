<Type Name="PropertyConverter" FullName="System.Web.UI.PropertyConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17c6e9e0944717f1b9540ce6a1e74f503ef81276" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78758971" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyConverter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyConverter extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PropertyConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyConverter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyConverter sealed" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type PropertyConverter = class" />
  <TypeSignature Language="C#" Value="public static class PropertyConverter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyConverter extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyConverter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyConverter abstract sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含用于在属性值和字符串之间进行转换的帮助器函数。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter>类由 ASP.NET 页框架使用，不应在代码中直接访问。 您可以使用 <xref:System.Enum> 结构将字符串值与枚举器相互转换，或 <xref:System.ComponentModel.TypeConverter> 转换为对象。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumFromString">
      <MemberSignature Language="C#" Value="public static object EnumFromString (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object EnumFromString(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumFromString (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ EnumFromString(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member EnumFromString : Type * string -&gt; obj" Usage="System.Web.UI.PropertyConverter.EnumFromString (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">一个 <see cref="T:System.Type" />，表示要从 <paramref name="value" /> 参数创建的枚举类型。</param>
        <param name="value"><see cref="T:System.String" />，表示枚举器中的值。</param>
        <summary>将字符串表示形式转换为指定枚举类型的值。</summary>
        <returns><paramref name="enumType" /> 类型的枚举。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumFromString%2A>使用方法可将字符串值转换为其等效的枚举值。  
  
> [!NOTE]
>  此成员支持 .NET Framework 结构，不能在代码中直接使用。 若要将字符串值转换为其等效的枚举值，请使用 <xref:System.Enum.Parse%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="enumType" /> 或 <paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="enumType" /> 不是 <see cref="T:System.Enum" />。  
  
- 或 - 
 <paramref name="value" /> 是空字符串 ("") 或仅包含空格。  
  
- 或 - 
 <paramref name="value" /> 是一个名称，但不是为该枚举定义的指定常量之一。</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnumToString">
      <MemberSignature Language="C#" Value="public static string EnumToString (Type enumType, object enumValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnumToString(class System.Type enumType, object enumValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumToString (enumType As Type, enumValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EnumToString(Type ^ enumType, System::Object ^ enumValue);" />
      <MemberSignature Language="F#" Value="static member EnumToString : Type * obj -&gt; string" Usage="System.Web.UI.PropertyConverter.EnumToString (enumType, enumValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="enumValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">一个 <see cref="T:System.Type" />，表示 <paramref name="enumValue" /> 的枚举类型。</param>
        <param name="enumValue">要转换的值。</param>
        <summary>将指定枚举类型的值转换为其等效的字符串表示形式。</summary>
        <returns><paramref name="enumValue" /> 的字符串表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumToString%2A>方法用于将枚举值转换为其等效的字符串表示形式。  
  
> [!NOTE]
>  此成员支持 .NET Framework 结构，不能在代码中直接使用。 若要将枚举值转换为其等效的字符串表示形式，请使用 <xref:System.Enum.Format%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="enumType" /> 或 <paramref name="enumValue" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="enumType" /> 参数不是 <see cref="T:System.Enum" /> 类型。  
  
- 或 - 
<paramref name="enumValue" /> 参数包含类型不同于 <paramref name="enumType" /> 的枚举值。  
  
- 或 - 
<paramref name="enumValue" /> 的类型不是 <paramref name="enumType" /> 的基础类型。</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ObjectFromString">
      <MemberSignature Language="C#" Value="public static object ObjectFromString (Type objType, System.Reflection.MemberInfo propertyInfo, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ObjectFromString(class System.Type objType, class System.Reflection.MemberInfo propertyInfo, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjectFromString (objType As Type, propertyInfo As MemberInfo, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ObjectFromString(Type ^ objType, System::Reflection::MemberInfo ^ propertyInfo, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ObjectFromString : Type * System.Reflection.MemberInfo * string -&gt; obj" Usage="System.Web.UI.PropertyConverter.ObjectFromString (objType, propertyInfo, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objType" Type="System.Type" />
        <Parameter Name="propertyInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objType">要从 <paramref name="value" /> 创建的 <see cref="T:System.Type" />。</param>
        <param name="propertyInfo">转换期间要使用的属性。</param>
        <param name="value">要转换为对象的 <see cref="T:System.String" />。</param>
        <summary>将字符串值转换为指定的对象类型。</summary>
        <returns>一个 <paramref name="objType" /> 类型的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.ObjectFromString%2A>方法用于将字符串值转换为对象。  
  
> [!NOTE]
>  此成员支持 .NET Framework 结构，不能在代码中直接使用。 若要将字符串值转换为对象，请在对象 `Parse` 提供方法时对该对象使用方法 `Parse` 。 例如， <xref:System.Int32> 可以通过方法通过字符串创建对象 <xref:System.Int32.Parse%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法从 <paramref name="value" /> 参数创建由 <paramref name="objType" /> 指定的类型对象。</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
