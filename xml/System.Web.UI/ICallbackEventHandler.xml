<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47d99e02fed19cb8c444b298b6279eaab32b9d30" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83908269" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="46798-101">用于指示控件可以作为服务器上的回调事件的目标。</span><span class="sxs-lookup"><span data-stu-id="46798-101">Used to indicate that a control can be the target of a callback event on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46798-102"><xref:System.Web.UI.ICallbackEventHandler>为需要接收回调事件的任何自定义控件实现接口。</span><span class="sxs-lookup"><span data-stu-id="46798-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="46798-103">有关详细信息，请参阅[实现无回发的客户端回调](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="46798-103">For more information, see [Implementing Client Callbacks Without Postbacks](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100)).</span></span>  
  
 <span data-ttu-id="46798-104">实现接口的控件的示例 <xref:System.Web.UI.ICallbackEventHandler> 包括 <xref:System.Web.UI.WebControls.GridView> 、 <xref:System.Web.UI.WebControls.DetailsView> 和 <xref:System.Web.UI.WebControls.TreeView> 控件。</span><span class="sxs-lookup"><span data-stu-id="46798-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="46798-105">当回调事件的目标为实现接口的控件时 <xref:System.Web.UI.ICallbackEventHandler> ，将 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 调用方法来处理事件，并将事件自变量作为参数传递，并且 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 方法将返回回调的结果。</span><span class="sxs-lookup"><span data-stu-id="46798-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="46798-106">在回调过程中从数据源控件检索数据的控件可以同步或异步执行此操作。</span><span class="sxs-lookup"><span data-stu-id="46798-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="46798-107">ASP.NET 控件（如、 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> 和） <xref:System.Web.UI.WebControls.TreeView> 是同步实现的。</span><span class="sxs-lookup"><span data-stu-id="46798-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="46798-108">同步回调不会阻止用户在浏览器中工作。</span><span class="sxs-lookup"><span data-stu-id="46798-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="46798-109">在同步模式下，一次只能执行一个回调，并优先处理最后一个回调。</span><span class="sxs-lookup"><span data-stu-id="46798-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="46798-110">实现 Web 控件以支持异步行为时，可以同时引发多个回调。</span><span class="sxs-lookup"><span data-stu-id="46798-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="46798-111">有关异步编程的详细信息，请参阅[基于事件的异步模式（EAP）](/dotnet/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap)。</span><span class="sxs-lookup"><span data-stu-id="46798-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](/dotnet/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap).</span></span>  
  
 <span data-ttu-id="46798-112">您可以指定是否验证来自实现接口的控件所呈现的用户界面的回调事件 <xref:System.Web.UI.ICallbackEventHandler> 。</span><span class="sxs-lookup"><span data-stu-id="46798-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="46798-113">事件验证是一种很好的安全做法。</span><span class="sxs-lookup"><span data-stu-id="46798-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="46798-114">但出于性能原因，你可以禁用它。</span><span class="sxs-lookup"><span data-stu-id="46798-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="46798-115">若要控制是否对回调事件执行事件验证，请设置 `enableEventValidation` [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))指令的特性或 `enableEventValidation` Web.config 文件的[Pages 元素（ASP.NET 设置架构）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100))的特性。</span><span class="sxs-lookup"><span data-stu-id="46798-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)) of the Web.config file.</span></span> <span data-ttu-id="46798-116">如果在 <xref:System.Web.UI.Page.EnableEventValidation%2A> 代码中设置属性，请在 `Page_Init` 页面处理阶段设置该属性。</span><span class="sxs-lookup"><span data-stu-id="46798-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="46798-117">若要详细了解事件验证的安全优势及其性能成本，请参阅[ASP.NET 性能概述](https://docs.microsoft.com/previous-versions/aspnet/cc668225(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="46798-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](https://docs.microsoft.com/previous-versions/aspnet/cc668225(v=vs.100)).</span></span>
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46798-118">返回以控件为目标的回调事件的结果。</span><span class="sxs-lookup"><span data-stu-id="46798-118">Returns the results of a callback event that targets a control.</span></span></summary>
        <returns><span data-ttu-id="46798-119">回调的结果。</span><span class="sxs-lookup"><span data-stu-id="46798-119">The result of the callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46798-120">中引发的异常 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 不会阻止 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 调用并返回结果。</span><span class="sxs-lookup"><span data-stu-id="46798-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="46798-121">若要防止 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 返回结果，请在中引发异常时设置标志， <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 并从返回空字符串 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 。</span><span class="sxs-lookup"><span data-stu-id="46798-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="46798-122">一个字符串，表示要传递到事件处理程序的事件参数。</span><span class="sxs-lookup"><span data-stu-id="46798-122">A string that represents an event argument to pass to the event handler.</span></span></param>
        <summary><span data-ttu-id="46798-123">处理以控件为目标的回调事件。</span><span class="sxs-lookup"><span data-stu-id="46798-123">Processes a callback event that targets a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46798-124">当 `null` 用作事件参数参数时，字符串将被序列化为 "null" 并发送回服务器。</span><span class="sxs-lookup"><span data-stu-id="46798-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="46798-125">由于没有办法区分 `null` 和 "null"，因此应避免将 `null` 参数参数用于回调。</span><span class="sxs-lookup"><span data-stu-id="46798-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="46798-126">中引发的异常 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 不会阻止 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 调用并返回结果。</span><span class="sxs-lookup"><span data-stu-id="46798-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="46798-127">若要防止 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 返回结果，请在中引发异常时设置标志， <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 并从返回空字符串 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 。</span><span class="sxs-lookup"><span data-stu-id="46798-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>
