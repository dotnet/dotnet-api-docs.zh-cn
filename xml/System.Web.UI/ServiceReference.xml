<Type Name="ServiceReference" FullName="System.Web.UI.ServiceReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a87ccce939c15ef8953ef5267269cb6ab917810f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86608372" /></Metadata><TypeSignature Language="C#" Value="public class ServiceReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ServiceReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceReference" />
  <TypeSignature Language="F#" Value="type ServiceReference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Path")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Path")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>注册要在网页中使用的 Web 服务。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要从 ECMAScript (JavaScript) 中调用 Web 服务方法，必须在 ASP.NET 页中包含服务引用，并将 <xref:System.Web.Script.Services.ScriptServiceAttribute> 特性应用于 Web 服务类定义。 如果在 ASP.NET 页内的或控件中包含对 Web 服务的服务引用 <xref:System.Web.UI.ScriptManager> <xref:System.Web.UI.ScriptManagerProxy> ，JavaScript 对象将在浏览器中实例化。  
  
 代理对象将用于执行以下操作：  
  
-   将 JavaScript 中的异步请求用于 Web 服务方法，  
  
-   初始化服务器数据类型的代理的实例，该实例特定于用作调用 Web 方法的输入参数。  
  
> [!NOTE]
>  <xref:System.Web.UI.ServiceReference>控件只能用于同一个域中的服务。  
  
 可以通过将 `<asp:ServiceReference>` 元素添加到 `<Services>` 页面中元素内的元素 `<asp:ScriptManager>` ，然后设置其 <xref:System.Web.UI.ServiceReference.Path%2A> 属性（如下面的示例中所示），以声明方式定义 Web 服务位置。  
  
```  
<asp:ScriptManager runat="server" ID="scriptManager">  
  <Services>  
    <asp:ServiceReference Path="~/WebServices/SimpleWebService.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 您可以使用 <xref:System.Web.UI.ServiceReference.InlineScript%2A> 属性来指示代理生成脚本是否作为内联脚本块包含在页中，或由单独的请求获取。  
  
 还可以通过 <xref:System.Web.UI.ServiceReference> 使用类的方法，通过 <xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=nameWithType> 或 <xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=nameWithType> 集合以 <xref:System.Collections.ObjectModel.Collection%601.Add%2A> 编程方式添加对象 <xref:System.Web.UI.ServiceReferenceCollection> 。  
  
   
  
## Examples  
 下面的示例演示如何在页标记中添加对 Web 服务的引用以从脚本中调用 Web 服务方法。  
  
 [!code-aspx-csharp[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/CS/Default.aspx#5)]
 [!code-aspx-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/VB/Default.aspx#5)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">ASP.NET AJAX 中的 Web 服务</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398995(v=vs.100)">从 ASP.NET AJAX 中的客户端脚本调用 Web 服务</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398998(v=vs.100)">在 ASP.NET AJAX 中向客户端脚本公开 Web 服务</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ServiceReference" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ServiceReference" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ServiceReference : string -&gt; System.Web.UI.ServiceReference" Usage="new System.Web.UI.ServiceReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Web 服务的位置。</param>
        <summary>使用指定的路径初始化 <see cref="T:System.Web.UI.ServiceReference" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyScript">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyScript(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetProxyScript (scriptManager As ScriptManager, containingControl As Control) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyScript(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyScript : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string&#xA;override this.GetProxyScript : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string" Usage="serviceReference.GetProxyScript (scriptManager, containingControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager">页面上的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
        <param name="containingControl"><see cref="T:System.Web.UI.Control" /> 对象。</param>
        <summary>提供可作为自定义项被重写的派生 <see cref="T:System.Web.UI.ServiceReference" /> 对象中的代理脚本。</summary>
        <returns>代理脚本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `containingControl`参数是在 <xref:System.Web.UI.ScriptManager> <xref:System.Web.UI.ScriptManagerProxy> 其上定义对象的对象或对象 <xref:System.Web.UI.ServiceReference> 。 它应用作相对 URL 解析的基础。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyUrl">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyUrl(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetProxyUrl (scriptManager As ScriptManager, containingControl As Control) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyUrl(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyUrl : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string&#xA;override this.GetProxyUrl : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string" Usage="serviceReference.GetProxyUrl (scriptManager, containingControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager">页面上的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
        <param name="containingControl"><see cref="T:System.Web.UI.Control" /> 对象。</param>
        <summary>提供可作为自定义项被重写的派生 <see cref="T:System.Web.UI.ServiceReference" /> 对象中的代理 URL。</summary>
        <returns>一个代理 URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `containingControl`参数是对象 <xref:System.Web.UI.ScriptManager> 或对象， <xref:System.Web.UI.ScriptManagerProxy> 在其上 <xref:System.Web.UI.ServiceReference> 定义对象，并且应用作相对 URL 解析的基础。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineScript">
      <MemberSignature Language="C#" Value="public bool InlineScript { get; set; }" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InlineScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.InlineScript" />
      <MemberSignature Language="VB.NET" Value="Public Property InlineScript As Boolean" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InlineScript { bool get(); void set(bool value); };" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.InlineScript : bool with get, set" Usage="System.Web.UI.ServiceReference.InlineScript" />
      <MemberSignature Language="C#" Value="public virtual bool InlineScript { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InlineScript As Boolean" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InlineScript { bool get(); void set(bool value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是将代理生成脚本作为内联脚本块包含在页上还是通过单独的请求获取。</summary>
        <value>如果代理生成脚本作为内联脚本块包含在页上，则为 <see langword="true" />；如果通过单独的请求获取代理生成脚本，则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.ServiceReference.InlineScript%2A> 未声明该属性，则默认值为 `false` 。  
  
 当 <xref:System.Web.UI.ServiceReference.InlineScript%2A> 设置为时 `false` ，会通过向服务器发出额外的请求，将用于生成 ECMAScript (JavaScript) 代理的脚本下载为单独的脚本文件。 如果使用浏览器缓存，则当多个网页使用相同的服务引用时，此选项很有用。  
  
 当 <xref:System.Web.UI.ServiceReference.InlineScript%2A> 设置为时 `true` ，代理生成脚本作为内联脚本块包含在页中。 这可以通过减少网络请求数来提高服务器性能，尤其是在页中有很多服务引用，并且其他页没有引用相同的服务时。 此外， <xref:System.Web.UI.ServiceReference.Path%2A> 当设置为时，属性必须设置为相对路径 <xref:System.Web.UI.ServiceReference.InlineScript%2A> `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.ServiceReference.Path" />
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置引用的 Web 服务的路径。</summary>
        <value>引用的 Web 服务的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ServiceReference.Path%2A>属性只能指向本地 Web 服务。 换句话说，此属性只能指向启用了 AJAX 的 ASP.NET Web 应用程序所在域中的 Web 服务。 <xref:System.Web.UI.ServiceReference.Path%2A> 可以是相对应用程序、相对于应用程序的相对路径或绝对路径。  
  
 如果将 <xref:System.Web.UI.ServiceReference.InlineScript%2A> 属性设置为 `true` ，则必须使用指向与包含实例的页面相同的 Web 应用程序的相对路径 <xref:System.Web.UI.ServiceReference> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="serviceReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个字符串，该字符串表示 <see cref="P:System.Web.UI.ServiceReference.Path" /> 属性或类型名称的值。</summary>
        <returns>如果已定义，则为 <see cref="P:System.Web.UI.ServiceReference.Path" /> 属性的值；否则为该类的 <see cref="P:System.Reflection.MemberInfo.Name" /> 属性值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
