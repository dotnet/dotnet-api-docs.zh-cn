<Type Name="DataSourceSelectArguments" FullName="System.Web.UI.DataSourceSelectArguments">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c47d45a9aa613c7e73d7285c46512ce808ec4ada" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89831996" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataSourceSelectArguments" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataSourceSelectArguments extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceSelectArguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataSourceSelectArguments" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceSelectArguments sealed" />
  <TypeSignature Language="F#" Value="type DataSourceSelectArguments = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一种机制，数据绑定控件可使用这种机制向数据源控件请求在检索数据之后执行与数据相关的操作。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据绑定控件使用 <xref:System.Web.UI.DataSourceSelectArguments> 类请求数据源控件对结果集执行与数据相关的其他操作，例如，对数据进行排序或返回特定的数据子集。 这些与数据相关的操作通过枚举枚举 <xref:System.Web.UI.DataSourceCapabilities> 。 下表指示 <xref:System.Web.UI.DataSourceSelectArguments> 类如何支持这些与数据相关的操作。  
  
|功能|相关 DataSourceSelectArguments 属性|  
|----------------|--------------------------------------------------|  
|<xref:System.Web.UI.DataSourceCapabilities.Sort?displayProperty=nameWithType>|<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>|  
|<xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType>|<xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>, <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>|  
|<xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType>|<xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>, <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>|  
  
 数据绑定控件显式调用 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A> 方法来绑定数据，这将调用 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 与它们关联的数据源控件的方法。 通过这种方式，数据绑定控件按需从数据源控件检索数据。 由于 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 方法接受 <xref:System.Web.UI.DataSourceSelectArguments> 参数，因此数据绑定控件负责创建和管理 <xref:System.Web.UI.DataSourceSelectArguments> 对象，并 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 在从数据源控件检索数据时将该对象传递给方法。  
  
 在某些情况下，数据绑定控件可能不需要任何其他数据相关功能。 在这种情况下，数据绑定控件 <xref:System.Web.UI.DataSourceSelectArguments.Empty%2A> 将参数对象传递给 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 方法。  
  
 对于排序的结果集，数据绑定控件将在运行时检查数据源视图的 <xref:System.Web.UI.DataSourceView.CanSort%2A> 属性，并 <xref:System.Web.UI.DataSourceCapabilities.Sort?displayProperty=nameWithType> 使用方法添加功能 <xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29> 。 作为一个单独的操作，数据绑定控件可以通过对 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 传递给方法的对象设置属性，从数据源控件请求排序的结果集 <xref:System.Web.UI.DataSourceSelectArguments> <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 。  
  
 对于分页方案，数据绑定控件将在运行时检查数据源视图的 <xref:System.Web.UI.DataSourceView.CanPage%2A> 属性，并 <xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType> 使用方法添加功能 <xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29> 。 作为单独的操作，数据绑定控件可以通过设置 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> <xref:System.Web.UI.DataSourceSelectArguments> 传递给方法的对象的和属性，从数据源控件请求数据的子集进行分页 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 。  
  
 若要检索分页方案的总行数，数据绑定控件将在运行时检查数据源视图的 <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> 属性，并 <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> 使用方法添加功能 <xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29> 。 作为一个单独的操作，数据绑定控件可以通过对 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> 传递给方法的对象设置属性，从数据源控件请求汇总行计数 <xref:System.Web.UI.DataSourceSelectArguments> <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 。 当该 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 方法返回时，由属性包含总行数 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> 。  
  
> [!IMPORTANT]
>  如果设置了任何 <xref:System.Web.UI.DataSourceSelectArguments> 属性，但当前绑定的数据源控件不支持所请求的功能，则 <xref:System.InvalidOperationException> 调用方法时将引发异常 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType> 。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新默认实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无参数构造函数创建类的实例，并将 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 属性初始化为 <xref:System.String.Empty?displayProperty=nameWithType> ，并将 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> 和 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> 属性初始化为零。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments (string sortExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sortExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sortExpression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments(System::String ^ sortExpression);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceSelectArguments : string -&gt; System.Web.UI.DataSourceSelectArguments" Usage="new System.Web.UI.DataSourceSelectArguments sortExpression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sortExpression">在结果返回调用方之前，数据源控件用来排序数据检索操作结果的排序表达式。</param>
        <summary>使用指定的排序表达式初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.%23ctor%28System.String%29>构造函数创建类的实例，并使用 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 指定的表达式进行初始化，并将 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> 和 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> 属性初始化为零。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments (int startRowIndex, int maximumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 startRowIndex, int32 maximumRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (startRowIndex As Integer, maximumRows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments(int startRowIndex, int maximumRows);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceSelectArguments : int * int -&gt; System.Web.UI.DataSourceSelectArguments" Usage="new System.Web.UI.DataSourceSelectArguments (startRowIndex, maximumRows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">数据行的索引，标记数据检索操作返回数据的起始位置。</param>
        <param name="maximumRows">数据检索操作返回的最大行数。</param>
        <summary>使用要为分页方案返回的起始位置和行数初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.%23ctor%28System.Int32%2CSystem.Int32%29>构造函数创建类的实例，并将 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 初始化为 <xref:System.String.Empty?displayProperty=nameWithType> ，并将 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> 和 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> 属性初始化为为和参数提供的 `startRowIndex` 值 `maximumRows` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceSelectArguments (string sortExpression, int startRowIndex, int maximumRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sortExpression, int32 startRowIndex, int32 maximumRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sortExpression As String, startRowIndex As Integer, maximumRows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceSelectArguments(System::String ^ sortExpression, int startRowIndex, int maximumRows);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceSelectArguments : string * int * int -&gt; System.Web.UI.DataSourceSelectArguments" Usage="new System.Web.UI.DataSourceSelectArguments (sortExpression, startRowIndex, maximumRows)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sortExpression">在结果返回调用方之前，数据源控件用来排序数据检索操作结果的排序表达式。</param>
        <param name="startRowIndex">数据行的索引，标记数据检索操作返回数据的起始位置。</param>
        <param name="maximumRows">数据检索操作返回的最大行数。</param>
        <summary>使用要为分页方案返回的指定排序表达式、起始位置和行数初始化 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSupportedCapabilities">
      <MemberSignature Language="C#" Value="public void AddSupportedCapabilities (System.Web.UI.DataSourceCapabilities capabilities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSupportedCapabilities(valuetype System.Web.UI.DataSourceCapabilities capabilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSupportedCapabilities (capabilities As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSupportedCapabilities(System::Web::UI::DataSourceCapabilities capabilities);" />
      <MemberSignature Language="F#" Value="member this.AddSupportedCapabilities : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceSelectArguments.AddSupportedCapabilities capabilities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capabilities" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capabilities"><see cref="T:System.Web.UI.DataSourceCapabilities" /> 值之一。</param>
        <summary>向 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 实例添加一个功能，用于对支持的功能和请求的功能进行比较。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据源控件 <xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29> 为数据源支持的每个功能调用方法。 添加功能后，对方法的任何调用会将 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29> 受支持的功能与 (通过设置 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 、 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> 、 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> 和 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> 属性) 进行表示。 例如，如果未添加功能（如） <xref:System.Web.UI.DataSourceCapabilities.Sort> ，但设置了 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 属性，则该 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29> 方法将引发 <xref:System.NotSupportedException> 异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Web.UI.DataSourceSelectArguments Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.UI.DataSourceSelectArguments Empty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::UI::DataSourceSelectArguments ^ Empty { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Web.UI.DataSourceSelectArguments" Usage="System.Web.UI.DataSourceSelectArguments.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个排序表达式设置为 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 的 <see cref="F:System.String.Empty" /> 对象。</summary>
        <value><see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性返回 <xref:System.Web.UI.DataSourceSelectArguments> 使用默认构造函数创建的对象 <xref:System.Web.UI.DataSourceSelectArguments.%23ctor> 。 <xref:System.Web.UI.DataSourceSelectArguments.Empty%2A>如果希望在 <xref:System.Web.UI.DataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29> 不使用任何其他参数的情况下调用数据源视图类的方法，则可以使用属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceSelectArguments.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataSourceSelectArguments.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">与当前实例进行比较的 <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</param>
        <summary>确定指定的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 实例是否等于当前实例。</summary>
        <returns>如果指定的 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 等于当前实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments>类将重写 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 方法，以便使用对象的各种属性测试相等性。 如果 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> 、、 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 、 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> 和属性的 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> 值都相等，则该方法将 <xref:System.Web.UI.DataSourceSelectArguments.Equals%28System.Object%29> 返回 `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataSourceSelectArguments.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类型的哈希代码。</summary>
        <returns><see cref="T:System.Web.UI.DataSourceSelectArguments" /> 类型的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="public int MaximumRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRows : int with get, set" Usage="System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值表示在一次数据检索操作中，数据源控件返回的最大数据行数。</summary>
        <value>在一次数据检索操作中，数据源返回的最大数据行数。 默认值为 0，指示返回所有可能的数据行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>属性支持分页方案。 数据绑定控件在运行时检查数据源视图的 <xref:System.Web.UI.DataSourceView.CanPage%2A> 属性， <xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType> <xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29> 如果视图支持分页，则使用方法添加功能。 如果数据绑定控件未能添加功能，并且在 <xref:System.Web.UI.DataSourceSelectArguments> 数据检索操作过程中在传递到数据源视图的对象上设置分页属性，则 <xref:System.InvalidOperationException> 可能会引发异常。  
  
 数据绑定控件可以通过设置 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> <xref:System.Web.UI.DataSourceSelectArguments> 传递给方法的对象的和属性，请求数据源控件中的数据子集进行分页 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29> 。  
  
> [!IMPORTANT]
>  如果设置了任何 <xref:System.Web.UI.DataSourceSelectArguments> 属性，但当前绑定的数据源控件不支持所请求的功能，则 <xref:System.InvalidOperationException> 调用方法时将引发异常 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilitiesError">
      <MemberSignature Language="C#" Value="public void RaiseUnsupportedCapabilitiesError (System.Web.UI.DataSourceView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseUnsupportedCapabilitiesError(class System.Web.UI.DataSourceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseUnsupportedCapabilitiesError (view As DataSourceView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseUnsupportedCapabilitiesError(System::Web::UI::DataSourceView ^ view);" />
      <MemberSignature Language="F#" Value="member this.RaiseUnsupportedCapabilitiesError : System.Web.UI.DataSourceView -&gt; unit" Usage="dataSourceSelectArguments.RaiseUnsupportedCapabilitiesError view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Web.UI.DataSourceView" />
      </Parameters>
      <Docs>
        <param name="view">执行数据检索操作的数据源视图。</param>
        <summary>将为 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 操作请求的功能与指定的数据源视图所支持的功能进行比较。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29>数据绑定控件使用方法来比较类的属性表示的其他请求功能 <xref:System.Web.UI.DataSourceSelectArguments> ，如使用数据源视图所支持的功能对结果集进行排序或分页的能力。 视图 <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%28System.Web.UI.DataSourceCapabilities%29> 为枚举中定义的每个可能的功能调用其自己的方法 <xref:System.Web.UI.DataSourceCapabilities> 。  
  
> [!IMPORTANT]
>  如果设置了任何 <xref:System.Web.UI.DataSourceSelectArguments> 属性，但当前绑定的数据源控件不支持所请求的功能，则 <xref:System.InvalidOperationException> 调用方法时将引发异常 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">数据源视图不支持指定的数据源功能。</exception>
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="RetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public bool RetrieveTotalRowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetrieveTotalRowCount { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetrieveTotalRowCount : bool with get, set" Usage="System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在数据检索操作过程中，数据源控件是否应检索所有数据行的计数。</summary>
        <value>如果数据源控件应检索数据行总数，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount%2A>属性支持分页方案。 将此属性设置为 `true` ，以在数据检索操作过程中在数据源控件中请求总行数。 检查 <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A?displayProperty=nameWithType> 属性以确定数据源视图是否支持检索总行数。 如果数据源支持该属性，则在 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> 数据检索操作过程中，数据源控件将设置该属性，并且在属性中返回总计数据行计数 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> ，就像在方法的 output 参数中返回值一样。  
  
> [!IMPORTANT]
>  如果设置了任何 <xref:System.Web.UI.DataSourceSelectArguments> 属性，但当前绑定的数据源控件不支持所请求的功能，则 <xref:System.InvalidOperationException> 调用方法时将引发异常 <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError%28System.Web.UI.DataSourceView%29?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string with get, set" Usage="System.Web.UI.DataSourceSelectArguments.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个表达式，数据源视图使用该表达式对 <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> 方法检索的数据进行排序。</summary>
        <value>一个字符串，数据源视图使用该字符串对 <see cref="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" /> 方法检索的数据进行排序。 如果未设置排序表达式，则返回 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>属性支持排序方案。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.DataSourceCapabilities.Sort" />
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="public int StartRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndex : int with get, set" Usage="System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值表示在数据检索操作过程中，检索数据行时数据源控件应使用的起始位置。</summary>
        <value>数据源控件检索数据的起始行位置。 默认值为 0，指示起始位置为结果集的开始处。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>属性支持分页方案。 数据绑定控件在运行时检查数据源视图的 <xref:System.Web.UI.DataSourceView.CanPage%2A> 属性， <xref:System.Web.UI.DataSourceCapabilities.Page?displayProperty=nameWithType> <xref:System.Web.UI.DataSourceSelectArguments.AddSupportedCapabilities%28System.Web.UI.DataSourceCapabilities%29> 如果视图支持分页，则使用方法添加功能。 如果数据绑定控件未能添加功能，并且在 <xref:System.Web.UI.DataSourceSelectArguments> 数据检索操作过程中在传递到数据源视图的对象上设置分页属性，则 <xref:System.InvalidOperationException> 可能会引发异常。  
  
 作为单独的操作，数据绑定控件可以通过设置 <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> <xref:System.Web.UI.DataSourceSelectArguments> 传递给方法的对象的和属性来请求数据源控件中的数据子集 <xref:System.Web.UI.DataSourceView.Select%28System.Web.UI.DataSourceSelectArguments%2CSystem.Web.UI.DataSourceViewSelectCallback%29?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int with get, set" Usage="System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在数据检索操作过程中检索的行数。</summary>
        <value>数据检索操作检索的数据行总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>属性支持分页方案。 数据源和数据源视图控件在其内部实现方面有所不同，以了解如何检索总行数。 检查 <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A?displayProperty=nameWithType> 属性以确定数据源视图是否支持在数据检索操作过程中检索总行数。 如果数据源支持该属性，则在 <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> 数据检索操作过程中，数据源控件将设置该属性，并且在属性中返回总计数据行计数， <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> 就像在方法的 output 参数中返回值一样。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
  </Members>
</Type>
