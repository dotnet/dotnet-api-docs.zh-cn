<Type Name="DataBinder" FullName="System.Web.UI.DataBinder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6854c92623e3dce7e1f38e1321b40893754bdbc5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83949311" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinder sealed" />
  <TypeSignature Language="F#" Value="type DataBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供对应用程序快速开发 (RAD) 设计器的支持以生成和分析数据绑定表达式语法。 无法继承此类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以在 ASP.NET 网页中的数据绑定语法中使用此类的重载静态 <xref:System.Web.UI.DataBinder.Eval%2A> 方法。 与标准数据绑定相比，这提供了更简单的语法。 不过，由于 `DataBinder.Eval` 提供自动类型转换，因此可能会导致性能下降。  
  
 有关 ASP.NET 数据绑定、表达式和语法的详细信息，请参阅[绑定到数据库](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))和[数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。  
  
 从 .NET Framework 4.5 开始，可以使用模型绑定来简化某些在早期版本中通过数据绑定执行的任务。 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下面的示例使用静态 <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> 方法，通过 `Product` 对象的 <xref:System.Collections.ArrayList> 填充 <xref:System.Web.UI.WebControls.Repeater> 控件的字段。 可以采用相同的语法应用 <xref:System.Web.UI.DataBinder.Eval%2A> 方法，但该方法不会快速执行。  
  
 此示例使用自定义 `Product` 类，该类公开字符串 `Model` 属性和数值 `UnitPrice` 属性。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.DataBinder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/Default.aspx#1)]  
  
 下面的代码是自定义 `Product` 类。 此代码应包含在 App_Code 目录的单独类文件中，如 Product.cs 或 Product .vb。  
  
 [!code-csharp[System.Web.UI.DataBinder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/App_Code/Product.cs#2)]
 [!code-vb[System.Web.UI.DataBinder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/App_Code/Product.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XPathBinder" />
    <altmember cref="T:System.Web.UI.IBindableTemplate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataBinder" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public static bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinder.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.DataBinder.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在运行时是否启用了数据缓存。</summary>
        <value>如果为 <see cref="T:System.Web.UI.DataBinder" /> 类启用了缓存，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在运行时使用反射来分析和计算对象的数据绑定表达式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从 .NET Framework 4.5 开始，可以使用模型绑定来简化某些在早期版本中通过数据绑定执行的任务。 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.Eval (container, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">表达式根据其进行计算的对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="expression">从 <paramref name="container" /> 对象到要放置在绑定控件属性中的公共属性值的导航路径。 此路径必须是以点分隔的属性或字段名称字符串，如 C# 中的 <c>Tables[0].DefaultView.[0].Price</c> 或 Visual Basic 中的 <c>Tables(0).DefaultView.(0).Price</c>。</param>
        <summary>在运行时计算数据绑定表达式。</summary>
        <returns><see cref="T:System.Object" /> 实例，它是数据绑定表达式的计算结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `expression` 参数的值的计算结果必须为公共属性。  
  
 在快速应用程序开发（RAD）设计器（如 Visual Studio）中创建数据绑定时，将自动调用此方法。 还可以通过声明方式使用它来简化到文本字符串的转换。 为此，请使用 `<%#  %>` expression 语法，如标准 ASP.NET 数据绑定中所使用的那样。  
  
 在将数据绑定到模板列表中的控件时，此方法特别有用。  
  
> [!NOTE]
>  由于此方法使用反射在运行时执行后期绑定计算，因此与标准 ASP.NET 数据绑定语法相比，它可能会导致性能明显降低。  
  
 对于任何列表 Web 控件（例如 <xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.DataList>或 <xref:System.Web.UI.WebControls.Repeater>），应 `container` `Container.DataItem`。 如果要针对页面进行绑定，应 `Page``container`。  
  
 从 .NET Framework 4.5 开始，可以使用模型绑定来简化某些在早期版本中通过数据绑定执行的任务。 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下面的示例演示如何使用 `Eval` 方法将数据绑定到 <xref:System.Web.UI.WebControls.Repeater> 控件。 它需要一个名为 "Product" 的数据类。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 代码隐藏文件可加载测试数据，并将这些数据绑定到 <xref:System.Web.UI.WebControls.Repeater> 控件。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 在 <xref:System.Web.UI.WebControls.Repeater> 控件的声明性语法中，对 `container` 参数使用带有 `Container.DataItem` 的 <xref:System.Web.UI.DataBinder.Eval%2A> 方法。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 或者，你可以调用 `Eval` 函数，而不包括 `container` 参数。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="expression" /> 为 <see langword="null" /> 或修整后变成空字符串。</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.Eval (container, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">表达式根据其进行计算的对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="expression">从 <paramref name="container" /> 对象到要放置在绑定控件属性中的公共属性值的导航路径。 此路径必须是以点分隔的属性或字段名称字符串，如 C# 中的 <c>Tables[0].DefaultView.[0].Price</c> 或 Visual Basic 中的 <c>Tables(0).DefaultView.(0).Price</c>。</param>
        <param name="format">.NET Framework 格式字符串（如 <see cref="M:System.String.Format(System.String,System.Object)" /> 使用的字符串），它将数据绑定表达式返回的 <see cref="T:System.Object" /> 实例转换为 <see cref="T:System.String" /> 对象。</param>
        <summary>在运行时计算数据绑定表达式，并将结果的格式设置为字符串。</summary>
        <returns><see cref="T:System.String" /> 对象，它是计算数据绑定表达式和向字符串类型转换的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `expression` 的值的计算结果必须为公共属性。  
  
 有关 .NET Framework 中的格式字符串的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。  
  
 在快速应用程序开发（RAD）设计器（如 Visual Studio）中创建数据绑定时，将自动调用此方法。 还可以通过声明方式使用它，将数据绑定表达式所生成的 <xref:System.Object> 转换为 <xref:System.String>。  若要以声明方式使用方法，请使用 `<%#   %>` 表达式语法，如标准 ASP.NET 数据绑定中所用。  
  
 在将数据绑定到模板列表中的控件时，此方法特别有用。  
  
> [!NOTE]
>  由于此方法使用反射在运行时执行后期绑定计算，因此与标准 ASP.NET 数据绑定语法相比，它可能会导致性能明显降低。 慎用此方法，特别是在不需要字符串格式设置时。  
  
 对于任何列表 Web 控件（例如 <xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.DataList>或 <xref:System.Web.UI.WebControls.Repeater>），应 `container` `Container.DataItem`。 如果要针对页面进行绑定，应 `Page``container`。  
  
 从 .NET Framework 4.5 开始，可以使用模型绑定来简化某些在早期版本中通过数据绑定执行的任务。 有关如何在 Web 窗体中使用模型绑定的教程系列，请参阅[模型绑定和 Web 窗体](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下面的示例演示如何使用 `Eval` 方法将数据绑定到 <xref:System.Web.UI.WebControls.Repeater> 控件。 它需要一个名为 "Product" 的数据类。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 代码隐藏文件可加载测试数据，并将这些数据绑定到 <xref:System.Web.UI.WebControls.Repeater> 控件。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 在 <xref:System.Web.UI.WebControls.Repeater> 控件的声明性语法中，对 `container` 参数使用带有 `Container.DataItem` 的 <xref:System.Web.UI.DataBinder.Eval%2A> 方法。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 或者，你可以调用 `Eval` 函数，而不包括 `container` 参数。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">设置 .NET 中类型的格式</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索对象的已声明数据项。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container">表达式根据其进行计算的对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <summary>检索对象的已声明数据项。</summary>
        <returns>表示容器的已声明数据项的对象。 如果未找到数据项或者容器的计算结果为 <see langword="null" />，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用 <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29> 方法，并在返回结果时忽略其 `foundDataItem` 参数。  
  
 对象的数据项通过以下两种方式之一进行标识。 如果容器对象实现 <xref:System.Web.UI.IDataItemContainer> 接口，则 <xref:System.Web.UI.IDataItemContainer.DataItem%2A> 属性将标识该数据项，并返回其值。 否则，该方法将尝试解析并返回一个名为 "DataItem" 的容器属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container, out bool foundDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container, [out] bool&amp; foundDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object, ByRef foundDataItem As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container, [Runtime::InteropServices::Out] bool % foundDataItem);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj * bool -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem (container, foundDataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="foundDataItem" Type="System.Boolean" RefType="out" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container">表达式根据其进行计算的对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="foundDataItem">一个布尔值，指示是否已成功解析并返回数据项。 此参数在传递时尚未初始化。</param>
        <summary>检索对象的已声明数据项，以指示成功或失败。</summary>
        <returns>表示容器的已声明数据项的对象。 如果未找到数据项或者容器的计算结果为 <see langword="null" />，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对象的数据项通过两种方式进行标识。 如果容器对象实现 <xref:System.Web.UI.IDataItemContainer> 接口，则 <xref:System.Web.UI.IDataItemContainer.DataItem%2A> 属性将标识该数据项，并返回。 否则，该方法将尝试解析并返回一个名为 "DataItem" 的容器属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIndexedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索索引属性的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetIndexedPropertyValue (object container, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetIndexedPropertyValue(object container, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, expr As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, expr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container"><paramref name="expr" /> 根据其进行计算的对象引用。 此引用必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="expr">从 <paramref name="container" /> 对象到要放置在绑定控件属性中的公共属性值的导航路径。 此路径必须是以点分隔的属性或字段名称字符串，如 C# 中的 <c>Tables[0].DefaultView.[0].Price</c> 或 Visual Basic 中的 <c>Tables(0).DefaultView.(0).Price</c>。</param>
        <summary>检索指定的容器和导航路径的属性值。</summary>
        <returns>由计算数据绑定表达式所得出的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `expr` 的值的计算结果必须为公共属性。  
  
 对于任何列表 Web 控件（例如 <xref:System.Web.UI.WebControls.GridView>、<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.DataList>或 <xref:System.Web.UI.WebControls.Repeater>），应 `container` `Container.DataItem`。 如果要针对页面进行绑定，应 `Page``container`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="container" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="expr" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="expr" /> 为无效的索引表达式。  
  
- 或 - 
 <paramref name="expr" /> 不允许索引访问。</exception>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetIndexedPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIndexedPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">表达式根据其进行计算的对象引用。 此引用必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="propName">包含要检索的值的属性名称。</param>
        <param name="format">指定结果显示格式的字符串。</param>
        <summary>检索指定容器的指定属性的值，然后设置结果的格式。</summary>
        <returns>指定的属性的值，格式由 <paramref name="format" /> 指定。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> 方法将调用 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> 方法，然后使用 <xref:System.String.Format%2A?displayProperty=nameWithType> 方法格式化 `format` 参数中指定的结果。 .NET Framework 格式字符串（如 <xref:System.String.Format%2A?displayProperty=nameWithType>使用的字符串）将数据绑定表达式返回的 <xref:System.Object> 实例转换为 <xref:System.String> 对象。  
  
 为 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> 方法引发的异常也适用于 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> 方法。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式使用 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> 方法来绑定到索引值。  
  
 [!code-aspx-csharp[Classic DataBinder.Eval Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataBinder.Eval Example/CS/sourcecs.aspx#2)]
 [!code-aspx-vb[Classic DataBinder.Eval Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataBinder.Eval Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索属性的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyValue (object container, string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyValue(object container, string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetPropertyValue(System::Object ^ container, System::String ^ propName);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">包含属性的对象。</param>
        <param name="propName">包含要检索的值的属性名称。</param>
        <summary>检索指定对象的指定属性的值。</summary>
        <returns>指定的属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> 方法用于检索对象中某个属性的值。  
  
   
  
## Examples  
 <xref:System.Web.UI.DataBinder> 的示例演示了此方法的用法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="container" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="propName" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
        <exception cref="T:System.Web.HttpException"><paramref name="container" /> 中的对象不具有由 <paramref name="propName" /> 指定的属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">包含属性的对象。</param>
        <param name="propName">包含要检索的值的属性名称。</param>
        <param name="format">指定结果显示格式的字符串。</param>
        <summary>检索指定对象的指定属性的值，然后设置结果的格式。</summary>
        <returns>指定的属性的值，格式由 <paramref name="format" /> 指定。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的 <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> 方法用于检索对象中的属性值并设置其格式。  
  
   
  
## Examples  
 <xref:System.Web.UI.DataBinder> 的示例演示了此方法的用法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="container" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="propName" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
        <exception cref="T:System.Web.HttpException"><paramref name="container" /> 中的对象不具有由 <paramref name="propName" /> 指定的属性。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.IsBindableType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBindableType (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.DataBinder.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" />，表示要检查的数据类型。</param>
        <summary>确定指定数据类型是否可绑定。</summary>
        <returns>可以自动将数据绑定到控件的类型的<see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
