<Type Name="ProfileServiceManager" FullName="System.Web.UI.ProfileServiceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2973bbcd930596d5f0c31a6a2f7652aaad87a4ba" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89918089" /></Metadata><TypeSignature Language="C#" Value="public class ProfileServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ProfileServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileServiceManager" />
  <TypeSignature Language="F#" Value="type ProfileServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Path")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Path")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>配置一组预加载的配置文件属性和配置文件服务的自定义实现的位置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ProfileServiceManager>类与 <xref:System.Web.UI.ScriptManager.ProfileService%2A> 可以添加到或控件的属性相对应 <xref:System.Web.UI.ScriptManager> <xref:System.Web.UI.ScriptManagerProxy> 。  
  
 可以使用 <xref:System.Web.UI.ProfileServiceManager> 指定一组配置文件属性，这些属性将在页面呈现时预加载并可用于客户端脚本。 此外，你还可以使用此类来提供用于在脚本中加载或保存配置文件属性的 Web 服务的替代实现的路径，而不是使用 ASP.NET 的 AJAX 功能提供的内置配置文件 Web 服务。  
  
 若要在你的应用程序中使用配置文件服务，你必须在配置文件中启用它。 如果使用内置配置文件 Web 服务，而不必预先加载属性，则无需在页面上显式声明配置文件服务管理器。  
  
 若要以声明方式指定一组预加载的属性或自定义配置文件 Web 服务，请在 `<ProfileService>` 页面的元素内包含一个元素 `<asp:ScriptManager>` ，如下面的示例所示。  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB" Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 还可以通过编程方式将配置文件服务配置为预加载属性或使用自定义配置文件 Web 服务。  
  
 下面的示例演示必须在自定义配置文件 Web 服务中实现的基本类结构。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingProfileServiceSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/91239ae6-d01c-4f4e-a433-eb9040dbed61">将配置文件信息用于 ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ProfileServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ProfileServiceManager" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperties">
      <MemberSignature Language="C#" Value="public string[] LoadProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] LoadProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ProfileServiceManager.LoadProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadProperties As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ LoadProperties { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadProperties : string[] with get, set" Usage="System.Web.UI.ProfileServiceManager.LoadProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个数组，其中包含可用于客户端脚本的配置文件属性。</summary>
        <value>一个字符串数组，其中包含将预加载并将提供给客户端脚本使用的配置文件属性的名称。 默认为空数组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> 包含至少一个对应于配置文件属性名称的字符串，则 Web 应用程序中的内置配置文件服务将为每个指定的配置文件属性检索当前用户的配置文件数据。 配置文件属性值将进行序列化，然后通过 [属性字段](https://msdn.microsoft.com/library/ebce3c40-7017-482b-94df-91f7448fda05) 集合可供客户端脚本使用。  
  
> [!NOTE]
>  若要以声明方式设置此属性，请使用以逗号分隔的属性名称列表。 对于分组属性值，请 *使用语法组*。*PropertyName*。  
  
 如果 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> 为空数组，则不会预加载配置文件数据。  
  
 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A>可以在 <xref:System.Web.UI.ScriptManager> 控件或关联的控件中指定属性 <xref:System.Web.UI.ScriptManagerProxy> 。 在 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> <xref:System.Web.UI.ScriptManager> 控件和一个或多个控件上设置时 <xref:System.Web.UI.ScriptManagerProxy> ，通过合并所有指定的属性来确定属性集。 忽略重复的属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.UI.ProfileServiceManager.LoadProperties" /> 属性包含当前应用程序的配置文件架构中不存在的属性名。</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ProfileServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.ProfileServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置配置文件 Web 服务的自定义实现的路径。</summary>
        <value>配置文件 Web 服务的自定义实现的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 允许使用相对虚拟路径、绝对虚拟路径和完全限定路径。  
  
 如果 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 未设置该属性，则返回值为 <xref:System.String.Empty> 。 在这种情况下，ASP.NET 的 AJAX 功能随后将使用对应于以下内部默认路径的内置配置文件 Web 服务： ~/ScriptServices_ProfileService。 如果将设置为空值或，则会发生相同的行为 <xref:System.Web.UI.ProfileServiceManager.Path%2A> `null` 。  
  
 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 可在 <xref:System.Web.UI.ScriptManager> 控件或关联控件中指定 <xref:System.Web.UI.ScriptManagerProxy> 。 当在 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 级别设置时 <xref:System.Web.UI.ScriptManagerProxy> ，以下注意事项适用：  
  
-   如果控件层次结构中有多个代理，则不必 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 在每个代理实例上设置。  
  
-   如果 <xref:System.Web.UI.ProfileServiceManager.Path%2A> 在代理实例上显式设置，则对于在其上显式设置此属性的所有其他代理，此值必须相同。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在控件层次结构中设置了多个唯一路径。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
