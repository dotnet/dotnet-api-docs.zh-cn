<Type Name="ChtmlTextWriter" FullName="System.Web.UI.ChtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10e7a35bd9b0c5d58d3648b9bb15ef936a074a6d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657018" /></Metadata><TypeSignature Language="C#" Value="public class ChtmlTextWriter : System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChtmlTextWriter extends System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ChtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ChtmlTextWriter&#xA;Inherits Html32TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChtmlTextWriter : System::Web::UI::Html32TextWriter" />
  <TypeSignature Language="F#" Value="type ChtmlTextWriter = class&#xA;    inherit Html32TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Html32TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d9ce8-101">向 ASP.NET 服务器控件的输出流写入一系列特定于 cHTML 的字符和文本。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-101">Writes a series of cHTML-specific characters and text to the output stream of an ASP.NET server control.</span></span> <span data-ttu-id="d9ce8-102"><see cref="T:System.Web.UI.ChtmlTextWriter" /> 类提供 ASP.NET 服务器控件在将 cHTML 内容呈现给客户端时所使用的格式化功能。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-102">The <see cref="T:System.Web.UI.ChtmlTextWriter" /> class provides formatting capabilities that ASP.NET server controls use when rendering cHTML content to clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-103">Compact HTML （即 cHTML）是 HTML 2.0、HTML 3.2 和 HTML 4.0 的子集，设计用于在内存和 CPU 能力有限的设备上进行呈现，还可以呈现少量的显示屏幕、有限的格式设置功能以及有限数量的输入选项 (如手机触控板) 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-103">Compact HTML, or cHTML, is a subset of HTML 2.0, HTML 3.2, and HTML 4.0, and is designed to render on devices with limited memory and CPU power, along with small display screens, limited formatting capabilities, and a limited number of input options (such as a cell phone touch pad).</span></span> <span data-ttu-id="d9ce8-104">因此，cHTML 不支持以下功能：</span><span class="sxs-lookup"><span data-stu-id="d9ce8-104">Therefore, cHTML does not support the following:</span></span>  
  
-   <span data-ttu-id="d9ce8-105">JPEG 图像。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-105">JPEG images.</span></span>  
  
-   <span data-ttu-id="d9ce8-106">表。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-106">Tables.</span></span>  
  
-   <span data-ttu-id="d9ce8-107">图像映射。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-107">Image maps.</span></span>  
  
-   <span data-ttu-id="d9ce8-108">多字符字体和样式。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-108">Multiple character fonts and styles.</span></span>  
  
-   <span data-ttu-id="d9ce8-109">背景颜色和图像。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-109">Background colors and images.</span></span>  
  
-   <span data-ttu-id="d9ce8-110">文本框.</span><span class="sxs-lookup"><span data-stu-id="d9ce8-110">Frames.</span></span>  
  
-   <span data-ttu-id="d9ce8-111">样式表。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-111">Style sheets.</span></span>  
  
 <span data-ttu-id="d9ce8-112"><xref:System.Web.UI.ChtmlTextWriter>类派生自 <xref:System.Web.UI.Html32TextWriter> 类，并且它的大部分功能由提供 <xref:System.Web.UI.Html32TextWriter> ，所有标记文本编写器的基类（ <xref:System.Web.UI.HtmlTextWriter> 该类是类）。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-112">The <xref:System.Web.UI.ChtmlTextWriter> class derives from the <xref:System.Web.UI.Html32TextWriter> class and much of its functionality is provided by the <xref:System.Web.UI.Html32TextWriter> and the base class for all markup text writers, which is the <xref:System.Web.UI.HtmlTextWriter> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9ce8-113">下面的代码示例演示如何创建一个 `CustomChtmlTextWriter` 从类派生的名为的类 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-113">The following code example demonstrates how to create a class named `CustomChtmlTextWriter` that is derived from the <xref:System.Web.UI.ChtmlTextWriter> class.</span></span> <span data-ttu-id="d9ce8-114">它创建两个构造函数并重写 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 方法，以防止将 `bgcolor` 样式特性写入对象的输出流中 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-114">It creates two constructors and overrides the <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> method to prevent the `bgcolor` style attribute from being written to the output stream of the <xref:System.Web.UI.ChtmlTextWriter> object.</span></span> <span data-ttu-id="d9ce8-115">它还将创建一个名为的类，该类 `ChtmlCustomPageAdapter` 定义一个方法，该方法 `CreateCustomChtmlTextWriter` 创建并返回 `CustomChtmlTextWriter` 类的实例。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-115">It also creates a class named `ChtmlCustomPageAdapter` that defines one method, `CreateCustomChtmlTextWriter`, which creates and returns an instance of the `CustomChtmlTextWriter` class.</span></span> <span data-ttu-id="d9ce8-116">`CustomChtmlTextWriter`然后，会向具有使用 cHTML 标记的浏览器的设备呈现页面的 cHTML 内容。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-116">The `CustomChtmlTextWriter` then renders cHTML content for a page to devices with browsers that use cHTML markup.</span></span>  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9ce8-117">初始化 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-117">Initializes a new instance of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="d9ce8-118">呈现标记内容的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-118">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span></span></param>
        <summary><span data-ttu-id="d9ce8-119">初始化使用 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 常数使行缩进的 <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-119">Initializes a new instance of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class that uses the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> constant to indent lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-120"><xref:System.Web.UI.ChtmlTextWriter>类具有两个构造函数，这是直接或间接从类派生的所有类的标准 <xref:System.Web.UI.HtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-120">The <xref:System.Web.UI.ChtmlTextWriter> class has two constructors, which is standard for all classes that derive directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="d9ce8-121"><xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A>构造函数采用类的实例 <xref:System.IO.TextWriter> 作为参数，调用第二个构造函数并向其传递两个参数值：</span><span class="sxs-lookup"><span data-stu-id="d9ce8-121">The <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A> constructor, which takes an instance of the <xref:System.IO.TextWriter> class as a parameter, calls the second constructor and passes it two parameter values:</span></span>  
  
-   <span data-ttu-id="d9ce8-122"><xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-122">The <xref:System.IO.TextWriter>.</span></span>  
  
-   <span data-ttu-id="d9ce8-123">在字段中指定的字符串值 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> ，用于定义 XHTML 文本编写器使用的制表符间距。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-123">The string value that is specified in the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field, which defines the tab spacing that is used by the XHTML text writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9ce8-124">下面的代码示例演示如何创建一个名为的类， `ChtmlCustomPageAdapter` 并定义一个方法， `CreateCustomChtmlTextWriter` 该方法创建并返回类的实例 `CustomChtmlTextWriter` 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-124">The following code example demonstrates how to create a class named `ChtmlCustomPageAdapter` and defines one method, `CreateCustomChtmlTextWriter`, which creates and returns an instance of the `CustomChtmlTextWriter` class.</span></span> <span data-ttu-id="d9ce8-125">然后，使用 `CustomChtmlTextWriter` 使用 cHTML 标记的浏览器向设备呈现页面的 cHTML 内容。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-125">The `CustomChtmlTextWriter` then renders cHTML content for pages to devices with browsers that use cHTML markup.</span></span>  
  
 <span data-ttu-id="d9ce8-126">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-126">This code example is part of a larger example provided for the <xref:System.Web.UI.ChtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="d9ce8-127">呈现标记内容的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-127">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span></span></param>
        <param name="tabString"><span data-ttu-id="d9ce8-128"><see cref="P:System.Web.UI.HtmlTextWriter.Indent" /> 中定义的空格数。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-128">The number of spaces defined in the <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />.</span></span></param>
        <summary><span data-ttu-id="d9ce8-129">使用指定的行缩进初始化 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-129">Initializes a new instance of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class with the specified line indentation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-130"><xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A>构造函数采用类的实例 <xref:System.IO.TextWriter> 和字符串作为参数， <xref:System.Web.UI.Html32TextWriter> 在创建类的实例时调用采用相同参数的构造函数 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-130">The <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A> constructor, which takes both an instance of the <xref:System.IO.TextWriter> class and a string as parameters, calls the <xref:System.Web.UI.Html32TextWriter> constructor that takes the same parameters when it creates an instance of the <xref:System.Web.UI.ChtmlTextWriter> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9ce8-131">下面的代码示例演示如何创建一个名为的自定义类 `CustomChtmlTextWriter` ，该类派生自 <xref:System.Web.UI.ChtmlTextWriter> 类。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-131">The following code example demonstrates how to create a custom class named `CustomChtmlTextWriter` that is derived from the <xref:System.Web.UI.ChtmlTextWriter> class.</span></span> <span data-ttu-id="d9ce8-132">它创建两个构造函数，可用于创建自定义类的实例，其模式与从类直接或间接派生的所有类的模式相同 <xref:System.Web.UI.HtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-132">It creates two constructors that you can use to create an instance of the custom class with the same pattern as all classes that derive, directly or indirectly, from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="d9ce8-133">要添加特性的 cHTML 元素。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-133">The cHTML element to add the attribute to.</span></span></param>
        <param name="attributeName"><span data-ttu-id="d9ce8-134">要添加到 <paramref name="elementName" /> 的特性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-134">The attribute to add to <paramref name="elementName" />.</span></span></param>
        <summary><span data-ttu-id="d9ce8-135">将一个特性添加到 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 对象的 cHTML 元素。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-135">Adds an attribute to a cHTML element of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-136"><xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A>方法将特性添加到 cHTML 元素。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-136">The <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> method adds an attribute to a cHTML element.</span></span> <span data-ttu-id="d9ce8-137">可识别的特性存储在属性所引用的 <xref:System.Collections.Hashtable> 对象的已识别特性集合中 <xref:System.Web.UI.ChtmlTextWriter> <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-137">The recognized attribute is stored in the recognized attributes <xref:System.Collections.Hashtable> collection of the <xref:System.Web.UI.ChtmlTextWriter> object that is referenced by the <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalSuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable GlobalSuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable GlobalSuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property GlobalSuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ GlobalSuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalSuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9ce8-138">获取已全局取消的特性（无法在 cHTML 元素上呈现）的 <see cref="T:System.Collections.Hashtable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-138">Gets a <see cref="T:System.Collections.Hashtable" /> object of globally suppressed attributes that cannot be rendered on cHTML elements.</span></span></summary>
        <value><span data-ttu-id="d9ce8-139">已全局取消的 cHTML 特性的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-139">A <see cref="T:System.Collections.Hashtable" /> of globally suppressed cHTML attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-140">下面的列表显示了在创建类的新实例时设置的全局禁止使用的属性 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-140">The following list shows the globally suppressed attributes that are set when a new instance of the <xref:System.Web.UI.ChtmlTextWriter> class is created.</span></span>  
  
|||  
|-|-|  
|`onclick`|`onmousemove`|  
|`ondblclick`|`onmouseout`|  
|`onmousedown`|`onkeypress`|  
|`onmouseup`|`onkeydown`|  
|`onmouseover`|`onkeyup`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="chtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9ce8-141">要呈现的 cHTML 特性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-141">The cHTML attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="d9ce8-142">分配给 <paramref name="name" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-142">The value assigned to <paramref name="name" />.</span></span></param>
        <param name="key"><span data-ttu-id="d9ce8-143">与 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 关联的 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-143">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="d9ce8-144">确定指定的 cHTML 特性及其值是否将呈现给请求页。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-144">Determines whether the specified cHTML attribute and its value are rendered to the requesting page.</span></span> <span data-ttu-id="d9ce8-145">可以在从 <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> 类派生的类中重写 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 方法，以筛选出不希望在支持 cHTML 的设备上呈现的特性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-145">You can override the <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method in classes that derive from the <see cref="T:System.Web.UI.ChtmlTextWriter" /> class to filter out attributes that you do not want to render on devices that support cHTML.</span></span></summary>
        <returns><span data-ttu-id="d9ce8-146">如果将特性及其值写入 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 输入流，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-146"><see langword="true" /> to write the attribute and its value to the <see cref="T:System.Web.UI.ChtmlTextWriter" /> output stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-147">默认情况下，该 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 方法阻止全局禁止显示在属性中列出的属性 <xref:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes%2A> 和元素特定的、禁止 <xref:System.Web.UI.ChtmlTextWriter.SuppressedAttributes%2A> 写入到输出流中的属性中列出的属性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-147">By default, the <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> method prevents globally suppressed attributes that are listed in the <xref:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes%2A> property and element-specific, suppressed attributes that are listed in the <xref:System.Web.UI.ChtmlTextWriter.SuppressedAttributes%2A> property from being written to the output stream.</span></span> <span data-ttu-id="d9ce8-148">可以 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 在派生自类的类中重写方法的行为 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-148">You can override the behavior of the <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> method in classes that are derived from the <xref:System.Web.UI.ChtmlTextWriter> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9ce8-149">下面的代码示例演示如何使用重写方法的自定义类， <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 以防止将 `bgcolor` 特性写入 cHTML 输出流中。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-149">The following code example demonstrates how to use a custom class that overrides the <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> method to prevent the `bgcolor` attribute from being written to the cHTML output stream.</span></span> <span data-ttu-id="d9ce8-150">然后，它从类中调用基方法提供的功能 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> <xref:System.Web.UI.ChtmlTextWriter> ，以确保也使用其默认行为。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-150">It then calls the functionality that is provided by the base <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> method from the <xref:System.Web.UI.ChtmlTextWriter> class to ensure that its default behavior is used, too.</span></span>  
  
 <span data-ttu-id="d9ce8-151">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-151">This code example is part of a larger example provided for the <xref:System.Web.UI.ChtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="chtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9ce8-152">包含要呈现的样式属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-152">A string containing the name of the style attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="d9ce8-153">一个包含要分配给 <paramref name="name" /> 的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-153">A string containing the value that is assigned to <paramref name="name" />.</span></span></param>
        <param name="key"><span data-ttu-id="d9ce8-154">与 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 关联的 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-154">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="d9ce8-155">确定是否可以向当前标记元素呈现指定的 cHTML 标记样式特性及其值。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-155">Determines whether the specified cHTML markup style attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="d9ce8-156">如果可以呈现样式，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-156"><see langword="true" /> if the style can be rendered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-157"><xref:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender%2A> `false` 当 `key` 等于 <xref:System.Web.UI.HtmlTextWriterStyle.TextDecoration> 字段且值为时，该方法返回 `"line-through"` 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-157">The <xref:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender%2A> method returns `false` when `key` is equal to the <xref:System.Web.UI.HtmlTextWriterStyle.TextDecoration> field and the value is `"line-through"`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="chtmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9ce8-158">一个包含要呈现的 cHTML 元素的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-158">A string containing the name of the cHTML element to render.</span></span></param>
        <param name="key"><span data-ttu-id="d9ce8-159">与 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 关联的 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-159">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="d9ce8-160">确定指定的 cHTML 标记元素是否将呈现给请求页。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-160">Determines whether the specified cHTML markup element is rendered to the requesting page.</span></span></summary>
        <returns><span data-ttu-id="d9ce8-161">如果可以呈现指定的 cHTML 标记元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-161"><see langword="true" /> if the specified cHTML markup element can be rendered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-162">如果 cHTML 元素是一个 `span` 元素，则该 <xref:System.Web.UI.ChtmlTextWriter.OnTagRender%2A> 方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-162">If the cHTML element is a `span` element, the <xref:System.Web.UI.ChtmlTextWriter.OnTagRender%2A> method returns `false`.</span></span> <span data-ttu-id="d9ce8-163">对于所有其他标记，它将返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-163">For all other tags, it returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      </Docs>
    </Member>
    <Member MemberName="RecognizedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable RecognizedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable RecognizedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RecognizedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ RecognizedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RecognizedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9ce8-164">获取可识别特性（可以在 cHTML 元素上呈现）的 <see cref="T:System.Collections.Hashtable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-164">Gets a <see cref="T:System.Collections.Hashtable" /> object of recognized attributes that could be rendered on cHTML elements.</span></span></summary>
        <value><span data-ttu-id="d9ce8-165">可识别 cHTML 特性的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-165">A <see cref="T:System.Collections.Hashtable" /> of recognized cHTML attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-166">使用 <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> 方法可将可识别的特性添加到识别的特性集合。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-166">Use the <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> method to add recognized attributes to the recognized attributes collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="d9ce8-167">要从中移除特性的 cHTML 元素。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-167">The cHTML element to remove an attribute from.</span></span></param>
        <param name="attributeName"><span data-ttu-id="d9ce8-168">要从 <paramref name="elementName" /> 移除的特性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-168">The attribute to remove from <paramref name="elementName" />.</span></span></param>
        <summary><span data-ttu-id="d9ce8-169">移除 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 对象的 cHTML 元素的特性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-169">Removes an attribute of a cHTML element of the <see cref="T:System.Web.UI.ChtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-170"><xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A>方法从 cHTML 元素中移除特性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-170">The <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> method removes an attribute from a cHTML element.</span></span> <span data-ttu-id="d9ce8-171">将从 <xref:System.Collections.Hashtable> <xref:System.Web.UI.ChtmlTextWriter> 属性所引用的对象的 "已识别特性" 集合中删除识别的特性 <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-171">The recognized attribute is removed from the recognized attributes <xref:System.Collections.Hashtable> collection of the <xref:System.Web.UI.ChtmlTextWriter> object that is referenced by the <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9ce8-172">获取用户指定的已取消的特性（无法在 cHTML 元素上呈现）的 <see cref="T:System.Collections.Hashtable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-172">Gets a <see cref="T:System.Collections.Hashtable" /> object of user-specified suppressed attributes that are not rendered on cHTML elements.</span></span></summary>
        <value><span data-ttu-id="d9ce8-173">已取消的 cHTML 特性的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-173">A <see cref="T:System.Collections.Hashtable" /> of suppressed cHTML attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-174">使用 <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> 方法可将特性添加到取消的特性集合。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-174">Use the <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> method to add attributes to the suppressed attributes collection.</span></span>  
  
 <span data-ttu-id="d9ce8-175">下面的列表显示在 `div` 创建类的新实例时为元素设置的默认取消的特性 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-175">The following list shows the default suppressed attributes that are set for a `div` element when a new instance of the <xref:System.Web.UI.ChtmlTextWriter> class is created.</span></span>  
  
|||  
|-|-|  
|`accesskey`|`gridlines`|  
|`cellspacing`|`rules`|  
|`cellpadding`||  
  
 <span data-ttu-id="d9ce8-176">下面的列表显示在 `span` 创建类的新实例时为元素设置的默认取消的特性 <xref:System.Web.UI.ChtmlTextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-176">The following list shows the default suppressed attributes that are set for a `span` element when a new instance of the <xref:System.Web.UI.ChtmlTextWriter> class is created.</span></span>  
  
|||  
|-|-|  
|`cellspacing`|`gridlines`|  
|`cellpadding`|`rules`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="chtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9ce8-177">将 <see langword="br" /> 元素写入 cHTML 输出流。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-177">Writes a <see langword="br" /> element to the cHTML output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-178">使用 <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> 方法向 cHTML 流中插入换行符。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-178">Use the <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> method to insert a line break into a stream of cHTML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9ce8-179">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-179">This section contains two code examples.</span></span> <span data-ttu-id="d9ce8-180">第一个代码示例演示如何创建 cHTML 类和自定义属性。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-180">The first code example demonstrates how to create a cHTML class and custom properties.</span></span> <span data-ttu-id="d9ce8-181">第二个代码示例演示如何在网页上使用自定义类。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-181">The second code example demonstrates how to use a custom class on a Web page.</span></span>  
  
 <span data-ttu-id="d9ce8-182">若要使用自定义 `ChtmlSimplelabelAdapter` 适配器，请将以下代码添加到 .NET Framework 配置目录的浏览器子目录中的相应计算机范围内的文件，或添加到 Web 应用程序根目录下的 App_Browsers 目录中的自定义浏览器文件。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-182">To use the custom `ChtmlSimplelabelAdapter` adapter, add the following code to either the appropriate machine-wide file in the subdirectory for the browser of the .NET Framework configuration directory or to a custom browser file in the App_Browsers directory under the Web application root.</span></span>  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.SimpleLabel"  
   adapterType="AspNet.Samples.ChtmlSimpleLabelAdapter" />  
</controlAdapters>  
```  
  
 <span data-ttu-id="d9ce8-183">下面的代码示例演示如何为 `ChtmlSimpleLabelAdapter` 名为的类创建一个名为的 cHTML 适配器类 `SimpleLabel` 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-183">The following code example demonstrates how to create a cHTML adapter class named `ChtmlSimpleLabelAdapter` for a class named `SimpleLabel`.</span></span> <span data-ttu-id="d9ce8-184">它创建一个自定义 `Control` 属性，该属性允许 `ChtmlSimpleLabelAdapter` 类访问类的成员 `SimpleLabel` ，然后重写 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-184">It creates a custom `Control` property that allows the `ChtmlSimpleLabelAdapter` class to access the members of the `SimpleLabel` class, and then overrides the <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> method.</span></span> <span data-ttu-id="d9ce8-185">在替代中，将发生以下情况：</span><span class="sxs-lookup"><span data-stu-id="d9ce8-185">In the override, the following things occur:</span></span>  
  
-   <span data-ttu-id="d9ce8-186">它创建一个名为的 <xref:System.Web.UI.ChtmlTextWriter> 对象的引用 `w` ，该对象派生自 <xref:System.Web.UI.HtmlTextWriter> 作为方法的参数传递的对象 `writer` <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-186">It creates a reference to a <xref:System.Web.UI.ChtmlTextWriter> object, named `w`, which is derived from the <xref:System.Web.UI.HtmlTextWriter> object that is passed as the `writer` parameter for the <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> method.</span></span>  
  
-   <span data-ttu-id="d9ce8-187">它将创建一个字符串，并将其设置为与 `SimpleLabel.Text` 值相等。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-187">It creates a string and sets it equal to the `SimpleLabel.Text` value.</span></span>  
  
-   <span data-ttu-id="d9ce8-188">它调用 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 方法，将标签的属性定义的样式应用 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 到 cHTML 输出流中。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-188">It calls the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply the styles that are defined by the <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> property of the label to the cHTML output stream.</span></span>  
  
-   <span data-ttu-id="d9ce8-189">它将 `Text` 属性值写入流，并通过调用方法关闭样式块 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-189">It writes the `Text` property value to the stream and closes the style block by calling the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
-   <span data-ttu-id="d9ce8-190">它调用 <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> 方法，以在 `br` 呈现文本和样式后将元素呈现给输出流。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-190">It calls the <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> method to render a `br` element to the output stream after the text and styles render.</span></span>  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.vb#2)]  
  
 <span data-ttu-id="d9ce8-191">下面的示例演示如何 `SimpleLabel` 在网页中使用类。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-191">The following example demonstrates how to use the `SimpleLabel` class in a Web page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.aspx#3)]
 [!code-aspx-vb[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public override void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteEncodedText : string -&gt; unit" Usage="chtmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d9ce8-192">要进行编码并写入到输出流的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-192">The text string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="d9ce8-193">对请求设备的指定文本进行编码，然后将其写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-193">Encodes the specified text for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9ce8-194">如果传入方法的文本参数 <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> 为或的 `null` 长度为零，则不写入任何内容。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-194">If the text parameter passed into the <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> method is `null` or has a length of zero, then nothing is written.</span></span>  
  
 <span data-ttu-id="d9ce8-195"><xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>如果字符串包含尖括号 (\< or >) 或与号 ( # A0) ，并且你想要确保它们在请求的设备上正确呈现，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-195">Use the <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&) and you want to ensure that they are rendered correctly on the requesting device.</span></span>  
  
 <span data-ttu-id="d9ce8-196"><xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>方法使用基类的 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d9ce8-196">The <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> method uses the base class's <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
  </Members>
</Type>
