<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2e1cb629e8a838449d2eccdd566063b70fb1090" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89831562" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eb92a-101">为 ASP.NET 视图状态持久性机制提供基本功能。</span><span class="sxs-lookup"><span data-stu-id="eb92a-101">Provides the base functionality for ASP.NET view state persistence mechanisms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-102">HTTP 请求和响应本质上是无状态的。</span><span class="sxs-lookup"><span data-stu-id="eb92a-102">The HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="eb92a-103">若要在 HTTP 请求之间维护状态信息，ASP.NET 服务器页可以存储 <xref:System.Web.UI.Page> 状态。</span><span class="sxs-lookup"><span data-stu-id="eb92a-103">To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="eb92a-104">此状态称为 "视图状态"，它包含页面和控件设置以及使页面和控件看起来像与用户在服务器上一次往返行程中看到的相同的数据。</span><span class="sxs-lookup"><span data-stu-id="eb92a-104">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server.</span></span> <span data-ttu-id="eb92a-105">有多种机制可用于在对相同页面的连续请求之间存储视图状态。</span><span class="sxs-lookup"><span data-stu-id="eb92a-105">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="eb92a-106">抽象 <xref:System.Web.UI.PageStatePersister> 类表示这些状态信息存储机制的基类。</span><span class="sxs-lookup"><span data-stu-id="eb92a-106">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.</span></span>  
  
 <span data-ttu-id="eb92a-107">ASP.NET 中的默认视图状态持久性机制是将状态信息以 Base64 编码的字符串的形式保留在隐藏的 HTML 元素中 (元素，该元素的 `type` 属性设置为 `"hidden"` 页上) 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-107">The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `"hidden"`) on the page.</span></span> <span data-ttu-id="eb92a-108">ASP.NET 页使用 <xref:System.Web.UI.HiddenFieldPageStatePersister> 对象来执行此工作， <xref:System.Web.UI.IStateFormatter> 并使用实例序列化和反序列化对象状态信息。</span><span class="sxs-lookup"><span data-stu-id="eb92a-108">An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information.</span></span> <span data-ttu-id="eb92a-109">或者，您可以 <xref:System.Web.HttpContext.Session%2A> 使用 <xref:System.Web.UI.SessionPageStatePersister> 带宽和资源有限的移动客户端的类将页面的视图状态存储在服务器上的对象中。</span><span class="sxs-lookup"><span data-stu-id="eb92a-109">Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources.</span></span> <span data-ttu-id="eb92a-110">在某些情况下，可能会完全禁用视图状态持久性。</span><span class="sxs-lookup"><span data-stu-id="eb92a-110">In some cases, you might disable view state persistence altogether.</span></span> <span data-ttu-id="eb92a-111">如果这样做，则结果是有时依赖于状态持久性的页和控件的行为不正确。</span><span class="sxs-lookup"><span data-stu-id="eb92a-111">If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly.</span></span> <span data-ttu-id="eb92a-112">有关页状态管理和视图状态的详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="eb92a-112">For more information about page state management and view state, see [ASP.NET State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).</span></span>  
  
 <span data-ttu-id="eb92a-113">如果你正在编写控件，则可以将控件的状态信息存储在 <xref:System.Web.UI.Control.ViewState%2A> 字典中，这是一个 <xref:System.Web.UI.StateBag> 对象。</span><span class="sxs-lookup"><span data-stu-id="eb92a-113">If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object.</span></span> <span data-ttu-id="eb92a-114">开发人员可通过属性检索控件状态 <xref:System.Web.UI.PageStatePersister.ControlState%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-114">A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="eb92a-115">将键和值分配给 <xref:System.Web.UI.Control.ViewState%2A> 属性， <xref:System.Web.UI.Page> 对象将序列化请求之间的状态信息。</span><span class="sxs-lookup"><span data-stu-id="eb92a-115">You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests.</span></span> <span data-ttu-id="eb92a-116">若要在控件中执行自定义状态处理，请重写 <xref:System.Web.UI.Control.LoadViewState%2A> 和 <xref:System.Web.UI.Control.SaveViewState%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="eb92a-116">To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods.</span></span> <span data-ttu-id="eb92a-117">当页开发人员禁用视图状态时，存储在此字典中的任何状态信息都将丢失。</span><span class="sxs-lookup"><span data-stu-id="eb92a-117">Any state information that is stored in this dictionary is lost when view state is disabled by a page developer.</span></span> <span data-ttu-id="eb92a-118">为了缓解这种情况，在 ASP.NET 版本2.0 中，你可以将重要状态信息存储在一个名为控制状态的单独对象中。</span><span class="sxs-lookup"><span data-stu-id="eb92a-118">To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state.</span></span> <span data-ttu-id="eb92a-119">当页开发人员禁用视图状态时，控件状态对象将不受影响。</span><span class="sxs-lookup"><span data-stu-id="eb92a-119">The control state object is not affected when view state is disabled by a page developer.</span></span> <span data-ttu-id="eb92a-120">若要在控件状态对象中存储状态信息，控件需要重写 <xref:System.Web.UI.Control.LoadControlState%2A> 和 <xref:System.Web.UI.Control.SaveControlState%2A> 方法，并且在每次初始化控件时，控件将注册为在控件状态中存储状态信息。</span><span class="sxs-lookup"><span data-stu-id="eb92a-120">Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized.</span></span> <span data-ttu-id="eb92a-121">可以通过重写 <xref:System.Web.UI.Control.OnInit%2A> 方法并调用方法，将控件注册为使用控件状态 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-121">You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span> <span data-ttu-id="eb92a-122">有关 <xref:System.Web.UI.Control.ViewState%2A> 在开发控件时使用属性和控件状态的详细信息，请参阅 [开发自定义 ASP.NET 服务器控件](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="eb92a-122">For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)).</span></span>  
  
 <span data-ttu-id="eb92a-123">若要在不支持现有视图状态持久性机制的客户端上维护视图状态，你可以扩展 <xref:System.Web.UI.PageStatePersister> 类以引入你自己的视图状态持久性方法，并可以使用页面适配器将 ASP.NET 应用程序配置为根据向其提供页面的客户端的类型，使用不同的视图状态持久性机制。</span><span class="sxs-lookup"><span data-stu-id="eb92a-123">To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served.</span></span> <span data-ttu-id="eb92a-124">从类派生的类 <xref:System.Web.UI.PageStatePersister> 必须重写抽象 <xref:System.Web.UI.PageStatePersister.Save%2A> 方法，以便在持久性介质中存储视图状态和控件状态，并重写 <xref:System.Web.UI.PageStatePersister.Load%2A> 方法将其提取出来。</span><span class="sxs-lookup"><span data-stu-id="eb92a-124">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it.</span></span> <span data-ttu-id="eb92a-125">如果需要将视图状态和控件状态序列化为字符串，则可以使用通过 <xref:System.Web.UI.IStateFormatter> 属性访问的对象 <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-125">If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property.</span></span> <span data-ttu-id="eb92a-126">它可以有效地将对象状态信息序列化和反序列化为 Base64 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="eb92a-126">It efficiently serializes and deserializes object state information to a Base64-encoded string.</span></span> <span data-ttu-id="eb92a-127">您还可以重写 <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> 属性以提供您自己的对象状态序列化机制。</span><span class="sxs-lookup"><span data-stu-id="eb92a-127">You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb92a-128">下面的代码示例演示如何创建一个 <xref:System.Web.UI.PageStatePersister> 在 Web 服务器上保存视图和控件状态的对象。</span><span class="sxs-lookup"><span data-stu-id="eb92a-128">The following code example demonstrates how to create a <xref:System.Web.UI.PageStatePersister> object that saves view and control state on the Web server.</span></span> <span data-ttu-id="eb92a-129">`StreamPageStatePersister`演示如何重写 <xref:System.Web.UI.PageStatePersister.Load%2A> 和 <xref:System.Web.UI.PageStatePersister.Save%2A> 方法以提取和保存视图状态信息。</span><span class="sxs-lookup"><span data-stu-id="eb92a-129">The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information.</span></span> <span data-ttu-id="eb92a-130">由于状态持久性机制与自适应呈现和客户端功能相关，因此 `MyPageAdapter` 提供类以激活 `StreamPageStatePersister` ASP.NET 应用程序的。</span><span class="sxs-lookup"><span data-stu-id="eb92a-130">Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application.</span></span> <span data-ttu-id="eb92a-131">最后，提供浏览器功能 ( browser) 文件，为 `MyPageAdapter` 特定的一类客户端启用适配器， (在这种情况下，默认的 Web 浏览器) 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-131">Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 <span data-ttu-id="eb92a-132">下面的代码示例演示如何创建一个 <xref:System.Web.UI.Adapters.PageAdapter> 返回的实例的类 `StreamPageStatePersister` ，该实例用于保存 ASP.NET 网页的视图和控件状态。</span><span class="sxs-lookup"><span data-stu-id="eb92a-132">The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 <span data-ttu-id="eb92a-133">使用以下编译器命令行，将这两个类编译为可用于运行示例的程序集。</span><span class="sxs-lookup"><span data-stu-id="eb92a-133">Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line.</span></span> <span data-ttu-id="eb92a-134">确保已编译的程序集位于 ASP.NET 应用程序根目录下的 \Bin 目录中。</span><span class="sxs-lookup"><span data-stu-id="eb92a-134">Ensure that the compiled assembly is in the \Bin directory underneath the ASP.NET application root.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 <span data-ttu-id="eb92a-135">最后，若要启用 `MyPageAdapter` 适配器，必须在 ASP.NET 应用程序根目录下创建一个名为浏览器的目录，并包括包含配置信息的 .browser 文件。</span><span class="sxs-lookup"><span data-stu-id="eb92a-135">Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information.</span></span> <span data-ttu-id="eb92a-136">`<refid>`配置文件中的元素指示配置将覆盖默认浏览器配置文件中为默认浏览器指定的值。</span><span class="sxs-lookup"><span data-stu-id="eb92a-136">The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file.</span></span> <span data-ttu-id="eb92a-137">在此示例中， `MyPageAdapter` 用于 ASP.NET 网页 (通常不会) 使用任何适配器。</span><span class="sxs-lookup"><span data-stu-id="eb92a-137">In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).</span></span>  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (page As Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="eb92a-138">为其创建视图状态持久性机制的 <see cref="T:System.Web.UI.Page" />。</span><span class="sxs-lookup"><span data-stu-id="eb92a-138">The <see cref="T:System.Web.UI.Page" /> that the view state persistence mechanism is created for.</span></span></param>
        <summary><span data-ttu-id="eb92a-139">初始化 <see cref="T:System.Web.UI.PageStatePersister" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="eb92a-139">Initializes a new instance of the <see cref="T:System.Web.UI.PageStatePersister" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb92a-140"><paramref name="page" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb92a-140">The <paramref name="page" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb92a-141">获取或设置一个对象，该对象表示当前 <see cref="T:System.Web.UI.Page" /> 对象包含的控件用于跨 Web 服务器的 HTTP 请求保留的数据。</span><span class="sxs-lookup"><span data-stu-id="eb92a-141">Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server.</span></span></summary>
        <value><span data-ttu-id="eb92a-142">包含视图状态数据的对象。</span><span class="sxs-lookup"><span data-stu-id="eb92a-142">An object that contains view state data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-143">控件状态是由 Web 服务器控件需要运行的关键视图状态数据组成的对象，它包含在与普通视图状态信息不同的对象中。</span><span class="sxs-lookup"><span data-stu-id="eb92a-143">Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information.</span></span> <span data-ttu-id="eb92a-144">在级别禁用视图状态时，控件状态数据不会受到影响 <xref:System.Web.UI.Page> ，但需要额外的实现步骤才能使用。</span><span class="sxs-lookup"><span data-stu-id="eb92a-144">Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use.</span></span> <span data-ttu-id="eb92a-145">有关在 <xref:System.Web.UI.Control.ViewState%2A> 开发控件时使用属性和控件状态的详细信息，请参阅 [开发自定义 ASP.NET 服务器控件](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="eb92a-145">For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb92a-146">下面的代码示例演示如何将派生自类的类 <xref:System.Web.UI.PageStatePersister> 初始化 <xref:System.Web.UI.PageStatePersister.ControlState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="eb92a-146">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="eb92a-147">在此示例中，已将 <xref:System.Web.UI.PageStatePersister.ControlState%2A> 属性分配给 <xref:System.Web.UI.Pair.Second> 对象的字段 <xref:System.Web.UI.Pair> ，并使用类对其进行序列化 <xref:System.Web.UI.ObjectStateFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-147">In this example, the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class.</span></span> <span data-ttu-id="eb92a-148"><xref:System.Web.UI.PageStatePersister.Load%2A>调用方法时， <xref:System.Web.UI.ObjectStateFormatter> 类用于对视图状态和控件状态信息进行反序列化，并 <xref:System.Web.UI.PageStatePersister.ControlState%2A> 从生成的 <xref:System.Web.UI.Pair> 对象的字段初始化属性 <xref:System.Web.UI.Pair.Second> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-148">When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field.</span></span> <span data-ttu-id="eb92a-149">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.PageStatePersister> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-149">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb92a-150">在 <see cref="T:System.Web.UI.Page" /> 对象初始化其控件层次结构时，由派生类重写以反序列化并加载保留的状态信息。</span><span class="sxs-lookup"><span data-stu-id="eb92a-150">Overridden by derived classes to deserialize and load persisted state information when a <see cref="T:System.Web.UI.Page" /> object initializes its control hierarchy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-151">从类派生的类 <xref:System.Web.UI.PageStatePersister> 实现 <xref:System.Web.UI.PageStatePersister.Load%2A> 方法，以便 <xref:System.Web.UI.PageStatePersister.ViewState%2A> <xref:System.Web.UI.PageStatePersister.ControlState%2A> 从某种持久格式初始化和属性。</span><span class="sxs-lookup"><span data-stu-id="eb92a-151">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb92a-152">下面的代码示例演示从类派生的类如何 <xref:System.Web.UI.PageStatePersister> 实现 <xref:System.Web.UI.PageStatePersister.Load%2A> 方法，以便从持久性介质加载视图状态。</span><span class="sxs-lookup"><span data-stu-id="eb92a-152">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Load%2A> method to load view state from a persistence medium.</span></span> <span data-ttu-id="eb92a-153">`StreamPageStatePersister`尝试从流中读取数据。</span><span class="sxs-lookup"><span data-stu-id="eb92a-153">The `StreamPageStatePersister` attempts to read data from a stream.</span></span> <span data-ttu-id="eb92a-154">它使用 <xref:System.Web.UI.IStateFormatter> 对象来反序列化视图状态数据，并初始化 <xref:System.Web.UI.PageStatePersister.ViewState%2A> 属性和 <xref:System.Web.UI.PageStatePersister.ControlState%2A> 属性，页面使用该属性来初始化控件。</span><span class="sxs-lookup"><span data-stu-id="eb92a-154">It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls.</span></span> <span data-ttu-id="eb92a-155">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.PageStatePersister> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-155">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb92a-156">获取或设置为其创建视图状态持久性机制的 <see cref="T:System.Web.UI.Page" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="eb92a-156">Gets or sets the <see cref="T:System.Web.UI.Page" /> object that the view state persistence mechanism is created for.</span></span></summary>
        <value><span data-ttu-id="eb92a-157">与 <see cref="T:System.Web.UI.Page" /> 关联的 <see cref="T:System.Web.UI.PageStatePersister" />。</span><span class="sxs-lookup"><span data-stu-id="eb92a-157">The <see cref="T:System.Web.UI.Page" /> that the <see cref="T:System.Web.UI.PageStatePersister" /> is associated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-158">您可以使用 <xref:System.Web.UI.PageStatePersister.Page%2A> 属性来访问当前 <xref:System.Web.HttpContext> 的对象。</span><span class="sxs-lookup"><span data-stu-id="eb92a-158">You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb92a-159">在从内存中卸载 <see cref="T:System.Web.UI.Page" /> 对象时，由派生类重写以对所保留的状态信息进行序列化。</span><span class="sxs-lookup"><span data-stu-id="eb92a-159">Overridden by derived classes to serialize persisted state information when a <see cref="T:System.Web.UI.Page" /> object is unloaded from memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-160">派生自类的类 <xref:System.Web.UI.PageStatePersister> 实现方法， <xref:System.Web.UI.PageStatePersister.Save%2A> 以将和属性的内容保存 <xref:System.Web.UI.PageStatePersister.ViewState%2A> <xref:System.Web.UI.PageStatePersister.ControlState%2A> 到持久性介质中。</span><span class="sxs-lookup"><span data-stu-id="eb92a-160">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb92a-161">下面的代码示例演示从类派生的类如何 <xref:System.Web.UI.PageStatePersister> 实现 <xref:System.Web.UI.PageStatePersister.Save%2A> 方法，以便将视图状态保存到持久性介质中。</span><span class="sxs-lookup"><span data-stu-id="eb92a-161">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist view state to a persistence medium.</span></span> <span data-ttu-id="eb92a-162">`StreamPageStatePersister`使用 <xref:System.Web.UI.IStateFormatter> 对象对 <xref:System.Web.UI.PageStatePersister.ViewState%2A> 属性和属性的内容进行序列化 <xref:System.Web.UI.PageStatePersister.ControlState%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-162">The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="eb92a-163">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.PageStatePersister> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-163">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb92a-164">获取一个 <see cref="T:System.Web.UI.IStateFormatter" /> 对象，该对象在对 <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> 和 <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> 方法的调用期间用于对包含在 <see cref="M:System.Web.UI.PageStatePersister.Save" /> 和 <see cref="M:System.Web.UI.PageStatePersister.Load" /> 属性中的状态信息进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="eb92a-164">Gets an <see cref="T:System.Web.UI.IStateFormatter" /> object that is used to serialize and deserialize the state information contained in the <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> and <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> properties during calls to the <see cref="M:System.Web.UI.PageStatePersister.Save" /> and <see cref="M:System.Web.UI.PageStatePersister.Load" /> methods.</span></span></summary>
        <value><span data-ttu-id="eb92a-165"><see cref="T:System.Web.UI.IStateFormatter" /> 的一个实例，用于对对象状态进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="eb92a-165">An instance of <see cref="T:System.Web.UI.IStateFormatter" /> that is used to serialize and deserialize object state.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-166">您可以重写 <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> 属性以提供您自己的视图状态格式化程序。</span><span class="sxs-lookup"><span data-stu-id="eb92a-166">You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb92a-167">下面的代码示例演示从类派生的类如何 <xref:System.Web.UI.PageStatePersister> 访问 <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> 属性以检索 <xref:System.Web.UI.ObjectStateFormatter> 对象（接口的默认实现 <xref:System.Web.UI.IStateFormatter> ），以将视图状态和控件状态序列化为流。</span><span class="sxs-lookup"><span data-stu-id="eb92a-167">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream.</span></span> <span data-ttu-id="eb92a-168">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.PageStatePersister> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-168">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb92a-169">获取或设置一个对象，该对象表示当前 <see cref="T:System.Web.UI.Page" /> 对象包含的控件用于跨 Web 服务器的 HTTP 请求保留的数据。</span><span class="sxs-lookup"><span data-stu-id="eb92a-169">Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server.</span></span></summary>
        <value><span data-ttu-id="eb92a-170">包含视图状态数据的对象。</span><span class="sxs-lookup"><span data-stu-id="eb92a-170">An object that contains view state data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb92a-171">视图状态是 Web 服务器控件需要运行并呈现自身的状态数据字典。</span><span class="sxs-lookup"><span data-stu-id="eb92a-171">View state is a dictionary of state data that Web server controls need to function and render themselves.</span></span> <span data-ttu-id="eb92a-172">控件开发人员通常使用属性访问视图状态对象 <xref:System.Web.UI.Control.ViewState%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-172">Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property.</span></span> <span data-ttu-id="eb92a-173">当在级别禁用视图状态时，视图状态将受到影响 <xref:System.Web.UI.Page> ，因此在这些情况下，控件可能不会正常运行。</span><span class="sxs-lookup"><span data-stu-id="eb92a-173">View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios.</span></span> <span data-ttu-id="eb92a-174">有关 <xref:System.Web.UI.Control.ViewState%2A> 开发控件时使用和控件状态的详细信息，请参阅 [开发自定义 ASP.NET 服务器控件](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="eb92a-174">For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb92a-175">下面的代码示例演示如何将派生自类的类 <xref:System.Web.UI.PageStatePersister> 初始化 <xref:System.Web.UI.PageStatePersister.ViewState%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="eb92a-175">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property.</span></span> <span data-ttu-id="eb92a-176">在此示例中，已将 <xref:System.Web.UI.PageStatePersister.ViewState%2A> 属性分配给 <xref:System.Web.UI.Pair.First> 对象的字段 <xref:System.Web.UI.Pair> ，并使用 <xref:System.Web.UI.ObjectStateFormatter> 对象（该接口的实例）对其进行序列化 <xref:System.Web.UI.IStateFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-176">In this example, the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface.</span></span> <span data-ttu-id="eb92a-177"><xref:System.Web.UI.PageStatePersister.Load%2A>调用方法时， <xref:System.Web.UI.ObjectStateFormatter> 接口用于对视图状态信息进行反序列化，并 <xref:System.Web.UI.PageStatePersister.ViewState%2A> 从生成的 <xref:System.Web.UI.Pair> 对象的字段初始化属性 <xref:System.Web.UI.Pair.First> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-177">When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field.</span></span> <span data-ttu-id="eb92a-178">此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.PageStatePersister> 。</span><span class="sxs-lookup"><span data-stu-id="eb92a-178">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
