<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0ca4e3b6d190aa259f9cfd1ab311a793528c2b59" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89831580" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e6940-101">包含有关注册到页的异步任务的信息。</span><span class="sxs-lookup"><span data-stu-id="e6940-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="e6940-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="e6940-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-103">ASP.NET 版本2.0 允许你向页面注册多个任务，并在呈现页面之前以异步方式运行这些任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="e6940-104">你可以指定在任务速度缓慢且不希望其他进程在执行时进行关联的情况下，以异步方式运行任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="e6940-105">异步任务可以并行执行，也可以按顺序执行。</span><span class="sxs-lookup"><span data-stu-id="e6940-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="e6940-106"><xref:System.Web.UI.PageAsyncTask>必须通过方法向页面注册对象 <xref:System.Web.UI.Page.RegisterAsyncTask%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="e6940-107">不需要异步处理页本身即可执行异步任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="e6940-108">可以将属性设置 `Async` 为 `true` (如下面的代码示例中所示) 或 `false` 页面指令上，异步任务仍将以异步方式进行处理：</span><span class="sxs-lookup"><span data-stu-id="e6940-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="e6940-109">当 `Async` 特性设置为时 `false` ，将阻止执行页的线程，直到所有异步任务完成。</span><span class="sxs-lookup"><span data-stu-id="e6940-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="e6940-110">如果尚未执行事件，则在该事件之前注册的任何异步任务 <xref:System.Web.UI.Page.PreRenderComplete> 都将自动执行。</span><span class="sxs-lookup"><span data-stu-id="e6940-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="e6940-111"><xref:System.Web.UI.Page.PreRenderComplete>必须通过方法显式执行在事件之后注册的异步任务 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="e6940-112"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法还可用于在事件之前启动任务 <xref:System.Web.UI.Page.PreRenderComplete> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="e6940-113">方法在尚未 <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 执行的页上执行所有已注册的异步任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="e6940-114">默认情况下，如果异步任务在45秒内未完成，则会超时。</span><span class="sxs-lookup"><span data-stu-id="e6940-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="e6940-115">可以在 Web.config 文件或页面指令中指定不同的超时值。</span><span class="sxs-lookup"><span data-stu-id="e6940-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="e6940-116">`<pages>`Web.config 文件的部分包含 `asyncTimeout` 属性，如下所示。</span><span class="sxs-lookup"><span data-stu-id="e6940-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="e6940-117">Page 指令包含 `AsyncTimeout` 特性。</span><span class="sxs-lookup"><span data-stu-id="e6940-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="e6940-118">下面的代码示例向页面注册三个异步任务并并行执行它们。</span><span class="sxs-lookup"><span data-stu-id="e6940-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="e6940-119">每个任务都调用一个方法，该方法仅导致线程进入5秒。</span><span class="sxs-lookup"><span data-stu-id="e6940-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6940-120">初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e6940-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="e6940-121">事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="e6940-122">使用能取消任务的事件处理程序初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e6940-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-123">此构造函数包装 <xref:System.Web.TaskEventHandler> 委托，以便 <xref:System.Web.UI.PageAsyncTask> 对象可以基于 <xref:System.Threading.Tasks.Task>) 现有 ASP.NET Web 窗体异步页功能的对象来集成异步代码 (。</span><span class="sxs-lookup"><span data-stu-id="e6940-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="e6940-124">ASP.NET 将根据网页 <xref:System.Threading.CancellationToken> <xref:System.Web.TaskEventHandler> 指令中设置的属性，向传递给委托的对象发出信号 <xref:System.Web.UI.Page.AsyncTimeout%2A> `@ Page` 。</span><span class="sxs-lookup"><span data-stu-id="e6940-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="e6940-125">达到此 <xref:System.Web.UI.Page.AsyncTimeout%2A> 值时， <xref:System.Threading.CancellationToken> 将终止对象。</span><span class="sxs-lookup"><span data-stu-id="e6940-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="e6940-126">`CancellationToken`参数必须传递到由类的实现调用的任何异步 api <xref:System.Web.TaskEventHandler> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="e6940-127">事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="e6940-128">使用能处理任务的事件处理程序初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e6940-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="e6940-129">当异步任务开始时要调用的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="e6940-130">当任务在超时期内成功完成时要调用的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="e6940-131">当任务未在超时期内成功完成时要调用的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="e6940-132">表示任务状态的对象。</span><span class="sxs-lookup"><span data-stu-id="e6940-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="e6940-133">使用并行执行的默认值初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e6940-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-134">此构造函数的实现将 <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> 属性设置为， `false` 以便不会与页面上的其他任务并行处理异步任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6940-135"><paramref name="beginHandler" /> 参数或 <paramref name="endHandler" /> 参数未指定。</span><span class="sxs-lookup"><span data-stu-id="e6940-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="e6940-136">当异步任务开始时要调用的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="e6940-137">当任务在超时期内成功完成时要调用的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="e6940-138">当任务未在超时期内成功完成时要调用的处理程序。</span><span class="sxs-lookup"><span data-stu-id="e6940-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="e6940-139">表示任务状态的对象。</span><span class="sxs-lookup"><span data-stu-id="e6940-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="e6940-140">指示任务能否与其他任务并行处理的值。</span><span class="sxs-lookup"><span data-stu-id="e6940-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="e6940-141">使用并行执行的指定值初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e6940-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-142">此构造函数的实现允许您设置异步任务是否将与页面上的其他任务并行处理。</span><span class="sxs-lookup"><span data-stu-id="e6940-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6940-143">下面的代码示例创建三个相互并行处理的异步任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="e6940-144">此示例摘自类概述中的一个更大的示例 <xref:System.Web.UI.PageAsyncTask> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6940-145"><paramref name="beginHandler" /> 参数或 <paramref name="endHandler" /> 参数未指定。</span><span class="sxs-lookup"><span data-stu-id="e6940-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6940-146">获取当异步任务开始时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e6940-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="e6940-147"><see cref="T:System.Web.BeginEventHandler" /> 委托，表示当异步任务开始时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e6940-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-148">在 <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> 构造函数中设置委托。</span><span class="sxs-lookup"><span data-stu-id="e6940-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6940-149">下面的代码示例向页面注册三个异步任务并并行执行它们。</span><span class="sxs-lookup"><span data-stu-id="e6940-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="e6940-150">每个任务都调用一个方法，该方法仅导致线程进入5秒。</span><span class="sxs-lookup"><span data-stu-id="e6940-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="e6940-151">为 <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> 每个任务指定了委托。</span><span class="sxs-lookup"><span data-stu-id="e6940-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6940-152">获取当任务在超时期内成功完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e6940-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="e6940-153"><see cref="T:System.Web.EndEventHandler" /> 委托，表示当任务在超时期内成功完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e6940-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-154">在 <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> 构造函数中设置委托。</span><span class="sxs-lookup"><span data-stu-id="e6940-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6940-155">下面的代码示例向页面注册三个异步任务并并行执行它们。</span><span class="sxs-lookup"><span data-stu-id="e6940-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="e6940-156">每个任务都调用一个方法，该方法仅导致线程进入5秒。</span><span class="sxs-lookup"><span data-stu-id="e6940-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="e6940-157">为 <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> 每个任务指定了一个委托。</span><span class="sxs-lookup"><span data-stu-id="e6940-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6940-158">获取一个值，该值指示任务能否与其他任务并行处理。</span><span class="sxs-lookup"><span data-stu-id="e6940-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value><span data-ttu-id="e6940-159">如果任务应当与其他任务并行处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e6940-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-160">在 <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> 构造函数中设置属性。</span><span class="sxs-lookup"><span data-stu-id="e6940-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="e6940-161">如果在页中注册了多个任务，并将 <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> 属性设置为 `true` ，则会同时处理这些任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="e6940-162">但是，如果将 <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> 属性设置为 `false` ，则会按顺序处理这些任务。</span><span class="sxs-lookup"><span data-stu-id="e6940-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="e6940-163">例如，如果某个页面包含两个异步任务，每个任务都需要5秒才能完成，并且 <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> 设置为 `true` ，则这两个任务将在5秒内完成。</span><span class="sxs-lookup"><span data-stu-id="e6940-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="e6940-164">如果 <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> 将 `false` 这两个任务的设置为，则第一个任务将在5秒内完成，第二个任务将在第一个任务完成5秒后完成。</span><span class="sxs-lookup"><span data-stu-id="e6940-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6940-165">下面的代码示例定义了三个异步任务，每个任务都是并行处理的。</span><span class="sxs-lookup"><span data-stu-id="e6940-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="e6940-166">此示例摘自类概述中的一个更大的示例 <xref:System.Web.UI.PageAsyncTask> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6940-167">获取表示任务状态的对象。</span><span class="sxs-lookup"><span data-stu-id="e6940-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="e6940-168"><see cref="T:System.Object" />，表示任务状态。</span><span class="sxs-lookup"><span data-stu-id="e6940-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-169">此 <xref:System.Web.UI.PageAsyncTask.State%2A> 属性在构造函数中设置，在执行异步任务期间不能修改。</span><span class="sxs-lookup"><span data-stu-id="e6940-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="e6940-170">可以通过将唯一字符串值分配给各自的属性，来区分页面中的异步任务 <xref:System.Web.UI.PageAsyncTask.State%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6940-171">下面的代码示例创建三个异步任务，并为其属性提供唯一值 <xref:System.Web.UI.PageAsyncTask.State%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="e6940-172">此示例摘自类概述中的一个更大的示例 <xref:System.Web.UI.PageAsyncTask> 。</span><span class="sxs-lookup"><span data-stu-id="e6940-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6940-173">获取当任务未在超时期内成功完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e6940-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="e6940-174"><see cref="T:System.Web.EndEventHandler" /> 委托，表示当任务未在超时期内成功完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="e6940-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6940-175">在 <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> 构造函数中设置委托。</span><span class="sxs-lookup"><span data-stu-id="e6940-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6940-176">下面的代码示例向页面注册三个异步任务并并行执行它们。</span><span class="sxs-lookup"><span data-stu-id="e6940-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="e6940-177">每个任务都调用一个方法，该方法仅导致线程进入5秒。</span><span class="sxs-lookup"><span data-stu-id="e6940-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="e6940-178">为 <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> 每个任务指定了委托。</span><span class="sxs-lookup"><span data-stu-id="e6940-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
