<Type Name="SkinBuilder" FullName="System.Web.UI.SkinBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59e7852b240301b5e88897d14e7634e326e5854a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89811496" /></Metadata><TypeSignature Language="C#" Value="public sealed class SkinBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SkinBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.SkinBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SkinBuilder&#xA;Inherits ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class SkinBuilder sealed : System::Web::UI::ControlBuilder" />
  <TypeSignature Language="F#" Value="type SkinBuilder = class&#xA;    inherit ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一个 <see cref="T:System.Web.UI.ControlBuilder" /> 对象，用于在设计时将控件外观应用于控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页面开发人员和控件作者不会 <xref:System.Web.UI.SkinBuilder> 直接使用该类。  
  
 ASP.NET 设计器生成器将 <xref:System.Web.UI.SkinBuilder> 类与 <xref:System.Web.UI.ThemeProvider> 类和接口结合使用， <xref:System.Web.UI.IThemeResolutionService> 以便在设计时将主题及其各自的控件外观应用于控件。 若要在设计时应用主题，则 <xref:System.Web.UI.ControlBuilder> <xref:System.Web.UI.SkinBuilder.ApplyTheme%2A> 每当生成控件的子控件树时，基类都将调用方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IThemeResolutionService" />
    <altmember cref="T:System.Web.UI.ThemeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SkinBuilder (System.Web.UI.ThemeProvider provider, System.Web.UI.Control control, System.Web.UI.ControlBuilder skinBuilder, string themePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.ThemeProvider provider, class System.Web.UI.Control control, class System.Web.UI.ControlBuilder skinBuilder, string themePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SkinBuilder.#ctor(System.Web.UI.ThemeProvider,System.Web.UI.Control,System.Web.UI.ControlBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ThemeProvider, control As Control, skinBuilder As ControlBuilder, themePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SkinBuilder(System::Web::UI::ThemeProvider ^ provider, System::Web::UI::Control ^ control, System::Web::UI::ControlBuilder ^ skinBuilder, System::String ^ themePath);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.SkinBuilder : System.Web.UI.ThemeProvider * System.Web.UI.Control * System.Web.UI.ControlBuilder * string -&gt; System.Web.UI.SkinBuilder" Usage="new System.Web.UI.SkinBuilder (provider, control, skinBuilder, themePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.ThemeProvider" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="skinBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="themePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">在设计器环境中封装控件主题信息的 <see cref="T:System.Web.UI.ThemeProvider" />。</param>
        <param name="control">与 <see cref="T:System.Web.UI.SkinBuilder" /> 相关联的 <see cref="T:System.Web.UI.Control" />。 <see cref="M:System.Web.UI.SkinBuilder.ApplyTheme" /> 方法将控件外观应用于该控件并返回该控件。</param>
        <param name="skinBuilder">由 <see cref="T:System.Web.UI.ThemeProvider" /> 为该控件的类型提供的 <see cref="T:System.Web.UI.ControlBuilder" />。</param>
        <param name="themePath">主题文件的绝对路径。</param>
        <summary>初始化 <see cref="T:System.Web.UI.SkinBuilder" /> 类的新实例，设置与生成器相关联的控件、<see cref="T:System.Web.UI.ThemeProvider" /> 对象为该控件提供的通用 <see cref="T:System.Web.UI.ControlBuilder" /> 对象，以及主题文件的路径。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数由类的 <xref:System.Web.UI.ThemeProvider.GetSkinBuilder%2A> 方法调用 <xref:System.Web.UI.ThemeProvider> ，以返回 <xref:System.Web.UI.SkinBuilder> 在参数中指定的控件的对象 `control` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlBuilder" />
        <altmember cref="T:System.Web.UI.ThemeProvider" />
        <altmember cref="M:System.Web.UI.ThemeProvider.GetSkinBuilder(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ApplyTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Control ApplyTheme() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SkinBuilder.ApplyTheme" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyTheme () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Control ^ ApplyTheme();" />
      <MemberSignature Language="F#" Value="member this.ApplyTheme : unit -&gt; System.Web.UI.Control" Usage="skinBuilder.ApplyTheme " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果 <see cref="T:System.Web.UI.SkinBuilder" /> 对象与当前控件相关联，则在设计时将主题和控件外观应用于该控件。</summary>
        <returns>将主题或样式表主题和任何控件外观应用到的控件实例。 这与传递到生成器 <see cref="M:System.Web.UI.SkinBuilder.#ctor(System.Web.UI.ThemeProvider,System.Web.UI.Control,System.Web.UI.ControlBuilder,System.String)" /> 构造函数的实例相同。 如果未将任何控件传递给该构造函数，则此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.SkinBuilder> 在设计时，通过为提供对象的控件的对象指定实例，将对象与控件相关联 <xref:System.Web.UI.IThemeResolutionService> <xref:System.Web.UI.ControlBuilder> <xref:System.Web.UI.ThemeProvider> 。 <xref:System.Web.UI.ThemeProvider>对象可以返回 <xref:System.Web.UI.SkinBuilder> 给定控件的对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
