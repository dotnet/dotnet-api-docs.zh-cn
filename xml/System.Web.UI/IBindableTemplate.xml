<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cffe5a00759df7b87ff84e72e9b56f879de5aa6d" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="77246119" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>为 ASP.NET 数据绑定控件（如 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 和 <see cref="T:System.Web.UI.WebControls.FormView" />）提供一种可以自动绑定到模板化内容节中的 ASP.NET 数据源控件的方式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.IBindableTemplate>接口提供一种方法，ASP.NET 数据绑定控件（如 <xref:System.Web.UI.WebControls.DetailsView> 、 <xref:System.Web.UI.WebControls.GridView> 和 <xref:System.Web.UI.WebControls.FormView> ）绑定到 ASP.NET 数据源控件（例如或）提供的数据（ <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.SqlDataSource> 当数据绑定控件包括模板化内容时）。

> [!NOTE]
>  页面开发人员不实现 <xref:System.Web.UI.IBindableTemplate> 接口。 创建自定义数据绑定控件的开发人员可能 <xref:System.Web.UI.IBindableTemplate> 在和方法的实现中操作对象 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> ，但不实现其自己的 <xref:System.Web.UI.IBindableTemplate> 对象。

 数据绑定控件（例如） <xref:System.Web.UI.WebControls.GridView> 通常可以识别其子控件树，因此，它可以将值绑定到它们、从中提取值，并在数据绑定控件和数据源控件之间传递这些值。 但是，当页开发人员为数据绑定控件定义模板化内容时，模板中的子控件将对父数据绑定控件不可见：父项可以呈现子内容（因为控件有效呈现自身），但它无法提取这些子控件的值以传递到关联的数据源控件的更新、插入或删除操作。 在数据绑定方案中，模板化内容对父数据绑定控件不透明。 该 `Bind` 语法使数据绑定控件可以从实例内的控件数据绑定中提取值 <xref:System.Web.UI.IBindableTemplate> 。

 数据绑定可以是单向的，也可以是双向的。 （这些绑定方向由 <xref:System.ComponentModel.BindingDirection> 枚举定义。）单向数据绑定是在出站方向上执行的任何数据绑定，从数据源控件到数据绑定控件;例如，任何数据读取方案都涉及单向数据绑定。 对于单向数据绑定，可以在模板化内容中使用单向数据绑定语法（ `<%# Eval("fieldname") %>` ），而无需使用双向 ASP.NET 数据绑定语法。 双向数据绑定从数据绑定控件到数据源控件的入站方向描述数据绑定。 使用 ASP.NET 数据绑定和数据源控件的自动编辑、插入和删除方案是双向数据绑定方案。 这些方案使用双向数据绑定表达式（ `<%# Bind("fieldname") %>` ）。 <xref:System.Web.UI.IBindableTemplate>接口和 ASP.NET 基础结构支持 ASP.NET 数据源控件与模板化内容之间的自动、声明性、双向数据绑定。 有关 ASP.NET 数据绑定表达式和语法的详细信息，请参阅[绑定到数据库](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))和[数据绑定表达式概述](https://docs.microsoft.com/previous-versions/aspnet/ms178366(v=vs.100))。

 数据绑定控件的模板化内容通常以声明方式定义。 下表介绍最常用于将模板化数据绑定到数据绑定控件的过程。

|数据绑定控件|进程|
|-------------------------|-------------|
|<xref:System.Web.UI.WebControls.DetailsView>|数据绑定控件使用 `DataSourceID` 数据源控件的属性绑定到数据，模板化内容在 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 或属性中定义 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 。|
|<xref:System.Web.UI.WebControls.GridView>|数据绑定控件使用 `DataSourceID` 数据源控件的属性绑定到数据，模板化内容在 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 或属性中定义 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 。 <xref:System.Web.UI.WebControls.GridView>控件不支持插入操作。|
|<xref:System.Web.UI.WebControls.FormView>|数据绑定控件使用属性绑定到数据 `DataSourceID` ，模板化内容在 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> 、 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 、或 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 属性或对象中定义 <xref:System.Web.UI.WebControls.TemplateField> 。|

 <xref:System.Web.UI.WebControls.DataList>和 <xref:System.Web.UI.WebControls.Repeater> 控件不支持自动双向数据绑定方案。

 <xref:System.Web.UI.IBindableTemplate>分析绑定到模板中的 ASP.NET 数据源控件的模板化内容时，ASP.NET 将隐式创建一个对象。 具体而言，当 ASP.NET 分析器 <xref:System.Web.UI.CompiledBindableTemplateBuilder> 分析使用 ASP.NET 数据绑定语法并包含支持数据绑定的 ASP.NET Web 服务器控件的模板化内容时，将创建该类的实例。 这些 ASP.NET 服务器控件由 <xref:System.ComponentModel.BindableAttribute> 特性标记。

 <xref:System.Web.UI.IBindableTemplate>接口定义一个方法 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 。 此方法是为双向数据绑定定义的，因此数据绑定控件可以从模板化内容中自动提取名称/值对，并在运行时将对传递到数据源控件。 若要成功进行自动数据绑定，通过方法从模板化内容中提取的字段名称 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 必须与关联的数据源控件中的参数名称匹配。 控件开发人员 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 仅在其实现 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> 或自定义数据绑定控件的其他类似方法的实现中显式调用方法。



## Examples
 下面的代码示例演示控件如何 <xref:System.Web.UI.WebControls.FormView> 以声明方式定义模板化内容、绑定到控件提供的数据 <xref:System.Web.UI.WebControls.SqlDataSource> 以及显示和编辑现有记录。 ASP.NET 分析器分析模板化内容，并 <xref:System.Web.UI.IBindableTemplate> 在运行时创建一个对象，该对象能够将控件中的值绑定 <xref:System.Web.UI.WebControls.SqlDataSource> 到通过单向 ASP.NET 数据绑定语法（ `<%# Eval("fieldname") %>` ）和双向数据绑定语法（）在模板中定义的数据绑定区域 `<%# Bind("fieldname") %>` 。

> [!IMPORTANT]
>  此控件具有接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">在双向数据绑定方案中，数据绑定控件将 <see cref="T:System.Web.UI.Control" />（要从中提取名称/值对）传递至关联的数据源控件。</param>
        <summary>通过类来实现时，使用模板化内容中的双向 ASP.NET 数据绑定语法对绑定值的一组名称/值对进行检索。</summary>
        <returns>名称/值对的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。 名称表示模板化内容中控件的名称，值是使用双向 ASP.NET 数据绑定语法绑定的属性值的当前值。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />方法必须符合以下规则：

-如果某个给定字段存在多个绑定，则使用遇到的最后一个绑定。

-若要在方法中引用控件的标识符 <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> ，控件在分析时还必须具有用户定义的 ID 属性。 如果不存在任何 ID，将导致分析错误。

-双向 ASP.NET 数据绑定语法只在 <see cref="T:System.Web.UI.ITemplate" /> <see cref="T:System.Web.UI.IBindableTemplate" /> 数据绑定控件的或属性中有效。</para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>
