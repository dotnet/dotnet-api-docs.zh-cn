<Type Name="ScriptComponentDescriptor" FullName="System.Web.UI.ScriptComponentDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78930753d2e8e6def927a0e2904b94358a8dd93b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86608762" /></Metadata><TypeSignature Language="C#" Value="public class ScriptComponentDescriptor : System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptComponentDescriptor extends System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptComponentDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptComponentDescriptor&#xA;Inherits ScriptDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptComponentDescriptor : System::Web::UI::ScriptDescriptor" />
  <TypeSignature Language="F#" Value="type ScriptComponentDescriptor = class&#xA;    inherit ScriptDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于将服务器组件转换为客户端脚本的包装程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类使用内部字典保存对组件、元素、属性和事件的引用。 若要填充此字典，请使用 <xref:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty%2A> 、、 <xref:System.Web.UI.ScriptComponentDescriptor.AddElementProperty%2A> <xref:System.Web.UI.ScriptComponentDescriptor.AddProperty%2A> 和 <xref:System.Web.UI.ScriptComponentDescriptor.AddEvent%2A> 方法。 完成后，调用 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 方法以生成客户端脚本。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptComponentDescriptor (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptComponentDescriptor(System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptComponentDescriptor : string -&gt; System.Web.UI.ScriptComponentDescriptor" Usage="new System.Web.UI.ScriptComponentDescriptor type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">目标客户端组件的类型。</param>
        <summary>初始化 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 类的实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComponentProperty">
      <MemberSignature Language="C#" Value="public void AddComponentProperty (string name, string componentID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponentProperty(string name, string componentID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddComponentProperty (name As String, componentID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddComponentProperty(System::String ^ name, System::String ^ componentID);" />
      <MemberSignature Language="F#" Value="member this.AddComponentProperty : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddComponentProperty (name, componentID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="componentID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性的名称。</param>
        <param name="componentID">目标组件的 ID。</param>
        <summary>添加指定的属性，并将该属性与指定的元素相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法会将指定的属性添加到控件使用的属性的内部字典，并由方法转换为客户端脚本 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 或 <paramref name="componentID" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementProperty">
      <MemberSignature Language="C#" Value="public void AddElementProperty (string name, string elementID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddElementProperty(string name, string elementID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElementProperty (name As String, elementID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElementProperty(System::String ^ name, System::String ^ elementID);" />
      <MemberSignature Language="F#" Value="member this.AddElementProperty : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddElementProperty (name, elementID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="elementID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性的名称。</param>
        <param name="elementID">目标元素的 ID。</param>
        <summary>添加指定的属性，并将该属性与指定的组件相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法会将指定的属性添加到由方法转换为客户端脚本的属性的内部字典 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 或 <paramref name="component" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public void AddEvent (string name, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEvent(string name, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEvent (name As String, handler As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEvent(System::String ^ name, System::String ^ handler);" />
      <MemberSignature Language="F#" Value="member this.AddEvent : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddEvent (name, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">事件的名称。</param>
        <param name="handler">指定事件的处理程序函数的名称。</param>
        <summary>添加指定的事件和处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将事件和处理程序添加到由方法转换为客户端脚本的事件的内部字典 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 或 <paramref name="handler" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : string * obj -&gt; unit" Usage="scriptComponentDescriptor.AddProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">属性的名称。</param>
        <param name="value">该属性的值。</param>
        <summary>添加指定的属性和值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将属性和值添加到由方法转换为客户端脚本的属性的内部字典 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddScriptProperty">
      <MemberSignature Language="C#" Value="public void AddScriptProperty (string name, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddScriptProperty(string name, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddScriptProperty (name As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddScriptProperty(System::String ^ name, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.AddScriptProperty : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddScriptProperty (name, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性的名称。</param>
        <param name="script">呈现给浏览器的脚本。</param>
        <summary>添加指定的属性，并将该属性与指定的脚本相关联。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty%2A> 方法可呈现未序列化为浏览器的脚本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="script" /> 为 <see langword="null" /> 或空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.ScriptComponentDescriptor.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中重写时，获取客户端组件的标识符。</summary>
        <value>客户端组件的 ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScript">
      <MemberSignature Language="C#" Value="protected internal override string GetScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.GetScript" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetScript () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetScript();" />
      <MemberSignature Language="F#" Value="override this.GetScript : unit -&gt; string" Usage="scriptComponentDescriptor.GetScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取在页上实现目标控件的客户端脚本。</summary>
        <returns>在页上实现目标控件的客户端脚本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.ScriptComponentDescriptor.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 实例的 ID。</summary>
        <value>如果已设置，则为当前 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 实例的 ID；否则为空字符串 ("")。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Web.UI.ScriptComponentDescriptor.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置目标客户端组件的类型。</summary>
        <value>目标客户端组件的类型。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">已尝试将该属性设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
