<Type Name="ParseChildrenAttribute" FullName="System.Web.UI.ParseChildrenAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c045b3ad09188229dc21511016ce785baedc2a7" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83970446" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParseChildrenAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParseChildrenAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ParseChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParseChildrenAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParseChildrenAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParseChildrenAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义可在开发 ASP.NET 服务器控件时使用的元数据特性。 使用 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类指示页分析器应如何处理页上声明的服务器控件标记中嵌套的内容。 无法继承此类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.ParseChildrenAttribute> 类，您可以通过使用 <xref:System.Web.UI.ParseChildrenAttribute> metadata 特性标记服务器控件，为自定义服务器控件指定分析逻辑。  
  
 用 metadata 特性标记服务器控件 `ParseChildren(true)` 指示分析器将服务器控件标记中包含的元素解释为属性。 在此方案中，将 `true`<xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性。  
  
 用 metadata 特性标记服务器控件 `ParseChildren(true,"<Default Property>")` 将 <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> 属性设置为传递到特性的属性的名称。  
  
 使用 metadata 特性标记服务器控件 `ParseChildren(false)`（默认值）指示分析器将服务器控件标记中包含的元素解释为内容，该内容将用关联的 <xref:System.Web.UI.ControlBuilder> （即控件）进行分析。 在此方案中，将 `false`<xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性。  
  
 有关使用属性的信息，请参阅[特性](/dotnet/standard/attributes/)。  
  
   
  
## Examples  
 本节中的代码示例包含两个部分。 第一个代码示例演示如何设置 <xref:System.Web.UI.ParseChildrenAttribute> 类的属性。 第二个代码示例演示如何在 ASP.NET 页中使用类。  
  
 下面的代码示例演示如何设置名为 `CollectionPropertyControl`的自定义服务器控件的 <xref:System.Web.UI.ParseChildrenAttribute> 对象。 <xref:System.Web.UI.ParseChildrenAttribute> 将 <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性设置为 `true`，并将 <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> 属性设置为 `Employee` 类。  
  
 [!code-csharp[ParseChildrenAttribute_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#1)]  
  
 下面的代码示例演示如何在 ASP.NET 页中使用 `CollectionPropertyControl` 和 `Employee` 类。 以声明方式添加 `Employee` 类的实例。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <related type="Article" href="/dotnet/standard/attributes/">利用特性扩展元数据</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:System.Web.UI.ParseChildrenAttribute> 类的新实例，<xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性设置为 "`false`"。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childrenAsProperties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">如果要将元素分析为服务器控件的属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>使用 <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> 属性初始化 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的新实例，以确定包含在服务器控件内的元素是否被分析为服务器控件的属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `false``childrenAsProperties`，则服务器控件中包含的元素将被分析为控件。 `false` 是 <xref:System.Web.UI.ParseChildrenAttribute>的默认值。  
  
   
  
## Examples  
 本节中的代码示例包含两个部分。 第一个代码示例演示如何设置 <xref:System.Web.UI.ParseChildrenAttribute> 类的属性。 第二个代码示例演示如何在 ASP.NET 页中使用类。  
  
 下面的代码示例演示如何设置名为 `CollectionPropertyControl`的自定义服务器控件的 <xref:System.Web.UI.ParseChildrenAttribute> 对象。 如果 <xref:System.Web.UI.ParseChildrenAttribute> 在定义 `CollectionPropertyControl`的类之前声明，<xref:System.Web.UI.ParseChildrenAttribute> 将 <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性设置为 `true`。  
  
 [!code-csharp[ParseChildrenAttribute_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.vb#1)]  
  
 下面的代码示例演示如何在 ASP.NET 页中使用 `CollectionPropertyControl` 和 `Employee` 类。 以声明方式添加了 `Employee` 类的一个实例，并以编程方式添加了另一个实例。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (Type childControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type childControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childControlType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(Type ^ childControlType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : Type -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childControlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childControlType" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="childControlType">要分析为属性的控件类型。</param>
        <summary>使用 <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" /> 属性初始化 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的新实例，以确定包含在服务器控件内的哪些元素将被分析为控件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="childControlType" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties, string defaultProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties, string defaultProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean, defaultProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties, System::String ^ defaultProperty);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool * string -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute (childrenAsProperties, defaultProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
        <Parameter Name="defaultProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">如果要将元素分析为服务器控件的属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="defaultProperty">一个字符串，它定义了一个服务控件的集合属性，默认情况下嵌套的内容将被分析为该属性。</param>
        <summary>使用 <paramref name="childrenAsProperties" /> 和 <paramref name="defaultProperty" /> 参数初始化 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `false``childrenAsProperties`，则这些元素将被分析为控件。  
  
   
  
## Examples  
 本节中的代码示例包含两个部分。 第一个代码示例演示如何设置 <xref:System.Web.UI.ParseChildrenAttribute> 类的属性。 第二个代码示例演示如何在 ASP.NET 页中使用类。  
  
 下面的代码示例演示如何设置名为 `CollectionPropertyControl`的自定义服务器控件的 <xref:System.Web.UI.ParseChildrenAttribute> 对象。 <xref:System.Web.UI.ParseChildrenAttribute> 将 <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性设置为 `true`，并将 <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> 属性设置为 `Employee` 类。  
  
 [!code-csharp[ParseChildrenAttribute_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#2)]
 [!code-vb[ParseChildrenAttribute_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#2)]  
  
 下面的代码示例演示如何在 ASP.NET 页中使用 `CollectionPropertyControl` 和 `Employee` 类。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ChildControlType">
      <MemberSignature Language="C#" Value="public Type ChildControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ChildControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ChildControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildControlType : Type" Usage="System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示控件的允许的类型。</summary>
        <value>控件类型。 默认为 <see cref="T:System.Web.UI.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果允许的控件类型为 `null`，表示尚未指定，则返回默认类型，即 <xref:System.Web.UI.Control?displayProperty=nameWithType> 控件。  
  
   
  
## Examples  
 下面的代码示例演示如何查询 <xref:System.Web.UI.ParseChildrenAttribute.ChildControlType%2A> 属性。 有关此代码示例中使用的 `CollectionPropertyControl` 和 `Employee` 类的定义，请参阅 <xref:System.Web.UI.ParseChildrenAttribute.%23ctor%2A>。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsProperties">
      <MemberSignature Language="C#" Value="public bool ChildrenAsProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsProperties : bool with get, set" Usage="System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否要分析作为属性包含在一个服务器控件中的元素。</summary>
        <value>若要将元素分析为属性，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性设置为 `false`，则服务器控件中包含的元素将被分析为控件。  
  
   
  
## Examples  
 下面的代码示例演示如何查询 <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> 属性。 有关此代码示例中使用的 `CollectionPropertyControl` 和 `Employee` 类的定义，请参阅 <xref:System.Web.UI.ParseChildrenAttribute>。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">当前 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 是在将 <paramref name="childrenAsProperties" /> 设置为 <see langword="false" /> 的情况下调用的。</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定义 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的默认值。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ParseChildrenAttribute.Default> 字段的默认值是 `false`，这意味着不会将元素分析为服务器控件的属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultProperty">
      <MemberSignature Language="C#" Value="public string DefaultProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProperty As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProperty { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProperty : string with get, set" Usage="System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置元素被分析为的服务器控件的默认属性。</summary>
        <value>元素被分析为的服务器控件的默认集合属性的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅当字符串传递到 <xref:System.Web.UI.ParseChildrenAttribute> 构造函数时，才使用 <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> 属性。 创建 <xref:System.Web.UI.ParseChildrenAttribute> 类时，<xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> 属性定义正在分析的服务器控件的默认属性。  
  
   
  
## Examples  
 下面的代码示例演示如何查询 <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> 属性。 有关此代码示例中使用的 `CollectionPropertyControl` 和 `Employee` 类的定义，请参阅 <xref:System.Web.UI.ParseChildrenAttribute>。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">当前 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 是在将 <paramref name="childrenAsProperties" /> 设置为 <see langword="false" /> 的情况下调用的。</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="parseChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要与当前对象比较的对象。</param>
        <summary>确定指定对象是否等于当前对象。</summary>
        <returns>如果 <see langword="true" /> 等于当前对象，则为 <paramref name="obj" />，否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="parseChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用作 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 对象的哈希函数。</summary>
        <returns>当前 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 对象的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="parseChildrenAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 类的当前实例的值是否是派生类的默认值。</summary>
        <returns>如果当前 <see cref="T:System.Web.UI.ParseChildrenAttribute" /> 值为默认实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ParseChildrenAttribute> 类的默认值是 <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> 字段。  
  
   
  
## Examples  
 下面的代码示例演示如何查询 <xref:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute%2A> 属性。 有关此代码示例中使用的 `CollectionPropertyControl` 和 `Employee` 类的定义，请参阅 <xref:System.Web.UI.ParseChildrenAttribute>。  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsChildren">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsChildren;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsChildren" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsChildren As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsChildren;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsChildren : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示包含在服务器控件内的嵌套内容被分析为控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用了 <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> 字段，则服务器控件中包含的嵌套内容不会解析为属性;相反，它们被分析为控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsProperties">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsProperties" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsProperties As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsProperties;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsProperties : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示包含在服务器控件内的嵌套内容被分析为控件的属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用了 <xref:System.Web.UI.ParseChildrenAttribute.ParseAsProperties> 字段，则服务器控件中包含的嵌套内容将被分析为属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      </Docs>
    </Member>
  </Members>
</Type>
