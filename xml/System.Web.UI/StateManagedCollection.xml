<Type Name="StateManagedCollection" FullName="System.Web.UI.StateManagedCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10c2299e11c2f19696ca1a81d927ef35e54afdeb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89811423" /></Metadata><TypeSignature Language="C#" Value="public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StateManagedCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StateManagedCollection&#xA;Implements IList, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class StateManagedCollection abstract : System::Collections::IList, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type StateManagedCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>为管理 <see cref="T:System.Web.UI.IStateManager" /> 对象的所有强类型集合提供基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection>类是存储元素的所有强类型集合 <xref:System.Web.UI.IStateManager> （包括、、、 <xref:System.Web.UI.WebControls.DataControlFieldCollection> <xref:System.Web.UI.WebControls.ParameterCollection> <xref:System.Web.UI.WebControls.StyleCollection> <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> 和其他集合）的基类。 <xref:System.Web.UI.StateManagedCollection>集合管理其自己的状态以及它所包含的元素的状态。 因此，对的调用将 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> 保存集合的状态和集合当前包含的所有元素的状态。  
  
 从类派生时要考虑的最重要的方法 <xref:System.Web.UI.StateManagedCollection> 是 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> 、 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> 、 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> 、 <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> 和 <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> 。 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>和 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> 方法用于为包含的元素的类型在视图状态中存储索引。 存储索引（而不是完全限定的类型名称）可以提高性能。 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>只要操作集合的元素，就会调用方法，并根据业务规则验证元素。 目前，方法的实现 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> 禁止将 `null` 对象存储在集合中; 但是，你可以重写此方法以定义你自己在派生类型中的验证行为。 <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>方法强制将整个集合序列化为视图状态，而不只是序列化自上次加载后对状态所做的更改。 <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>方法是一个抽象方法，你可以实现此方法以在元素级别执行此相同行为。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.StateManagedCollection> 将集合项的程序集限定类型名称存储在视图状态中。 站点访问者可以解码视图状态并检索类型名称。 如果此方案在您的网站中产生安全问题，则您可以在将类型名称放入视图状态之前手动对其进行加密。  
  
   
  
## Examples  
 下面的代码示例演示如何从派生一个强类型化集合类 <xref:System.Web.UI.StateManagedCollection> 以包含 <xref:System.Web.UI.IStateManager> 对象。 在此示例中， `CycleCollection` 派生了包含抽象 `Cycle` 类（可以是或对象）的实例 `Bicycle` `Tricycle` 。 `Cycle`类实现接口， <xref:System.Web.UI.IStateManager> 因为它将属性的值存储 `CycleColor` 在视图状态中。  
  
 [!code-csharp[Samples.AspNet.CycleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#1)]
 [!code-vb[Samples.AspNet.CycleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IStateManager" />
    <altmember cref="T:System.Web.UI.StateBag" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StateManagedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StateManagedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.StateManagedCollection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生类可以重写构造函数以提供自定义实现。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stateManagedCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中删除所有项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.StateManagedCollection.OnClear%2A> 调用方法之前调用方法 <xref:System.Web.UI.StateManagedCollection.Clear%2A> ，并在 <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> <xref:System.Web.UI.StateManagedCollection.Clear%2A> 完成从集合中移除元素后调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClear" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="stateManagedCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Web.UI.StateManagedCollection" /> 所复制的元素的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
        <param name="index"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
        <summary>从特定的数组索引开始，将 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合的元素复制到数组中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的数组必须是兼容的类型。  
  
 元素按照枚举数循环访问 <xref:System.Array> 集合的顺序复制到 <xref:System.Web.UI.StateManagedCollection> 中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="array" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 小于零。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> 是多维的。  
  
- 或 - 
 <paramref name="index" /> 大于或等于 <paramref name="array" /> 的长度。  
  
- 或 - 
源 <see cref="T:System.Web.UI.StateManagedCollection" /> 中的元素数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.StateManagedCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中包含的元素的数量。</summary>
        <value><see cref="T:System.Web.UI.StateManagedCollection" /> 中包含的元素数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected virtual object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="abstract member CreateKnownType : int -&gt; obj&#xA;override this.CreateKnownType : int -&gt; obj" Usage="stateManagedCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要创建的 <see cref="T:System.Web.UI.IStateManager" /> 的类型的索引(来自 <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" /> 返回的有序类型列表)。</param>
        <summary>在派生类中替代时，创建实现 <see cref="T:System.Web.UI.IStateManager" /> 的类的实例。 所创建对象的类型基于由 <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" /> 方法返回的集合的指定成员。</summary>
        <returns>根据提供的 <paramref name="index" /> 从 <see cref="T:System.Web.UI.IStateManager" /> 派生的类的实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>方法 <xref:System.Web.UI.StateManagedCollection> 在方法的实现中由集合在内部调用 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=nameWithType> 。 派生集合重写 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> 方法以返回 <xref:System.Web.UI.IStateManager> 由提供的标识的类型的默认实例 `index` ，该实例映射到该方法返回的类型之一 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示强类型类如何 <xref:System.Web.UI.StateManagedCollection> 实现 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> 方法。 `CycleCollection`的实现根据 <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> `Bicycle` 传递的索引返回或对象的默认实例 `Tricycle` 。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.StateManagedCollection> 。  
  
 [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]
 [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">用于不在派生的类中重写的所有情况。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="stateManagedCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回循环访问 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合的迭代器。</summary>
        <returns>可用于循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Web.UI.StateManagedCollection" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected virtual Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetKnownTypes : unit -&gt; Type[]&#xA;override this.GetKnownTypes : unit -&gt; Type[]" Usage="stateManagedCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中替代时，获取 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合可以包含的 <see cref="T:System.Web.UI.IStateManager" /> 类型的数组。</summary>
        <returns><see cref="T:System.Type" /> 对象的有序数组，用于标识集合可以包含的 <see cref="T:System.Web.UI.IStateManager" /> 对象的类型。 默认实现返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>方法 <xref:System.Web.UI.StateManagedCollection> 在方法的实现中由集合在内部调用 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> 。 派生集合重写 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> 方法以返回 <xref:System.Type> 对象的数组，这些对象表示集合可以包含的类型。  
  
   
  
## Examples  
 下面的代码示例演示强类型类如何 <xref:System.Web.UI.StateManagedCollection> 实现 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> 方法。 的 `CycleCollection` 实现 <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> 返回 <xref:System.Type> 已知类型的数组，包括 `Bicycle` 和 `Tricycle` 类型。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.StateManagedCollection> 。  
  
 [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]
 [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberSignature Language="F#" Value="abstract member OnClear : unit -&gt; unit&#xA;override this.OnClear : unit -&gt; unit" Usage="stateManagedCollection.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中替代时，在 <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> 方法从集合中删除所有项之前执行附加工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从派生的集合 <xref:System.Web.UI.StateManagedCollection> 可以重写 <xref:System.Web.UI.StateManagedCollection.OnClear%2A> 方法，以便在使用方法从集合中删除所有项之前执行任何其他工作 <xref:System.Web.UI.StateManagedCollection.Clear%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnClearComplete : unit -&gt; unit&#xA;override this.OnClearComplete : unit -&gt; unit" Usage="stateManagedCollection.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中替代时，在 <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> 方法完成从集合中删除所有项之后执行附加工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection> <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> 使用方法从集合中删除所有项后，从派生的集合可以重写方法，以执行任何其他操作 <xref:System.Web.UI.StateManagedCollection.Clear%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsert : int * obj -&gt; unit&#xA;override this.OnInsert : int * obj -&gt; unit" Usage="stateManagedCollection.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">从零开始的索引，应在该位置由 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> 方法插入 <paramref name="value" />。</param>
        <param name="value">要插入到 <see cref="T:System.Web.UI.StateManagedCollection" /> 中的对象。</param>
        <summary>在派生类中替代时，在 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> 或 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" /> 方法向集合中添加项之前执行附加工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从派生的集合 <xref:System.Web.UI.StateManagedCollection> 可以重写 <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> 方法，以便在使用或方法将项添加到集合之前执行任何其他工作 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsertComplete : int * obj -&gt; unit&#xA;override this.OnInsertComplete : int * obj -&gt; unit" Usage="stateManagedCollection.OnInsertComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">从零开始的索引，在该位置由 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> 方法插入 <paramref name="value" />。</param>
        <param name="value">插入到 <see cref="T:System.Web.UI.StateManagedCollection" /> 中的对象。</param>
        <summary>在派生类中替代时，在 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> 或 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" /> 方法向集合中添加项之后执行附加工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection>使用或方法将项添加到集合后，派生自的集合可以重写 <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> 方法，以执行任何其他工作 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemove : int * obj -&gt; unit&#xA;override this.OnRemove : int * obj -&gt; unit" Usage="stateManagedCollection.OnRemove (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">要删除的项的从零开始的索引(在调用 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> 时使用)。</param>
        <param name="value">要从 <see cref="T:System.Web.UI.StateManagedCollection" /> 中删除的对象(在调用 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> 时使用)。</param>
        <summary>在派生类中替代时，在 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> 或 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> 方法从集合中删除指定项之前执行附加工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从派生的集合 <xref:System.Web.UI.StateManagedCollection> 可以重写 <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> 方法，以便在使用或方法从集合中移除项之前执行任何其他工作 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveComplete : int * obj -&gt; unit&#xA;override this.OnRemoveComplete : int * obj -&gt; unit" Usage="stateManagedCollection.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">要删除的项的从零开始的索引(在调用 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> 时使用)。</param>
        <param name="value">从 <see cref="T:System.Web.UI.StateManagedCollection" /> 中删除的对象(在调用 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> 时使用)。</param>
        <summary>在派生类中替代时，在 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> 或 <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> 方法从集合中删除指定项之后执行附加工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从 <xref:System.Web.UI.StateManagedCollection> <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> 使用或方法从集合中移除项后，从派生的集合可以重写方法，以执行任何其他操作 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj -&gt; unit&#xA;override this.OnValidate : obj -&gt; unit" Usage="stateManagedCollection.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要验证的 <see cref="T:System.Web.UI.IStateManager" />。</param>
        <summary>在派生类中替代时，验证 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合的一个元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法来验证通过 <xref:System.Web.UI.StateManagedCollection> 实现接口方法操作的对象 <xref:System.Collections.IList> 。 默认实现是验证集合操作的对象是否不是 `null` ; 但是，从派生的集合 <xref:System.Web.UI.StateManagedCollection> 重写 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> 方法以执行任何其他验证，如类型检查。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="stateManagedCollection.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>强制将整个 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合序列化为视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>方法强制 <xref:System.Web.UI.StateManagedCollection> 完全 (序列化集合，而 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> 方法仅将更改信息保存) 中。 此方法在以下情况下很有用：集合已更改很重要，并且更改信息不足以在内存中从视图状态重新创建对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)" />
        <altmember cref="M:System.Web.UI.StateBag.SetDirty(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected abstract void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member SetDirtyObject : obj -&gt; unit" Usage="stateManagedCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">应对其自身进行完全序列化的 <see cref="T:System.Web.UI.IStateManager" />。</param>
        <summary>在派生类中替代时，指示集合包含的 <see langword="object" /> 将其全部状态记录到视图状态，而不是仅记录更改信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>方法由 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> 、 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> 和方法在内部调用 <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示强类型类如何 <xref:System.Web.UI.StateManagedCollection> 实现抽象 <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> 方法。 `CycleCollection`使用 <xref:System.Web.UI.StateBag> 对象存储其视图状态信息，只是将调用委托给 <xref:System.Web.UI.StateBag.SetDirty%2A> 对象的方法 <xref:System.Web.UI.StateBag> 。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.StateManagedCollection> 。  
  
 [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]
 [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中包含的元素的数量。</summary>
        <value><see cref="T:System.Web.UI.StateManagedCollection" /> 中的元素的数量。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合是否已同步(线程安全)的值。 此方法在所有情况下均返回 <see langword="false" />。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可用于同步对 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合的访问的对象。 此方法在所有情况下均返回 <see langword="null" />。</summary>
        <value>在所有情况下均为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="stateManagedCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回循环访问 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合的迭代器。</summary>
        <returns>可用于循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Web.UI.StateManagedCollection" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="stateManagedCollection.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要添加到 <see langword="object" /> 的 <see cref="T:System.Web.UI.StateManagedCollection" />。</param>
        <summary>向 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中添加一个项。</summary>
        <returns>新元素的插入位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> 将元素添加到集合之前，调用和方法，并在 <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> 添加元素后调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="value" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="stateManagedCollection.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中删除所有项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.StateManagedCollection.OnClear%2A> 调用方法之前调用方法 <xref:System.Web.UI.StateManagedCollection.Clear%2A> ，并在 <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> <xref:System.Web.UI.StateManagedCollection.Clear%2A> 完成从集合中移除元素后调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="stateManagedCollection.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要在 <see langword="object" /> 中定位的 <see cref="T:System.Web.UI.StateManagedCollection" />。</param>
        <summary>确定 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中是否包含特定值。</summary>
        <returns>如果在 <see cref="T:System.Web.UI.StateManagedCollection" /> 中找到对象，则为 <see langword="true" />；否则为 <see langword="false" />。 如果为值参数传递 <see langword="null" />，则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法以在 `value` 检查集合之前进行验证。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="stateManagedCollection.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要在 <see cref="T:System.Web.UI.StateManagedCollection" /> 中定位的对象。</param>
        <summary>确定 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中的指定项的索引。</summary>
        <returns>如果是在列表中找到的，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法以在 `value` 返回索引之前进行验证。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="stateManagedCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
        <param name="value">要插入到 <see cref="T:System.Web.UI.StateManagedCollection" /> 中的对象。</param>
        <summary>将项在指定索引处插入 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `index` 为-1， `value` 则将追加到集合的开头 <xref:System.Web.UI.StateManagedCollection> 。 如果 `index` 等于集合中的项数， `value` 则将追加到集合的末尾。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 <paramref name="index" /> 超出了集合的范围。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.UI.StateManagedCollection" /> 为只读。</exception>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="value" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合是否具有固定大小的值。 此方法在所有情况下均返回 <see langword="false" />。</summary>
        <value>在所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合是否为只读的值。</summary>
        <value>如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Web.UI.StateManagedCollection" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取的元素的索引(索引从零开始)。</param>
        <summary>获取指定索引处的 <see cref="T:System.Web.UI.IStateManager" /> 元素。</summary>
        <value>指定索引处的元素。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 <paramref name="index" /> 超出了集合的范围。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="stateManagedCollection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要从 <see cref="T:System.Web.UI.StateManagedCollection" /> 中删除的对象。</param>
        <summary>从 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合中删除指定对象的第一个匹配项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法以在 `value` 从集合中移除值之前进行验证。 在 <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> 删除对象之前调用方法，并在 <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> 删除对象后调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.UI.StateManagedCollection" /> 为只读。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="stateManagedCollection.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的项的从零开始的索引。</param>
        <summary>删除指定索引处的 <see cref="T:System.Web.UI.IStateManager" /> 元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>调用方法以在 `value` 从集合中移除值之前进行验证。 在 <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> 删除对象之前调用方法，并在 <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> 删除对象后调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.UI.StateManagedCollection" /> 为只读。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IStateManager.IsTrackingViewState : bool" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合是否保存对其视图状态的更改的值。</summary>
        <value>如果集合被标记为保存其自己的状态以及其包含的所有 <see cref="T:System.Web.UI.IStateManager" /> 项的状态，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit&#xA;override this.System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit" Usage="stateManagedCollection.System.Web.UI.IStateManager.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的集合和集合元素的状态的对象。</param>
        <summary>还原 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合以及其包含的 <see cref="T:System.Web.UI.IStateManager" /> 项的以前保存的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法还原由方法保存的视图状态信息 <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> 。  
  
 视图状态是服务器控件属性的值的累计。 这些值自动置于服务器控件的 <xref:System.Web.UI.Control.ViewState%2A> 属性中，该属性是类的实例 <xref:System.Web.UI.StateBag> 。 然后，将此属性的值保存到服务器控件生命周期的保存状态阶段之后的字符串对象。 有关详细信息，请参阅 [ASP.NET Web 服务器控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/7698y1f0(v=vs.85))。  
  
 此方法主要由控件开发人员使用。 您可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj&#xA;override this.System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj" Usage="stateManagedCollection.System.Web.UI.IStateManager.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页回发到服务器后对 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合和该集合包含的每个 <see cref="T:System.Web.UI.IStateManager" /> 对象所做的更改。</summary>
        <returns>包含对 <see cref="T:System.Web.UI.StateManagedCollection" /> 及其包含的项的视图状态所做更改的对象。 如果没有与集合及其元素关联的视图状态，则此方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由控件开发人员使用。  
  
 视图状态是服务器控件属性的值的累计。 这些值自动置于服务器控件的 <xref:System.Web.UI.Control.ViewState%2A> 属性中，该属性是类的实例 <xref:System.Web.UI.StateBag> 。 然后，将此属性的值保存到服务器控件生命周期的保存状态阶段之后的字符串对象。 有关详细信息，请参阅 [ASP.NET Web 服务器控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/7698y1f0(v=vs.85))。  
  
 保存视图状态时，此字符串对象将作为 () 的 HTML 隐藏元素中存储的变量返回给客户端 `<input type="hidden">` 。 创作自定义服务器控件时，可以通过重写此方法并修改服务器控件的属性来提高效率 <xref:System.Web.UI.Control.ViewState%2A> 。 有关详细信息，请参阅 [ASP.NET Web 服务器控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/7698y1f0(v=vs.85)) 和[ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit&#xA;override this.System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit" Usage="stateManagedCollection.System.Web.UI.IStateManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使 <see cref="T:System.Web.UI.StateManagedCollection" /> 集合及其包含的每个 <see cref="T:System.Web.UI.IStateManager" /> 对象跟踪对它们的视图状态所做的更改，以使它们可以在相同页的请求之间得以保持。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视图状态是服务器控件属性的值的累计。 这些值自动置于服务器控件的 <xref:System.Web.UI.Control.ViewState%2A> 属性中，该属性是类的实例 <xref:System.Web.UI.StateBag> 。 然后，将此属性的值保存到服务器控件生命周期的保存状态阶段之后的字符串对象。 有关详细信息，请参阅 [ASP.NET Web 服务器控件](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/7698y1f0(v=vs.85))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
