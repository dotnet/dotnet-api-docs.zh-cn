<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d49990136f2307af684fc691e8a10495a8b4b37" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89832166" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <TypeSignature Language="F#" Value="type DataBinding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="65fdc-101">包含有关 ASP.NET 服务器控件中的单个数据绑定表达式的信息，这些信息可让快速应用程序开发 (RAD) 设计器（如 Microsoft Visual Studio）能够在设计时创建数据绑定表达式。</span><span class="sxs-lookup"><span data-stu-id="65fdc-101">Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-binding expressions at design time.</span></span> <span data-ttu-id="65fdc-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="65fdc-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fdc-103">服务器控件中的每个数据绑定表达式在设计时由类的实例表示 <xref:System.Web.UI.DataBinding> 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-103">Each data-binding expression in a server control is represented at design time by an instance of the <xref:System.Web.UI.DataBinding> class.</span></span> <span data-ttu-id="65fdc-104">包含一个或多个数据绑定表达式的任何服务器控件都有一个 <xref:System.Web.UI.DataBindingCollection> 包含对象的对象 <xref:System.Web.UI.DataBinding> 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-104">Any server control that contains one or more data-binding expressions has a <xref:System.Web.UI.DataBindingCollection> object that contains the <xref:System.Web.UI.DataBinding> objects.</span></span> <span data-ttu-id="65fdc-105">可以通过实现接口的类来访问此集合 <xref:System.Web.UI.Control> <xref:System.Web.UI.IDataBindingsAccessor> 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-105">This collection is accessible through the <xref:System.Web.UI.Control> class implementing the <xref:System.Web.UI.IDataBindingsAccessor> interface.</span></span> <span data-ttu-id="65fdc-106">创建自定义 RAD 设计器时，请使用该实现访问该集合。</span><span class="sxs-lookup"><span data-stu-id="65fdc-106">When you create a custom RAD designer, use that implementation to access the collection.</span></span> <span data-ttu-id="65fdc-107"><xref:System.Web.UI.DataBinding> <xref:System.Web.UI.DataBindingCollection> 与服务器控件关联的任何或对象只存在于设计时。</span><span class="sxs-lookup"><span data-stu-id="65fdc-107">Any <xref:System.Web.UI.DataBinding> or <xref:System.Web.UI.DataBindingCollection> objects associated with a server control exist only at design time.</span></span> <span data-ttu-id="65fdc-108">它们在运行时不存在，因此在运行时无法访问。</span><span class="sxs-lookup"><span data-stu-id="65fdc-108">They do not exist at run time and, therefore, are not accessible during run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fdc-109">下面的代码示例创建一个 <xref:System.Web.UI.DataBinding> 对象，并将其设置为与控件的 <xref:System.Web.UI.DataBindingCollection> 集合中具有 `propertyName` 值的参数相同的现有对象 `Text` 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-109">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="65fdc-110">如果集合包含一个 <xref:System.Web.UI.DataBinding> 值为的对象 `propertyName` ，则 `Text` 此代码将返回对象的属性的值 <xref:System.Web.UI.DataBinding.Expression%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-110">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="65fdc-111">如果没有此类对象，它将返回空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-111">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataBinding : string * Type * string -&gt; System.Web.UI.DataBinding" Usage="new System.Web.UI.DataBinding (propertyName, propertyType, expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="65fdc-112">要数据绑定到的属性。</span><span class="sxs-lookup"><span data-stu-id="65fdc-112">The property to bind data to.</span></span></param>
        <param name="propertyType"><span data-ttu-id="65fdc-113">要数据绑定到的属性的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="65fdc-113">The .NET Framework type of the property to bind data to.</span></span></param>
        <param name="expression"><span data-ttu-id="65fdc-114">要计算的数据绑定表达式。</span><span class="sxs-lookup"><span data-stu-id="65fdc-114">The data-binding expression to be evaluated.</span></span></param>
        <summary><span data-ttu-id="65fdc-115">初始化 <see cref="T:System.Web.UI.DataBinding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="65fdc-115">Initializes a new instance of the <see cref="T:System.Web.UI.DataBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65fdc-116">下面的代码示例创建一个 <xref:System.Web.UI.DataBinding> 对象，并将其设置为与控件的 <xref:System.Web.UI.DataBindingCollection> 集合中具有 `propertyName` 值的参数相同的现有对象 `Text` 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-116">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="65fdc-117">如果集合包含一个 <xref:System.Web.UI.DataBinding> 值为的对象 `propertyName` ，则 `Text` 此代码将返回对象的属性的值 <xref:System.Web.UI.DataBinding.Expression%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-117">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="65fdc-118">如果没有此类对象，它将返回空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-118">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataBinding.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="65fdc-119">要与当前的 <see cref="T:System.Web.UI.DataBinding" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="65fdc-119">The object to compare against the current <see cref="T:System.Web.UI.DataBinding" />.</span></span></param>
        <summary><span data-ttu-id="65fdc-120">确定指定的对象与当前对象是否是 <see cref="T:System.Web.UI.DataBinding" /> 类的同一实例。</span><span class="sxs-lookup"><span data-stu-id="65fdc-120">Determines whether the specified object is the same instance of the <see cref="T:System.Web.UI.DataBinding" /> class as the current object.</span></span></summary>
        <returns><span data-ttu-id="65fdc-121">如果数据绑定属性名称匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="65fdc-121"><see langword="true" /> if the data-binding property names match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Web.UI.DataBinding.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fdc-122">获取或设置要计算的数据绑定表达式。</span><span class="sxs-lookup"><span data-stu-id="65fdc-122">Gets or sets the data-binding expression to be evaluated.</span></span></summary>
        <value><span data-ttu-id="65fdc-123">要计算的数据绑定表达式。</span><span class="sxs-lookup"><span data-stu-id="65fdc-123">The data-binding expression to be evaluated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65fdc-124">下面的代码示例创建一个 <xref:System.Web.UI.DataBinding> 对象，并将其设置为与控件的 <xref:System.Web.UI.DataBindingCollection> 集合中具有 `propertyName` 值的参数相同的现有对象 `Text` 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-124">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="65fdc-125">如果集合包含一个 <xref:System.Web.UI.DataBinding> 值为的对象 `propertyName` ，则 `Text` 此代码将返回对象的属性的值 <xref:System.Web.UI.DataBinding.Expression%2A> 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-125">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="65fdc-126">如果没有此类对象，它将返回空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-126">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataBinding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65fdc-127">检索 <see cref="T:System.Web.UI.DataBinding" /> 对象的实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="65fdc-127">Retrieves the hash code for an instance of the <see cref="T:System.Web.UI.DataBinding" /> object.</span></span></summary>
        <returns><span data-ttu-id="65fdc-128">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="65fdc-128">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fdc-129"><xref:System.Web.UI.DataBinding> 对象位于 <xref:System.Web.UI.DataBindingCollection> 对象中，只能在设计时访问。</span><span class="sxs-lookup"><span data-stu-id="65fdc-129"><xref:System.Web.UI.DataBinding> objects are placed in a <xref:System.Web.UI.DataBindingCollection> object, accessible only at design time.</span></span> <span data-ttu-id="65fdc-130">集合是表示控件上的绑定的哈希表。</span><span class="sxs-lookup"><span data-stu-id="65fdc-130">The collection is a hash table that represents the bindings on a control.</span></span> <span data-ttu-id="65fdc-131">每个属性只能有一个绑定，因此哈希代码计算与实现匹配， <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> 只考虑属性名称。</span><span class="sxs-lookup"><span data-stu-id="65fdc-131">There can only be one binding per property, so the hash code computation matches the <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> implementation and only takes the property name into account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Web.UI.DataBinding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fdc-132">获取要将数据绑定到的 ASP.NET 服务器控件属性的名称。</span><span class="sxs-lookup"><span data-stu-id="65fdc-132">Gets the name of the ASP.NET server control property to bind data to.</span></span></summary>
        <value><span data-ttu-id="65fdc-133">要数据绑定到的属性。</span><span class="sxs-lookup"><span data-stu-id="65fdc-133">The property to bind data to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65fdc-134">下面的代码示例声明了三个变量： `dataBindingOutput1` 、 `dataBindingOutput2` 和 `dataBindingOutput3` ，它们访问对象的不同属性 <xref:System.Web.UI.DataBinding> `myDataBinding2` 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-134">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="65fdc-135">然后，它将属性的值分配 <xref:System.Web.UI.DataBinding.PropertyName%2A> 给，将该属性的值 `dataBindingOutput1` 连接到字符串 "属性名称是"，并将值写入文件。</span><span class="sxs-lookup"><span data-stu-id="65fdc-135">It then assigns the value of the <xref:System.Web.UI.DataBinding.PropertyName%2A> property to `dataBindingOutput1`, concatenates it with the string "The property name is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Web.UI.DataBinding.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65fdc-136">获取数据绑定 ASP.NET 服务器控件属性的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="65fdc-136">Gets the .NET Framework type of the data-bound ASP.NET server control property.</span></span></summary>
        <value><span data-ttu-id="65fdc-137">数据绑定属性的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="65fdc-137">The .NET Framework type of the data-bound property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65fdc-138">下面的代码示例声明了三个变量： `dataBindingOutput1` 、 `dataBindingOutput2` 和 `dataBindingOutput3` ，它们访问对象的不同属性 <xref:System.Web.UI.DataBinding> `myDataBinding2` 。</span><span class="sxs-lookup"><span data-stu-id="65fdc-138">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="65fdc-139"><xref:System.Web.UI.DataBinding.PropertyType%2A>属性值被赋给， `dataBindingOutput2` 并与字符串 "属性类型为" 连接，并将值写入文件。</span><span class="sxs-lookup"><span data-stu-id="65fdc-139">The <xref:System.Web.UI.DataBinding.PropertyType%2A> property value is assigned to `dataBindingOutput2` and concatenated with the string "The property type is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
