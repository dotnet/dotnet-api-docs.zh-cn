<Type Name="DynamicControl" FullName="System.Web.DynamicData.DynamicControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cbc15ac594dd5c9a8c611cb4ba55038871b7b8e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960058" /></Metadata><TypeSignature Language="C#" Value="public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicControl extends System.Web.UI.Control implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.DynamicData.IFieldTemplateHost, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicControl" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IFieldFormattingOptions, IFieldTemplateHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicControl : System::Web::UI::Control, System::Web::DynamicData::IFieldFormattingOptions, System::Web::DynamicData::IFieldTemplateHost, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type DynamicControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IFieldTemplateHost&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="01b27-101">使用 ASP.NET 动态数据功能，在模板化数据绑定控件中显示为字段定义的内容。</span><span class="sxs-lookup"><span data-stu-id="01b27-101">Displays the content that is defined for the field in templated data-bound controls, using ASP.NET Dynamic Data features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-102">本主题内容：</span><span class="sxs-lookup"><span data-stu-id="01b27-102">In this topic:</span></span>

-   [<span data-ttu-id="01b27-103">介绍</span><span class="sxs-lookup"><span data-stu-id="01b27-103">Introduction</span></span>](#introduction)

-   [<span data-ttu-id="01b27-104">声明性语法</span><span class="sxs-lookup"><span data-stu-id="01b27-104">Declarative Syntax</span></span>](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a><span data-ttu-id="01b27-105">介绍</span><span class="sxs-lookup"><span data-stu-id="01b27-105">Introduction</span></span>
 <span data-ttu-id="01b27-106">模板化数据绑定控件（如 <xref:System.Web.UI.WebControls.FormView> 或 <xref:System.Web.UI.WebControls.ListView>）使用 <xref:System.Web.DynamicData.DynamicControl> 控件来显示在自定义页中使用 ASP.NET 动态数据功能的数据字段。</span><span class="sxs-lookup"><span data-stu-id="01b27-106">The <xref:System.Web.DynamicData.DynamicControl> control is used by templated data-bound controls, such as <xref:System.Web.UI.WebControls.FormView> or <xref:System.Web.UI.WebControls.ListView>, to display a data field that uses ASP.NET Dynamic Data features in a custom page.</span></span> <span data-ttu-id="01b27-107">您还可以在 <xref:System.Web.UI.WebControls.GridView> 或 <xref:System.Web.UI.WebControls.DetailsView> 控件的 <xref:System.Web.UI.WebControls.TemplateField> 字段中使用 <xref:System.Web.DynamicData.DynamicControl> 控件。</span><span class="sxs-lookup"><span data-stu-id="01b27-107">You can also use a <xref:System.Web.DynamicData.DynamicControl> control in a <xref:System.Web.UI.WebControls.TemplateField> field of a <xref:System.Web.UI.WebControls.GridView> or a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>

 <span data-ttu-id="01b27-108"><xref:System.Web.DynamicData.DynamicControl> 控件提供的功能类似于 <xref:System.Web.DynamicData.DynamicField> 字段的功能。</span><span class="sxs-lookup"><span data-stu-id="01b27-108">The <xref:System.Web.DynamicData.DynamicControl> control provides functionality that is similar to that of the <xref:System.Web.DynamicData.DynamicField> field.</span></span> <span data-ttu-id="01b27-109">但是，因为 <xref:System.Web.DynamicData.DynamicControl> 控件仅用于模板内，所以它可让你更灵活地控制数据的显示方式，因为你可以在该字段周围添加其他 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="01b27-109">However, because the <xref:System.Web.DynamicData.DynamicControl> control is only used inside templates, it gives you more flexibility in controlling how the data is displayed since you can add other HTML elements around the field.</span></span> <span data-ttu-id="01b27-110">使用 <xref:System.Web.DynamicData.DynamicControl> 控件时，可以利用以下动态数据功能：</span><span class="sxs-lookup"><span data-stu-id="01b27-110">When you use a <xref:System.Web.DynamicData.DynamicControl> control, you can take advantage of the following Dynamic Data features:</span></span>

-   <span data-ttu-id="01b27-111">根据数据类型，使用字段模板自动呈现字段的适当控件。</span><span class="sxs-lookup"><span data-stu-id="01b27-111">Automatically rendering the proper control for a field by using field templates, based on the data type.</span></span> <span data-ttu-id="01b27-112">可针对整个应用程序全局修改字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-112">The field templates can be globally modified for the entire application.</span></span>

-   <span data-ttu-id="01b27-113">基于数据库架构提供内置数据验证。</span><span class="sxs-lookup"><span data-stu-id="01b27-113">Providing built-in data validation based on the database schema.</span></span> <span data-ttu-id="01b27-114">您还可以通过自定义数据模型来添加验证类型。</span><span class="sxs-lookup"><span data-stu-id="01b27-114">You can also add validation types by customizing the data model.</span></span>

-   <span data-ttu-id="01b27-115">通过使用数据模型中的属性或通过使用 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 属性，自定义单个字段的数据呈现。</span><span class="sxs-lookup"><span data-stu-id="01b27-115">Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.</span></span>

 <span data-ttu-id="01b27-116">若要指定要在 <xref:System.Web.DynamicData.DynamicControl> 控件中显示的字段，请将 <xref:System.Web.DynamicData.DynamicControl.DataField%2A> 属性设置为字段名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-116">To specify the field to display in a <xref:System.Web.DynamicData.DynamicControl> control, set the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property to the field name.</span></span> <span data-ttu-id="01b27-117">可以通过设置 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 属性，将自定义格式设置字符串应用于字段值。</span><span class="sxs-lookup"><span data-stu-id="01b27-117">You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property.</span></span> <span data-ttu-id="01b27-118">默认情况下，仅当数据绑定控件处于只读模式时，才将格式设置字符串应用于字段值。</span><span class="sxs-lookup"><span data-stu-id="01b27-118">By default, the formatting string is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="01b27-119">若要将格式设置字符串应用于数据绑定控件处于编辑模式时显示的值，请将 <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="01b27-119">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> property to `true`.</span></span> <span data-ttu-id="01b27-120">如果字段值为 `null`，则可以通过设置 <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> 属性来显示自定义标题。</span><span class="sxs-lookup"><span data-stu-id="01b27-120">If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> property.</span></span> <span data-ttu-id="01b27-121"><xref:System.Web.DynamicData.DynamicControl> 控件还可以通过将 <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A> 属性设置为 `true`，自动将空字符串（""）字段值转换为 null 值。</span><span class="sxs-lookup"><span data-stu-id="01b27-121">The <xref:System.Web.DynamicData.DynamicControl> control can also automatically convert empty string ("") field values to null values by setting the <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A> property to `true`.</span></span>

 <span data-ttu-id="01b27-122"><xref:System.Web.DynamicData.DynamicControl> 控件支持不同的显示模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-122">The <xref:System.Web.DynamicData.DynamicControl> control supports different display modes.</span></span> <span data-ttu-id="01b27-123">若要指定 <xref:System.Web.DynamicData.DynamicControl> 控件的显示模式，请设置 <xref:System.Web.DynamicData.DynamicControl.Mode%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-123">To specify the mode in which to display the <xref:System.Web.DynamicData.DynamicControl> control, set the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property.</span></span> <span data-ttu-id="01b27-124">下表显示了不同的模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-124">The following table shows the different modes.</span></span>

 <span data-ttu-id="01b27-125">显示模式 <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>。</span><span class="sxs-lookup"><span data-stu-id="01b27-125"><xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly> for display mode.</span></span> <span data-ttu-id="01b27-126">这可防止用户修改记录或数据字段的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-126">This prevents the user from modifying the values of a record or a data field.</span></span> <span data-ttu-id="01b27-127">它可以在任何模板中使用。</span><span class="sxs-lookup"><span data-stu-id="01b27-127">It can be used in any of the templates.</span></span>

 <span data-ttu-id="01b27-128">编辑模式 <xref:System.Web.UI.WebControls.DataBoundControlMode.Edit>。</span><span class="sxs-lookup"><span data-stu-id="01b27-128"><xref:System.Web.UI.WebControls.DataBoundControlMode.Edit> for edit mode.</span></span> <span data-ttu-id="01b27-129">这使用户可以更新现有记录的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-129">This enables users to update the values of an existing record.</span></span> <span data-ttu-id="01b27-130">它用于编辑模板（通常命名为 `EditItemTemplate`）。</span><span class="sxs-lookup"><span data-stu-id="01b27-130">It is used in the edit template (typically named `EditItemTemplate`).</span></span>

 <span data-ttu-id="01b27-131">插入模式 <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>。</span><span class="sxs-lookup"><span data-stu-id="01b27-131"><xref:System.Web.UI.WebControls.DataBoundControlMode.Insert> for insert mode.</span></span> <span data-ttu-id="01b27-132">这使用户可以为新记录输入值。</span><span class="sxs-lookup"><span data-stu-id="01b27-132">This enables users to enter values for a new record.</span></span> <span data-ttu-id="01b27-133">它用于插入模板（通常命名为 `InsertItemTemplate`）。</span><span class="sxs-lookup"><span data-stu-id="01b27-133">It is used in the insert template (typically named `InsertItemTemplate`).</span></span>

 <span data-ttu-id="01b27-134">可以通过将 <xref:System.Web.UI.Control.Visible%2A> 属性设置为 `false`，隐藏数据绑定控件中的 <xref:System.Web.DynamicData.DynamicControl> 控件。</span><span class="sxs-lookup"><span data-stu-id="01b27-134">You can hide a <xref:System.Web.DynamicData.DynamicControl> control in a data-bound control by setting the <xref:System.Web.UI.Control.Visible%2A> property to `false`.</span></span>

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a><span data-ttu-id="01b27-135">声明性语法</span><span class="sxs-lookup"><span data-stu-id="01b27-135">Declarative Syntax</span></span>

```
<asp:DynamicControl
    ApplyFormatInEditMode="True|False"
    ConvertEmptyStringToNull="True|False"
    CssClass="string"
    DataField="string"
    DataFormatString="string"
    EnableViewState="True|False"
    HtmlEncode="True|False"
    ID="string"
    Mode="Edit|Insert|ReadOnly"
    NullDisplayText="string"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    runat="server"
    UIHint="string"
    ValidationGroup="string"
    Visible="True|False"
>
</asp:DynamicControl>
```



## Examples
 <span data-ttu-id="01b27-136">请参阅此功能的运行时代码示例：[运行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl)。</span><span class="sxs-lookup"><span data-stu-id="01b27-136">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).</span></span>

 <span data-ttu-id="01b27-137">下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListView> 控件中的 <xref:System.Web.DynamicData.DynamicControl> 控件来显示、插入、删除和编辑数据库表中的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-137">The following example demonstrates how to use the <xref:System.Web.DynamicData.DynamicControl> control in a <xref:System.Web.UI.WebControls.ListView> control to display, insert, delete and edit values from a database table.</span></span> <span data-ttu-id="01b27-138">请注意，为了使插入操作正常运行，`rowguid` 和 `ModifiedDate` 列的 <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="01b27-138">It is important to notice that in order to make the insert operation to work, the <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> property of the `rowguid` and `ModifiedDate` columns are set to `true`.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl/VB/Default.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicField" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="01b27-139">ASP.NET 动态数据概述</span><span class="sxs-lookup"><span data-stu-id="01b27-139">ASP.NET Dynamic Data Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="01b27-140">ASP.NET 动态数据基架</span><span class="sxs-lookup"><span data-stu-id="01b27-140">ASP.NET Dynamic Data Scaffolding</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01b27-141">初始化 <see cref="T:System.Web.DynamicData.DynamicControl" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01b27-141">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01b27-142">初始化 <see cref="T:System.Web.DynamicData.DynamicControl" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01b27-142">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As DataBoundControlMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicControl(System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicControl : System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.DynamicData.DynamicControl" Usage="new System.Web.DynamicData.DynamicControl mode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="01b27-143">指定控件模式的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="01b27-143">One of the enumeration values that specifies the mode of the control.</span></span></param>
        <summary><span data-ttu-id="01b27-144">用指定的模式初始化 <see cref="T:System.Web.DynamicData.DynamicControl" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01b27-144">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class with the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-145">获取或设置一个值，该值指示字段处于编辑模式时，是否将 <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> 属性指定的格式设置字符串应用于字段值。</span><span class="sxs-lookup"><span data-stu-id="01b27-145">Gets or sets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> property is applied to field values when the field is in edit mode.</span></span></summary>
        <value><span data-ttu-id="01b27-146">如果应用格式设置字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-146"><see langword="true" /> if the formatting string is applied; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="01b27-147">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-147">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-148"><xref:System.Web.DynamicData.DynamicControl> 控件具有不同的显示模式，使用户能够读取、编辑或插入字段。</span><span class="sxs-lookup"><span data-stu-id="01b27-148">The <xref:System.Web.DynamicData.DynamicControl> control has different display modes that allow the user to read, edit, or insert a field.</span></span> <span data-ttu-id="01b27-149">默认情况下，仅当 <xref:System.Web.DynamicData.DynamicControl> 控件处于只读模式时，<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 属性指定的格式设置字符串才应用于字段值。</span><span class="sxs-lookup"><span data-stu-id="01b27-149">By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property is applied to a field value only when the <xref:System.Web.DynamicData.DynamicControl> control is in read-only mode.</span></span> <span data-ttu-id="01b27-150">若要将格式设置字符串应用于数据绑定控件处于编辑模式时显示的值，请将 <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="01b27-150">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> property to `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="01b27-151">在数据源中更新字段时，<xref:System.Web.DynamicData.DynamicControl> 控件不会自动删除格式设置。</span><span class="sxs-lookup"><span data-stu-id="01b27-151">The <xref:System.Web.DynamicData.DynamicControl> control does not automatically remove the formatting when the field is updated in the data source.</span></span> <span data-ttu-id="01b27-152">如果不希望格式设置为存储的值的一部分，则需要以编程方式删除格式设置。</span><span class="sxs-lookup"><span data-stu-id="01b27-152">If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Mode" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); void set(System::Web::DynamicData::MetaColumn ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn with get, set" Usage="System.Web.DynamicData.DynamicControl.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-153">获取或设置与控件关联的列对象。</span><span class="sxs-lookup"><span data-stu-id="01b27-153">Gets or sets the column object that is associated with the control.</span></span></summary>
        <value><span data-ttu-id="01b27-154">与控件关联的列对象。</span><span class="sxs-lookup"><span data-stu-id="01b27-154">The column object that is associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-155">您可以使用 <xref:System.Web.DynamicData.DynamicControl.Column%2A> 属性来获取有关特定列的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="01b27-155">You can use the <xref:System.Web.DynamicData.DynamicControl.Column%2A> property to obtain metadata information about a specific column.</span></span> <span data-ttu-id="01b27-156"><xref:System.Web.DynamicData.DynamicControl> 控件自动设置 <xref:System.Web.DynamicData.DynamicControl.Column%2A> 属性，该属性基于为 <xref:System.Web.DynamicData.DynamicControl.DataField%2A> 属性提供的字段名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-156">The <xref:System.Web.DynamicData.DynamicControl.Column%2A> property is automatically set by the <xref:System.Web.DynamicData.DynamicControl> control based on the field name provided for the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Table" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-157">获取或设置一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</span><span class="sxs-lookup"><span data-stu-id="01b27-157">Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="01b27-158">如果将空字符串值自动转换为 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-158"><see langword="true" /> if empty string values are automatically converted to null values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="01b27-159">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-160">数据源控件的 <xref:System.Web.UI.WebControls.Parameter> 对象还具有一个名为 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>的属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-160">The <xref:System.Web.UI.WebControls.Parameter> object of the data source control also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="01b27-161">此属性执行相同的功能。</span><span class="sxs-lookup"><span data-stu-id="01b27-161">This property performs the same function.</span></span> <span data-ttu-id="01b27-162">请确保这两个属性都已正确设置。</span><span class="sxs-lookup"><span data-stu-id="01b27-162">Make sure that both properties are set appropriately.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms366709(v=vs.100)"><span data-ttu-id="01b27-163">使用数据源控件处理 Null 数据库值</span><span class="sxs-lookup"><span data-stu-id="01b27-163">Handling Null Database Values Using Data Source Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.DynamicData.DynamicControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-164">获取或设置级联样式表 (CSS) 类，该类指定 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件内容的显示样式。</span><span class="sxs-lookup"><span data-stu-id="01b27-164">Gets or sets the Cascading Style Sheet (CSS) class that specifies the display styles for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content.</span></span></summary>
        <value><span data-ttu-id="01b27-165">CSS 类的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-165">The name of the CSS class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicControl.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-166">获取或设置 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件绑定到的数据字段的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-166">Gets or sets the name of the data field that the <see cref="T:System.Web.DynamicData.DynamicControl" /> control is bound to.</span></span></summary>
        <value><span data-ttu-id="01b27-167">要将 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件绑定到的数据字段的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-167">The name of the data field to bind the <see cref="T:System.Web.DynamicData.DynamicControl" /> control to.</span></span> <span data-ttu-id="01b27-168">默认值为空字符串 ("")，表示尚未设置此属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-168">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-169">使用 <xref:System.Web.DynamicData.DynamicControl.DataField%2A> 属性指定要绑定到 <xref:System.Web.DynamicData.DynamicControl> 控件的数据字段。</span><span class="sxs-lookup"><span data-stu-id="01b27-169">Use the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="01b27-170">数据字段可以是列名称，也可以是用于外键列的关系名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-170">The data field can be the column name or, for foreign key columns, the relationship name.</span></span>

 <span data-ttu-id="01b27-171">默认情况下，<xref:System.Web.DynamicData.DynamicControl> 控件使用与字段数据类型关联的字段模板来显示指定的数据字段。</span><span class="sxs-lookup"><span data-stu-id="01b27-171">By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicControl> control using the field template that is associated with the field data type.</span></span> <span data-ttu-id="01b27-172">通过设置 "<xref:System.Web.DynamicData.DynamicControl.UIHint%2A>" 属性，可以更改为数据字段呈现的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-172">You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property.</span></span> <span data-ttu-id="01b27-173">还可以通过设置 "<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>" 属性来设置显示的文本的格式。</span><span class="sxs-lookup"><span data-stu-id="01b27-173">You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property.</span></span>

 <span data-ttu-id="01b27-174">**注意**如果要全局更改数据字段的显示和行为，则必须将属性应用于数据模型，而不是在 <xref:System.Web.DynamicData.DynamicControl> 控件的特定实例中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-174">**Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="01b27-175">有关详细信息，请参阅[ASP.NET 动态数据](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)。</span><span class="sxs-lookup"><span data-stu-id="01b27-175">For more information, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>



## Examples
 <span data-ttu-id="01b27-176">下面的示例演示如何使用 <xref:System.Web.DynamicData.DynamicControl.DataField%2A> 属性指定要在 <xref:System.Web.DynamicData.DynamicControl> 控件中显示的字段。</span><span class="sxs-lookup"><span data-stu-id="01b27-176">The following example demonstrates how to use the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property to specify which field to display in a <xref:System.Web.DynamicData.DynamicControl> control.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.DataField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.DataField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.DataField/VB/Default.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.UIHint" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.DynamicData.DynamicControl.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-177">获取或设置一个字符串，该字符串指定字段值的显示格式。</span><span class="sxs-lookup"><span data-stu-id="01b27-177">Gets or sets a string that specifies the display format for the value of the field.</span></span></summary>
        <value><span data-ttu-id="01b27-178">指定字段值的显示格式的格式化字符串。</span><span class="sxs-lookup"><span data-stu-id="01b27-178">A formatting string that specifies the display format for the value of the field.</span></span> <span data-ttu-id="01b27-179">默认值为空字符串 ("")，表示尚无特殊格式设置应用于该字段值。</span><span class="sxs-lookup"><span data-stu-id="01b27-179">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-180">使用 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 属性为 <xref:System.Web.DynamicData.DynamicControl> 控件中显示的值指定自定义的显示格式。</span><span class="sxs-lookup"><span data-stu-id="01b27-180">Use the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="01b27-181">如果未设置 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 属性，则显示字段值而不进行任何特殊格式设置。</span><span class="sxs-lookup"><span data-stu-id="01b27-181">If the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property is not set, the field value is displayed without any special formatting.</span></span>

 <span data-ttu-id="01b27-182">默认情况下，仅当 <xref:System.Web.DynamicData.DynamicControl.Mode%2A> 属性设置为 <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>时，才将格式设置字符串应用于字段值。</span><span class="sxs-lookup"><span data-stu-id="01b27-182">By default, the formatting string is applied to the field value only when the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>.</span></span> <span data-ttu-id="01b27-183">若要在编辑模式下将格式设置字符串应用于字段值，请将 <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="01b27-183">To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> property to `true`.</span></span>

 <span data-ttu-id="01b27-184">使用 <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> 属性指定的显示格式特定于 <xref:System.Web.DynamicData.DynamicControl> 控件的此实例。</span><span class="sxs-lookup"><span data-stu-id="01b27-184">The display format that you specify using the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="01b27-185">还可以通过向数据模型应用 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 并在构造函数中设置 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> 命名参数，来更改整个应用程序中的数据字段的显示格式。</span><span class="sxs-lookup"><span data-stu-id="01b27-185">You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> named parameter in the constructor.</span></span> <span data-ttu-id="01b27-186">有关详细信息，请参阅[ASP.NET 动态数据](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)。</span><span class="sxs-lookup"><span data-stu-id="01b27-186">For more information, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="01b27-187">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="01b27-187">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FieldTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FieldTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.FieldTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FieldTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicControl.FieldTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-188">获取为 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件创建的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-188">Gets the field template that is created for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control.</span></span></summary>
        <value><span data-ttu-id="01b27-189">为 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件创建的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-189">The field template that is created for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string&#xA;override this.GetAttribute : string -&gt; string" Usage="dynamicControl.GetAttribute key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="01b27-190">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-190">The name of the attribute.</span></span></param>
        <summary><span data-ttu-id="01b27-191">使用指定键来检索特性值。</span><span class="sxs-lookup"><span data-stu-id="01b27-191">Retrieves the attribute value by using the specified key.</span></span></summary>
        <returns><span data-ttu-id="01b27-192">属性的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-192">The value of the attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-193">如果 `null`特性集合，则此方法返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="01b27-193">If the attributes collection is `null`, this method returns an empty string.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-194">获取或设置一个值，该值指示控件的数据在呈现之前是否经过 HTML 编码。</span><span class="sxs-lookup"><span data-stu-id="01b27-194">Gets or sets a value that indicates whether the data for the control is HTML-encoded before rendering.</span></span></summary>
        <value><span data-ttu-id="01b27-195">如果控件的数据在呈现之前经过 HTML 编码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-195"><see langword="true" /> if the data for the control is HTML-encoded before rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="01b27-196">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-196">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-197">使用 <xref:System.Web.DynamicData.DynamicControl.HtmlEncode%2A> 属性指定在显示字段值之前，这些字段值是否为其各自的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="01b27-197">Use the <xref:System.Web.DynamicData.DynamicControl.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.</span></span>

> [!NOTE]
>  <span data-ttu-id="01b27-198">HTML 编码字段值有助于防止显示跨站点脚本攻击和恶意内容。</span><span class="sxs-lookup"><span data-stu-id="01b27-198">HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="01b27-199">应尽可能启用此属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-199">This property should be enabled whenever possible.</span></span> <span data-ttu-id="01b27-200">有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="01b27-200">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataBoundControlMode Mode { System::Web::UI::WebControls::DataBoundControlMode get(); void set(System::Web::UI::WebControls::DataBoundControlMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.UI.WebControls.DataBoundControlMode with get, set" Usage="System.Web.DynamicData.DynamicControl.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-201">获取或设置呈现模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-201">Gets or sets the rendering mode.</span></span></summary>
        <value><span data-ttu-id="01b27-202">指定控件的呈现模式的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="01b27-202">One of the enumeration values that specifies the rendering mode for the control.</span></span> <span data-ttu-id="01b27-203">默认为 <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-203">The default is <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-204">使用 <xref:System.Web.DynamicData.DynamicControl.Mode%2A> 属性指定要用于显示 <xref:System.Web.DynamicData.DynamicControl> 控件的呈现模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-204">Use the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property to specify which rendering mode to use to display the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="01b27-205">下表显示了不同的模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-205">The following table shows the different modes.</span></span>

|<span data-ttu-id="01b27-206">“模式”</span><span class="sxs-lookup"><span data-stu-id="01b27-206">Mode</span></span>|<span data-ttu-id="01b27-207">说明</span><span class="sxs-lookup"><span data-stu-id="01b27-207">Description</span></span>|
|----------|-----------------|
|<xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>|<span data-ttu-id="01b27-208">用于显示模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-208">for display mode.</span></span> <span data-ttu-id="01b27-209">这可防止用户修改记录或数据字段的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-209">This prevents the user from modifying the values of a record or a data field.</span></span> <span data-ttu-id="01b27-210">它可以在任何模板中使用。</span><span class="sxs-lookup"><span data-stu-id="01b27-210">It can be used in any of the templates.</span></span> <span data-ttu-id="01b27-211">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="01b27-211">This is the default value.</span></span>|
|<xref:System.Web.UI.WebControls.DataBoundControlMode.Edit>|<span data-ttu-id="01b27-212">对于编辑模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-212">for edit mode.</span></span> <span data-ttu-id="01b27-213">这使用户可以更新现有记录的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-213">This enables users to update the values of an existing record.</span></span> <span data-ttu-id="01b27-214">它在 `EditItemTemplate` 模板中使用。</span><span class="sxs-lookup"><span data-stu-id="01b27-214">It is used in the `EditItemTemplate` template.</span></span>|
|<xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>|<span data-ttu-id="01b27-215">对于插入模式。</span><span class="sxs-lookup"><span data-stu-id="01b27-215">for insert mode.</span></span> <span data-ttu-id="01b27-216">这使用户可以为新记录输入值。</span><span class="sxs-lookup"><span data-stu-id="01b27-216">This enables users to enter values for a new record.</span></span> <span data-ttu-id="01b27-217">它在 `InsertItemTemplate` 模板中使用。</span><span class="sxs-lookup"><span data-stu-id="01b27-217">It is used in the `InsertItemTemplate` template.</span></span>|

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.DynamicData.DynamicControl.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-218">获取或设置当字段值为 <see langword="null" /> 时，为数据字段显示的标题。</span><span class="sxs-lookup"><span data-stu-id="01b27-218">Gets or sets the caption that is displayed for a data field when the field value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="01b27-219">当字段值为 <see langword="null" /> 时，为数据字段显示的标题。</span><span class="sxs-lookup"><span data-stu-id="01b27-219">The caption that is displayed for a data field when the field value is <see langword="null" />.</span></span> <span data-ttu-id="01b27-220">默认值为空字符串 ("")，表示尚未设置此属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-220">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-221">有时，字段值在数据源中存储为 null。</span><span class="sxs-lookup"><span data-stu-id="01b27-221">Sometimes a field value is stored as null in the data source.</span></span> <span data-ttu-id="01b27-222">通过设置 "<xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A>" 属性，可以为具有 null 值的字段指定要显示的自定义标题。</span><span class="sxs-lookup"><span data-stu-id="01b27-222">You can specify a custom caption to display for fields that have a null value by setting the <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> property.</span></span> <span data-ttu-id="01b27-223">如果未设置此属性，则 null 字段值显示为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="01b27-223">If this property is not set, null field values are displayed as empty strings ("").</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dynamicControl.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="01b27-224">事件数据。</span><span class="sxs-lookup"><span data-stu-id="01b27-224">The event data.</span></span></param>
        <summary><span data-ttu-id="01b27-225">引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="01b27-225">Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-226">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="01b27-226">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="01b27-227">有关详细信息，请参阅[处理和引发事件](/dotnet/standard/events/)。</span><span class="sxs-lookup"><span data-stu-id="01b27-227">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>

 <span data-ttu-id="01b27-228"><xref:System.Web.DynamicData.DynamicControl.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="01b27-228">The <xref:System.Web.DynamicData.DynamicControl.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="01b27-229">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="01b27-229">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01b27-230">未设置 <see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="01b27-230">The <see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> property is not set.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="01b27-231">当在派生类中重写 <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> 时，请确保调用基类的 "<see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="01b27-231">When overriding <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="01b27-232">用于在客户端浏览器上呈现 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件内容的对象。</span><span class="sxs-lookup"><span data-stu-id="01b27-232">The object that is used to render the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content on the client's browser.</span></span></param>
        <summary><span data-ttu-id="01b27-233">使用指定的 <see cref="T:System.Web.DynamicData.DynamicControl" /> 对象，将 <see cref="T:System.Web.UI.HtmlTextWriter" /> 控件内容呈现给客户端浏览器。</span><span class="sxs-lookup"><span data-stu-id="01b27-233">Renders the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content to the client's browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-234"><xref:System.Web.DynamicData.DynamicControl.Render%2A> 方法主要由控件开发人员用来扩展 <xref:System.Web.DynamicData.DynamicControl> 控件。</span><span class="sxs-lookup"><span data-stu-id="01b27-234">The <xref:System.Web.DynamicData.DynamicControl.Render%2A> method is primarily used by control developers to extend the <xref:System.Web.DynamicData.DynamicControl> control.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit&#xA;override this.SetAttribute : string * string -&gt; unit" Usage="dynamicControl.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="01b27-235">要设置的特性的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-235">The name of the attribute to set.</span></span></param>
        <param name="value"><span data-ttu-id="01b27-236">分配给属性的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-236">The value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="01b27-237">将指定的特性设置为指定的值。</span><span class="sxs-lookup"><span data-stu-id="01b27-237">Sets the specified attribute to the specified value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
      <MemberSignature Language="C#" Value="System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FormattingOptions As IFieldFormattingOptions Implements IFieldTemplateHost.FormattingOptions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::DynamicData::IFieldFormattingOptions ^ System::Web::DynamicData::IFieldTemplateHost::FormattingOptions { System::Web::DynamicData::IFieldFormattingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions : System.Web.DynamicData.IFieldFormattingOptions" Usage="System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldFormattingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-238">有关此成员的说明，请参见 <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />。</span><span class="sxs-lookup"><span data-stu-id="01b27-238">For a description of this member, see <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />.</span></span></summary>
        <value><span data-ttu-id="01b27-239">将应用于字段模板的格式设置选项。</span><span class="sxs-lookup"><span data-stu-id="01b27-239">The formatting options to be applied to the field template.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.DynamicControl.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-240">获取与控件关联的表对象。</span><span class="sxs-lookup"><span data-stu-id="01b27-240">Gets the table object that is associated with the control.</span></span></summary>
        <value><span data-ttu-id="01b27-241">与控件关联的表对象。</span><span class="sxs-lookup"><span data-stu-id="01b27-241">The table object that is associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-242">使用 <xref:System.Web.DynamicData.DynamicControl.Table%2A> 属性可访问与包含 <xref:System.Web.DynamicData.DynamicControl> 控件的数据绑定控件关联的表的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="01b27-242">Use the <xref:System.Web.DynamicData.DynamicControl.Table%2A> property to access metadata information about the table that is associated with the data-bound control that contains the <xref:System.Web.DynamicData.DynamicControl> control.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="01b27-243"><see cref="T:System.Web.DynamicData.DynamicControl" /> 控件位于数据绑定控件内，后者未绑定到实现 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 接口的数据源控件。</span><span class="sxs-lookup"><span data-stu-id="01b27-243">The <see cref="T:System.Web.DynamicData.DynamicControl" /> control is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</span></span></exception>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Column" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string with get, set" Usage="System.Web.DynamicData.DynamicControl.UIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-244">获取或设置用于呈现数据字段的字段模板的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-244">Gets or sets the name of the field template that is used to render the data field.</span></span></summary>
        <value><span data-ttu-id="01b27-245">用于呈现数据字段的字段模板的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-245">The name of the field template that is used to render the data field.</span></span> <span data-ttu-id="01b27-246">默认值是空字符串 ("")，指示将基于数据字段类型或应用于数据模型的元数据信息，来呈现字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-246">The default is an empty string (""), which indicates that the field template will be rendered based on the data field type or on metadata information applied to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-247">使用 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 属性指定用于显示数据字段的 UI 的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-247">Use the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property to specify the field template to use to display the UI for a data field.</span></span> <span data-ttu-id="01b27-248">默认情况下，字段模板是用户控件，它们的名称包含一个后缀，用于标识用于编辑操作和插入操作的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-248">Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations.</span></span> <span data-ttu-id="01b27-249">后缀分别 _edit 和 _insert。</span><span class="sxs-lookup"><span data-stu-id="01b27-249">The suffixes are _edit and _insert, respectively.</span></span> <span data-ttu-id="01b27-250">将值设置为 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 属性时，请设置不带后缀的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-250">When you set a value to the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property, you set the name without the suffixes.</span></span> <span data-ttu-id="01b27-251">动态数据将通过计算 <xref:System.Web.DynamicData.DynamicControl.Mode%2A> 属性值标识正确的模式，并将呈现正确的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-251">Dynamic Data will identify the correct mode by evaluating the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property value and will render the correct field template.</span></span>

 <span data-ttu-id="01b27-252">如果未设置 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 属性，则默认情况下动态数据将基于字段类型呈现字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-252">If the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property is not set, by default Dynamic Data will render the field template based on the field type.</span></span> <span data-ttu-id="01b27-253">有关详细信息，请参阅[ASP.NET 动态数据基架](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)。</span><span class="sxs-lookup"><span data-stu-id="01b27-253">For more information, see [ASP.NET Dynamic Data Scaffolding](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).</span></span>

 <span data-ttu-id="01b27-254">使用 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 属性指定的字段模板特定于 <xref:System.Web.DynamicData.DynamicControl> 控件的此实例。</span><span class="sxs-lookup"><span data-stu-id="01b27-254">The field template that you specify using the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="01b27-255">您还可以通过将 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 应用到您的数据模型，来更改数据字段在整个应用程序中使用的字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-255">You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model.</span></span> <span data-ttu-id="01b27-256">设置 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 属性将替代应用于数据模型的元数据。</span><span class="sxs-lookup"><span data-stu-id="01b27-256">Setting the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property overrides the metadata applied to the data model.</span></span> <span data-ttu-id="01b27-257">有关元数据属性的详细信息，请参阅[ASP.NET 动态数据](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)。</span><span class="sxs-lookup"><span data-stu-id="01b27-257">For more information about metadata attributes, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>



## Examples
 <span data-ttu-id="01b27-258">请参阅此功能的运行时代码示例：[运行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint)。</span><span class="sxs-lookup"><span data-stu-id="01b27-258">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).</span></span>

 <span data-ttu-id="01b27-259">下面的示例演示如何指定数据字段，以使用不同的字段模板来呈现其内容。</span><span class="sxs-lookup"><span data-stu-id="01b27-259">The following example shows how you can specify a data field to use a different field template to render its contents.</span></span> <span data-ttu-id="01b27-260">第二个示例演示由 <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> 属性指定的自定义字段模板。</span><span class="sxs-lookup"><span data-stu-id="01b27-260">The second example shows the custom field template specified by the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.UIHint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/VB/Default.aspx#1)]

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.UIHint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/CS/Email.ascx#2)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/VB/Email.ascx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="01b27-261">ASP.NET 动态数据模型概述</span><span class="sxs-lookup"><span data-stu-id="01b27-261">ASP.NET Dynamic Data Model Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.DynamicData.DynamicControl.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01b27-262">获取或设置控件的验证组名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-262">Gets or sets the validation group name for the control.</span></span></summary>
        <value><span data-ttu-id="01b27-263">控件的验证组名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-263">The validation group name for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="01b27-264">使用验证组可以将页上的验证控件分配给特定类别。</span><span class="sxs-lookup"><span data-stu-id="01b27-264">Validation groups allow you to assign validation controls on a page to a specific category.</span></span> <span data-ttu-id="01b27-265">每个验证组可以独立于页面上的其他验证组进行验证。</span><span class="sxs-lookup"><span data-stu-id="01b27-265">Each validation group can be validated independently from other validation groups on the page.</span></span> <span data-ttu-id="01b27-266">使用 <xref:System.Web.DynamicData.DynamicControl.ValidationGroup%2A> 属性指定当页面回发到服务器时，<xref:System.Web.DynamicData.DynamicControl> 控件导致验证的验证组的名称。</span><span class="sxs-lookup"><span data-stu-id="01b27-266">Use the <xref:System.Web.DynamicData.DynamicControl.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.DynamicData.DynamicControl> control causes validation when the page posts back to the server.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
