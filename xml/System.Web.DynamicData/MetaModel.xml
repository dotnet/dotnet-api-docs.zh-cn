<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d97ae5bbd766b4280889c45c0ff3854e5668b7a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86680470" /></Metadata><TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="19af3-101">表示 ASP.NET 动态数据使用的一个或多个数据库。</span><span class="sxs-lookup"><span data-stu-id="19af3-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-102"><xref:System.Web.DynamicData.MetaModel>类型允许你为动态数据 Web 应用程序注册一个或多个数据上下文。</span><span class="sxs-lookup"><span data-stu-id="19af3-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="19af3-103">数据上下文是表示数据库连接的对象。</span><span class="sxs-lookup"><span data-stu-id="19af3-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="19af3-104">数据上下文有权访问一个数据模型，该数据模型表示可通过该连接访问的数据库。</span><span class="sxs-lookup"><span data-stu-id="19af3-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="19af3-105">数据模型是一个对象，它将数据库的数据实体表示为 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="19af3-106">动态数据支持基于 LINQ to SQL 的数据模型和 ADO.NET 实体框架上的数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="19af3-107">在 Visual Studio 中，可以使用 **LINQ to SQL 类** 模板或 **ADO.NET 实体数据模型** 模板生成数据模型类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="19af3-108">这些模板将对象关系设计器 (O/R 设计器) 用于 LINQ to SQL 模型，或使用实体数据模型模型 (Entity Designer) 实体框架设计器。</span><span class="sxs-lookup"><span data-stu-id="19af3-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-109">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel> type 执行以下任务，以便在 ASP.NET 网站中使用自动基架：</span><span class="sxs-lookup"><span data-stu-id="19af3-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="19af3-110">获取默认数据上下文的数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="19af3-111">获取指定数据上下文的数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="19af3-112">评估路由路径 (确定指定表的 URL) 。</span><span class="sxs-lookup"><span data-stu-id="19af3-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="19af3-113">该示例包含一个页面及其代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="19af3-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="19af3-114">若要编译该示例，需要以下各项：</span><span class="sxs-lookup"><span data-stu-id="19af3-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] <span data-ttu-id="19af3-115">或 [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="19af3-115">or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="19af3-116">一个动态数据的网站。</span><span class="sxs-lookup"><span data-stu-id="19af3-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="19af3-117">有关详细信息，请参阅 [演练：使用基架创建新的动态数据网站](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a)。</span><span class="sxs-lookup"><span data-stu-id="19af3-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="19af3-118">请参阅此功能的运行时代码示例： [运行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)。</span><span class="sxs-lookup"><span data-stu-id="19af3-118">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="19af3-119">如果存在数据上下文注册错误，则可由任何方法引发。</span><span class="sxs-lookup"><span data-stu-id="19af3-119">Can be thrown by any method if there has been a data context registration error.</span></span></exception>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/ee225428(v=vs.140)"><span data-ttu-id="19af3-120">ASP.NET 动态数据模型自定义</span><span class="sxs-lookup"><span data-stu-id="19af3-120">ASP.NET Dynamic Data Model Customization</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2012/bb384429(v=vs.110)"><span data-ttu-id="19af3-121">对象关系设计器（O/R 设计器）</span><span class="sxs-lookup"><span data-stu-id="19af3-121">Object Relational Designer (O/R Designer)</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/linq/"><span data-ttu-id="19af3-122">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="19af3-122">LINQ to SQL</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668177(v=vs.100)"><span data-ttu-id="19af3-123">如何：定义路由</span><span class="sxs-lookup"><span data-stu-id="19af3-123">How to: Define a Route</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19af3-124">实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-124">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19af3-125">实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-125">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-126">通常 <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> 在 global.asax 文件的方法中调用构造函数 `Application_Start` 。</span><span class="sxs-lookup"><span data-stu-id="19af3-126">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-127">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> 构造函数执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="19af3-127">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="19af3-128">实例化 <xref:System.Web.DynamicData.MetaModel> 类。</span><span class="sxs-lookup"><span data-stu-id="19af3-128">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="19af3-129">初始化并注册 <xref:System.Web.DynamicData.MetaModel> 实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-129">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaModel : bool -&gt; System.Web.DynamicData.MetaModel" Usage="new System.Web.DynamicData.MetaModel registerGlobally" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="registerGlobally"><span data-ttu-id="19af3-130"><see langword="true" /> 指示模型是全局注册的，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-130"><see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span></span> <span data-ttu-id="19af3-131">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-131">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="19af3-132">实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-132">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-133">此构造函数确定数据模型是否是全局注册的，以便可以使用方法检索它 <xref:System.Web.DynamicData.MetaModel.GetModel%2A> 。</span><span class="sxs-lookup"><span data-stu-id="19af3-133">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="19af3-134">它使您能够创建多个模型并使用相同的实体类型，同时避免类型冲突。</span><span class="sxs-lookup"><span data-stu-id="19af3-134">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="19af3-135">通常 <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> 在 global.asax 文件的方法中调用构造函数 `Application_Start` 。</span><span class="sxs-lookup"><span data-stu-id="19af3-135">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable&#xA;override this.CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.CreateTable provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="19af3-136">表的提供程序。</span><span class="sxs-lookup"><span data-stu-id="19af3-136">The provider for the table.</span></span></param>
        <summary><span data-ttu-id="19af3-137">实例化 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="19af3-137">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="19af3-138">表的新实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-138">A new instance of the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-139"><xref:System.Web.DynamicData.MetaModel.CreateTable%2A>可以重写方法以实例化派生类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-139">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-140">获取应用程序创建的数据模型的第一个实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-140">Gets the first instance of a data model that is created by the application.</span></span></summary>
        <value><span data-ttu-id="19af3-141">数据模型实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-141">The data-model instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-142">此属性提供了一种简单的方法来引用默认的数据模型实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-142">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="19af3-143">如果应用程序使用多个模型，则必须提供自己的方法来存储对其他数据模型的引用。</span><span class="sxs-lookup"><span data-stu-id="19af3-143">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="19af3-144">若要查找特定的数据模型，请调用 <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="19af3-144">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-145">下面的示例演示如何 <xref:System.Web.DynamicData.MetaModel.Default%2A> 在方法中使用属性 <xref:System.Web.DynamicData.MetaModel.GetModel%2A> 来获取默认数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-145">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="19af3-146">有关完整示例，请参阅 <xref:System.Web.DynamicData.MetaModel> 类概述。</span><span class="sxs-lookup"><span data-stu-id="19af3-146">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDataFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-147">获取或设置 DynamicData 文件夹在网站中的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="19af3-147">Gets or sets the virtual path of the DynamicData folder in the Web site.</span></span></summary>
        <value><span data-ttu-id="19af3-148">DynamicData 文件夹的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="19af3-148">The virtual path of the DynamicData folder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-149">此属性使您可以更改 DynamicData 文件夹的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="19af3-149">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="19af3-150">默认值为 "~/DynamicData"。</span><span class="sxs-lookup"><span data-stu-id="19af3-150">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTemplateFactory : System.Web.DynamicData.EntityTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-151">获取或设置与模型关联的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="19af3-151">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="19af3-152">与模型关联的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-152">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-153">获取或设置自定义 <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="19af3-153">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></summary>
        <value><span data-ttu-id="19af3-154"><see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="19af3-154">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-155"><xref:System.Web.DynamicData.IFieldTemplateFactory>接口允许您指定为表列创建的字段模板。</span><span class="sxs-lookup"><span data-stu-id="19af3-155">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterFactory : System.Web.DynamicData.FilterFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-156">获取或设置与模型关联的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="19af3-156">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="19af3-157">与模型关联的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-157">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetActionPath(string tableName, string action, object row) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * string * obj -&gt; string&#xA;override this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="19af3-158">对其应用操作的表的名称。</span><span class="sxs-lookup"><span data-stu-id="19af3-158">The name of the table that the action applies to.</span></span></param>
        <param name="action"><span data-ttu-id="19af3-159">要应用于表的操作。</span><span class="sxs-lookup"><span data-stu-id="19af3-159">The action to apply to the table.</span></span></param>
        <param name="row"><span data-ttu-id="19af3-160">一个对象，表示表中的一行数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-160">An object that represents a single row of data in a table.</span></span> <span data-ttu-id="19af3-161"><paramref name="row" /> 用于为查询字符串参数提供值。</span><span class="sxs-lookup"><span data-stu-id="19af3-161"><paramref name="row" /> is used to provide values for query-string parameters.</span></span></param>
        <summary><span data-ttu-id="19af3-162">返回与特定表关联的操作路径。</span><span class="sxs-lookup"><span data-stu-id="19af3-162">Returns the action path that is associated with a specific table.</span></span></summary>
        <returns><span data-ttu-id="19af3-163">与路由关联的 URL。</span><span class="sxs-lookup"><span data-stu-id="19af3-163">The URL that is associated with the route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-164">路由由表名称和操作的组合决定。</span><span class="sxs-lookup"><span data-stu-id="19af3-164">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="19af3-165">[运行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) 此功能的联机示例。</span><span class="sxs-lookup"><span data-stu-id="19af3-165">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-166">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> 方法来计算路由路径 (确定指定表的 URL) 。</span><span class="sxs-lookup"><span data-stu-id="19af3-166">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="19af3-167">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel>。</span><span class="sxs-lookup"><span data-stu-id="19af3-167">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="static member GetModel : Type -&gt; System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.GetModel contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="19af3-168">数据模型中定义的数据上下文的类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-168">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="19af3-169">返回指定上下文的数据模型实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-169">Returns the data-model instance for the specified context.</span></span></summary>
        <returns><span data-ttu-id="19af3-170">与指定上下文类型关联的数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-170">The data model that is associated with the specified context type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19af3-171">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> 方法来执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="19af3-171">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="19af3-172">正在获取默认数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-172">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="19af3-173">正在获取通过传递的上下文类型指定的数据模型。</span><span class="sxs-lookup"><span data-stu-id="19af3-173">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="19af3-174">有关完整示例，请参阅 <xref:System.Web.DynamicData.MetaModel> 类概述。</span><span class="sxs-lookup"><span data-stu-id="19af3-174">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-175">找不到表。</span><span class="sxs-lookup"><span data-stu-id="19af3-175">The table was not found.</span></span></exception>
        <summary><span data-ttu-id="19af3-176">返回描述数据模型表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-176">Returns the metadata that describes a data model table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-177"><xref:System.Web.DynamicData.MetaTable>重载方法返回的对象包含与指定表关联的元数据信息。</span><span class="sxs-lookup"><span data-stu-id="19af3-177">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="19af3-178">[运行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) 此功能的联机示例。</span><span class="sxs-lookup"><span data-stu-id="19af3-178">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-179">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.GetTable%2A> 重载方法来执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="19af3-179">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="19af3-180">获取 <xref:System.Web.DynamicData.MetaTable> 指定表的对象。</span><span class="sxs-lookup"><span data-stu-id="19af3-180">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="19af3-181">访问对象所包含的元数据信息 <xref:System.Web.DynamicData.MetaTable> 。</span><span class="sxs-lookup"><span data-stu-id="19af3-181">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="19af3-182">该示例包含一个页面及其代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="19af3-182">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx)]
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable uniqueTableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="19af3-183">标识数据模型中表的名称。</span><span class="sxs-lookup"><span data-stu-id="19af3-183">The name that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="19af3-184">返回与指定表关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-184">Returns the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="19af3-185">描述指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-185">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-186">该名称唯一地标识数据模型中的表，用于生成用于路由的相关 URL。</span><span class="sxs-lookup"><span data-stu-id="19af3-186">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-187">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> 方法获取指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-187">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="19af3-188">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="19af3-188">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19af3-189">在数据模型中找不到名称。</span><span class="sxs-lookup"><span data-stu-id="19af3-189">The name was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="19af3-190">标识数据模型中表的类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-190">The type that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="19af3-191">返回描述指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-191">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="19af3-192">描述指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-192">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19af3-193">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> 方法获取指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-193">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="19af3-194">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="19af3-194">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-195">在数据模型中找不到类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-195">The type was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string * Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable (tableName, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="19af3-196">表的名称。</span><span class="sxs-lookup"><span data-stu-id="19af3-196">The name of the table.</span></span></param>
        <param name="contextType"><span data-ttu-id="19af3-197">要搜索表的数据上下文。</span><span class="sxs-lookup"><span data-stu-id="19af3-197">The data context to search for the table.</span></span></param>
        <summary><span data-ttu-id="19af3-198">返回描述指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-198">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="19af3-199">描述指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-199">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19af3-200">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> 方法获取指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-200">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="19af3-201">有关完整示例，请参见<xref:System.Web.DynamicData.MetaModel.GetTable%2A>。</span><span class="sxs-lookup"><span data-stu-id="19af3-201">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-202"><paramref name="tablename" /> 或 <paramref name="contextType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-202"><paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19af3-203">未注册上下文或数据上下文中不存在表。</span><span class="sxs-lookup"><span data-stu-id="19af3-203">The context is not registered or the table does not exist in the data context.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19af3-204">注册数据上下文。</span><span class="sxs-lookup"><span data-stu-id="19af3-204">Registers the data context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-205">您可以使用类的属性来定义数据上下文初始化信息 <xref:System.Web.DynamicData.ContextConfiguration> 。</span><span class="sxs-lookup"><span data-stu-id="19af3-205">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="19af3-206">实例化数据上下文的工厂。</span><span class="sxs-lookup"><span data-stu-id="19af3-206">The factory for instantiating the data context.</span></span></param>
        <summary><span data-ttu-id="19af3-207">注册上下文工厂指定的数据上下文。</span><span class="sxs-lookup"><span data-stu-id="19af3-207">Registers the data context that is specified by a context factory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-208">此方法使用由类定义的默认上下文信息 <xref:System.Web.DynamicData.ContextConfiguration> 。</span><span class="sxs-lookup"><span data-stu-id="19af3-208">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="19af3-209">它使您能够使用自己的构造函数实例化数据上下文。</span><span class="sxs-lookup"><span data-stu-id="19af3-209">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContext(class System.Type contextType) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterContext(Type ^ contextType);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type -&gt; unit&#xA;override this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="19af3-210">数据模型中定义的数据上下文的类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-210">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="19af3-211">注册数据上下文实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-211">Registers a data-context instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-212">此方法使用由类定义的默认上下文信息 <xref:System.Web.DynamicData.ContextConfiguration> 。</span><span class="sxs-lookup"><span data-stu-id="19af3-212">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (dataModelProvider As DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="19af3-213">数据模型的提供程序。</span><span class="sxs-lookup"><span data-stu-id="19af3-213">A provider for the data model.</span></span></param>
        <summary><span data-ttu-id="19af3-214">通过使用数据模型提供程序来注册数据上下文实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-214">Registers a data context instance by using a data-model provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="19af3-215">用于实例化数据模型上下文的委托。</span><span class="sxs-lookup"><span data-stu-id="19af3-215">A delegate that is used to instantiate the data model context.</span></span></param>
        <param name="configuration"><span data-ttu-id="19af3-216"><see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="19af3-216">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="19af3-217">通过使用指定的上下文配置并启用自定义构造函数，注册数据上下文实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-217">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-218">此方法中的上下文工厂使你可以使用自定义构造函数实例化数据模型上下文。</span><span class="sxs-lookup"><span data-stu-id="19af3-218">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-219"><paramref name="contextFactory" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-219"><paramref name="contextFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19af3-220"><paramref name="contextType" /> 实例化的 <paramref name="contextFactory" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="19af3-220">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="19af3-221">数据模型中定义的数据上下文的类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-221">The type of the data context as defined in the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="19af3-222"><see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文的配置信息。</span><span class="sxs-lookup"><span data-stu-id="19af3-222">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="19af3-223">使用指定的上下文配置注册数据上下文实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-223">Registers a data-context instance by using the specified context configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19af3-224">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> 方法注册启用了基架的数据上下文（由参数指定） `configuration` 。</span><span class="sxs-lookup"><span data-stu-id="19af3-224">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-225"><paramref name="contextType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-225"><paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (dataModelProvider As DataModelProvider, configuration As ContextConfiguration)" FrameworkAlternate="netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterContext (dataModelProvider As DataModelProvider, configuration As ContextConfiguration)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="19af3-226">数据模型的提供程序。</span><span class="sxs-lookup"><span data-stu-id="19af3-226">A provider for the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="19af3-227"><see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="19af3-227">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="19af3-228">通过使用指定的上下文配置并启用数据模型提供程序，注册数据上下文实例。</span><span class="sxs-lookup"><span data-stu-id="19af3-228">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-229"><paramref name="dataModelProvider" /> 或 <paramref name="configuration" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-229"><paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="19af3-230">已注册 <paramref name="contextType" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-230"><paramref name="contextType" /> is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberSignature Language="F#" Value="static member ResetRegistrationException : unit -&gt; unit" Usage="System.Web.DynamicData.MetaModel.ResetRegistrationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19af3-231">重置可能发生的任何前一个上下文注册错误。</span><span class="sxs-lookup"><span data-stu-id="19af3-231">Resets any previous context registration error that might have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-232">如果在数据上下文注册过程中发生错误，则会在所有后续操作中缓存并引发异常。</span><span class="sxs-lookup"><span data-stu-id="19af3-232">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="19af3-233">例如，如果在应用程序启动时出现错误，则会在每个请求上引发错误。</span><span class="sxs-lookup"><span data-stu-id="19af3-233">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="19af3-234">调用此方法可清除错误并启用要执行的新上下文注册。</span><span class="sxs-lookup"><span data-stu-id="19af3-234">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-235">获取属于数据模型一部分的所有表的集合。</span><span class="sxs-lookup"><span data-stu-id="19af3-235">Gets a collection of all the tables that are part of the data model.</span></span></summary>
        <value><span data-ttu-id="19af3-236">一个包含属于数据模型的表的集合。</span><span class="sxs-lookup"><span data-stu-id="19af3-236">A collection that contains the tables that belong to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-237">该集合包含数据模型中的所有表，其中包括不可见 (不是动态数据基架) 的一部分的表。</span><span class="sxs-lookup"><span data-stu-id="19af3-237">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="19af3-238">[运行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) 此功能的联机示例。</span><span class="sxs-lookup"><span data-stu-id="19af3-238">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19af3-239">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.Tables%2A> 和 <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> 属性来执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="19af3-239">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="19af3-240">获取数据模型中所有表的集合，并将其显示在控件中 `GridView` 。</span><span class="sxs-lookup"><span data-stu-id="19af3-240">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="19af3-241">获取数据模型中的可见表的集合，并将其显示在 `GridView` 控件中。</span><span class="sxs-lookup"><span data-stu-id="19af3-241">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="19af3-242">该示例包含一个页面及其代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="19af3-242">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19af3-243">尝试获取与指定表关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-243">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : string * MetaTable -&gt; bool" Usage="metaModel.TryGetTable (uniqueTableName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="19af3-244">唯一标识表的名称。</span><span class="sxs-lookup"><span data-stu-id="19af3-244">The name that uniquely identifies the table.</span></span></param>
        <param name="table"><span data-ttu-id="19af3-245">当此方法返回时，如果它找到了请求的表，则包含该表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-245">When this method returns, and if it has found the requested table, contains the metadata for that table.</span></span> <span data-ttu-id="19af3-246">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="19af3-246">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="19af3-247">尝试获取与指定表关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-247">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="19af3-248">如果找到了表元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-248"><see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-249">此方法获取与指定表关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-249">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="19af3-250">如果未找到该表，则此方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="19af3-250">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="19af3-251">这不同于 <xref:System.Web.DynamicData.MetaModel.GetTable%2A> 方法，如果找不到表，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="19af3-251">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-252"><paramref name="uniqueTableName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-252"><paramref name="uniqueTableName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : Type * MetaTable -&gt; bool" Usage="metaModel.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="19af3-253">表类型。</span><span class="sxs-lookup"><span data-stu-id="19af3-253">The table type.</span></span></param>
        <param name="table"><span data-ttu-id="19af3-254">当此方法返回时，并且如果找到了请求的表，则包含指定表的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-254">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span></span> <span data-ttu-id="19af3-255">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="19af3-255">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="19af3-256">尝试获取与指定表关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-256">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="19af3-257">如果找到了表元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-257"><see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19af3-258">此方法获取与指定表关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="19af3-258">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="19af3-259">如果未找到该表，则此方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="19af3-259">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="19af3-260">这不同于 <xref:System.Web.DynamicData.MetaModel.GetTable%2A> 方法，如果找不到表，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="19af3-260">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19af3-261"><paramref name="entityType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="19af3-261"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleTables : System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19af3-262">获取数据模型中可见表的集合。</span><span class="sxs-lookup"><span data-stu-id="19af3-262">Gets a collection of the visible tables in the data model.</span></span></summary>
        <value><span data-ttu-id="19af3-263">可见表是指启用了基架的表。</span><span class="sxs-lookup"><span data-stu-id="19af3-263">A visible table refers to a table that has scaffolding enabled.</span></span> <span data-ttu-id="19af3-264">这意味着它是具有 List.aspx 页的表。</span><span class="sxs-lookup"><span data-stu-id="19af3-264">This means that it is a table for which a List.aspx page exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19af3-265">下面的示例演示如何使用 <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> 属性获取数据模型中的可见表的集合。</span><span class="sxs-lookup"><span data-stu-id="19af3-265">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="19af3-266">有关完整示例，请参阅 <xref:System.Web.DynamicData.MetaModel> 类概述。</span><span class="sxs-lookup"><span data-stu-id="19af3-266">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
