<Type Name="DynamicFilter" FullName="System.Web.DynamicData.DynamicFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f84affd983ceb52108c09eb4dd5cf8eebafaed42" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89697983" /></Metadata><TypeSignature Language="C#" Value="public class DynamicFilter : System.Web.UI.Control" FrameworkAlternate="netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilter extends System.Web.UI.Control" FrameworkAlternate="netframework-4.0" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilter&#xA;Inherits Control" FrameworkAlternate="netframework-4.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilter : System::Web::UI::Control" FrameworkAlternate="netframework-4.0" />
  <TypeSignature Language="F#" Value="type DynamicFilter = class&#xA;    inherit Control" FrameworkAlternate="netframework-4.0" />
  <TypeSignature Language="C#" Value="public class DynamicFilter : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilter extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilter&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilter : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type DynamicFilter = class&#xA;    inherit Control&#xA;    interface IFilterExpressionProvider" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a9f89-101">显示用于使用指定列筛选表行的 UI。</span><span class="sxs-lookup"><span data-stu-id="a9f89-101">Displays the UI for filtering table rows using a specified column.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-102">本主题内容：</span><span class="sxs-lookup"><span data-stu-id="a9f89-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="a9f89-103">介绍</span><span class="sxs-lookup"><span data-stu-id="a9f89-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="a9f89-104">ClassContext</span><span class="sxs-lookup"><span data-stu-id="a9f89-104">ClassContext</span></span>](#ClassContext)  
  
-   [<span data-ttu-id="a9f89-105">声明性语法</span><span class="sxs-lookup"><span data-stu-id="a9f89-105">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="a9f89-106">介绍</span><span class="sxs-lookup"><span data-stu-id="a9f89-106">Introduction</span></span>  
 <span data-ttu-id="a9f89-107"><xref:System.Web.DynamicData.DynamicFilter>控件在页标记中用于生成用于筛选表行的 UI。</span><span class="sxs-lookup"><span data-stu-id="a9f89-107">The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows.</span></span> <span data-ttu-id="a9f89-108">动态数据使用 ~ \DynamicData\Filters 文件夹中的默认筛选器模板创建 UI。</span><span class="sxs-lookup"><span data-stu-id="a9f89-108">Dynamic Data creates the UI by using the default filter templates that are in the ~\DynamicData\Filters folder.</span></span> <span data-ttu-id="a9f89-109">这些模板支持外键、布尔值和枚举列类型。</span><span class="sxs-lookup"><span data-stu-id="a9f89-109">These templates support foreign-key, Boolean, and enumeration column types.</span></span>  
  
 <span data-ttu-id="a9f89-110">下表显示了您可以执行的一些任务。</span><span class="sxs-lookup"><span data-stu-id="a9f89-110">The following table shows some of the tasks you can perform.</span></span>  
  
|<span data-ttu-id="a9f89-111">方案</span><span class="sxs-lookup"><span data-stu-id="a9f89-111">Scenario</span></span>|<span data-ttu-id="a9f89-112">说明</span><span class="sxs-lookup"><span data-stu-id="a9f89-112">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="a9f89-113">指定要用于表行筛选的列。</span><span class="sxs-lookup"><span data-stu-id="a9f89-113">Specify the column to use for table row filtering.</span></span>|<span data-ttu-id="a9f89-114">使用属性 <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> 指定要用于表行筛选的列。</span><span class="sxs-lookup"><span data-stu-id="a9f89-114">Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.</span></span>|  
|<span data-ttu-id="a9f89-115">指定用于创建 UI 的筛选器模板的名称。</span><span class="sxs-lookup"><span data-stu-id="a9f89-115">Specify the name of the filter template to use to create the UI.</span></span>|<span data-ttu-id="a9f89-116">使用 "属性" <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> 指定用于创建 UI 的筛选器模板的名称。</span><span class="sxs-lookup"><span data-stu-id="a9f89-116">Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.</span></span>|  
|<span data-ttu-id="a9f89-117">在呈现 UI 之前执行自定义操作。</span><span class="sxs-lookup"><span data-stu-id="a9f89-117">Perform custom operations before the UI is rendered.</span></span>|<span data-ttu-id="a9f89-118">在 <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> 呈现 UI 之前，使用执行自定义操作。</span><span class="sxs-lookup"><span data-stu-id="a9f89-118">Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.</span></span>|  
  
 <span data-ttu-id="a9f89-119">您可以按以下方式指定筛选器模板以供使用：</span><span class="sxs-lookup"><span data-stu-id="a9f89-119">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="a9f89-120">通过使用 <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> 页标记中的属性。</span><span class="sxs-lookup"><span data-stu-id="a9f89-120">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="a9f89-121">此方法是一种表示层自定义项，它独立于架构 (数据库) ，适用于单个页面。</span><span class="sxs-lookup"><span data-stu-id="a9f89-121">This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="a9f89-122">通过使用 <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> 模型中的属性。</span><span class="sxs-lookup"><span data-stu-id="a9f89-122">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="a9f89-123">此方法是一种数据层自定义项，它依赖于特定架构 (数据库) ，并应用于整个应用程序。</span><span class="sxs-lookup"><span data-stu-id="a9f89-123">This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="a9f89-124">如果使用这两种方法，则标记中指定的筛选器模板将优先于数据模型中所指定的模板。</span><span class="sxs-lookup"><span data-stu-id="a9f89-124">If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.</span></span>  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a><span data-ttu-id="a9f89-125">类上下文</span><span class="sxs-lookup"><span data-stu-id="a9f89-125">Class Context</span></span>  
 <span data-ttu-id="a9f89-126"><xref:System.Web.DynamicData.DynamicFilter>控件设计为与控件一起使用 <xref:System.Web.UI.WebControls.QueryExtender> 。</span><span class="sxs-lookup"><span data-stu-id="a9f89-126">The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="a9f89-127"><xref:System.Web.DynamicData.DynamicFilter>控件由 <xref:System.Web.DynamicData.DynamicFilterExpression> <xref:System.Web.UI.WebControls.QueryExtender> 页面标记中对象内的实例引用。</span><span class="sxs-lookup"><span data-stu-id="a9f89-127">The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.</span></span>  
  
 <span data-ttu-id="a9f89-128">下图显示了为了通过外键列实现表行筛选而动态数据遵循的步骤。</span><span class="sxs-lookup"><span data-stu-id="a9f89-128">The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.</span></span>  
  
 <span data-ttu-id="a9f89-129">![动态数据查询元素](~/add/media/dynamic-dataquery.png "动态数据查询元素")</span><span class="sxs-lookup"><span data-stu-id="a9f89-129">![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png "Dynamic Data Query Elements")</span></span>  
  
1.  <span data-ttu-id="a9f89-130"><xref:System.Web.DynamicData.DynamicFilter>控件将所选值传递到 <xref:System.Web.UI.WebControls.QueryExtender> 控件。</span><span class="sxs-lookup"><span data-stu-id="a9f89-130">The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
2.  <span data-ttu-id="a9f89-131"><xref:System.Web.UI.WebControls.QueryExtender>控件使用值来创建查询筛选信息。</span><span class="sxs-lookup"><span data-stu-id="a9f89-131">The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information.</span></span> <span data-ttu-id="a9f89-132">然后，它将此信息传递到数据源控件。</span><span class="sxs-lookup"><span data-stu-id="a9f89-132">It then passes this information to the data source control.</span></span>  
  
3.  <span data-ttu-id="a9f89-133">数据源控件将筛选查询信息传递到数据源提供程序。</span><span class="sxs-lookup"><span data-stu-id="a9f89-133">The data source control passes the filtering query information to the data source provider.</span></span>  
  
4.  <span data-ttu-id="a9f89-134">数据源提供程序将查询传递到数据库。</span><span class="sxs-lookup"><span data-stu-id="a9f89-134">The data source provider passes the query to the database.</span></span>  
  
5.  <span data-ttu-id="a9f89-135">数据库返回筛选的表行。</span><span class="sxs-lookup"><span data-stu-id="a9f89-135">The database returns the filtered table rows.</span></span>  
  
6.  <span data-ttu-id="a9f89-136">数据源提供程序将此数据发送回数据源控件。</span><span class="sxs-lookup"><span data-stu-id="a9f89-136">The data source provider sends this data back to the data source control.</span></span>  
  
7.  <span data-ttu-id="a9f89-137">数据源控件将筛选的表行传递到数据绑定控件以便显示。</span><span class="sxs-lookup"><span data-stu-id="a9f89-137">The data source control passes the filtered table rows to the data-bound control for display.</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="a9f89-138">声明性语法</span><span class="sxs-lookup"><span data-stu-id="a9f89-138">Declarative Syntax</span></span>  
  
```  
<asp:DynamicFilter  
    ID="Control ID"  
    DataField="Name of the data field to use for filtering"  
    EnableViewState="True|False"   
    FilterUIHint="Name of the filter template to generate the UI"  
    OnFilterChanged="Filter changed event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="True|False"  
    runat="server"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="a9f89-139">此位置提供了包含源代码的 Visual Studio 项目： [下载](https://go.microsoft.com/fwlink/?LinkId=168914)。</span><span class="sxs-lookup"><span data-stu-id="a9f89-139">A Visual Studio project with source code is available at this location: [Download](https://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 <span data-ttu-id="a9f89-140">下面的示例使用默认的 ForeignKey 筛选器模板创建用于按 ProductCategory 外键列筛选 Products 表行的 UI。</span><span class="sxs-lookup"><span data-stu-id="a9f89-140">The following examples use the default ForeignKey.ascx filter template to create the UI for filtering the Products table rows by the ProductCategory foreign-key column.</span></span> <span data-ttu-id="a9f89-141">当用户选择 ProductCategory 值时，将仅显示包含该值的行。</span><span class="sxs-lookup"><span data-stu-id="a9f89-141">When the user selects a ProductCategory value, only the rows that contain that value are displayed.</span></span>  
  
 <span data-ttu-id="a9f89-142">该示例需要以下各项：</span><span class="sxs-lookup"><span data-stu-id="a9f89-142">The example requires the following:</span></span>  
  
-   <span data-ttu-id="a9f89-143">动态数据网站或动态数据 Web 应用程序。</span><span class="sxs-lookup"><span data-stu-id="a9f89-143">A Dynamic Data Web site or a Dynamic Data Web application.</span></span> <span data-ttu-id="a9f89-144">这使您可以创建 `AdventureWorksLTDataContext` 数据库的数据上下文，并为要访问的表创建类。</span><span class="sxs-lookup"><span data-stu-id="a9f89-144">This enables you to create the `AdventureWorksLTDataContext` data context for the database and to create the classes for the tables to access.</span></span> <span data-ttu-id="a9f89-145">有关详细信息，请参阅 `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`。</span><span class="sxs-lookup"><span data-stu-id="a9f89-145">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c86f5d5-795c-4b28-8733-8ea9c0802d0f"><span data-ttu-id="a9f89-146">演练：使用父子关系筛选表中的行</span><span class="sxs-lookup"><span data-stu-id="a9f89-146">Walkthrough: Filtering Rows in Tables with a Parent-Child Relationship</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9f89-147">初始化 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a9f89-147">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-148">通常不会 <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> 直接调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="a9f89-148">Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly.</span></span> <span data-ttu-id="a9f89-149">相反，应 <xref:System.Web.DynamicData.DynamicFilter> 在页标记中使用类，并在加载页面时初始化类。</span><span class="sxs-lookup"><span data-stu-id="a9f89-149">Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected internal System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.Column" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.DynamicFilter.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9f89-150">获取或设置要用于筛选的表列。</span><span class="sxs-lookup"><span data-stu-id="a9f89-150">Gets or sets the table column to use for filtering.</span></span></summary>
        <value><span data-ttu-id="a9f89-151">要用于筛选的表列。</span><span class="sxs-lookup"><span data-stu-id="a9f89-151">The table column to use for filtering.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-152">此属性仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="a9f89-152">This property is for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Data")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Data")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9f89-153">获取或设置要用于表行筛选的列的名称。</span><span class="sxs-lookup"><span data-stu-id="a9f89-153">Gets or sets the name of the column to use for table row filtering.</span></span></summary>
        <value><span data-ttu-id="a9f89-154">用于表行筛选的列的名称。</span><span class="sxs-lookup"><span data-stu-id="a9f89-154">The name of the column used for table row filtering.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9f89-155">下面的示例演示了如何在标记中指定表行筛选的列。</span><span class="sxs-lookup"><span data-stu-id="a9f89-155">The following example shows how to specify the column for table row filtering in markup.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    DataField="ProductCategory" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FilterChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FilterChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.DynamicData.DynamicFilter.FilterChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FilterChanged As EventHandler " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FilterChanged;" />
      <MemberSignature Language="F#" Value="member this.FilterChanged : EventHandler " Usage="member this.FilterChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event FilterChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9f89-156">在用户为外键选择值时发生。</span><span class="sxs-lookup"><span data-stu-id="a9f89-156">Occurs when the user select a value for the foreign key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-157"><xref:System.Web.DynamicData.DynamicFilter.FilterChanged>当用户选择外键值，然后在呈现新值之前，将引发事件。</span><span class="sxs-lookup"><span data-stu-id="a9f89-157">The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered.</span></span> <span data-ttu-id="a9f89-158">这使您能够提供事件处理方法，该方法可执行自定义的操作，如自定义分页。</span><span class="sxs-lookup"><span data-stu-id="a9f89-158">This enables you to provide an event-handling method that can perform custom operations, such as custom paging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9f89-159">下面的示例演示如何处理筛选器更改事件。</span><span class="sxs-lookup"><span data-stu-id="a9f89-159">The following example shows how to handle a filter-changed event.</span></span> <span data-ttu-id="a9f89-160">处理程序在显示筛选行之前重置页索引。</span><span class="sxs-lookup"><span data-stu-id="a9f89-160">The handler resets the page index before the filtered rows are displayed.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FilterTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FilterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FilterTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9f89-161">获取与此控件的当前实例关联的筛选器模板。</span><span class="sxs-lookup"><span data-stu-id="a9f89-161">Gets the filter template that is associated with the current instance of this control.</span></span></summary>
        <value><span data-ttu-id="a9f89-162">与此控件的当前实例关联的筛选器模板。</span><span class="sxs-lookup"><span data-stu-id="a9f89-162">The filter template that is associated with the current instance of this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-163">动态数据生成用于筛选支持列类型的表行的 UI。</span><span class="sxs-lookup"><span data-stu-id="a9f89-163">Dynamic Data generates the UI for filtering table rows for supported column types.</span></span> <span data-ttu-id="a9f89-164">它使用 ~ \DynamicData\Filters 文件夹中的默认筛选器模板。</span><span class="sxs-lookup"><span data-stu-id="a9f89-164">It uses the default filter templates that are in the ~\DynamicData\Filters folder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9f89-165">获取或设置用于创建 UI 的筛选器模板的名称。</span><span class="sxs-lookup"><span data-stu-id="a9f89-165">Gets or sets the name of the filter template that is used to create the UI.</span></span></summary>
        <value><span data-ttu-id="a9f89-166">筛选器模板的名称。</span><span class="sxs-lookup"><span data-stu-id="a9f89-166">The name of the filter template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-167"><xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A>属性允许您指定筛选器模板以创建用于表行筛选的 UI。</span><span class="sxs-lookup"><span data-stu-id="a9f89-167">The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering.</span></span> <span data-ttu-id="a9f89-168">您可以按以下方式指定筛选器模板以供使用：</span><span class="sxs-lookup"><span data-stu-id="a9f89-168">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="a9f89-169">通过使用 <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> 页标记中的属性。</span><span class="sxs-lookup"><span data-stu-id="a9f89-169">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="a9f89-170">此方法是一种表示层自定义项，它独立于架构 (数据库) 并适用于单个页面。</span><span class="sxs-lookup"><span data-stu-id="a9f89-170">This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="a9f89-171">通过使用 <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> 模型中的属性。</span><span class="sxs-lookup"><span data-stu-id="a9f89-171">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="a9f89-172">此方法是一种数据层自定义项，它依赖于特定架构 (数据库) 并适用于整个应用程序。</span><span class="sxs-lookup"><span data-stu-id="a9f89-172">This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="a9f89-173">如果使用这两种方法，则标记中指定的筛选器模板优先于数据模型中指定的模板。</span><span class="sxs-lookup"><span data-stu-id="a9f89-173">If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9f89-174">下面的示例演示了如何在标记中指定用于筛选的筛选器模板。</span><span class="sxs-lookup"><span data-stu-id="a9f89-174">The following example shows how to specify the filter template in markup to use for filtering.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    FilterUIHint="ForeignKey" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicFilter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a9f89-175">接收服务器控件内容的对象。</span><span class="sxs-lookup"><span data-stu-id="a9f89-175">The object that receives the server control content.</span></span></param>
        <summary><span data-ttu-id="a9f89-176">将服务器控件内容发送到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a9f89-176">Sends server control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f89-177">编写器将内容呈现到页面。</span><span class="sxs-lookup"><span data-stu-id="a9f89-177">The writer renders the content to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.DynamicData.IFilterExpressionProvider.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable&#xA;override this.System.Web.DynamicData.IFilterExpressionProvider.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicFilter.System.Web.DynamicData.IFilterExpressionProvider.GetQueryable source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.DynamicData.IFilterExpressionProvider.Initialize : System.Web.UI.WebControls.IQueryableDataSource -&gt; unit&#xA;override this.System.Web.DynamicData.IFilterExpressionProvider.Initialize : System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicFilter.System.Web.DynamicData.IFilterExpressionProvider.Initialize dataSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
