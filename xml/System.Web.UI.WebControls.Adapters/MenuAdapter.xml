<Type Name="MenuAdapter" FullName="System.Web.UI.WebControls.Adapters.MenuAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdde4e142ffaf694bc046b981fe5fe95b24b9639" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89768782" /></Metadata><TypeSignature Language="C#" Value="public class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuAdapter&#xA;Inherits WebControlAdapter&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type MenuAdapter = class&#xA;    inherit WebControlAdapter&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供用于修改特定浏览器的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件行为的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> <xref:System.Web.UI.WebControls.Menu> 用于修改特定浏览器或浏览器类的控件的标记或行为，或充当某些功能的筛选器。  
  
 默认情况下， <xref:System.Web.UI.WebControls.MenuItem> 控件中的对象 <xref:System.Web.UI.WebControls.Menu> 呈现为超链接，以容纳菜单导航。 <xref:System.Web.UI.WebControls.Menu>类通过实现接口来维护状态， <xref:System.Web.UI.IPostBackEventHandler> 以便它能够在回发期间响应和引发特定事件。 您可以扩展 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> 类，以便进一步自定义控件的呈现或行为 <xref:System.Web.UI.WebControls.Menu> 。  
  
 对于适配器，初始请求会导致 .NET Framework 在给定请求浏览器特征的情况下搜索该控件的映射适配器。 <xref:System.Web.HttpBrowserCapabilities>类使用浏览器定义文件来识别客户端浏览器的特征并将适配器映射到浏览器类型。  
  
 有关 ASP.NET 中的自适应呈现的详细信息，请参阅 [自适应控件行为的结构概述](https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100))。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.AspNetHostingPermission" />
    <altmember cref="T:System.Web.HttpBrowserCapabilities" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100)">自适应控制行为的体系结构概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于适配器，初始请求会导致 .NET Framework 在给定请求浏览器特征的情况下搜索该控件的映射适配器。 找到适配器后，控件在其属性中保存对映射的适配器实例的引用 <xref:System.Web.UI.Control.Adapter%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.Menu Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Menu Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Menu" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::Menu ^ Control { System::Web::UI::WebControls::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.Menu" Usage="System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索对与此 <see cref="T:System.Web.UI.WebControls.Menu" /> 对象关联的 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 控件的强类型引用。</summary>
        <value>与当前 <see cref="T:System.Web.UI.WebControls.Menu" /> 对象关联的 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A>属性提供了一种方法来引用适配器的相应控件。 当适配器与特定控件关联时，.NET Framework 将调用该适配器的生命周期方法，以取代控件的生命周期方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A> 属性来检索 <xref:System.Web.UI.WebControls.Menu> 父类的控件。 此代码示例是为类提供的更大示例的一部分 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> 。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/CS/contosomenuadapter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/VB/contosomenuadapter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadAdapterControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadAdapterControlState : obj -&gt; unit" Usage="menuAdapter.LoadAdapterControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">包含适配器状态信息的字典形式的 <see cref="T:System.Object" />。</param>
        <summary>加载 <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" /> 方法在对页面的前一个请求期间保存的任何控件状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当适配器需要维护专用状态信息时，它可以重写 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> 和 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> 方法。 如果是 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> 类，其中显示的菜单层次结构依赖于先前选定的 <xref:System.Web.UI.WebControls.MenuItem> 对象，则 `state` 提供一个名称/值对字典，其中包含菜单层次结构中的选定项的路径。 `state`参数是在 <xref:System.Web.UI.Pair> 之前的 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> 页面请求过程中由保存的对象。  
  
 如果控件未注册为参与控件状态，则适配器必须注册控件状态。 除了其他生命周期方法，还会保留适配器控制状态以及控件的状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/1whwt1k7(v=vs.100)">控件状态与视图状态示例</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menuAdapter.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">与此事件关联的 <see cref="T:System.EventArgs" /> 数据。</param>
        <summary>将关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件注册为一个要求控件状态的控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A>方法将关联的控件注册为需要控件状态的控件。 默认情况下，.NET Framework 调用 Web 服务器控件自己的 <xref:System.Web.UI.Control.OnInit%2A> 方法。 但是， <xref:System.Web.UI.Control.Adapter%2A> 设置服务器控件的属性后，.NET Framework 将调用方法的适配器实现， <xref:System.Web.UI.Control.OnInit%2A> 而不是控件的实现。  
  
 使用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> 方法初始化控件中的设置。 在回发过程中，这是管理与现有视图状态数据交互的重要阶段。 有关详细信息，请参阅 [自适应控制行为的体系结构概述](https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果适配器重写 <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" /> 方法，则它必须调用基类上的相应方法。 否则，将不会引发控件自己的 <see cref="E:System.Web.UI.Control.Init" /> 事件。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menuAdapter.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">与此事件关联的 <see cref="T:System.EventArgs" /> 数据。</param>
        <summary>处理关联的 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 控件的 <see cref="T:System.Web.UI.WebControls.Menu" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A>方法调用 `OnPreRender` 类中的内部方法 <xref:System.Web.UI.WebControls.Menu> 。 父类的所有其他预呈现功能（如数据绑定、应用样式和事件分配）都按预期方式执行。  
  
 默认情况下，.NET Framework 调用 <xref:System.Web.UI.WebControls.Menu> 控件的 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> 方法。 但是，在 <xref:System.Web.UI.Control.Adapter%2A> 设置该控件的属性后，.NET Framework 将调用该适配器的方法实现， <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> 而不是控件的实现。  
  
 使用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A> 方法可在控件中完成任何设置。 在此阶段中对控件属性所做的更改将保存到视图状态，但不会保存在方法中所做的更改 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 。 有关详细信息，请参阅 [自适应控制行为的体系结构概述](https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果适配器重写 <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" /> 方法，则它必须调用基类上的相应方法。 否则，将不会引发控件自己的 <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> 方法。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menuAdapter.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">一个 <see cref="T:System.String" />，表示菜单层次结构中当前节点的路径。</param>
        <summary>用于在引发回发事件时维护菜单的路径。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent%2A>当引发事件时，将调用方法 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> ，用于维护菜单的导航路径。 `eventArgument`参数包含用于标识菜单层次结构中当前位置的菜单项的分隔字符串。  
  
 页将的值传递 `eventArgument` 给关联的控件的 <xref:System.Web.UI.WebControls.Menu.RaisePostBackEvent%2A> 方法。 关联的 <xref:System.Web.UI.WebControls.Menu> 控件还呈现导致回发发生的标记元素。 如果控件呈现用于回发的客户端脚本，则会在参数中传递脚本中的参数 `eventArgument` 。 如果回发是由简单提交引起的， `eventArgument` 则为 `null` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前节点的深度超出了允许范围。 无效声明、上次请求后进行了更改或伪造（欺诈）的请求都可能导致这种状况。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 实例，包含用于生成和呈现特定于设备的输出的方法。</param>
        <summary>添加标记特性，并将表示控件开始标记的标志写入到将被发送至浏览器或设备的输出流中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>方法添加标记特性，并将控件开始标记的标记写入到发送到客户端浏览器的响应流的输出流中。 <xref:System.Web.UI.WebControls.MenuItem>对象将在方法中单独呈现 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> ，并将通过调用后续方法关闭控件 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> 。  
  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>若要实现自定义行为，请重写。 例如，重写方法，以便在任何控件内容（例如）之前将多个标记写入响应流 `<table><tr><td>` 。 将 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> 方法与方法结合使用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> ，以确保在输出中开始和结束标记一致性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含可生成和呈现特定于设备的输出的方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中关联的菜单项作为一系列超链接写入到输出流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法将 <xref:System.Web.UI.WebControls.MenuItem> 关联控件的对象 <xref:System.Web.UI.WebControls.Menu> 作为超链接写入到输出流中。 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法是从方法调用的 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> ，用于对呈现到设备浏览器的标记代码进行修改。  
  
 控件属性应该在生命周期的此阶段之前设置，并且仅在此处完成控件的实际标记创建。 在生命周期的此阶段对控件所做的更改不会保存到视图状态。 若要保存对控件所做的更改，请重写 <xref:System.Web.UI.Control.OnPreRender%2A> 事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前项的深度超出了允许范围。  
  
 - 或 -  
  
 禁用了当前项。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menuAdapter.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 实例，包含用于生成和呈现特定于设备的输出的方法。</param>
        <summary>创建最终的标记，并将控件的结束标记 (tag) 的标记 (markup) 写入发出至浏览器或设备的输出流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>方法将控件结束标记的标记写入到发送到客户端浏览器的响应流的输出流。 特性、样式特性和开始标记在方法中呈现 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> 。 <xref:System.Web.UI.WebControls.MenuItem>对象是在方法中单独呈现的 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> 。  
  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>若要实现自定义行为，请重写。 例如，重写方法，以便在任何控件内容（如）后将多个结束标记写入响应流 `</td></tr></table>` 。 将 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A> 方法与方法结合使用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A> ，以确保在输出中开始和结束标记一致性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderItem">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderItem (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderItem(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.MenuItem item, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderItem (writer As HtmlTextWriter, item As MenuItem, position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderItem(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::MenuItem ^ item, int position);" />
      <MemberSignature Language="F#" Value="abstract member RenderItem : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.MenuItem * int -&gt; unit&#xA;override this.RenderItem : System.Web.UI.HtmlTextWriter * System.Web.UI.WebControls.MenuItem * int -&gt; unit" Usage="menuAdapter.RenderItem (writer, item, position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 实例，包含用于生成和呈现特定于设备的输出的方法。</param>
        <param name="item"><see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象，包含要写入响应流的属性。</param>
        <param name="position">指定的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象在菜单层次结构中的位置。</param>
        <summary>将一个菜单项以超链接的形式呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A>方法从方法中调用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> 以检索对象的样式和间距特性 <xref:System.Web.UI.WebControls.MenuItem> ，并将它们应用于新创建的超链接元素。 在方法中遍历菜单层次结构 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A> ，并调用 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A> 方法来呈现每个项。 每一项都呈现为超链接，并继承指定控件的属性和样式 <xref:System.Web.UI.WebControls.MenuItem> 。 呈现到页面的超链接是以下内容之一：  
  
-   用于打开或选择项的回发事件。  
  
-   用于导航到在控件的属性中指定的目标的链接 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> <xref:System.Web.UI.WebControls.MenuItem> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveAdapterControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveAdapterControlState : unit -&gt; obj" Usage="menuAdapter.SaveAdapterControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页面回发到服务器以来对适配器私有控件状态所做的任何更改。</summary>
        <returns>一个 <see cref="T:System.Object" />，其中包含适配器的控件状态信息作为 <see cref="T:System.Web.UI.StateBag" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A>方法使用 <xref:System.Web.UI.WebControls.Menu> 控件状态维护菜单的当前导航路径。 当适配器需要维护专用状态信息时，它可以重写 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A> 和 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A> 方法。 如果有需要跨请求维护状态的复杂功能，适配器可能会保持私有控制状态，这与关联控件的状态不同。 适配器需要 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A> 在每个请求中的方法调用期间注册控件状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="menuAdapter.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含要传递到事件处理程序的可选事件参数的 <see cref="T:System.String" />。</param>
        <summary>赋予 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 类处理将页面回发到服务器时引发的事件的能力。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>方法使 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter> 类能够处理在页回发到服务器时引发的事件。 此页将传递 `eventArgument` 给 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
      </Docs>
    </Member>
  </Members>
</Type>
