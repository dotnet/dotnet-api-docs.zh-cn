<Namespace Name="System.AddIn.Contract.Automation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b2783de913b99f081f0845e0b3fbfdc893b1f16" /><Meta Name="ms.sourcegitcommit" Value="02dd069b9696eb4eee675b6541f86b2602076448" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/20/2020" /><Meta Name="ms.locfileid" Value="92236445" /></Metadata><Docs>
    <summary><span data-ttu-id="10d8d-101">包含组件用来访问类型信息和调用类型成员的接口。</span><span class="sxs-lookup"><span data-stu-id="10d8d-101">Contains interfaces that components use to access type information and invoke type members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="10d8d-102">使用命名空间中的接口 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 使组件能够访问远程对象的类型信息，而无需直接访问 <xref:System.Type> 远程对象的。</span><span class="sxs-lookup"><span data-stu-id="10d8d-102">Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object.</span></span> <span data-ttu-id="10d8d-103"><xref:System.AddIn.Contract.Automation?displayProperty=nameWithType>命名空间为使用 <xref:System.AddIn.Contract?displayProperty=nameWithType> 、 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 和命名空间中的接口和结构进行通信的组件定义反射功能 <xref:System.AddIn.Contract.Collections?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="10d8d-103">The <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=nameWithType>, <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType>, and <xref:System.AddIn.Contract.Collections?displayProperty=nameWithType> namespaces to communicate.</span></span> <span data-ttu-id="10d8d-104">这些命名空间中的接口也称为 "协定"。</span><span class="sxs-lookup"><span data-stu-id="10d8d-104">The interfaces in these namespaces are also called contracts.</span></span> <span data-ttu-id="10d8d-105">所有协定均派生自 <xref:System.AddIn.Contract.IContract> 接口。</span><span class="sxs-lookup"><span data-stu-id="10d8d-105">All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.</span></span>

 <span data-ttu-id="10d8d-106">使用协定来管理组件之间的通信时，必须 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 在类型中实现接口，以便向其他组件公开类型信息。</span><span class="sxs-lookup"><span data-stu-id="10d8d-106">When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components.</span></span> <span data-ttu-id="10d8d-107">然后，组件可以通过调用接口的方法来访问该类型的成员 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> ，以获取 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> 。</span><span class="sxs-lookup"><span data-stu-id="10d8d-107">Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span></span> <span data-ttu-id="10d8d-108">命名空间中的其他接口和结构 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 提供对委托、属性、方法、事件和字段的类型信息的访问。</span><span class="sxs-lookup"><span data-stu-id="10d8d-108">The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace provide access to type information for delegates, properties, methods, events, and fields.</span></span>

 <span data-ttu-id="10d8d-109">组件可以使用命名空间中的协定 <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> 来访问其他进程或应用程序域中的对象的类型信息，或访问同一进程或应用程序域中的对象的类型信息。</span><span class="sxs-lookup"><span data-stu-id="10d8d-109">Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=nameWithType> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.</span></span>

 ]]></format>
    </remarks>
    <altmember cref="N:System.AddIn.Contract" />
    <altmember cref="N:System.AddIn.Contract.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="10d8d-110">外接程序和扩展性</span><span class="sxs-lookup"><span data-stu-id="10d8d-110">Add-ins and Extensibility</span></span></related>
  </Docs>
</Namespace>
