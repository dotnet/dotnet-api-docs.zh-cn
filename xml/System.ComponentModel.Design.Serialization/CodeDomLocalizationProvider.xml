<Type Name="CodeDomLocalizationProvider" FullName="System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf9505b1bc98b1d404d6918edbfaa12954ab1924" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89806760" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodeDomLocalizationProvider : IDisposable, System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodeDomLocalizationProvider extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodeDomLocalizationProvider&#xA;Implements IDesignerSerializationProvider, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomLocalizationProvider sealed : IDisposable, System::ComponentModel::Design::Serialization::IDesignerSerializationProvider" />
  <TypeSignature Language="F#" Value="type CodeDomLocalizationProvider = class&#xA;    interface IDisposable&#xA;    interface IDesignerSerializationProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供 CodeDOM 资源序列化服务。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider>类是提供本地化功能的序列化提供程序。 它支持通过序列化到资源 <xref:System.ComponentModel.Design.IResourceService> ，并将两个属性添加到根组件： `Language` 和 `Localizable` 。 如果 `Localizable` 设置为 `true` ，则该提供程序将更改生成组件属性的方式，并将其值路由到资源文件。 支持两种本地化模型。  
  
 您可以控制提供的区域性以及包含构造函数参数的本地化样式。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation">动态源代码生成和编译</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDomLocalizationProvider (IServiceProvider provider, System.ComponentModel.Design.Serialization.CodeDomLocalizationModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider, valuetype System.ComponentModel.Design.Serialization.CodeDomLocalizationModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider, model As CodeDomLocalizationModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDomLocalizationProvider(IServiceProvider ^ provider, System::ComponentModel::Design::Serialization::CodeDomLocalizationModel model);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider : IServiceProvider * System.ComponentModel.Design.Serialization.CodeDomLocalizationModel -&gt; System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" Usage="new System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider (provider, model)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="model" Type="System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IServiceProvider" />，本地化提供程序使用它添加其扩展程序属性。</param>
        <param name="model"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，指示 CodeDOM 资源适配器要使用的本地化模型</param>
        <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.%23ctor%2A>构造函数创建新的适配器，并将其附加到序列化管理器。 这会将自身作为资源的序列化程序添加到序列化管理器中，如果尚未添加，则会将自身作为扩展程序提供程序添加到根组件。  
  
 如果 `model` 参数不为 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None> ，则将 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider> 提供 `Language` 和 `Localizable` 属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation">动态源代码生成和编译</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDomLocalizationProvider (IServiceProvider provider, System.ComponentModel.Design.Serialization.CodeDomLocalizationModel model, System.Globalization.CultureInfo[] supportedCultures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider, valuetype System.ComponentModel.Design.Serialization.CodeDomLocalizationModel model, class System.Globalization.CultureInfo[] supportedCultures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider, model As CodeDomLocalizationModel, supportedCultures As CultureInfo())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDomLocalizationProvider(IServiceProvider ^ provider, System::ComponentModel::Design::Serialization::CodeDomLocalizationModel model, cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ supportedCultures);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider : IServiceProvider * System.ComponentModel.Design.Serialization.CodeDomLocalizationModel * System.Globalization.CultureInfo[] -&gt; System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" Usage="new System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider (provider, model, supportedCultures)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="model" Type="System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />
        <Parameter Name="supportedCultures" Type="System.Globalization.CultureInfo[]" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IServiceProvider" />，本地化提供程序使用它添加其扩展程序属性。</param>
        <param name="model"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，指示 CodeDOM 资源适配器要使用的本地化模型</param>
        <param name="supportedCultures">此资源适配器应支持的区域性数组。</param>
        <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.%23ctor%2A>构造函数创建新的适配器，并将其附加到序列化管理器。 这会将自身作为资源的序列化程序添加到序列化管理器中，如果尚未添加，则会将自身作为扩展程序提供程序添加到根组件。  
  
 如果 `model` 参数不为 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None> ，则将 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider> 提供 `Language` 和 `Localizable` 属性。  
  
 如果 `supportedCultures` 未提供，则默认值为计算机上当前安装的所有区域性。 如果提供了区域性数组，并且该数组包含计算机上未安装的区域性，则这些区域性不可用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="codeDomLocalizationProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 使用的所有资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationProvider.GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object currentSerializer, Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object currentSerializer, class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (manager As IDesignerSerializationManager, currentSerializer As Object, objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationProvider.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ currentSerializer, Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationProvider::GetSerializer;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Type * Type -&gt; obj&#xA;override this.System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Type * Type -&gt; obj" Usage="codeDomLocalizationProvider.System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer (manager, currentSerializer, objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="currentSerializer" Type="System.Object" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">请求序列化程序的序列化管理器。</param>
        <param name="currentSerializer">指定类型的当前序列化程序的实例。 如果不存在指定类型的序列化程序，则这可能为 <see langword="null" />。</param>
        <param name="objectType">要序列化的对象的数据类型。</param>
        <param name="serializerType">要创建的序列化程序的数据类型。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />。</summary>
        <returns>所请求类型的序列化程序的实例，如果不能满足该请求则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider> 实例被强制转换为 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
