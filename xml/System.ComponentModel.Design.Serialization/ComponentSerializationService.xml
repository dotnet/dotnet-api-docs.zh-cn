<Type Name="ComponentSerializationService" FullName="System.ComponentModel.Design.Serialization.ComponentSerializationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f8572dc6e52ec9e99b1c8a0429f958b7b45938b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89806707" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComponentSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentSerializationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentSerializationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentSerializationService abstract" />
  <TypeSignature Language="F#" Value="type ComponentSerializationService = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="be470-101">提供用于将一组组件或可序列化的对象序列化到序列化存储区的基类。</span><span class="sxs-lookup"><span data-stu-id="be470-101">Provides the base class for serializing a set of components or serializable objects into a serialization store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-102">将 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> 一组组件或可序列化的对象序列化到序列化存储区中。</span><span class="sxs-lookup"><span data-stu-id="be470-102">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> serializes a set of components or serializable objects into a serialization store.</span></span> <span data-ttu-id="be470-103">然后，稍后可以反序列化该存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-103">The store can then be deserialized later.</span></span> <span data-ttu-id="be470-104"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>类不同于其他序列化方案，因为序列化格式是不透明的，并且它允许对象的部分序列化。</span><span class="sxs-lookup"><span data-stu-id="be470-104">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</span></span> <span data-ttu-id="be470-105">例如，您可以选择仅序列化对象的选定属性。</span><span class="sxs-lookup"><span data-stu-id="be470-105">For example, you can choose to serialize only selected properties for an object.</span></span>  
  
 <span data-ttu-id="be470-106">此类为 `abstract` 。</span><span class="sxs-lookup"><span data-stu-id="be470-106">This class is `abstract`.</span></span> <span data-ttu-id="be470-107">通常， <xref:System.ComponentModel.Design.Serialization.DesignerLoader> 将提供此类的具体实现，并将其作为服务添加到其 <xref:System.ComponentModel.Design.DesignSurface> 。</span><span class="sxs-lookup"><span data-stu-id="be470-107">Typically, a <xref:System.ComponentModel.Design.Serialization.DesignerLoader> will provide a concrete implementation of this class and add it as a service to its <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="be470-108">这允许按最适合它们的格式对对象进行序列化。</span><span class="sxs-lookup"><span data-stu-id="be470-108">This allows objects to be serialized in the format best suited for them.</span></span>  
  
 <span data-ttu-id="be470-109"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>类将替换 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> .NET Framework 版本1.0 中的接口，但保留后者以实现向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="be470-109">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> class replaces the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="be470-110">从类继承时 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> ，必须重写此类中的所有方法。</span><span class="sxs-lookup"><span data-stu-id="be470-110">When you inherit from the <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> class, you must override all the methods in this class.</span></span> <span data-ttu-id="be470-111">其中一些方法旨在引发异常，如其相应主题中所述;强烈建议派生类遵循这些准则来维护操作一致性。</span><span class="sxs-lookup"><span data-stu-id="be470-111">Some of these methods were designed to throw exceptions, as documented in their corresponding topics; it is strongly recommended that derived classes follow these guidelines to maintain consistency of operation.</span></span> <span data-ttu-id="be470-112">有关更多信息，请参见 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类。</span><span class="sxs-lookup"><span data-stu-id="be470-112">For more information, see the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentSerializationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComponentSerializationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be470-113">初始化 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="be470-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <Member MemberName="CreateStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore CreateStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateStore () As SerializationStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ CreateStore();" />
      <MemberSignature Language="F#" Value="abstract member CreateStore : unit -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.CreateStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be470-114">创建一个新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-114">Creates a new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></summary>
        <returns><span data-ttu-id="be470-115">一个新创建的序列化存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-115">A new created serialization store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-116">多个对象可以序列化为同一序列化存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-116">Multiple objects can be serialized into the same serialization store.</span></span> <span data-ttu-id="be470-117">完成存储后，可以调用其 <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> 或 <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="be470-117">When you are finished with the store, you can call its <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> or <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> method.</span></span> <span data-ttu-id="be470-118">关闭后，序列化存储区可用于反序列化，也可以保存到流中。</span><span class="sxs-lookup"><span data-stu-id="be470-118">Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</span></span>  
  
 <span data-ttu-id="be470-119">序列化存储区可传递到各种序列化方法，以生成一组对象的序列化状态。</span><span class="sxs-lookup"><span data-stu-id="be470-119">The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="be470-120">将给定存储区反序列化以产生一个对象集合。</span><span class="sxs-lookup"><span data-stu-id="be470-120">Deserializes the given store to produce a collection of objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-121">要反序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-121">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <summary><span data-ttu-id="be470-122">将给定存储区反序列化以产生一个对象集合。</span><span class="sxs-lookup"><span data-stu-id="be470-122">Deserializes the given store to produce a collection of objects.</span></span></summary>
        <returns><span data-ttu-id="be470-123">根据存储状态创建的对象集合。</span><span class="sxs-lookup"><span data-stu-id="be470-123">A collection of objects created according to the stored state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-124">此方法对进行反序列化 `store` 以生成其中包含的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="be470-124">This method deserializes `store` to produce a collection of objects contained within it.</span></span> <span data-ttu-id="be470-125">按照序列化对象的顺序对对象进行反序列化。</span><span class="sxs-lookup"><span data-stu-id="be470-125">Objects are deserialized in the same order in which they were serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-126"><paramref name="store" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-126"><paramref name="store" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-127"><paramref name="store" /> 不包含任何具有序列化容器可以处理的格式的数据。</span><span class="sxs-lookup"><span data-stu-id="be470-127"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore, container As IContainer) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-128">要反序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-128">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="be470-129"><see cref="T:System.ComponentModel.IContainer" /> 对象将要添加到的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="be470-129">The <see cref="T:System.ComponentModel.IContainer" /> to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <summary><span data-ttu-id="be470-130">将给定存储区反序列化，并使用反序列化的 <see cref="T:System.ComponentModel.IContainer" /> 对象填充给定的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="be470-130">Deserializes the given store and populates the given <see cref="T:System.ComponentModel.IContainer" /> with deserialized <see cref="T:System.ComponentModel.IComponent" /> objects.</span></span></summary>
        <returns><span data-ttu-id="be470-131">根据存储状态创建的对象集合。</span><span class="sxs-lookup"><span data-stu-id="be470-131">A collection of objects created according to the stored state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-132">此方法对进行反序列化 `store` 以生成其中包含的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="be470-132">This method deserializes `store` to produce a collection of objects contained within it.</span></span> <span data-ttu-id="be470-133">按照序列化对象的顺序对对象进行反序列化。</span><span class="sxs-lookup"><span data-stu-id="be470-133">Objects are deserialized in the same order in which they were serialized.</span></span>  
  
 <span data-ttu-id="be470-134">创建的实现 <xref:System.ComponentModel.IComponent> 的对象将添加到 `container` 中。</span><span class="sxs-lookup"><span data-stu-id="be470-134">Created objects that implement <xref:System.ComponentModel.IComponent> are added to `container`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-135"><paramref name="store" /> 或 <paramref name="container" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-135"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-136"><paramref name="store" /> 不包含任何具有序列化容器可以处理的格式的数据。</span><span class="sxs-lookup"><span data-stu-id="be470-136"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeserializeTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="be470-137">将给定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 反序列化为给定的容器。</span><span class="sxs-lookup"><span data-stu-id="be470-137">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-138">要反序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-138">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="be470-139"><see cref="T:System.ComponentModel.IComponent" /> 对象将要添加到的容器。</span><span class="sxs-lookup"><span data-stu-id="be470-139">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <summary><span data-ttu-id="be470-140">将给定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 反序列化为给定的容器。</span><span class="sxs-lookup"><span data-stu-id="be470-140">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-141"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法反序列化 `store` ，但不是生成新对象，而是将存储区中的数据应用于从提供的容器中获取的一组现有对象。</span><span class="sxs-lookup"><span data-stu-id="be470-141">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="be470-142">因此，调用方可以提前创建一个对象，但它可以看到合适的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-142">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="be470-143">如果对象具有反序列化状态，并且在现有对象集中没有命名该对象，则将创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-143">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="be470-144">如果该对象还实现 <xref:System.ComponentModel.IComponent> ，则会将其添加到中 `container` 。</span><span class="sxs-lookup"><span data-stu-id="be470-144">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="be470-145">容器中的对象必须具有与序列化存储区中的对象相匹配的名称和类型，才能使用现有对象。</span><span class="sxs-lookup"><span data-stu-id="be470-145">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-146"><paramref name="store" /> 或 <paramref name="container" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-146"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-147"><paramref name="store" /> 不包含任何具有序列化容器可以处理的格式的数据。</span><span class="sxs-lookup"><span data-stu-id="be470-147"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-148">要反序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-148">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="be470-149"><see cref="T:System.ComponentModel.IComponent" /> 对象将要添加到的容器。</span><span class="sxs-lookup"><span data-stu-id="be470-149">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <param name="validateRecycledTypes"><span data-ttu-id="be470-150">为 <see langword="true" /> 时，保证只有在应用于同类型对象时，反序列化才起作用。</span><span class="sxs-lookup"><span data-stu-id="be470-150"><see langword="true" /> to guarantee that the deserialization will only work if applied to an object of the same type.</span></span></param>
        <summary><span data-ttu-id="be470-151">将给定 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 反序列化为给定容器，还可以验证回收类型。</span><span class="sxs-lookup"><span data-stu-id="be470-151">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally validating recycled types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-152"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法反序列化 `store` ，但不是生成新对象，而是将存储区中的数据应用于从提供的容器中获取的一组现有对象。</span><span class="sxs-lookup"><span data-stu-id="be470-152">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="be470-153">因此，调用方可以提前创建一个对象，但它可以看到合适的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-153">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="be470-154">如果对象具有反序列化状态，并且在现有对象集中没有命名该对象，则将创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-154">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="be470-155">如果该对象还实现 <xref:System.ComponentModel.IComponent> ，则会将其添加到中 `container` 。</span><span class="sxs-lookup"><span data-stu-id="be470-155">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="be470-156">容器中的对象必须具有与序列化存储区中的对象相匹配的名称和类型，才能使用现有对象。</span><span class="sxs-lookup"><span data-stu-id="be470-156">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-157"><paramref name="store" /> 或 <paramref name="container" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-157"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-158"><paramref name="store" /> 不包含任何具有序列化容器可以处理的格式的数据。</span><span class="sxs-lookup"><span data-stu-id="be470-158"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean, applyDefaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes, applyDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
        <Parameter Name="applyDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-159">要反序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-159">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="be470-160"><see cref="T:System.ComponentModel.IComponent" /> 对象将要添加到的容器。</span><span class="sxs-lookup"><span data-stu-id="be470-160">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <param name="validateRecycledTypes"><span data-ttu-id="be470-161">为 <see langword="true" /> 时，保证只有在应用于同类型对象时，反序列化才起作用。</span><span class="sxs-lookup"><span data-stu-id="be470-161"><see langword="true" /> to guarantee that the deserialization will only work if applied to an object of the same type.</span></span></param>
        <param name="applyDefaults"><span data-ttu-id="be470-162">为 <see langword="true" /> 时，表示应当应用默认属性值。</span><span class="sxs-lookup"><span data-stu-id="be470-162"><see langword="true" /> to indicate that the default property values should be applied.</span></span></param>
        <summary><span data-ttu-id="be470-163">将给定 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 反序列化为给定容器，还可以应用默认属性值。</span><span class="sxs-lookup"><span data-stu-id="be470-163">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally applying default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-164"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法反序列化 `store` ，但不是生成新对象，而是将存储区中的数据应用于从提供的容器中获取的一组现有对象。</span><span class="sxs-lookup"><span data-stu-id="be470-164">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="be470-165">因此，调用方可以提前创建一个对象，但它可以看到合适的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-165">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="be470-166">如果对象具有反序列化状态，并且在现有对象集中没有命名该对象，则将创建一个新的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-166">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="be470-167">如果该对象还实现 <xref:System.ComponentModel.IComponent> ，则会将其添加到中 `container` 。</span><span class="sxs-lookup"><span data-stu-id="be470-167">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="be470-168">容器中的对象必须具有与序列化存储区中的对象相匹配的名称和类型，才能使用现有对象。</span><span class="sxs-lookup"><span data-stu-id="be470-168">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-169"><paramref name="store" /> 或 <paramref name="container" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-169"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-170"><paramref name="store" /> 不包含任何具有序列化容器可以处理的格式的数据。</span><span class="sxs-lookup"><span data-stu-id="be470-170"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore LoadStore(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LoadStore (stream As Stream) As SerializationStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ LoadStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member LoadStore : System.IO.Stream -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.LoadStore stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="be470-171">将要从中加载存储区的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="be470-171">The <see cref="T:System.IO.Stream" /> from which the store will be loaded.</span></span></param>
        <summary><span data-ttu-id="be470-172">从流中加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-172">Loads a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from a stream.</span></span></summary>
        <returns><span data-ttu-id="be470-173">新 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="be470-173">A new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-174">您可以使用返回的存储通过将对象传递到其中一种方法来对对象进行反序列化 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="be470-174">You can use the returned store to deserialize objects by passing it to one of the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-175"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-175"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-176"><paramref name="stream" /> 不包含由前面某个对 <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" /> 的调用保存的数据。</span><span class="sxs-lookup"><span data-stu-id="be470-176"><paramref name="stream" /> does not contain data saved by a previous call to <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Serialize (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Serialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.Serialize (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-177"><paramref name="value" /> 的状态将写入的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-177">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="value" /> will be written.</span></span></param>
        <param name="value"><span data-ttu-id="be470-178">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-178">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="be470-179">将给定的对象序列化为给定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-179">Serializes the given object to the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-180">通过多次调用此方法，可使用存储区来序列化多个对象。</span><span class="sxs-lookup"><span data-stu-id="be470-180">The store can be used to serialize more than one object by calling this method more than once.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-181"><paramref name="store" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-181"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-182"><paramref name="store" /> 已关闭，或 <paramref name="store" /> 不是序列化存储区支持的类型。</span><span class="sxs-lookup"><span data-stu-id="be470-182"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="be470-183">使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-183">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeAbsolute (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.SerializeAbsolute (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-184"><paramref name="value" /> 的状态将序列化到的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-184">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="be470-185">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-185">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="be470-186">根据默认属性值序列化给定对象。</span><span class="sxs-lookup"><span data-stu-id="be470-186">Serializes the given object, accounting for default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-187">标准序列化是通过方法实现的 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> ，它仅序列化不同于组件默认状态的值。</span><span class="sxs-lookup"><span data-stu-id="be470-187">Standard serialization, as implemented through the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> method, only serializes values that differ from the component's default state.</span></span> <span data-ttu-id="be470-188">这将提供最简洁的序列化机制，但假定在反序列化过程中将使用新创建的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-188">This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</span></span> <span data-ttu-id="be470-189">如果使用现有对象，则不能保证生成的反序列化对象复制序列化对象的原始状态;在反序列化过程中，在序列化过程中包含默认值的属性将不会重置回默认值。</span><span class="sxs-lookup"><span data-stu-id="be470-189">If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</span></span>  
  
 <span data-ttu-id="be470-190"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A>方法不使用此快捷方式。</span><span class="sxs-lookup"><span data-stu-id="be470-190">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A> method does not use this shortcut.</span></span> <span data-ttu-id="be470-191">它会序列化源对象的所有属性，以便反序列化可以还原所有对象的属性，而不考虑默认状态。</span><span class="sxs-lookup"><span data-stu-id="be470-191">It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</span></span>  
  
 <span data-ttu-id="be470-192">此方法对于序列化集合特别有用，因为集合中的构成项的顺序可能会更改。</span><span class="sxs-lookup"><span data-stu-id="be470-192">This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</span></span> <span data-ttu-id="be470-193">在这种情况下，还原整个集合的原始状态的最安全过程是覆盖所有项及其原始属性值。</span><span class="sxs-lookup"><span data-stu-id="be470-193">In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-194"><paramref name="store" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-194"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-195"><paramref name="store" /> 已关闭，或 <paramref name="store" /> 不是序列化存储区支持的类型。</span><span class="sxs-lookup"><span data-stu-id="be470-195"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="be470-196">使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-196">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMember(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMember (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMember(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMember : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMember (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-197"><paramref name="member" /> 的状态将序列化到的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-197">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="member" /> will be serialized.</span></span></param>
        <param name="owningObject"><span data-ttu-id="be470-198">在其上附加 <paramref name="member" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-198">The object to which <paramref name="member" /> is attached.</span></span></param>
        <param name="member"><span data-ttu-id="be470-199"><see cref="T:System.ComponentModel.MemberDescriptor" /> 指定要序列化的成员。</span><span class="sxs-lookup"><span data-stu-id="be470-199">A <see cref="T:System.ComponentModel.MemberDescriptor" /> specifying the member to serialize.</span></span></param>
        <summary><span data-ttu-id="be470-200">在给定对象上序列化给定成员。</span><span class="sxs-lookup"><span data-stu-id="be470-200">Serializes the given member on the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-201"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A>对于同一对象，可以多次调用方法，以生成序列化存储区中序列化成员的列表。</span><span class="sxs-lookup"><span data-stu-id="be470-201">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A> method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</span></span> <span data-ttu-id="be470-202">通常，成员应为属性或事件。</span><span class="sxs-lookup"><span data-stu-id="be470-202">In general, the member should be a property or an event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-203"><paramref name="store" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-203"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-204"><paramref name="store" /> 已关闭，或 <paramref name="store" /> 不是序列化存储区支持的类型。</span><span class="sxs-lookup"><span data-stu-id="be470-204"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="be470-205">使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-205">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMemberAbsolute (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMemberAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMemberAbsolute (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="be470-206"><paramref name="member" /> 的状态将序列化到的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="be470-206">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="member" /> will be serialized.</span></span></param>
        <param name="owningObject"><span data-ttu-id="be470-207">在其上附加 <paramref name="member" /> 的对象。</span><span class="sxs-lookup"><span data-stu-id="be470-207">The object to which <paramref name="member" /> is attached.</span></span></param>
        <param name="member"><span data-ttu-id="be470-208">要序列化的成员。</span><span class="sxs-lookup"><span data-stu-id="be470-208">The member to serialize.</span></span></param>
        <summary><span data-ttu-id="be470-209">根据默认属性值，序列化给定对象上的给定成员。</span><span class="sxs-lookup"><span data-stu-id="be470-209">Serializes the given member on the given object, accounting for the default property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be470-210"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A>方法会序列化 `member` `owningObject` ，即使 `member` 包含默认属性值也是如此。</span><span class="sxs-lookup"><span data-stu-id="be470-210">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> method serializes the `member` on `owningObject`, even if `member` contains the default property value.</span></span>  
  
 <span data-ttu-id="be470-211">请注意，对于某些成员，如果包含默认值，并将相同值的设置还原到成员，则这些概念是不同的。</span><span class="sxs-lookup"><span data-stu-id="be470-211">Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</span></span> <span data-ttu-id="be470-212">例如，如果在未设置本地值时属性从父对象中继承其值，则将值设置回属性可能不是所需的值。</span><span class="sxs-lookup"><span data-stu-id="be470-212">For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</span></span> <span data-ttu-id="be470-213">此 <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> 方法将考虑这一点，并将在这种情况下清除属性的状态。</span><span class="sxs-lookup"><span data-stu-id="be470-213">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> method takes this into account and would clear the state of the property in this case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="be470-214"><paramref name="store" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="be470-214"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be470-215"><paramref name="store" /> 已关闭，或 <paramref name="store" /> 不是序列化存储区支持的类型。</span><span class="sxs-lookup"><span data-stu-id="be470-215"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="be470-216">使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</span><span class="sxs-lookup"><span data-stu-id="be470-216">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
  </Members>
</Type>
