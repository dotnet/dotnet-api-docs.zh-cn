<Type Name="CollectionCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb4b468e518bfb6bc672c64f25b0c72f205d14f0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89806720" /></Metadata><TypeSignature Language="C#" Value="public class CollectionCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionCodeDomSerializer&#xA;Inherits CodeDomSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializer" />
  <TypeSignature Language="F#" Value="type CollectionCodeDomSerializer = class&#xA;    inherit CodeDomSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Design" FromVersion="4.0.0.0" To="System.Windows.Forms.Design" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7d7ad-101">序列化集合。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-101">Serializes collections.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7ad-102"><xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer>类可以创建语句或表达式。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-102">The <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> class can create either statements or expressions.</span></span> <span data-ttu-id="7d7ad-103">如果要序列化的对象是一个数组，则 <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> 将创建一个表达式并将其分配给当前上下文堆栈中的语句。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-103">If the object to serialize is an array, the <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> will create an expression and assign it to the statement in the current context stack.</span></span> <span data-ttu-id="7d7ad-104">如果对象是具有 *AddRange* 或类似方法的集合， <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> 将创建一个调用方法的语句。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-104">If the object is a collection with an *AddRange* or similar method, the <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer> will create a statement that calls the method.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="7d7ad-105">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7d7ad-105">Dynamic Source Code Generation and Compilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CollectionCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d7ad-106">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-106">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodSupportsSerialization">
      <MemberSignature Language="C#" Value="protected bool MethodSupportsSerialization (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool MethodSupportsSerialization(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MethodSupportsSerialization (method As MethodInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool MethodSupportsSerialization(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="member this.MethodSupportsSerialization : System.Reflection.MethodInfo -&gt; bool" Usage="collectionCodeDomSerializer.MethodSupportsSerialization method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="7d7ad-107">要检查其序列化特性的 <see cref="T:System.Reflection.MethodInfo" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-107">The <see cref="T:System.Reflection.MethodInfo" /> to check for serialization attributes.</span></span></param>
        <summary><span data-ttu-id="7d7ad-108">验证 <paramref name="method" /> 提供的序列化支持。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-108">Verifies serialization support by the <paramref name="method" />.</span></span></summary>
        <returns><span data-ttu-id="7d7ad-109">如果 <paramref name="method" /> 支持序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-109"><see langword="true" /> if the <paramref name="method" /> supports serialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7ad-110">检查 `method` 属性，以确定它们是否支持序列化。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-110">Checks the `method` attributes to see if they support serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d7ad-111"><paramref name="method" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-111"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="7d7ad-112">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7d7ad-112">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public override object Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Serialize (manager As IDesignerSerializationManager, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj" Usage="collectionCodeDomSerializer.Serialize (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7d7ad-113">在序列化过程中要使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-113">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</span></span></param>
        <param name="value"><span data-ttu-id="7d7ad-114">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-114">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="7d7ad-115">将给定集合序列化为 CodeDOM 对象。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-115">Serializes the given collection into a CodeDOM object.</span></span></summary>
        <returns><span data-ttu-id="7d7ad-116">表示 <paramref name="value" /> 的 CodeDOM 对象。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-116">A CodeDOM object representing <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7ad-117">集合按以下方式序列化：</span><span class="sxs-lookup"><span data-stu-id="7d7ad-117">Collections are serialized as follows:</span></span>  
  
1.  <span data-ttu-id="7d7ad-118">如果集合为数组，则写入数组。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-118">If the collection is an array, the array is written.</span></span>  
  
    1.  <span data-ttu-id="7d7ad-119">如果该集合具有 *AddRange* 方法，则它将被调用并随数组提供。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-119">If the collection has an *AddRange* method, it will be called and provided with an array.</span></span>  
  
    2.  <span data-ttu-id="7d7ad-120">如果集合包含 *Add* 方法，则将重复调用该集合，直到写入集合中的所有项。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-120">If the collection has an *Add* method, it will be called repeatedly until all items in the collection are written.</span></span>  
  
2.  <span data-ttu-id="7d7ad-121">如果集合为 <xref:System.Collections.IList> ，则该 <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> 方法会将集合转换为 <xref:System.Collections.IList> 并通过该接口添加。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-121">If the collection is an <xref:System.Collections.IList>, the <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> method will cast the collection to an <xref:System.Collections.IList> and add through that interface.</span></span>  
  
    1.  <span data-ttu-id="7d7ad-122">如果集合没有 *Add* 方法，但被标记为，则 <xref:System.ComponentModel.DesignerSerializationVisibility.Content?displayProperty=nameWithType> <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> 将枚举集合并序列化每个元素。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-122">If the collection has no *Add* method, but is marked with <xref:System.ComponentModel.DesignerSerializationVisibility.Content?displayProperty=nameWithType>, <xref:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize%2A> will enumerate the collection and serialize each element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d7ad-123"><paramref name="manager" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-123"><paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="7d7ad-124">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7d7ad-124">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SerializeCollection">
      <MemberSignature Language="C#" Value="protected virtual object SerializeCollection (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeExpression targetExpression, Type targetType, System.Collections.ICollection originalCollection, System.Collections.ICollection valuesToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SerializeCollection(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeExpression targetExpression, class System.Type targetType, class System.Collections.ICollection originalCollection, class System.Collections.ICollection valuesToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SerializeCollection (manager As IDesignerSerializationManager, targetExpression As CodeExpression, targetType As Type, originalCollection As ICollection, valuesToSerialize As ICollection) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SerializeCollection(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeExpression ^ targetExpression, Type ^ targetType, System::Collections::ICollection ^ originalCollection, System::Collections::ICollection ^ valuesToSerialize);" />
      <MemberSignature Language="F#" Value="abstract member SerializeCollection : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeExpression * Type * System.Collections.ICollection * System.Collections.ICollection -&gt; obj&#xA;override this.SerializeCollection : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeExpression * Type * System.Collections.ICollection * System.Collections.ICollection -&gt; obj" Usage="collectionCodeDomSerializer.SerializeCollection (manager, targetExpression, targetType, originalCollection, valuesToSerialize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="targetExpression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="originalCollection" Type="System.Collections.ICollection" />
        <Parameter Name="valuesToSerialize" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7d7ad-125">在序列化过程中要使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-125">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</span></span></param>
        <param name="targetExpression"><span data-ttu-id="7d7ad-126">引用集合的 <see cref="T:System.CodeDom.CodeExpression" /></span><span class="sxs-lookup"><span data-stu-id="7d7ad-126">The <see cref="T:System.CodeDom.CodeExpression" /> that refers to the collection</span></span></param>
        <param name="targetType"><span data-ttu-id="7d7ad-127">集合的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-127">The <see cref="T:System.Type" /> of the collection.</span></span></param>
        <param name="originalCollection"><span data-ttu-id="7d7ad-128">要序列化的集合。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-128">The collection to serialize.</span></span></param>
        <param name="valuesToSerialize"><span data-ttu-id="7d7ad-129">要序列化的值。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-129">The values to serialize.</span></span></param>
        <summary><span data-ttu-id="7d7ad-130">序列化给定集合。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-130">Serializes the given collection.</span></span></summary>
        <returns><span data-ttu-id="7d7ad-131">如果序列化过程成功，则为已序列化的集合；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-131">Serialized collection if the serialization process succeeded; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7ad-132"><xref:System.CodeDom.CodeExpression>引用集合的是 `null` 。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-132">The <xref:System.CodeDom.CodeExpression> that refers to the collection can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d7ad-133"><paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" /> 或 <paramref name="valuesToSerialize" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7d7ad-133"><paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" />, or <paramref name="valuesToSerialize" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation"><span data-ttu-id="7d7ad-134">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7d7ad-134">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
