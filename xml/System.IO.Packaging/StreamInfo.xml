<Type Name="StreamInfo" FullName="System.IO.Packaging.StreamInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="833ed63f23815c56e6eca19baa5165507ce69860" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89938875" /></Metadata><TypeSignature Language="C#" Value="public class StreamInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.StreamInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamInfo" />
  <TypeSignature Language="F#" Value="type StreamInfo = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="625c2-101">提供用于操作 <see cref="T:System.IO.Packaging.Package" /> 中的 I/O 流的访问和信息。</span><span class="sxs-lookup"><span data-stu-id="625c2-101">Provides access and information for manipulating I/O streams within a <see cref="T:System.IO.Packaging.Package" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)" />
    <altmember cref="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)" />
    <altmember cref="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)" />
    <altmember cref="M:System.IO.Packaging.StorageInfo.GetStreams" />
    <altmember cref="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="CompressionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CompressionOption CompressionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CompressionOption CompressionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.StreamInfo.CompressionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressionOption As CompressionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CompressionOption CompressionOption { System::IO::Packaging::CompressionOption get(); };" />
      <MemberSignature Language="F#" Value="member this.CompressionOption : System.IO.Packaging.CompressionOption" Usage="System.IO.Packaging.StreamInfo.CompressionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CompressionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="625c2-102">获得流的 <see cref="T:System.IO.Packaging.CompressionOption" /> 设置。</span><span class="sxs-lookup"><span data-stu-id="625c2-102">Gets the <see cref="T:System.IO.Packaging.CompressionOption" /> setting for the stream.</span></span></summary>
        <value><span data-ttu-id="625c2-103">包流的压缩选项设置。</span><span class="sxs-lookup"><span data-stu-id="625c2-103">The compression option setting for the package stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="625c2-104">如果已 <xref:System.Windows.FreezableCollection%601.Enumerator.System%23IDisposable%23Dispose%2A> 在流上调用，则该 <xref:System.IO.Packaging.StreamInfo.CompressionOption%2A> 属性返回 CompressionOption。 <xref:System.IO.Packaging.CompressionOption.NotCompressed></span><span class="sxs-lookup"><span data-stu-id="625c2-104">If <xref:System.Windows.FreezableCollection%601.Enumerator.System%23IDisposable%23Dispose%2A> has been called on the stream, the <xref:System.IO.Packaging.StreamInfo.CompressionOption%2A> property returns CompressionOption.<xref:System.IO.Packaging.CompressionOption.NotCompressed>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
        <altmember cref="Overload:System.IO.Packaging.StreamInfo.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.EncryptionOption EncryptionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.EncryptionOption EncryptionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.StreamInfo.EncryptionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionOption As EncryptionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::EncryptionOption EncryptionOption { System::IO::Packaging::EncryptionOption get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionOption : System.IO.Packaging.EncryptionOption" Usage="System.IO.Packaging.StreamInfo.EncryptionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="625c2-105">获得流的 <see cref="T:System.IO.Packaging.EncryptionOption" /> 设置。</span><span class="sxs-lookup"><span data-stu-id="625c2-105">Gets the <see cref="T:System.IO.Packaging.EncryptionOption" /> setting for the stream.</span></span></summary>
        <value><span data-ttu-id="625c2-106">包流的加密选项设置。</span><span class="sxs-lookup"><span data-stu-id="625c2-106">The encryption option setting for the package stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="625c2-107">如果已 <xref:System.Windows.FreezableCollection%601.Enumerator.System%23IDisposable%23Dispose%2A> 在流上调用，则该 <xref:System.IO.Packaging.StreamInfo.EncryptionOption%2A> 属性返回 EncryptionOption。 <xref:System.IO.Packaging.EncryptionOption.None></span><span class="sxs-lookup"><span data-stu-id="625c2-107">If <xref:System.Windows.FreezableCollection%601.Enumerator.System%23IDisposable%23Dispose%2A> has been called on the stream, the <xref:System.IO.Packaging.StreamInfo.EncryptionOption%2A> property returns EncryptionOption.<xref:System.IO.Packaging.EncryptionOption.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
        <altmember cref="Overload:System.IO.Packaging.StreamInfo.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="625c2-108">打开并返回 <see cref="T:System.IO.Packaging.Package" /> 根的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="625c2-108">Opens and returns the I/O stream for the <see cref="T:System.IO.Packaging.Package" /> root.</span></span></summary>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.StreamInfo.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="streamInfo.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="625c2-109">返回在默认 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 中打开的流。</span><span class="sxs-lookup"><span data-stu-id="625c2-109">Returns a stream opened in a default <see cref="T:System.IO.FileMode" /> and <see cref="T:System.IO.FileAccess" />.</span></span></summary>
        <returns><span data-ttu-id="625c2-110">在默认 <see cref="T:System.IO.Packaging.Package" /> 根 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 中打开的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="625c2-110">The I/O stream opened in a default <see cref="T:System.IO.Packaging.Package" /> root <see cref="T:System.IO.FileMode" /> and <see cref="T:System.IO.FileAccess" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="625c2-111">此 <xref:System.IO.Packaging.StreamInfo.GetStream%2A> 方法 (没有参数) ，则以 <xref:System.IO.FileMode.OpenOrCreate> 具有默认存储根的文件模式打开流 <xref:System.IO.FileAccess> 。</span><span class="sxs-lookup"><span data-stu-id="625c2-111">This <xref:System.IO.Packaging.StreamInfo.GetStream%2A> method (without parameters), opens the stream in file mode <xref:System.IO.FileMode.OpenOrCreate> with the default storage root <xref:System.IO.FileAccess>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode -&gt; System.IO.Stream" Usage="streamInfo.GetStream mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="625c2-112">用于打开流的文件模式。</span><span class="sxs-lookup"><span data-stu-id="625c2-112">The file mode in which to open the stream.</span></span></param>
        <summary><span data-ttu-id="625c2-113">返回在指定 <see cref="T:System.IO.FileMode" /> 中打开的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="625c2-113">Returns an I/O stream opened in a specified <see cref="T:System.IO.FileMode" />.</span></span></summary>
        <returns><span data-ttu-id="625c2-114">在指定文件 <paramref name="mode" /> 中打开的流。</span><span class="sxs-lookup"><span data-stu-id="625c2-114">The stream opened in the specified file <paramref name="mode" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="625c2-115">此 <xref:System.IO.Packaging.StreamInfo.GetStream%2A> 方法将打开具有默认存储根的流 <xref:System.IO.FileAccess> 。</span><span class="sxs-lookup"><span data-stu-id="625c2-115">This <xref:System.IO.Packaging.StreamInfo.GetStream%2A> method opens the stream with the default storage root <xref:System.IO.FileAccess>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="streamInfo.GetStream (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="625c2-116">用于打开流的文件模式。</span><span class="sxs-lookup"><span data-stu-id="625c2-116">The file mode in which to open the stream.</span></span></param>
        <param name="access"><span data-ttu-id="625c2-117">用于读取或写入流的文件访问模式。</span><span class="sxs-lookup"><span data-stu-id="625c2-117">The file access mode in which to read or write to the stream.</span></span></param>
        <summary><span data-ttu-id="625c2-118">返回以指定的 <see cref="T:System.IO.FileMode" /> 打开并且具有给定的 <see cref="T:System.IO.FileAccess" /> 的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="625c2-118">Returns an I/O stream opened in a specified <see cref="T:System.IO.FileMode" /> and with a given <see cref="T:System.IO.FileAccess" />.</span></span></summary>
        <returns><span data-ttu-id="625c2-119">在指定的 <see cref="T:System.IO.FileMode" /> 中打开并且具有给定的 <see cref="T:System.IO.FileAccess" /> 的 I/O 流。</span><span class="sxs-lookup"><span data-stu-id="625c2-119">The I/O stream opened in the specified <see cref="T:System.IO.FileMode" /> and with a given <see cref="T:System.IO.FileAccess" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.StreamInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.Packaging.StreamInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="625c2-120">获取流的名称。</span><span class="sxs-lookup"><span data-stu-id="625c2-120">Gets the name of the stream.</span></span></summary>
        <value><span data-ttu-id="625c2-121">该流的名称。</span><span class="sxs-lookup"><span data-stu-id="625c2-121">The name of this stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="625c2-122">如果已 <xref:System.Windows.FreezableCollection%601.Enumerator.System%23IDisposable%23Dispose%2A> 在流上调用，则 <xref:System.IO.Packaging.StreamInfo.Name%2A> 属性返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="625c2-122">If <xref:System.Windows.FreezableCollection%601.Enumerator.System%23IDisposable%23Dispose%2A> has been called on the stream, the <xref:System.IO.Packaging.StreamInfo.Name%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.StorageInfo.CreateStream" />
      </Docs>
    </Member>
  </Members>
</Type>
