<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a6a26e84e9c328883a5dd9e7115797b94a5ef7c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83911601" /></Metadata><TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Package = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.5.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="de756-101">表示一个可以存储多个数据对象的容器。</span><span class="sxs-lookup"><span data-stu-id="de756-101">Represents a container that can store multiple data objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-102"><xref:System.IO.Packaging.Package> 是一种抽象类，可用于将对象组织成定义的物理格式的单个实体，以实现可移植性和高效访问。</span><span class="sxs-lookup"><span data-stu-id="de756-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="de756-103">ZIP 文件是 <xref:System.IO.Packaging.Package>的主要物理格式。</span><span class="sxs-lookup"><span data-stu-id="de756-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="de756-104">其他 <xref:System.IO.Packaging.Package> 实现可能使用其他物理格式，如 XML 文档、数据库或 Web 服务。</span><span class="sxs-lookup"><span data-stu-id="de756-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="de756-105">与文件系统类似，<xref:System.IO.Packaging.Package> 中包含的项在文件夹和文件的层次结构中进行引用。</span><span class="sxs-lookup"><span data-stu-id="de756-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="de756-106">尽管 <xref:System.IO.Packaging.Package> 本身是抽象类，但 <xref:System.IO.Packaging.Package.Open%2A> 方法使用 <xref:System.IO.Packaging.ZipPackage> 派生类作为默认值。</span><span class="sxs-lookup"><span data-stu-id="de756-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-107"><xref:System.IO.Packaging.PackagePart> （"part"）是表示存储在 <xref:System.IO.Packaging.Package>中的对象的抽象类。</span><span class="sxs-lookup"><span data-stu-id="de756-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="de756-108"><xref:System.IO.Packaging.PackageRelationship> （"关系"）定义源 <xref:System.IO.Packaging.Package> 或 <xref:System.IO.Packaging.PackagePart> 与目标对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="de756-109"><xref:System.IO.Packaging.PackageRelationship> 可以是以下两种类型之一，其中每种类型可以是以下两种形式之一：</span><span class="sxs-lookup"><span data-stu-id="de756-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="de756-110">包级别关系（由 <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> 方法创建）将 <xref:System.IO.Packaging.Package> 相关联：</span><span class="sxs-lookup"><span data-stu-id="de756-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="de756-111">包中的目标部分。</span><span class="sxs-lookup"><span data-stu-id="de756-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="de756-112">包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="de756-113">部分级别关系（由 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> 方法创建）将源 <xref:System.IO.Packaging.PackagePart> 与以下各项相关联：</span><span class="sxs-lookup"><span data-stu-id="de756-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="de756-114">包中的另一个目标部件。</span><span class="sxs-lookup"><span data-stu-id="de756-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="de756-115">包外部的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="de756-116">关系的源 <xref:System.IO.Packaging.Package> 或源 <xref:System.IO.Packaging.PackagePart> 被视为关系的 "所有者"。</span><span class="sxs-lookup"><span data-stu-id="de756-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="de756-117">删除源对象时，还将删除源对象所拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="de756-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="de756-118">创建或删除关系的过程不会以任何方式以物理方式更改源对象或目标对象。</span><span class="sxs-lookup"><span data-stu-id="de756-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="de756-119"><xref:System.IO.Packaging.PackageDigitalSignature> （"数字签名"）是部件和关系的组合，表示包含在 <xref:System.IO.Packaging.Package>中的数字签名。</span><span class="sxs-lookup"><span data-stu-id="de756-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="de756-120">数字签名标识发信方，并验证 <xref:System.IO.Packaging.Package> 中包含的签名部分和关系是否尚未修改。</span><span class="sxs-lookup"><span data-stu-id="de756-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="de756-121">包还支持数字 Rights Management （DRM），这允许使用向授权用户授予的特定访问权限对 <xref:System.IO.Packaging.Package> 中的内容元素进行加密。</span><span class="sxs-lookup"><span data-stu-id="de756-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="de756-122">根据 <xref:System.IO.Packaging.Package> 的体系结构，<xref:System.Windows.Xps.Packaging.XpsDocument> 是设计用于基于 open [XML 纸张规范（XPS）](https://go.microsoft.com/fwlink/?LinkID=65761)存储文档的包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 <span data-ttu-id="de756-123">默认情况下，.NET Framework 使用包来存储页面和文档的内容、资源和关系。</span><span class="sxs-lookup"><span data-stu-id="de756-123">The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="de756-124">与任何 ZIP 文件一样，应用程序可以使用 <xref:System.IO.Packaging> 类在单个有效访问权限容器中存储和（可选）保护任何类型或数量的数据文件。</span><span class="sxs-lookup"><span data-stu-id="de756-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="de756-125">有关详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-126">下面的示例演示了创建 <xref:System.IO.Packaging.Package>的基本步骤。</span><span class="sxs-lookup"><span data-stu-id="de756-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="de756-127">在此示例中，创建了一个包，其中包含一个作为文档一部分显示的图形图像。</span><span class="sxs-lookup"><span data-stu-id="de756-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="de756-128">（这类似于 HTML 文件具有引用外部图像文件的 \<IMG > 标记的情况。） 包中还包括两个 <xref:System.IO.Packaging.PackageRelationship> 元素。</span><span class="sxs-lookup"><span data-stu-id="de756-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="de756-129">第一种是 "包级别" 关系，它将文档部件定义为包的根元素。</span><span class="sxs-lookup"><span data-stu-id="de756-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="de756-130">第二个 "part level" 关系定义文档部件（部分级别关系的 "源"）和图像部分（部分级别关系的 "目标"）之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="de756-131">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-131">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255"><span data-ttu-id="de756-132">开放式打包约定（OPC）规范</span><span class="sxs-lookup"><span data-stu-id="de756-132">Open Packaging Conventions (OPC) Specification</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494"><span data-ttu-id="de756-133">开放打包约定的数字签名框架</span><span class="sxs-lookup"><span data-stu-id="de756-133">Digital Signing Framework of the Open Packaging Conventions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de756-134">初始化 <see cref="T:System.IO.Packaging.Package" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de756-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package openFileAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess"><span data-ttu-id="de756-135">包的文件 IO 权限。</span><span class="sxs-lookup"><span data-stu-id="de756-135">The file IO permissions for the package.</span></span></param>
        <summary><span data-ttu-id="de756-136">初始化使用给定的 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="T:System.IO.FileAccess" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de756-136">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-137"><xref:System.IO.Packaging.Package.%23ctor%2A> 是 <xref:System.IO.Packaging.Package> 抽象基类的受保护的构造函数。</span><span class="sxs-lookup"><span data-stu-id="de756-137"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="de756-138">在派生类中调用时，<xref:System.IO.Packaging.Package.%23ctor%2A> 构造函数初始化派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de756-138">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-139"><paramref name="openFileAccess" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-139">The value for <paramref name="openFileAccess" /> is not valid.</span></span></exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess * bool -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package (openFileAccess, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="streaming" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="openFileAccess"><span data-ttu-id="de756-140">包的文件 IO 权限。</span><span class="sxs-lookup"><span data-stu-id="de756-140">The file IO permissions for the package.</span></span></param>
        <param name="streaming"><span data-ttu-id="de756-141">如果打开包以进行流式处理，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de756-141"><see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="de756-142">初始化使用给定 <see cref="T:System.IO.Packaging.Package" /> 和流选项的 <see cref="T:System.IO.FileAccess" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de756-142">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-143"><xref:System.IO.Packaging.Package.%23ctor%2A> 是 <xref:System.IO.Packaging.Package> 抽象基抽象基类的受保护的构造函数。</span><span class="sxs-lookup"><span data-stu-id="de756-143"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="de756-144">在派生类中调用时，<xref:System.IO.Packaging.Package.%23ctor%2A> 构造函数初始化派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de756-144">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-145"><paramref name="openFileAccess" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-145">The value for <paramref name="openFileAccess" /> is not valid.</span></span></exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="package.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-146">保存并关闭包和所有基础部件流。</span><span class="sxs-lookup"><span data-stu-id="de756-146">Saves and closes the package plus all underlying part streams.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-147">对于 <xref:System.IO.Packaging.Package> 类 <xref:System.IO.Packaging.Package.Close%2A> 和 <xref:System.IO.Packaging.Package.Dispose%2A> 执行相同操作-如果调用 <xref:System.IO.Packaging.Package.Close%2A>，则没有理由调用 <xref:System.IO.Packaging.Package.Dispose%2A>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="de756-147">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="de756-148"><xref:System.IO.Packaging.Package.Close%2A> 和 <xref:System.IO.Packaging.Package.Dispose%2A> 在内部调用 <xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="de756-148"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="de756-149">建议使用 `using` 语句（不同于 `using` 命名空间指令）来 <xref:System.IO.Packaging.Package.Close%2A> 和 <xref:System.IO.Packaging.Package.Dispose%2A> 包。</span><span class="sxs-lookup"><span data-stu-id="de756-149">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="de756-150">[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)和[读取包示例](https://go.microsoft.com/fwlink/?LinkID=160034)演示如何通过使用 `using` 语句来关闭和释放包。</span><span class="sxs-lookup"><span data-stu-id="de756-150">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de756-151">创建新的包部件。</span><span class="sxs-lookup"><span data-stu-id="de756-151">Creates a new package part.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-152"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化新部件的空 <xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="de756-152"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="de756-153"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> 方法可用于获取对与部件关联的流实例的引用。</span><span class="sxs-lookup"><span data-stu-id="de756-153">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="de756-154">有关包部件的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.1 节。</span><span class="sxs-lookup"><span data-stu-id="de756-154">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-155">下面的示例演示如何创建一个新 <xref:System.IO.Packaging.PackagePart>，然后将数据存储到该部件。</span><span class="sxs-lookup"><span data-stu-id="de756-155">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="de756-156">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-156">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-157">
            <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 在内部调用派生类 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 方法，以便根据派生类中实现的物理格式实际创建部件。</span><span class="sxs-lookup"><span data-stu-id="de756-157">
            <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-158">新部件的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-158">The uniform resource identifier (URI) of the new part.</span></span></param>
        <param name="contentType"><span data-ttu-id="de756-159">数据流的内容类型。</span><span class="sxs-lookup"><span data-stu-id="de756-159">The content type of the data stream.</span></span></param>
        <summary><span data-ttu-id="de756-160">使用给定的 URI 和内容类型创建新的未压缩部件。</span><span class="sxs-lookup"><span data-stu-id="de756-160">Creates a new uncompressed part with a given URI and content type.</span></span></summary>
        <returns><span data-ttu-id="de756-161">新创建的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-161">The new created part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-162"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化新部件的空 <xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="de756-162"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="de756-163"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> 方法可用于获取对与部件关联的流实例的引用。</span><span class="sxs-lookup"><span data-stu-id="de756-163">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="de756-164"><xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>部分 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A>。</span><span class="sxs-lookup"><span data-stu-id="de756-164">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="de756-165">有关包部件的其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范中的1.1 节。</span><span class="sxs-lookup"><span data-stu-id="de756-165">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-166">下面的示例演示如何创建一个新 <xref:System.IO.Packaging.PackagePart>，然后将数据存储到该部件。</span><span class="sxs-lookup"><span data-stu-id="de756-166">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="de756-167">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-167">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-168"><paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-168"><paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-169"><paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</span><span class="sxs-lookup"><span data-stu-id="de756-169"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> URI.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de756-170">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-170">A part with the specified <paramref name="partUri" /> is already present in the package.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-171">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-171">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-172">包为只读的（无法添加新部件）。</span><span class="sxs-lookup"><span data-stu-id="de756-172">The package is read-only (a new part cannot be added).</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-173">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 在内部调用派生类的 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 方法，以便根据派生类中实现的物理格式实际创建部件。</span><span class="sxs-lookup"><span data-stu-id="de756-173">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-174">新部件的 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-174">The URI of the new part.</span></span></param>
        <param name="contentType"><span data-ttu-id="de756-175">数据流的内容类型。</span><span class="sxs-lookup"><span data-stu-id="de756-175">The content type of the data stream.</span></span></param>
        <param name="compressionOption"><span data-ttu-id="de756-176">数据流的压缩选项、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 压缩。</span><span class="sxs-lookup"><span data-stu-id="de756-176">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span></span></param>
        <summary><span data-ttu-id="de756-177">使用给定的 URI、内容类型和压缩选项创建新部件。</span><span class="sxs-lookup"><span data-stu-id="de756-177">Creates a new part with a given URI, content type, and compression option.</span></span></summary>
        <returns><span data-ttu-id="de756-178">新创建的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-178">The new created part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-179">对于默认 <xref:System.IO.Packaging.ZipPackage> 派生类，<xref:System.IO.Packaging.Package.CreatePart%2A> 方法仅支持两个 `compressionOption` 值： <xref:System.IO.Packaging.CompressionOption.NotCompressed> 或 <xref:System.IO.Packaging.CompressionOption.Normal> 压缩。</span><span class="sxs-lookup"><span data-stu-id="de756-179">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="de756-180"><xref:System.IO.Packaging.CompressionOption.Maximum>、<xref:System.IO.Packaging.CompressionOption.Fast>或 <xref:System.IO.Packaging.CompressionOption.SuperFast> 的其他 <xref:System.IO.Packaging.CompressionOption> 值使用 <xref:System.IO.Packaging.CompressionOption.Normal> 压缩。</span><span class="sxs-lookup"><span data-stu-id="de756-180">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="de756-181"><xref:System.IO.Packaging.Package.CreatePart%2A> 创建新部件的空 <xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="de756-181"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="de756-182"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> 方法可用于获取对与部件关联的流实例的引用。</span><span class="sxs-lookup"><span data-stu-id="de756-182">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="de756-183">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-183">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-184">下面的示例演示如何创建一个新 <xref:System.IO.Packaging.PackagePart>，然后将数据存储到该部件。</span><span class="sxs-lookup"><span data-stu-id="de756-184">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="de756-185">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-185">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-186"><paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-186"><paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-187"><paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-187"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> uniform resource identifier (URI).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de756-188">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-188">A part with the specified <paramref name="partUri" /> is already present in the package.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-189"><paramref name="compressionOption" /> 值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-189">The <paramref name="compressionOption" /> value is not valid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-190">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-190">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-191">包为只读的（无法添加新部件）。</span><span class="sxs-lookup"><span data-stu-id="de756-191">The package is read-only (a new part cannot be added).</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-192">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 在内部调用派生类的 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 方法，以便根据派生类中实现的物理格式实际创建部件。</span><span class="sxs-lookup"><span data-stu-id="de756-192">
            <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreatePartCore (partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="abstract member CreatePartCore : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePartCore (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-193">正在创建的部件的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-193">The uniform resource identifier (URI) for the part being created.</span></span></param>
        <param name="contentType"><span data-ttu-id="de756-194">数据流的内容类型。</span><span class="sxs-lookup"><span data-stu-id="de756-194">The content type of the data stream.</span></span></param>
        <param name="compressionOption"><span data-ttu-id="de756-195">数据流的压缩选项。</span><span class="sxs-lookup"><span data-stu-id="de756-195">The compression option for the data stream.</span></span></param>
        <summary><span data-ttu-id="de756-196">在派生类中重写时，会在包中创建一个新部件。</span><span class="sxs-lookup"><span data-stu-id="de756-196">When overridden in a derived class, creates a new part in the package.</span></span></summary>
        <returns><span data-ttu-id="de756-197">创建的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-197">The created part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-198">派生 <xref:System.IO.Packaging.Package.CreatePartCore%2A> 方法由 <xref:System.IO.Packaging.Package.CreatePart%2A> 方法调用，以根据在派生类中实现的物理格式创建部件。</span><span class="sxs-lookup"><span data-stu-id="de756-198">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="de756-199">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 类的 <xref:System.IO.Packaging.ZipPackage> 派生类实现。</span><span class="sxs-lookup"><span data-stu-id="de756-199">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="de756-200">在默认操作中，<xref:System.IO.Packaging.Package.CreatePart%2A> 在内部调用 <xref:System.IO.Packaging.ZipPackage> 类的 <xref:System.IO.Packaging.Package.CreatePartCore%2A> 以在 ZIP 文件中创建新部件。</span><span class="sxs-lookup"><span data-stu-id="de756-200">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="de756-201">对于默认 <xref:System.IO.Packaging.ZipPackage> 派生类，<xref:System.IO.Packaging.Package.CreatePartCore%2A> 方法仅支持两个 `compressionOption` 值： <xref:System.IO.Packaging.CompressionOption.NotCompressed> 或 <xref:System.IO.Packaging.CompressionOption.Normal> 压缩。</span><span class="sxs-lookup"><span data-stu-id="de756-201">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="de756-202"><xref:System.IO.Packaging.CompressionOption.Maximum>、<xref:System.IO.Packaging.CompressionOption.Fast>或 <xref:System.IO.Packaging.CompressionOption.SuperFast> 的其他 <xref:System.IO.Packaging.CompressionOption> 值使用 <xref:System.IO.Packaging.CompressionOption.Normal> 压缩。</span><span class="sxs-lookup"><span data-stu-id="de756-202">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="de756-203">有关包模型和包部件的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的第1章。</span><span class="sxs-lookup"><span data-stu-id="de756-203">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-204">派生 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 实现应不会对调用它的 <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 方法所执行的顺序或操作进行任何假设。</span><span class="sxs-lookup"><span data-stu-id="de756-204">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de756-205">创建与给定的部件的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-205">Creates a package-level relationship to a given part.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-206">包级别关系定义包和关联的目标部分或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-206">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="de756-207">包级别关系可以是以下两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="de756-207">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="de756-208"><xref:System.IO.Packaging.Package> 到包内的目标 <xref:System.IO.Packaging.PackagePart>。</span><span class="sxs-lookup"><span data-stu-id="de756-208">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="de756-209"><xref:System.IO.Packaging.Package> 到包外的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-209">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="de756-210">在包关系中，包被视为关系的 "所有者"。</span><span class="sxs-lookup"><span data-stu-id="de756-210">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="de756-211">删除包时，还将删除该包拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="de756-211">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="de756-212">创建或删除关系的过程不会以任何方式在物理上改变目标部分或资源。</span><span class="sxs-lookup"><span data-stu-id="de756-212">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="de756-213">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-213">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-214">下面的示例演示如何在 <xref:System.IO.Packaging.Package> 与根文档部分之间创建 <xref:System.IO.Packaging.PackageRelationship>。</span><span class="sxs-lookup"><span data-stu-id="de756-214">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="de756-215">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-215">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRelationship (targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri"><span data-ttu-id="de756-216">目标部件的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-216">The uniform resource identifier (URI) of the target part.</span></span></param>
        <param name="targetMode"><span data-ttu-id="de756-217">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span><span class="sxs-lookup"><span data-stu-id="de756-217">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="de756-218">唯一定义关系的角色的 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-218">A URI that uniquely defines the role of the relationship.</span></span></param>
        <summary><span data-ttu-id="de756-219">使用给定的 URI、目标模式和关系类型创建与部件的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-219">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span></span></summary>
        <returns><span data-ttu-id="de756-220">与指定部件的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-220">The package-level relationship to the specified part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-221">包级别关系定义包和关联的目标部分或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-221">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="de756-222">包级别关系可以是以下两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="de756-222">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="de756-223">在 <xref:System.IO.Packaging.Package> 到包中的目标部分之间。</span><span class="sxs-lookup"><span data-stu-id="de756-223">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="de756-224"><xref:System.IO.Packaging.Package> 到包外的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-224">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="de756-225">在包关系中，包被视为关系的 "所有者"。</span><span class="sxs-lookup"><span data-stu-id="de756-225">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="de756-226">删除包时，还将删除该包拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="de756-226">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="de756-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不会以任何方式以物理方式更改目标部分或资源。</span><span class="sxs-lookup"><span data-stu-id="de756-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="de756-228">关系的目标不能是另一个关系。</span><span class="sxs-lookup"><span data-stu-id="de756-228">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="de756-229">如果 `targetMode` 指定为 <xref:System.IO.Packaging.TargetMode.Internal>，则 `targetUri` 必须是根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）一般语法规范构成的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="de756-230">内部相对 URI 可以是以正斜杠（"/"）字符开头的绝对路径，例如 "/page1.xaml" 或 "/images/picture4.jpg"，也可以是相对路径（如 "..."）。/imagespicture1.jpg "，它解析为包根（"/"）作为基 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-230">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="de756-231">如果 `targetMode` 指定为 <xref:System.IO.Packaging.TargetMode.External>，则 `targetUri` 可以是根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）通用语法规范构成的绝对或相对 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-231">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span> <span data-ttu-id="de756-232">`http://www.microsoft.com/page2.xml` 是引用外部目标资源 "page2" 的绝对 URI 的示例。</span><span class="sxs-lookup"><span data-stu-id="de756-232">`http://www.microsoft.com/page2.xml` is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="de756-233">"images/picture1" 是相对 URI 的一个示例，它也引用外部目标资源 "1 .jpg"，但会根据包本身的 URI 进行解析。</span><span class="sxs-lookup"><span data-stu-id="de756-233">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="de756-234">`relationshipType` 必须是根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）通用语法规范进行格式的 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-234">`relationshipType` must be a URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="de756-235">下表显示了由开放式打包约定（OPC）规范定义的包级别 `relationshipType` Uri。</span><span class="sxs-lookup"><span data-stu-id="de756-235">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="de756-236">包级别关系</span><span class="sxs-lookup"><span data-stu-id="de756-236">Package-level Relationship</span></span>|<span data-ttu-id="de756-237">关系类型 URI</span><span class="sxs-lookup"><span data-stu-id="de756-237">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="de756-238">核心属性</span><span class="sxs-lookup"><span data-stu-id="de756-238">Core Properties</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties`|  
|<span data-ttu-id="de756-239">数字签名</span><span class="sxs-lookup"><span data-stu-id="de756-239">Digital Signature</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature`|  
|<span data-ttu-id="de756-240">数字签名证书</span><span class="sxs-lookup"><span data-stu-id="de756-240">Digital Signature Certificate</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/certificate`|  
|<span data-ttu-id="de756-241">数字签名源</span><span class="sxs-lookup"><span data-stu-id="de756-241">Digital Signature Origin</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin`|  
|<span data-ttu-id="de756-242">缩略图</span><span class="sxs-lookup"><span data-stu-id="de756-242">Thumbnail</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail`|  
  
 <span data-ttu-id="de756-243">有关打包和包关系的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.3 节。</span><span class="sxs-lookup"><span data-stu-id="de756-243">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-244">下面的示例演示如何使用 <xref:System.IO.Packaging.Package.CreateRelationship%2A> 在 <xref:System.IO.Packaging.Package> 和根文档部分之间创建 <xref:System.IO.Packaging.PackageRelationship>。</span><span class="sxs-lookup"><span data-stu-id="de756-244">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="de756-245">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-245">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-246"><paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-246"><paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-247"><paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-247">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-248"><paramref name="targetMode" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-248">The value for <paramref name="targetMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-249">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-249">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-250">包为只读。</span><span class="sxs-lookup"><span data-stu-id="de756-250">The package is read-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRelationship (targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri"><span data-ttu-id="de756-251">目标部件的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-251">The uniform resource identifier (URI) of the target part.</span></span></param>
        <param name="targetMode"><span data-ttu-id="de756-252">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span><span class="sxs-lookup"><span data-stu-id="de756-252">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="de756-253">唯一定义关系的角色的 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-253">A URI that uniquely defines the role of the relationship.</span></span></param>
        <param name="id"><span data-ttu-id="de756-254">唯一 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="de756-254">A unique XML identifier.</span></span></param>
        <summary><span data-ttu-id="de756-255">使用给定的 URI、目标模式、关系类型和 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 创建与部件的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-255">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span></span></summary>
        <returns><span data-ttu-id="de756-256">与指定部件的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-256">The package-level relationship to the specified part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-257">包级别关系定义包和关联的目标部分或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-257">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="de756-258">包级别关系可以是以下两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="de756-258">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="de756-259">在 <xref:System.IO.Packaging.Package> 到包中的目标部分之间。</span><span class="sxs-lookup"><span data-stu-id="de756-259">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="de756-260"><xref:System.IO.Packaging.Package> 到包外的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-260">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="de756-261">在包关系中，包被视为关系的 "所有者"。</span><span class="sxs-lookup"><span data-stu-id="de756-261">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="de756-262">删除包时，还将删除该包拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="de756-262">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="de756-263"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不会以任何方式以物理方式更改目标部分或资源。</span><span class="sxs-lookup"><span data-stu-id="de756-263"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="de756-264">关系的目标不能是另一个关系。</span><span class="sxs-lookup"><span data-stu-id="de756-264">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="de756-265">`id` 必须是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="de756-265">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="de756-266">`id` 类型为 xsd： ID，必须遵循 XML 架构第2部分：数据类型规范（请参阅[https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)）中规定的命名约定。</span><span class="sxs-lookup"><span data-stu-id="de756-266">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="de756-267">如果 `id` 指定为 `null` 将自动生成唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="de756-267">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="de756-268">空字符串指定的 `id` 无效。</span><span class="sxs-lookup"><span data-stu-id="de756-268">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="de756-269">如果 `targetMode` 指定为 <xref:System.IO.Packaging.TargetMode.Internal>，则 `targetUri` 必须是根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）一般语法规范构成的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-269">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="de756-270">内部相对 URI 可以是以正斜杠（"/"）字符开头的绝对路径，例如 "/page1.xaml" 或 "/images/picture4.jpg"，也可以是相对路径（如 "..."）。/imagespicture1.jpg "，它解析为包根（"/"）作为基 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-270">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="de756-271">如果 `targetMode` 指定为 <xref:System.IO.Packaging.TargetMode.External>，则 `targetUri` 可以是根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）通用语法规范构成的绝对或相对 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-271">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span> <span data-ttu-id="de756-272">`http://www.microsoft.com/page2.xml` 是引用外部目标资源 "page2" 的绝对 URI 的示例。</span><span class="sxs-lookup"><span data-stu-id="de756-272">`http://www.microsoft.com/page2.xml` is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="de756-273">"images/picture1" 是相对 URI 的一个示例，它也引用外部目标资源 "1 .jpg"，但会根据包本身的 URI 进行解析。</span><span class="sxs-lookup"><span data-stu-id="de756-273">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="de756-274">`relationshipType` 必须是根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）通用语法规范进行格式的 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-274">`relationshipType` must be a URI that is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="de756-275">下表显示了由开放式打包约定（OPC）规范定义的包级别 `relationshipType` Uri。</span><span class="sxs-lookup"><span data-stu-id="de756-275">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="de756-276">包级别关系</span><span class="sxs-lookup"><span data-stu-id="de756-276">Package-level Relationship</span></span>|<span data-ttu-id="de756-277">关系类型 URI</span><span class="sxs-lookup"><span data-stu-id="de756-277">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="de756-278">核心属性</span><span class="sxs-lookup"><span data-stu-id="de756-278">Core Properties</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties`|  
|<span data-ttu-id="de756-279">数字签名</span><span class="sxs-lookup"><span data-stu-id="de756-279">Digital Signature</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature`|  
|<span data-ttu-id="de756-280">数字签名证书</span><span class="sxs-lookup"><span data-stu-id="de756-280">Digital Signature Certificate</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/certificate`|  
|<span data-ttu-id="de756-281">数字签名源</span><span class="sxs-lookup"><span data-stu-id="de756-281">Digital Signature Origin</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin`|  
|<span data-ttu-id="de756-282">缩略图</span><span class="sxs-lookup"><span data-stu-id="de756-282">Thumbnail</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail`|  
  
 <span data-ttu-id="de756-283">有关打包和包关系的其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.3 节。</span><span class="sxs-lookup"><span data-stu-id="de756-283">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-284">下面的示例演示如何使用 <xref:System.IO.Packaging.Package.CreateRelationship%2A> 在 <xref:System.IO.Packaging.Package> 和根文档部分之间创建 <xref:System.IO.Packaging.PackageRelationship>。</span><span class="sxs-lookup"><span data-stu-id="de756-284">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="de756-285">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-285">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-286"><paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-286"><paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-287"><paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-287">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-288"><paramref name="targetMode" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-288">The value for <paramref name="targetMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-289">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-289">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-290">包为只读。</span><span class="sxs-lookup"><span data-stu-id="de756-290">The package is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="de756-291"><paramref name="id" /> 不是有效的 XML 标识符；或者包中已存在具有指定的 <paramref name="id" /> 的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-291"><paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.DeletePart : Uri -&gt; unit" Usage="package.DeletePart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-292">要删除的部件的 URI。</span><span class="sxs-lookup"><span data-stu-id="de756-292">The URI of the part to delete.</span></span></param>
        <summary><span data-ttu-id="de756-293">使用包中给定的 URI 删除部件。</span><span class="sxs-lookup"><span data-stu-id="de756-293">Deletes a part with a given URI from the package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-294">`partUri` 必须是一个相对 URI，该 URI 包含以正斜杠（"/"）开头的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="de756-294">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="de756-295">绝对路径相对于包根路径，并且根据[RFC 3986](https://tools.ietf.org/html/rfc3986)统一资源标识符（URI）通用语法规范进行构建。</span><span class="sxs-lookup"><span data-stu-id="de756-295">The absolute path is relative to the package root and is formed according to the [RFC 3986](https://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="de756-296">"/page1.xaml" 和 "/images/picture4.jpg" 是有效的部件 Uri 的示例。</span><span class="sxs-lookup"><span data-stu-id="de756-296">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="de756-297">如果包中不存在具有指定 `partUri` 的部分，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de756-297">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="de756-298">（您可以使用 <xref:System.IO.Packaging.Package.PartExists%2A> 方法来确定具有指定 `partUri` 的部件是否在包中。）</span><span class="sxs-lookup"><span data-stu-id="de756-298">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="de756-299">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-299">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-300"><paramref name="partUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-300"><paramref name="partUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-301"><paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</span><span class="sxs-lookup"><span data-stu-id="de756-301"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> URI.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-302">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-302">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-303">包为只读。</span><span class="sxs-lookup"><span data-stu-id="de756-303">The package is read-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-304">
            <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 在内部调用派生类的 <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> 方法，以便根据派生类中实现的物理格式实际删除该部件。</span><span class="sxs-lookup"><span data-stu-id="de756-304">
            <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member DeletePartCore : Uri -&gt; unit" Usage="package.DeletePartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-305">要删除的 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</span><span class="sxs-lookup"><span data-stu-id="de756-305">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span></span></param>
        <summary><span data-ttu-id="de756-306">在派生类中重写时，会使用给定的 URI 删除部件。</span><span class="sxs-lookup"><span data-stu-id="de756-306">When overridden in a derived class, deletes a part with a given URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-307">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 类的 <xref:System.IO.Packaging.ZipPackage> 派生类实现。</span><span class="sxs-lookup"><span data-stu-id="de756-307">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="de756-308">在默认操作中，<xref:System.IO.Packaging.Package.DeletePart%2A> 在内部调用 <xref:System.IO.Packaging.ZipPackage> 类的 <xref:System.IO.Packaging.Package.DeletePartCore%2A>，以根据派生类中实现的物理格式执行实际的删除操作。</span><span class="sxs-lookup"><span data-stu-id="de756-308">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="de756-309">有关包模型和包部件的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的第1章。</span><span class="sxs-lookup"><span data-stu-id="de756-309">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-310">派生类 <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> 实现由 <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 方法根据派生类中实现的物理格式调用到指定的部分。</span><span class="sxs-lookup"><span data-stu-id="de756-310">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span></span>  
  
<span data-ttu-id="de756-311">派生 <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> 实现应不会对调用它的 <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 方法所执行的顺序或操作进行任何假设。</span><span class="sxs-lookup"><span data-stu-id="de756-311">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="package.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="de756-312">要删除的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</span><span class="sxs-lookup"><span data-stu-id="de756-312">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span></span></param>
        <summary><span data-ttu-id="de756-313">删除包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-313">Deletes a package-level relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-314">包级别关系定义包和关联的目标部分或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-314">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="de756-315">包级别关系可以是以下两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="de756-315">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="de756-316">在 <xref:System.IO.Packaging.Package> 到包中的目标部分之间。</span><span class="sxs-lookup"><span data-stu-id="de756-316">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="de756-317"><xref:System.IO.Packaging.Package> 到包外的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-317">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="de756-318">在包关系中，包被视为关系的 "所有者"。</span><span class="sxs-lookup"><span data-stu-id="de756-318">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="de756-319">删除包时，还将删除该包拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="de756-319">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="de756-320">如果具有指定 `id` 的关系不在包中，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de756-320">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="de756-321"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 不会以任何方式以物理方式更改目标部件。</span><span class="sxs-lookup"><span data-stu-id="de756-321"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="de756-322">有关包关系的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.3 节。</span><span class="sxs-lookup"><span data-stu-id="de756-322">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-323"><paramref name="id" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-323"><paramref name="id" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-324">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-324">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-325">包为只读。</span><span class="sxs-lookup"><span data-stu-id="de756-325">The package is read-only.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="de756-326"><paramref name="id" /> 不是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="de756-326"><paramref name="id" /> is not a valid XML identifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="package.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="de756-327">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="de756-327"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="de756-328">刷新并保存所有部件和关系的内容，关闭包，并释放所有资源。</span><span class="sxs-lookup"><span data-stu-id="de756-328">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-329">为了确保正确保存所有更改，<xref:System.IO.Packaging.Package.Dispose%2A> 还会完成并关闭包中包含的所有部件和关系。</span><span class="sxs-lookup"><span data-stu-id="de756-329">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="de756-330">对于 <xref:System.IO.Packaging.Package> 类，<xref:System.IO.Packaging.Package.Dispose%2A> 和 <xref:System.IO.Packaging.Package.Close%2A> 执行相同操作-如果调用 <xref:System.IO.Packaging.Package.Close%2A>，则没有理由调用 <xref:System.IO.Packaging.Package.Dispose%2A>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="de756-330">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="de756-331"><xref:System.IO.Packaging.Package.Close%2A> 和 <xref:System.IO.Packaging.Package.Dispose%2A> 在内部调用 <xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="de756-331"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="de756-332">分配和管理非内存资源的派生类应重写此方法，以便在调用 <xref:System.IO.Packaging.Package.Dispose%2A> 时释放资源。</span><span class="sxs-lookup"><span data-stu-id="de756-332">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="de756-333">派生类重写还应调用 <xref:System.IO.Packaging.Package.Flush%2A> 和基类 <xref:System.IO.Packaging.Package.Dispose%2A> 方法，以确保始终执行基类清理。</span><span class="sxs-lookup"><span data-stu-id="de756-333">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="de756-334">建议使用 `using` 语句（不同于 `using` 命名空间指令）来 <xref:System.IO.Packaging.Package.Close%2A> 和 <xref:System.IO.Packaging.Package.Dispose%2A> 包。</span><span class="sxs-lookup"><span data-stu-id="de756-334">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="de756-335">[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)演示如何使用 `using` 语句关闭和释放包。</span><span class="sxs-lookup"><span data-stu-id="de756-335">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.Package.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de756-336">获取包的文件访问设置。</span><span class="sxs-lookup"><span data-stu-id="de756-336">Gets the file access setting for the package.</span></span></summary>
        <value><span data-ttu-id="de756-337"><see cref="T:System.IO.FileAccess" /> 值之一：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="de756-337">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-338"><xref:System.IO.Packaging.Package.FileOpenAccess%2A> 属性没有默认值。</span><span class="sxs-lookup"><span data-stu-id="de756-338">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="de756-339">当你创建新包时，或在打开现有包时在 <xref:System.IO.Packaging.Package.Open%2A> 调用中 <xref:System.IO.Packaging.Package.%23ctor%2A> 指定文件访问设置。</span><span class="sxs-lookup"><span data-stu-id="de756-339">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-340">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-340">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="package.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-341">保存包中包含的所有部件和关系的内容。</span><span class="sxs-lookup"><span data-stu-id="de756-341">Saves the contents of all parts and relationships that are contained in the package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-342"><xref:System.IO.Packaging.Package.Flush%2A> 在内部调用派生类的 <xref:System.IO.Packaging.Package.FlushCore%2A> 实现，以执行实际的特定于格式的刷新操作。</span><span class="sxs-lookup"><span data-stu-id="de756-342"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implementation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="de756-343">派生类的 <xref:System.IO.Packaging.Package.FlushCore%2A> 方法负责将部分和关系内容实际保存到特定的物理派生类实现。</span><span class="sxs-lookup"><span data-stu-id="de756-343">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="de756-344">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 基类的 <xref:System.IO.Packaging.ZipPackage> 派生实现。</span><span class="sxs-lookup"><span data-stu-id="de756-344">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="de756-345">在默认操作中，<xref:System.IO.Packaging.Package.Flush%2A> 内部调用 <xref:System.IO.Packaging.Package.FlushCore%2A> 将部分和关系保存到 ZIP 文件包中。</span><span class="sxs-lookup"><span data-stu-id="de756-345">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="de756-346"><xref:System.IO.Packaging.Package.Flush%2A> 由 <xref:System.IO.Packaging.Package.Close%2A> 和 <xref:System.IO.Packaging.Package.Dispose%2A> 方法自动调用。</span><span class="sxs-lookup"><span data-stu-id="de756-346"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="de756-347">调用 <xref:System.IO.Packaging.Package.Close%2A> 或 <xref:System.IO.Packaging.Package.Dispose%2A> 时，不必单独调用 <xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="de756-347">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-348">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-348">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-349">包为只读的，无法进行修改。</span><span class="sxs-lookup"><span data-stu-id="de756-349">The package is read-only and cannot be modified.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-350">
            <see cref="M:System.IO.Packaging.Package.Flush" /> 在内部调用派生类的 <see cref="M:System.IO.Packaging.Package.FlushCore" /> 方法，以便根据派生类中实现的物理格式实际刷新部件。</span><span class="sxs-lookup"><span data-stu-id="de756-350">
            <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberSignature Language="F#" Value="abstract member FlushCore : unit -&gt; unit" Usage="package.FlushCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-351">在派生类中重写时，会将所有部件和关系的内容保存到派生类存储区中。</span><span class="sxs-lookup"><span data-stu-id="de756-351">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-352"><xref:System.IO.Packaging.Package.FlushCore%2A> 由 <xref:System.IO.Packaging.Package.Flush%2A> 方法调用，以根据派生类中实现的物理格式执行实际刷新操作。</span><span class="sxs-lookup"><span data-stu-id="de756-352"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-353">派生 <see cref="M:System.IO.Packaging.Package.FlushCore" /> 实现不应对调用它的 <see cref="M:System.IO.Packaging.Package.Flush" /> 方法所执行的顺序或操作进行任何假设。</span><span class="sxs-lookup"><span data-stu-id="de756-353">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.GetPart : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-354">要返回的部件的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-354">The uniform resource identifier (URI) of the part to return.</span></span></param>
        <summary><span data-ttu-id="de756-355">返回具有给定 URI 的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-355">Returns the part with a given URI.</span></span></summary>
        <returns><span data-ttu-id="de756-356">具有指定 <paramref name="partUri" /> 的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-356">The part with the specified <paramref name="partUri" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-357">如果具有指定 `partUri` 的部件不存在，则会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="de756-357">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="de756-358"><xref:System.IO.Packaging.Package.PartExists%2A> 方法可用于确定 `partUri` 是否引用现有部件。</span><span class="sxs-lookup"><span data-stu-id="de756-358">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="de756-359">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 基类的 <xref:System.IO.Packaging.ZipPackage> 派生实现。</span><span class="sxs-lookup"><span data-stu-id="de756-359">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="de756-360">在默认操作中，<xref:System.IO.Packaging.Package.GetPart%2A> 在内部调用 <xref:System.IO.Packaging.ZipPackage> 类的 <xref:System.IO.Packaging.Package.GetPartCore%2A>，以从 ZIP 文件返回所请求的部分。</span><span class="sxs-lookup"><span data-stu-id="de756-360">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="de756-361">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-361">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-362">下面的示例演示如何查找、检索和读取包中包含的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-362">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="de756-363">有关完整示例，请参阅[读取包示例](https://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="de756-363">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-364"><paramref name="partUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-364"><paramref name="partUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-365"><paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-365"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> uniform resource identifier (URI).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de756-366">包中不存在具有指定 <paramref name="partUri" /> 的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-366">A part with the specified <paramref name="partUri" /> is not in the package.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-367">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-367">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-368">包是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-368">The package is write-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-369">
            <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 在内部调用派生类 <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> 方法，以便根据派生类中实现的物理格式实际刷新部件。</span><span class="sxs-lookup"><span data-stu-id="de756-369">
            <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member GetPartCore : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-370">要检索的部件的统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-370">The uniform resource identifier (URI) of the part to retrieve.</span></span></param>
        <summary><span data-ttu-id="de756-371">在派生类中重写时，会返回由给定 URI 寻址的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-371">When overridden in a derived class, returns the part addressed by a given URI.</span></span></summary>
        <returns><span data-ttu-id="de756-372">请求的部件；或者，如果包中不存在具有指定 <paramref name="partUri" /> 的部件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-372">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-373">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 类的 <xref:System.IO.Packaging.ZipPackage> 派生实现。</span><span class="sxs-lookup"><span data-stu-id="de756-373">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="de756-374">在默认操作中，<xref:System.IO.Packaging.Package.GetPart%2A> 在内部调用 <xref:System.IO.Packaging.ZipPackage> 类的 <xref:System.IO.Packaging.Package.GetPartCore%2A> 以检索 ZIP 文件中的部件。</span><span class="sxs-lookup"><span data-stu-id="de756-374">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="de756-375">有关包模型和包部件的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的第1章。</span><span class="sxs-lookup"><span data-stu-id="de756-375">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-376">派生类 <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> 实现由 <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 方法调用，以根据派生类中实现的物理格式访问和返回指定的部分。</span><span class="sxs-lookup"><span data-stu-id="de756-376">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span></span>  
  
<span data-ttu-id="de756-377">派生 <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> 实现应不会对调用它的 <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 方法所执行的顺序或操作进行任何假设。</span><span class="sxs-lookup"><span data-stu-id="de756-377">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberSignature Language="F#" Value="member this.GetParts : unit -&gt; System.IO.Packaging.PackagePartCollection" Usage="package.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-378">返回包中所有部件的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-378">Returns a collection of all the parts in the package.</span></span></summary>
        <returns><span data-ttu-id="de756-379">包中包含的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-379">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-380"><xref:System.IO.Packaging.Package.GetParts%2A> 返回包含在包中的所有部件（包括 <xref:System.IO.Packaging.PackageRelationship> 部分）的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-380"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="de756-381"><xref:System.IO.Packaging.Package.GetParts%2A> 绝不会返回 `null`;但是，如果包不包含任何部件，则返回的集合将包含零个元素。</span><span class="sxs-lookup"><span data-stu-id="de756-381"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="de756-382">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 基类的 <xref:System.IO.Packaging.ZipPackage> 派生实现。</span><span class="sxs-lookup"><span data-stu-id="de756-382">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="de756-383">在默认操作中，<xref:System.IO.Packaging.Package.GetParts%2A> 调用 <xref:System.IO.Packaging.ZipPackage> 类的 <xref:System.IO.Packaging.Package.GetPartsCore%2A> 方法以从 ZIP 文件返回部件。</span><span class="sxs-lookup"><span data-stu-id="de756-383">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="de756-384">有关包和包部分的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.1 节。</span><span class="sxs-lookup"><span data-stu-id="de756-384">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-385">下面的示例演示如何使用 <xref:System.IO.Packaging.Package.GetParts%2A> 方法获取 <xref:System.IO.Packaging.Package>中包含的部件的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-385">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="de756-386">有关完整的程序源代码，请参阅[使用数字签名创建包示例](https://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="de756-386">For the complete program source code, see [Creating a Package with a Digital Signature Sample](https://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-387">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-387">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-388">包是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-388">The package is write-only.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-389">
            <see cref="M:System.IO.Packaging.Package.GetParts" /> 在内部调用派生类 <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> 方法，以便根据派生类中实现的物理格式实际刷新部件。</span><span class="sxs-lookup"><span data-stu-id="de756-389">
            <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberSignature Language="F#" Value="abstract member GetPartsCore : unit -&gt; System.IO.Packaging.PackagePart[]" Usage="package.GetPartsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-390">在派生类中重写时，会返回包中所有部件的数组。</span><span class="sxs-lookup"><span data-stu-id="de756-390">When overridden in a derived class, returns an array of all the parts in the package.</span></span></summary>
        <returns><span data-ttu-id="de756-391">包中包含的所有部件的数组。</span><span class="sxs-lookup"><span data-stu-id="de756-391">An array of all the parts that are contained in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-392">派生类 <xref:System.IO.Packaging.Package.GetPartsCore%2A> 实现由 <xref:System.IO.Packaging.Package.GetParts%2A> 方法调用，以根据派生类中实现的物理格式访问和返回部分数组。</span><span class="sxs-lookup"><span data-stu-id="de756-392">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="de756-393">默认情况下，提供并使用抽象 <xref:System.IO.Packaging.Package> 类的 <xref:System.IO.Packaging.ZipPackage> 派生实现。</span><span class="sxs-lookup"><span data-stu-id="de756-393">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="de756-394">在默认操作中，<xref:System.IO.Packaging.Package.GetParts%2A> 在内部调用 <xref:System.IO.Packaging.ZipPackage> 类的 <xref:System.IO.Packaging.Package.GetPartCore%2A> 以从 ZIP 文件中检索部件。</span><span class="sxs-lookup"><span data-stu-id="de756-394">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="de756-395">有关包模型和包部件的详细信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的第1章。</span><span class="sxs-lookup"><span data-stu-id="de756-395">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="de756-396">派生 <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> 实现应不会对调用它的 <see cref="M:System.IO.Packaging.Package.GetParts" /> 方法所执行的顺序或操作进行任何假设。</span><span class="sxs-lookup"><span data-stu-id="de756-396">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span></span></para></block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="de756-397">要返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span><span class="sxs-lookup"><span data-stu-id="de756-397">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span></span></param>
        <summary><span data-ttu-id="de756-398">返回具有给定标识符的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-398">Returns the package-level relationship with a given identifier.</span></span></summary>
        <returns><span data-ttu-id="de756-399">具有指定 <paramref name="id" /> 的包级别关系。</span><span class="sxs-lookup"><span data-stu-id="de756-399">The package-level relationship with the specified <paramref name="id" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-400">`id` 必须是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="de756-400">`id` must be a valid XML identifier.</span></span> <span data-ttu-id="de756-401">`id` 类型为 xsd： ID，必须遵循[XML 架构第2部分：数据类型规范的节 twiliojava-3.3.8-with-dependencies jar 编写](https://www.w3.org/TR/xmlschema-2/#ID)中规定的命名约定。</span><span class="sxs-lookup"><span data-stu-id="de756-401">The `id` type is xsd:ID and must follow the naming conventions prescribed in the [section 3.3.8 of the XML Schema Part 2: Datatypes specification](https://www.w3.org/TR/xmlschema-2/#ID).</span></span>  
  
 <span data-ttu-id="de756-402">有关打包和包关系的其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.3 节。</span><span class="sxs-lookup"><span data-stu-id="de756-402">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-403"><paramref name="id" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-403"><paramref name="id" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="de756-404"><paramref name="id" /> 不是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="de756-404"><paramref name="id" /> is not a valid XML identifier.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="de756-405">包中不存在具有指定 <paramref name="id" /> 的关系。</span><span class="sxs-lookup"><span data-stu-id="de756-405">A relationship with the specified <paramref name="id" /> is not in the package.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-406">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-406">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-407">包是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-407">The package is write-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-408">返回所有包级别关系的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-408">Returns a collection of all the package-level relationships.</span></span></summary>
        <returns><span data-ttu-id="de756-409">包中包含的所有包级别关系的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-409">A collection of all the package-level relationships that are contained in the package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-410"><xref:System.IO.Packaging.Package.GetRelationships%2A> 绝不会返回 `null`;但是，如果包不包含包级别关系，则返回的集合可以包含零个元素。</span><span class="sxs-lookup"><span data-stu-id="de756-410"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="de756-411">包级别关系定义包和关联的目标部分或资源之间的关联。</span><span class="sxs-lookup"><span data-stu-id="de756-411">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="de756-412">包级别关系可以是以下两种形式之一。</span><span class="sxs-lookup"><span data-stu-id="de756-412">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="de756-413">在 <xref:System.IO.Packaging.Package> 到包中的目标部分之间。</span><span class="sxs-lookup"><span data-stu-id="de756-413">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="de756-414"><xref:System.IO.Packaging.Package> 到包外的目标资源。</span><span class="sxs-lookup"><span data-stu-id="de756-414">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="de756-415">在包关系中，包被视为关系的 "所有者"。</span><span class="sxs-lookup"><span data-stu-id="de756-415">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="de756-416">删除包时，还将删除该包拥有的所有关系。</span><span class="sxs-lookup"><span data-stu-id="de756-416">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="de756-417">创建或删除关系的过程不会以任何方式在物理上改变目标部分或资源。</span><span class="sxs-lookup"><span data-stu-id="de756-417">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="de756-418">有关打包和包关系的其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范的1.3 节。</span><span class="sxs-lookup"><span data-stu-id="de756-418">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-419">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-419">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-420">包是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-420">The package is write-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType"><span data-ttu-id="de756-421">在集合中匹配和返回的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span><span class="sxs-lookup"><span data-stu-id="de756-421">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span></span></param>
        <summary><span data-ttu-id="de756-422">返回与给定的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 匹配的所有包级别关系的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-422">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span></span></summary>
        <returns><span data-ttu-id="de756-423">与指定的 <paramref name="relationshipType" /> 匹配的包级别关系的集合。</span><span class="sxs-lookup"><span data-stu-id="de756-423">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-424"><xref:System.IO.Packaging.Package.GetRelationships%2A> 绝不会返回 `null`;但是，如果没有与指定 `relationshipType`匹配的包级别关系，则返回的集合可能包含零个元素。</span><span class="sxs-lookup"><span data-stu-id="de756-424"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="de756-425">下表显示了由开放式打包约定（OPC）规范定义的包级别 `relationshipType` Uri。</span><span class="sxs-lookup"><span data-stu-id="de756-425">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="de756-426">包级别关系</span><span class="sxs-lookup"><span data-stu-id="de756-426">Package-level Relationship</span></span>|<span data-ttu-id="de756-427">关系类型 URI</span><span class="sxs-lookup"><span data-stu-id="de756-427">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="de756-428">核心属性</span><span class="sxs-lookup"><span data-stu-id="de756-428">Core Properties</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties`|  
|<span data-ttu-id="de756-429">数字签名</span><span class="sxs-lookup"><span data-stu-id="de756-429">Digital Signature</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/signature`|  
|<span data-ttu-id="de756-430">数字签名证书</span><span class="sxs-lookup"><span data-stu-id="de756-430">Digital Signature Certificate</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/certificate`|  
|<span data-ttu-id="de756-431">数字签名源</span><span class="sxs-lookup"><span data-stu-id="de756-431">Digital Signature Origin</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/digital-signature/origin`|  
|<span data-ttu-id="de756-432">缩略图</span><span class="sxs-lookup"><span data-stu-id="de756-432">Thumbnail</span></span>|`http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail`|  
  
 <span data-ttu-id="de756-433">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-433">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-434">下面的示例演示如何检索已为包定义的关系。</span><span class="sxs-lookup"><span data-stu-id="de756-434">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="de756-435">有关完整示例，请参阅[读取包示例](https://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="de756-435">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-436"><paramref name="relationshipType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-436"><paramref name="relationshipType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-437"><paramref name="relationshipType" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="de756-437"><paramref name="relationshipType" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-438">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-438">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-439">包是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-439">The package is write-only.</span></span></exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de756-440">打开包。</span><span class="sxs-lookup"><span data-stu-id="de756-440">Opens a package.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-441"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-441"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-442">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-442">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-443">下面的示例演示如何创建一个新的 <xref:System.IO.Packaging.Package>，它将 <xref:System.IO.Packaging.PackageRelationship> 和 <xref:System.IO.Packaging.PackagePart> 元素与存储的数据结合在一起。</span><span class="sxs-lookup"><span data-stu-id="de756-443">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="de756-444">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-444">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (stream As Stream) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="de756-445">在其上打开包的 IO 流。</span><span class="sxs-lookup"><span data-stu-id="de756-445">The IO stream on which to open the package.</span></span></param>
        <summary><span data-ttu-id="de756-446">在给定的 IO 流上打开包。</span><span class="sxs-lookup"><span data-stu-id="de756-446">Opens a package on a given IO stream.</span></span></summary>
        <returns><span data-ttu-id="de756-447">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-447">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-448"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-448"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-449">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-449">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-450"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-450"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-451">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-451">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="de756-452">包的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="de756-452">The path and file name of the package.</span></span></param>
        <summary><span data-ttu-id="de756-453">打开位于给定路径和文件名的包。</span><span class="sxs-lookup"><span data-stu-id="de756-453">Opens a package at a given path and file name.</span></span></summary>
        <returns><span data-ttu-id="de756-454">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-454">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-455"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-455"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-456">此 <xref:System.IO.Packaging.Package.Open%2A> 方法使用 <xref:System.IO.FileMode.OpenOrCreate>、<xref:System.IO.FileAccess.ReadWrite>和 <xref:System.IO.FileShare.None> 的默认属性打开包（若要指定不同的属性，请使用其他 Open 方法重载之一）。</span><span class="sxs-lookup"><span data-stu-id="de756-456">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="de756-457">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-457">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-458">下面的示例演示如何创建一个新的 <xref:System.IO.Packaging.Package>，它将 <xref:System.IO.Packaging.PackageRelationship> 和 <xref:System.IO.Packaging.PackagePart> 元素与存储的数据结合在一起。</span><span class="sxs-lookup"><span data-stu-id="de756-458">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="de756-459">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-459">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-460"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-460"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (stream As Stream, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="de756-461">在其上打开包的 IO 流。</span><span class="sxs-lookup"><span data-stu-id="de756-461">The IO stream on which to open the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="de756-462">用于打开包的文件模式。</span><span class="sxs-lookup"><span data-stu-id="de756-462">The file mode in which to open the package.</span></span></param>
        <summary><span data-ttu-id="de756-463">使用给定的 IO 流和文件模式打开包。</span><span class="sxs-lookup"><span data-stu-id="de756-463">Opens a package with a given IO stream and file mode.</span></span></summary>
        <returns><span data-ttu-id="de756-464">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-464">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-465"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-465"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-466">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-466">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-467"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-467"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-468"><paramref name="packageMode" /> 值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-468"><paramref name="packageMode" /> value is not valid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-469">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-469">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="de756-470">包的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="de756-470">The path and file name of the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="de756-471">用于打开包的文件模式。</span><span class="sxs-lookup"><span data-stu-id="de756-471">The file mode in which to open the package.</span></span></param>
        <summary><span data-ttu-id="de756-472">使用给定的文件模式打开位于给定路径的包。</span><span class="sxs-lookup"><span data-stu-id="de756-472">Opens a package at a given path using a given file mode.</span></span></summary>
        <returns><span data-ttu-id="de756-473">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-473">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-474"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-474"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-475">此 <xref:System.IO.Packaging.Package.Open%2A> 方法将使用默认属性打开包 <xref:System.IO.FileAccess.ReadWrite> 和 <xref:System.IO.FileShare.None> （若要指定不同的属性，请使用其他 Open 方法重载之一）。</span><span class="sxs-lookup"><span data-stu-id="de756-475">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="de756-476">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-476">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-477">下面的示例演示如何创建一个新的 <xref:System.IO.Packaging.Package>，它将 <xref:System.IO.Packaging.PackageRelationship> 和 <xref:System.IO.Packaging.PackagePart> 元素与存储的数据结合在一起。</span><span class="sxs-lookup"><span data-stu-id="de756-477">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="de756-478">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-478">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-479"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-479"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-480"><paramref name="packageMode" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-480">Value for <paramref name="packageMode" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (stream As Stream, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="de756-481">在其上打开包的 IO 流。</span><span class="sxs-lookup"><span data-stu-id="de756-481">The IO stream on which to open the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="de756-482">用于打开包的文件模式。</span><span class="sxs-lookup"><span data-stu-id="de756-482">The file mode in which to open the package.</span></span></param>
        <param name="packageAccess"><span data-ttu-id="de756-483">用于打开包的文件访问。</span><span class="sxs-lookup"><span data-stu-id="de756-483">The file access in which to open the package.</span></span></param>
        <summary><span data-ttu-id="de756-484">使用给定的 IO 流、文件模式和文件访问设置打开包。</span><span class="sxs-lookup"><span data-stu-id="de756-484">Opens a package with a given IO stream, file mode, and file access setting.</span></span></summary>
        <returns><span data-ttu-id="de756-485">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-485">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-486"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-486"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-487">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-487">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-488"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-488"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-489"><paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-489">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-490">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-490">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="de756-491">包的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="de756-491">The path and file name of the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="de756-492">用于打开包的文件模式。</span><span class="sxs-lookup"><span data-stu-id="de756-492">The file mode in which to open the package.</span></span></param>
        <param name="packageAccess"><span data-ttu-id="de756-493">用于打开包的文件访问。</span><span class="sxs-lookup"><span data-stu-id="de756-493">The file access in which to open the package.</span></span></param>
        <summary><span data-ttu-id="de756-494">使用给定的文件模式和文件访问设置打开位于给定路径的包。</span><span class="sxs-lookup"><span data-stu-id="de756-494">Opens a package at a given path using a given file mode and file access setting.</span></span></summary>
        <returns><span data-ttu-id="de756-495">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-495">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-496"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-496"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-497">此 <xref:System.IO.Packaging.Package.Open%2A> 方法将使用默认的 <xref:System.IO.FileShare.None> 属性打开包（若要指定不同的属性，请使用 <xref:System.IO.Packaging.Package.Open%2A> 方法重载）。</span><span class="sxs-lookup"><span data-stu-id="de756-497">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="de756-498">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-498">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-499">下面的示例演示如何打开和读取包含 <xref:System.IO.Packaging.PackageRelationship> 和 <xref:System.IO.Packaging.PackagePart> 元素以及存储数据的 <xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="de756-499">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="de756-500">有关完整示例，请参阅[读取包示例](https://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="de756-500">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-501"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-501"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-502"><paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-502">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess, packageShare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="de756-503">包的路径和文件名。</span><span class="sxs-lookup"><span data-stu-id="de756-503">The path and file name of the package.</span></span></param>
        <param name="packageMode"><span data-ttu-id="de756-504">用于打开包的文件模式。</span><span class="sxs-lookup"><span data-stu-id="de756-504">The file mode in which to open the package.</span></span></param>
        <param name="packageAccess"><span data-ttu-id="de756-505">用于打开包的文件访问。</span><span class="sxs-lookup"><span data-stu-id="de756-505">The file access in which to open the package.</span></span></param>
        <param name="packageShare"><span data-ttu-id="de756-506">用于打开包的文件共享模式。</span><span class="sxs-lookup"><span data-stu-id="de756-506">The file sharing mode in which to open the package.</span></span></param>
        <summary><span data-ttu-id="de756-507">使用给定的文件模式、文件访问和文件共享设置打开位于给定路径的包。</span><span class="sxs-lookup"><span data-stu-id="de756-507">Opens a package at a given path using a given file mode, file access, and file share setting.</span></span></summary>
        <returns><span data-ttu-id="de756-508">打开的包。</span><span class="sxs-lookup"><span data-stu-id="de756-508">The opened package.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-509"><xref:System.IO.Packaging.ZipPackage> 是 <xref:System.IO.Packaging.Package.Open%2A> 方法使用的默认包类型。</span><span class="sxs-lookup"><span data-stu-id="de756-509"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="de756-510">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-510">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de756-511">下面的示例演示如何创建一个新的 <xref:System.IO.Packaging.Package>，它将 <xref:System.IO.Packaging.PackageRelationship> 和 <xref:System.IO.Packaging.PackagePart> 元素与存储的数据结合在一起。</span><span class="sxs-lookup"><span data-stu-id="de756-511">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="de756-512">有关完整示例，请参阅[编写包示例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="de756-512">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-513"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-513"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de756-514"><paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值无效。</span><span class="sxs-lookup"><span data-stu-id="de756-514">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.Package.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de756-515">获取包的核心属性。</span><span class="sxs-lookup"><span data-stu-id="de756-515">Gets the core properties of the package.</span></span></summary>
        <value><span data-ttu-id="de756-516">包的核心属性。</span><span class="sxs-lookup"><span data-stu-id="de756-516">The core properties of the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-517">有关核心包属性的其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范中的3.1 节。</span><span class="sxs-lookup"><span data-stu-id="de756-517">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-518">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-518">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool&#xA;override this.PartExists : Uri -&gt; bool" Usage="package.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><span data-ttu-id="de756-519">要检查的部件的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="de756-519">The <see cref="T:System.Uri" /> of the part to check for.</span></span></param>
        <summary><span data-ttu-id="de756-520">指示具有给定 URI 的部件是否在包中。</span><span class="sxs-lookup"><span data-stu-id="de756-520">Indicates whether a part with a given URI is in the package.</span></span></summary>
        <returns><span data-ttu-id="de756-521">如果具有指定的 <paramref name="partUri" /> 的部件在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de756-521"><see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-522">`partUri` 应以正斜杠字符 "/" 开头，并绝对从包的根开始。</span><span class="sxs-lookup"><span data-stu-id="de756-522">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="de756-523">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-523">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-524"><paramref name="partUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-524"><paramref name="partUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="de756-525"><paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="de756-525"><paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> uniform resource identifier (URI).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-526">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-526">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-527">包是只写的（无法读取信息）。</span><span class="sxs-lookup"><span data-stu-id="de756-527">The package is write-only (information cannot be read).</span></span></exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="package.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="de756-528">要检查的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span><span class="sxs-lookup"><span data-stu-id="de756-528">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span></span></param>
        <summary><span data-ttu-id="de756-529">指示具有给定 ID 的包级别关系是否包含在包中。</span><span class="sxs-lookup"><span data-stu-id="de756-529">Indicates whether a package-level relationship with a given ID is contained in the package.</span></span></summary>
        <returns><span data-ttu-id="de756-530">如果具有指定的 <paramref name="id" /> 的包级别关系在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de756-530"><see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de756-531">有关其他信息，请参阅 <https://go.microsoft.com/fwlink/?LinkID=71255>上可供下载的开放打包约定（OPC）规范。</span><span class="sxs-lookup"><span data-stu-id="de756-531">For additional information, see the Open Packaging Conventions (OPC) specification available for download at <https://go.microsoft.com/fwlink/?LinkID=71255>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de756-532"><paramref name="id" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de756-532"><paramref name="id" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="de756-533"><paramref name="id" /> 不是有效的 XML 标识符。</span><span class="sxs-lookup"><span data-stu-id="de756-533"><paramref name="id" /> is not a valid XML identifier.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="de756-534">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</span><span class="sxs-lookup"><span data-stu-id="de756-534">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="de756-535">包是只写的。</span><span class="sxs-lookup"><span data-stu-id="de756-535">The package is write-only.</span></span></exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="package.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de756-536">此成员支持 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基础结构，不是为应用程序使用而设计的。</span><span class="sxs-lookup"><span data-stu-id="de756-536">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span></span>  <span data-ttu-id="de756-537">改用类型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="de756-537">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
