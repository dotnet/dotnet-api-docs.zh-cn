<Type Name="WebHttpBindingElement" FullName="System.ServiceModel.Configuration.WebHttpBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c104e99af87a630290cc5407715f68e9a90e6fe" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83933801" /></Metadata><TypeSignature Language="C#" Value="public class WebHttpBindingElement : System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHttpBindingElement extends System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.WebHttpBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHttpBindingElement&#xA;Inherits StandardBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHttpBindingElement : System::ServiceModel::Configuration::StandardBindingElement" />
  <TypeSignature Language="F#" Value="type WebHttpBindingElement = class&#xA;    inherit StandardBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.StandardBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="58047-101">一个绑定元素，可用于为响应 HTTP 请求（而不是 SOAP 消息）的 Windows Communication Foundation (WCF) Web 服务配置终结点。</span><span class="sxs-lookup"><span data-stu-id="58047-101">A binding element used to configure endpoints for Windows Communication Foundation (WCF) Web services that respond to HTTP requests instead of SOAP messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-102">WCF Web 编程模型允许开发人员通过 HTTP 请求（这些请求使用 "纯旧 XML" （POX）样式消息，而不是基于 SOAP 的消息）来公开 WCF Web 服务。</span><span class="sxs-lookup"><span data-stu-id="58047-102">The WCF Web programming model allows developers to expose WCF Web services through HTTP requests that use "plain old XML" (POX) style messaging instead of SOAP-based messaging.</span></span> <span data-ttu-id="58047-103">为了让客户端使用 HTTP 请求与服务进行通信，必须使用附加了 <xref:System.ServiceModel.WebHttpBinding> 的 <xref:System.ServiceModel.Description.WebHttpBehavior> 对服务的终结点进行配置。</span><span class="sxs-lookup"><span data-stu-id="58047-103">For clients to communicate with a service using HTTP requests, an endpoint of the service must be configured with the <xref:System.ServiceModel.WebHttpBinding> that has the <xref:System.ServiceModel.Description.WebHttpBehavior> attached to it.</span></span> <span data-ttu-id="58047-104">Web 模型还要求使用 <xref:System.ServiceModel.Web.WebGetAttribute> 或 <xref:System.ServiceModel.Web.WebInvokeAttribute> 对各个操作进行批注，以将这些操作绑定到唯一的 HTTP 方法（如，POST（默认值）或 GET，以及 URI 路径后缀）组合，该组合默认为操作名称。</span><span class="sxs-lookup"><span data-stu-id="58047-104">The Web model also requires that the individual operations are annotated with either the <xref:System.ServiceModel.Web.WebGetAttribute> or the <xref:System.ServiceModel.Web.WebInvokeAttribute> to bind them to a unique combination of HTTP method, such as POST (the default) or GET, and a URI path suffix, which defaults to the operation name.</span></span>  
  
 <span data-ttu-id="58047-105">WCF 中的联合和 ASP 支持。AJAX 集成是在 Web 编程模型的基础上构建的。</span><span class="sxs-lookup"><span data-stu-id="58047-105">Support in WCF for syndication and ASP.AJAX integration are both built on top of the Web programming model.</span></span> <span data-ttu-id="58047-106">有关模型的详细信息，请参阅[WCF WEB HTTP 编程模型](/dotnet/framework/wcf/feature-details/wcf-web-http-programming-model)。</span><span class="sxs-lookup"><span data-stu-id="58047-106">For more information about the model, see [WCF Web HTTP Programming Model](/dotnet/framework/wcf/feature-details/wcf-web-http-programming-model).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58047-107">初始化 <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="58047-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHttpBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebHttpBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHttpBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58047-108">初始化 <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="58047-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-109">默认情况下，此构造函数将此配置元素的名称设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="58047-109">The name of this configuration element is set to `null` by default by this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHttpBindingElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebHttpBindingElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHttpBindingElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Configuration.WebHttpBindingElement : string -&gt; System.ServiceModel.Configuration.WebHttpBindingElement" Usage="new System.ServiceModel.Configuration.WebHttpBindingElement name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="58047-110">用于此绑定配置元素的名称。</span><span class="sxs-lookup"><span data-stu-id="58047-110">The name that is used for this binding configuration element.</span></span></param>
        <summary><span data-ttu-id="58047-111">初始化 <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> 类的新实例并指定该元素的名称。</span><span class="sxs-lookup"><span data-stu-id="58047-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WebHttpBindingElement" /> class and specifies the name of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-112">在 `name` 中，默认 `null` 为 <xref:System.ServiceModel.Configuration.WebHttpBindingElement.%23ctor>。</span><span class="sxs-lookup"><span data-stu-id="58047-112">The default `name` is `null` in the <xref:System.ServiceModel.Configuration.WebHttpBindingElement.%23ctor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCookies : bool with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("allowCookies", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-113">获取或设置一个值，该值指示客户端是否接受 Cookie 并根据今后的请求传播 Cookie。</span><span class="sxs-lookup"><span data-stu-id="58047-113">Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</span></span></summary>
        <value><span data-ttu-id="58047-114">如果接受 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58047-114"><see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58047-115">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58047-115">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-116">提供此属性是为了便于使用包括在 HTTP 头中的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="58047-116">This property is provided as a convenience for using cookies included in HTTP headers.</span></span> <span data-ttu-id="58047-117">如果客户端通过将该属性设置为 `true` 来接受 Cookie，则从服务器返回的 Cookie 会自动复制到今后对该服务发出的所有客户端请求。</span><span class="sxs-lookup"><span data-stu-id="58047-117">When cookies are accepted by the client by setting the property to `true`, cookies that are returned from the server are automatically copied to all future client requests to that service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingElementType">
      <MemberSignature Language="C#" Value="protected override Type BindingElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingElementType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property BindingElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ BindingElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingElementType : Type" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-118">获取此配置元素表示的绑定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="58047-118">Gets the <see cref="T:System.Type" /> of binding that this configuration element represents.</span></span></summary>
        <value><span data-ttu-id="58047-119">绑定类型。</span><span class="sxs-lookup"><span data-stu-id="58047-119">The binding type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("bypassProxyOnLocal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-120">获取或设置一个值，该值指示是否跳过代理服务器而使用本地地址。</span><span class="sxs-lookup"><span data-stu-id="58047-120">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value><span data-ttu-id="58047-121">如果跳过代理服务器而使用本地地址，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58047-121"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58047-122">默认值是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58047-122">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-123">如果 Internet 资源具有本地地址，则该资源是本地资源。</span><span class="sxs-lookup"><span data-stu-id="58047-123">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="58047-124">本地地址是指在同一台计算机上，本地 LAN 或 intranet 上的地址，并在语法上通过缺少句点（.）来标识，`http://webserver/` 和 `http://localhost/`。</span><span class="sxs-lookup"><span data-stu-id="58047-124">A local address is one that is on same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs `http://webserver/` and `http://localhost/`.</span></span>  
  
 <span data-ttu-id="58047-125">通过设置 <xref:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal%2A> 属性可以确定在访问本地资源时，采用 <xref:System.ServiceModel.Configuration.WebHttpBindingElement> 进行配置的终结点是否使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="58047-125">Setting the <xref:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.Configuration.WebHttpBindingElement> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="58047-126">如果 <xref:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal%2A> 为 `true`，则对本地 Internet 资源的请求不使用代理服务器。</span><span class="sxs-lookup"><span data-stu-id="58047-126">If <xref:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="58047-127"><xref:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal%2A> 为 `false` 时，所有 Internet 请求都通过代理服务器进行。</span><span class="sxs-lookup"><span data-stu-id="58047-127">When <xref:System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeMapper">
      <MemberSignature Language="C#" Value="public string ContentTypeMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentTypeMapper" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTypeMapper As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentTypeMapper { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTypeMapper : string with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("contentTypeMapper", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-128">获取或设置传入消息内容类型映射到格式的方式。</span><span class="sxs-lookup"><span data-stu-id="58047-128">Gets or sets how the content type of an incoming message is mapped to a format.</span></span></summary>
        <value><span data-ttu-id="58047-129">一个指向映射器的字符串，该映射器指示传入消息的内容类型的格式。</span><span class="sxs-lookup"><span data-stu-id="58047-129">A string that points to the mapper which indicates the format for the content type of the incoming message.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossDomainScriptAccessEnabled">
      <MemberSignature Language="C#" Value="public bool CrossDomainScriptAccessEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CrossDomainScriptAccessEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CrossDomainScriptAccessEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CrossDomainScriptAccessEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CrossDomainScriptAccessEnabled : bool with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("crossDomainScriptAccessEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-130">获取或设置一个值，该值指示是否允许跨域脚本。</span><span class="sxs-lookup"><span data-stu-id="58047-130">Gets or sets a value that indicates whether cross domain scripting is permitted.</span></span></summary>
        <value><span data-ttu-id="58047-131">如果跨域脚本被允许，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58047-131"><see langword="true" /> if cross domain scripting is permitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("hostNameComparisonMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.Configuration.ServiceModelEnumValidator(typeof(System.ServiceModel.HostNameComparisonModeHelper))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-132">获取或设置一个值，该值指示在匹配 URI 时，是否使用主机名来访问服务。</span><span class="sxs-lookup"><span data-stu-id="58047-132">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="58047-133">一个 <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 值，该值指示在对 URI 进行匹配时，是否使用主机名来访问服务。</span><span class="sxs-lookup"><span data-stu-id="58047-133">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="58047-134">默认值为 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />，表示忽略匹配项中的主机名。</span><span class="sxs-lookup"><span data-stu-id="58047-134">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="58047-135">所设置的值不是有效的 <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="58047-135">The value set is not a valid <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeFrom (binding As Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberSignature Language="F#" Value="override this.InitializeFrom : System.ServiceModel.Channels.Binding -&gt; unit" Usage="webHttpBindingElement.InitializeFrom binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="58047-136">用于初始化此配置元素的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="58047-136">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to initialize this configuration element.</span></span></param>
        <summary><span data-ttu-id="58047-137">根据指定绑定的属性值初始化此绑定配置元素的内容。</span><span class="sxs-lookup"><span data-stu-id="58047-137">Initializes the contents of this binding configuration element from the property values of a specified binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-138">此方法包括对基 <xref:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom%28System.ServiceModel.Channels.Binding%29> 的调用，此调用可设置在指定 `binding` 中设置的打开、关闭、发送和接收超时的值。</span><span class="sxs-lookup"><span data-stu-id="58047-138">This method includes a call to the base <xref:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom%28System.ServiceModel.Channels.Binding%29> that sets the values of the open, close, send and receive timeouts that are set in the specified `binding`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBufferPoolSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-139">获取或设置可为缓冲区管理器分配的最大内存量（以字节为单位），该管理器管理使用此绑定的终结点所需的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="58047-139">Gets or sets the maximum amount of memory, in bytes, allocated for the buffer manager that manages the buffers required by endpoints that use this binding.</span></span></summary>
        <value><span data-ttu-id="58047-140">配置了此绑定的终结点所使用的缓冲区池的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="58047-140">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span></span> <span data-ttu-id="58047-141">默认值为 65,536 字节。</span><span class="sxs-lookup"><span data-stu-id="58047-141">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-142"><xref:System.ServiceModel.Channels.BufferManager> 尝试利用缓冲池将使用缓冲区的成本降至最低。</span><span class="sxs-lookup"><span data-stu-id="58047-142">The <xref:System.ServiceModel.Channels.BufferManager> tries to minimize the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="58047-143">当消息离开通道时，服务需要使用缓冲区来处理这些消息。</span><span class="sxs-lookup"><span data-stu-id="58047-143">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="58047-144">如果缓冲池中的内存不足，无法处理消息负载，则 <xref:System.ServiceModel.Channels.BufferManager> 必须从 CLR 堆分配更多内存，而这会增加垃圾回收的系统开销。</span><span class="sxs-lookup"><span data-stu-id="58047-144">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="58047-145">从 CLR 垃圾堆进行大量分配表明缓冲池太小，可以通过提高 <xref:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize%2A> 限制来实现更大的内存分配，从而提高性能。</span><span class="sxs-lookup"><span data-stu-id="58047-145">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize%2A> limit.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBufferSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-146">获取或设置为从通道接收消息的消息缓冲区管理器分配并供其使用的最大内存量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="58047-146">Gets or sets the maximum amount of memory, in bytes, that is allocated for use by the manager of the message buffers that receive messages from the channel.</span></span></summary>
        <value><span data-ttu-id="58047-147">可供消息缓冲区管理器使用的最大内存量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="58047-147">The maximum amount of memory, in bytes, available for use by the message buffer manager.</span></span> <span data-ttu-id="58047-148">默认值为 524,288 (0x80000) 字节。</span><span class="sxs-lookup"><span data-stu-id="58047-148">The default value is 524,288 (0x80000) bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-149">通过使用缓冲池，<xref:System.ServiceModel.Channels.BufferManager> 将使用缓冲区的成本降至最低。</span><span class="sxs-lookup"><span data-stu-id="58047-149">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers by using a buffer pool.</span></span> <span data-ttu-id="58047-150">当消息离开通道时，服务需要使用缓冲区来处理这些消息。</span><span class="sxs-lookup"><span data-stu-id="58047-150">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="58047-151">如果缓冲池中的内存不足，无法处理消息负载，则 <xref:System.ServiceModel.Channels.BufferManager> 必须从 CLR 堆分配更多内存，而这会增加垃圾回收的系统开销。</span><span class="sxs-lookup"><span data-stu-id="58047-151">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="58047-152">从 CLR 垃圾堆进行大量分配表明缓冲池太小，可以通过提高 <xref:System.ServiceModel.Configuration.HttpBindingBaseElement.MaxBufferPoolSize%2A> 限制来实现更大的内存分配，从而提高性能。</span><span class="sxs-lookup"><span data-stu-id="58047-152">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.Configuration.HttpBindingBaseElement.MaxBufferPoolSize%2A> limit.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58047-153">设置的值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="58047-153">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReceivedMessageSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-154">获取或设置绑定可处理的消息的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="58047-154">Gets or sets the maximum size, in bytes, for a message that can be processed by the binding.</span></span></summary>
        <value><span data-ttu-id="58047-155">由绑定处理的消息的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="58047-155">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="58047-156">默认值为 65,536 字节。</span><span class="sxs-lookup"><span data-stu-id="58047-156">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-157">使用 <xref:System.ServiceModel.WebHttpBinding> 的服务能够在网络上接收的消息的大小受为每个消息分配的内存量的限制。</span><span class="sxs-lookup"><span data-stu-id="58047-157">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WebHttpBinding> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="58047-158">对消息大小进行的此限制旨在降低遭受拒绝服务 (DoS) 攻击的可能性。</span><span class="sxs-lookup"><span data-stu-id="58047-158">This bound on message size is intended to limit exposure to denial of service (DoS) attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58047-159">值小于零。</span><span class="sxs-lookup"><span data-stu-id="58047-159">The value is less than zero.</span></span></exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="58047-160">消息超出分配的最大大小。</span><span class="sxs-lookup"><span data-stu-id="58047-160">A message exceeded the maximum size allocated.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyConfiguration(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnApplyConfiguration (binding As Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnApplyConfiguration(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberSignature Language="F#" Value="override this.OnApplyConfiguration : System.ServiceModel.Channels.Binding -&gt; unit" Usage="webHttpBindingElement.OnApplyConfiguration binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="58047-161">根据此绑定配置元素的内容初始化的 <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="58047-161">The <see cref="T:System.ServiceModel.Channels.Binding" /> that is initialized from the contents of this binding configuration element.</span></span></param>
        <summary><span data-ttu-id="58047-162">根据此绑定配置元素的内容初始化指定绑定的属性值。</span><span class="sxs-lookup"><span data-stu-id="58047-162">Initializes the property values of a specified binding from the contents of this binding configuration element.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58047-163"><paramref name="binding" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58047-163"><paramref name="binding" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="58047-164">此绑定元素的类型与 <paramref name="binding" /> 指定的类型不同。</span><span class="sxs-lookup"><span data-stu-id="58047-164">The type of this binding element is different from the type specified by <paramref name="binding" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-165">获取一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 实例，该实例包含一个 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象集合，这些对象可以是此配置元素的属性或 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="58047-165">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="58047-166">一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 实例，该实例包含一个 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象集合，这些对象可以是此配置元素的属性或 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="58047-166">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("proxyAddress", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-167">获取或设置 HTTP 代理的 URI 地址。</span><span class="sxs-lookup"><span data-stu-id="58047-167">Gets or sets the URI address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="58047-168">一个充当 HTTP 代理地址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="58047-168">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span></span> <span data-ttu-id="58047-169">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58047-169">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-170">如果将 <xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A> 设置为 `true`，则将忽略 <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="58047-170">If the <xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A> is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ ReaderQuotas { System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("readerQuotas")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-171">获取或设置包含 SOAP 消息的复杂性约束的配置元素，这些消息可由使用此绑定配置的终结点进行处理。</span><span class="sxs-lookup"><span data-stu-id="58047-171">Gets or sets the configuration element that contains the constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="58047-172">指定复杂性约束的 <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" />。</span><span class="sxs-lookup"><span data-stu-id="58047-172">The <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-173">这些复杂性约束可以抵御某种类型的拒绝服务 (DOS) 攻击，这些攻击试图利用消息复杂性来占用终结点处理资源。</span><span class="sxs-lookup"><span data-stu-id="58047-173">The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="58047-174">表示这些约束的属性及其默认值（以字节表示）如下所示：</span><span class="sxs-lookup"><span data-stu-id="58047-174">The properties that express these constraints and their default values (in bytes) are as follows:</span></span>  
  
-   <span data-ttu-id="58047-175"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth%2A> = 32</span><span class="sxs-lookup"><span data-stu-id="58047-175"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth%2A> = 32</span></span>  
  
-   <span data-ttu-id="58047-176"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength%2A> = 8192</span><span class="sxs-lookup"><span data-stu-id="58047-176"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength%2A> = 8192</span></span>  
  
-   <span data-ttu-id="58047-177"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="58047-177"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength%2A> = 16384</span></span>  
  
-   <span data-ttu-id="58047-178"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead%2A> = 4096</span><span class="sxs-lookup"><span data-stu-id="58047-178"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead%2A> = 4096</span></span>  
  
-   <span data-ttu-id="58047-179"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="58047-179"><xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount%2A> = 16384</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58047-180">该值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58047-180">The value set is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58047-181"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 的配额值是只读的。</span><span class="sxs-lookup"><span data-stu-id="58047-181">The quota values of <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> are read only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="58047-182">设置的配额必须为正数。</span><span class="sxs-lookup"><span data-stu-id="58047-182">The quotas set must be positive.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.WebHttpSecurityElement Security { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.WebHttpSecurityElement Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As WebHttpSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::WebHttpSecurityElement ^ Security { System::ServiceModel::Configuration::WebHttpSecurityElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.Configuration.WebHttpSecurityElement" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("security")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.WebHttpSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-183">获取包含用于此绑定的安全设置的配置元素。</span><span class="sxs-lookup"><span data-stu-id="58047-183">Gets the configuration element that contains the security settings used with this binding.</span></span></summary>
        <value><span data-ttu-id="58047-184">与此绑定一起使用的 <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" />。</span><span class="sxs-lookup"><span data-stu-id="58047-184">The <see cref="T:System.ServiceModel.Configuration.WebHttpSecurityElement" /> that is used with this binding.</span></span> <span data-ttu-id="58047-185">默认值是 <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />。</span><span class="sxs-lookup"><span data-stu-id="58047-185">The default value is <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-186">若要使用非默认的安全类型，请使用 <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="58047-186">To use a non-default type of security, use the <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberSignature Language="F#" Value="member this.TransferMode : System.ServiceModel.TransferMode with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("transferMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.Configuration.ServiceModelEnumValidator(typeof(System.ServiceModel.TransferModeHelper))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-187">获取或设置一个值，该值指示使用绑定配置的服务是使用消息传输的流式模式还是缓冲模式（或这两种模式）。</span><span class="sxs-lookup"><span data-stu-id="58047-187">Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</span></span></summary>
        <value><span data-ttu-id="58047-188"><see cref="T:System.ServiceModel.TransferMode" /> 值，指示使用此绑定配置的服务是使用消息传输的流处理模式、缓冲模式还是同时使用这两种模式。</span><span class="sxs-lookup"><span data-stu-id="58047-188">The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</span></span> <span data-ttu-id="58047-189">默认值是 <see cref="F:System.ServiceModel.TransferMode.Buffered" />。</span><span class="sxs-lookup"><span data-stu-id="58047-189">The default value is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="58047-190">所设置的值不是有效的 <see cref="T:System.ServiceModel.TransferMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="58047-190">The value set is not a valid <see cref="T:System.ServiceModel.TransferMode" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useDefaultWebProxy", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-191">获取或设置一个值，该值指示是否应使用系统的自动配置 HTTP 代理（如果可用）。</span><span class="sxs-lookup"><span data-stu-id="58047-191">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span></span></summary>
        <value><span data-ttu-id="58047-192">如果应使用系统的自动配置 HTTP 代理（如果可用），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58047-192"><see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58047-193">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="58047-193">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58047-194">这是由于此项为 `true` 以及 <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A> 为非 `null` 而产生的一个错误。</span><span class="sxs-lookup"><span data-stu-id="58047-194">It is an error for this to be `true` and <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A> to be non-`null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding WriteEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding WriteEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ WriteEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("writeEncoding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58047-195">获取或设置用于消息文本的字符编码。</span><span class="sxs-lookup"><span data-stu-id="58047-195">Gets or sets the character encoding that is used for the message text.</span></span></summary>
        <value><span data-ttu-id="58047-196">用于指示所使用的字符编码的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="58047-196">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span></span> <span data-ttu-id="58047-197">默认为 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="58047-197">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58047-198">该值设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58047-198">The value set is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
