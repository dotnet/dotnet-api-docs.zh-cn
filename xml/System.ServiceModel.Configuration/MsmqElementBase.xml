<Type Name="MsmqElementBase" FullName="System.ServiceModel.Configuration.MsmqElementBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e30a5ea6ffc4ea4d3212d1cd338f06d60a29aed" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89920359" /></Metadata><TypeSignature Language="C#" Value="public abstract class MsmqElementBase : System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqElementBase extends System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MsmqElementBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqElementBase&#xA;Inherits TransportElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqElementBase abstract : System::ServiceModel::Configuration::TransportElement" />
  <TypeSignature Language="F#" Value="type MsmqElementBase = class&#xA;    inherit TransportElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.TransportElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1491b-101">提供一个基类，该基类具有 <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> 和 <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" /> 共有的成员。</span><span class="sxs-lookup"><span data-stu-id="1491b-101">Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> and <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqElementBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqElementBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1491b-102">初始化 <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1491b-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyConfiguration(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyConfiguration (bindingElement As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyConfiguration(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.ApplyConfiguration bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="1491b-103">一个包含要应用的设置的绑定元素。</span><span class="sxs-lookup"><span data-stu-id="1491b-103">A binding element that contains the settings to be applied.</span></span></param>
        <summary><span data-ttu-id="1491b-104">将此绑定元素的设置应用于指定绑定元素。</span><span class="sxs-lookup"><span data-stu-id="1491b-104">Applies the settings of this binding element to a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (from As ServiceModelExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::ServiceModel::Configuration::ServiceModelExtensionElement ^ from);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.ServiceModel.Configuration.ServiceModelExtensionElement -&gt; unit" Usage="msmqElementBase.CopyFrom from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="1491b-105">包含要复制的值的 <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-105">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that contains the values to be copied.</span></span></param>
        <summary><span data-ttu-id="1491b-106">将指定的 <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> 中的设置复制到此绑定元素。</span><span class="sxs-lookup"><span data-stu-id="1491b-106">Copies settings from a specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-107">获取或设置一个 URI，该 URI 包含每个应用程序的死信队列（该队列用于放置已过期的消息以及传输或传递失败的消息）的位置。</span><span class="sxs-lookup"><span data-stu-id="1491b-107">Gets or sets a URI that contains the location of the per-application dead-letter queue, where messages that have expired or that have failed transfer or delivery are placed.</span></span></summary>
        <value><span data-ttu-id="1491b-108">一个 <see cref="T:System.Uri" />，包含每个应用程序的死信队列的位置。</span><span class="sxs-lookup"><span data-stu-id="1491b-108">The <see cref="T:System.Uri" /> that contains the location of the per-application dead-letter queue.</span></span> <span data-ttu-id="1491b-109">默认值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-109">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-110">死信队列是发送应用程序的队列管理器中的一个队列，用于放置传递失败的过期消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-110">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span>  
  
 <span data-ttu-id="1491b-111"><xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 指定的 URI 必须使用 Net.msmq 方案。</span><span class="sxs-lookup"><span data-stu-id="1491b-111">The URI that is specified by <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must use the Net.msmq scheme.</span></span>  
  
 <span data-ttu-id="1491b-112">如果 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 设置为 <xref:System.ServiceModel.DeadLetterQueue.None> 或 <xref:System.ServiceModel.DeadLetterQueue.System>，则 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 必须设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1491b-112">If <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="1491b-113">如果 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 不为 `null`，则 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 必须设置为 <xref:System.ServiceModel.DeadLetterQueue.Custom>。</span><span class="sxs-lookup"><span data-stu-id="1491b-113">If <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-114">获取或设置一个枚举值，该值指示要使用的死信队列的类型。</span><span class="sxs-lookup"><span data-stu-id="1491b-114">Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</span></span></summary>
        <value><span data-ttu-id="1491b-115">一个 <see cref="T:System.ServiceModel.DeadLetterQueue" /> 枚举值，指示要使用的死信队列的类型。</span><span class="sxs-lookup"><span data-stu-id="1491b-115">A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-116">死信队列是发送应用程序的队列管理器中的一个队列，用于放置传递失败的过期消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-116">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span> <span data-ttu-id="1491b-117">死信队列枚举指定要使用的死信队列的类型。</span><span class="sxs-lookup"><span data-stu-id="1491b-117">The dead-letter queue enumeration specifies the type of dead-letter queue to use.</span></span> <span data-ttu-id="1491b-118">有效值为：</span><span class="sxs-lookup"><span data-stu-id="1491b-118">The values are:</span></span>  
  
-   <span data-ttu-id="1491b-119">None：不需要死信队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-119">None: If no dead-letter queue is required.</span></span> <span data-ttu-id="1491b-120">因此，如果消息传递失败，则不会在死信队列中保留它的任何记录。</span><span class="sxs-lookup"><span data-stu-id="1491b-120">Thus, if a message were to fail delivery, no record of it would be maintained in the dead-letter queue.</span></span> <span data-ttu-id="1491b-121">这是当 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `false` 时的默认值。</span><span class="sxs-lookup"><span data-stu-id="1491b-121">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="1491b-122">System：系统级死信队列用于记录传递失败的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-122">System: The system-wide dead-letter queue would be used to record messages that fail delivery.</span></span> <span data-ttu-id="1491b-123">消息队列（也称为 MSMQ）具有一个事务性系统死信队列和一个非事务性系统死信队列，分别记录来自事务性队列和非事务性队列的传递失败的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-123">Message Queuing (also known as MSMQ) has a transactional system dead-letter queue and a nontransactional system dead-letter queue to record messages that failed delivery from transactional and nontransactional queues, respectively.</span></span> <span data-ttu-id="1491b-124">这是当 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true` 时的默认值。</span><span class="sxs-lookup"><span data-stu-id="1491b-124">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="1491b-125">Custom：<xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 中指定的队列用于记录传递失败的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-125">Custom: The queue specified in the <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is used to record messages that fail delivery.</span></span>  
  
 <span data-ttu-id="1491b-126">造成消息未能到达接收应用程序的原因包括：</span><span class="sxs-lookup"><span data-stu-id="1491b-126">The reasons that a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="1491b-127">事务性消息被发送到非事务性队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-127">A transactional message is sent to a nontransactional queue.</span></span>  
  
-   <span data-ttu-id="1491b-128">非事务性消息被发送到事务性队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-128">A nontransactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="1491b-129">未经身份验证的消息被发送到仅接受经过身份验证的消息的队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-129">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="1491b-130">未加密的消息被发送到仅接受加密消息的队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-130">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="1491b-131">消息在传递给接收方之前过期。</span><span class="sxs-lookup"><span data-stu-id="1491b-131">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="1491b-132">超出了目标计算机的消息存储配额或目标队列的存储配额，或者在消息到达时目标计算机上没有可用的存储空间。</span><span class="sxs-lookup"><span data-stu-id="1491b-132">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="1491b-133">发送方没有将消息放入目标队列所需的访问权限（可能为英文网页）。</span><span class="sxs-lookup"><span data-stu-id="1491b-133">The sender does not have the access rights needed to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="1491b-134">附加在消息上的数字签名无效。</span><span class="sxs-lookup"><span data-stu-id="1491b-134">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="1491b-135">加密的消息不能由目标队列管理器解密。</span><span class="sxs-lookup"><span data-stu-id="1491b-135">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="1491b-136">目标队列在检索消息之前被清除或删除。</span><span class="sxs-lookup"><span data-stu-id="1491b-136">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-137">获取或设置一个值，该值指定此绑定处理的消息是持久的还是可变的。</span><span class="sxs-lookup"><span data-stu-id="1491b-137">Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</span></span></summary>
        <value><span data-ttu-id="1491b-138">如果此绑定处理的消息是持久的，则为 <see langword="true" />；如果这些消息是可变的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-138"><see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span></span> <span data-ttu-id="1491b-139">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-139">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-140">持久消息能够在队列管理器崩溃后保留下来，而可变消息则不能。</span><span class="sxs-lookup"><span data-stu-id="1491b-140">A durable message survives a queue manager crash, while a volatile message does not.</span></span> <span data-ttu-id="1491b-141">当应用程序可以容忍偶尔丢失消息时，可变消息是有用的。</span><span class="sxs-lookup"><span data-stu-id="1491b-141">Volatile messages are useful when applications can tolerate occasional lost messages.</span></span>  
  
 <span data-ttu-id="1491b-142">如果 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true`，则消息必须为持久的。</span><span class="sxs-lookup"><span data-stu-id="1491b-142">If <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`, the messages must be durable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-143">获取或设置一个布尔值，该值指示此绑定处理的消息是否将只接收一次。</span><span class="sxs-lookup"><span data-stu-id="1491b-143">Gets or sets a Boolean value that indicates whether messages processed by this binding will be received exactly once.</span></span></summary>
        <value><span data-ttu-id="1491b-144">如果此绑定处理的消息将只接收一次，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-144"><see langword="true" /> if messages processed by this binding will be received exactly once; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1491b-145">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-145">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-146">发送的消息可以包含保证，也可以不包含保证。</span><span class="sxs-lookup"><span data-stu-id="1491b-146">A message can be sent with or without assurances.</span></span> <span data-ttu-id="1491b-147">应用程序可以使用保证来确保发送的消息到达接收消息队列；如果消息未能到达，则应用程序可以通过读取死信队列进行确定。</span><span class="sxs-lookup"><span data-stu-id="1491b-147">An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.</span></span>  
  
 <span data-ttu-id="1491b-148">将 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `true` 时发送的消息必须只发送到事务性队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-148">Messages sent with <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> set to `true` must be sent only to a transactional queue.</span></span>  
  
 <span data-ttu-id="1491b-149"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>当设置为时 `true` ，指示消息队列 (也称为 MSMQ) 将确保发送的消息传递到接收消息队列一次且只有一次，如果传递失败，则会将消息发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-149"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (also known as MSMQ) will ensure that a sent message is delivered to the receiving message queue once and only once, and if delivery fails, the message is sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="1491b-150">对于要求将 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 设置为 `false` 的消息，<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 属性默认为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1491b-150">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `false`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to `null`.</span></span>  
  
 <span data-ttu-id="1491b-151">对于需要的消息 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> `true` ， <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 属性默认为消息队列中的事务性系统级死信队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-151">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `true`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to a transactional system-wide dead-letter queue in Message Queuing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeFrom (bindingElement As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.InitializeFrom : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.InitializeFrom bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="1491b-152">一个绑定元素，包含用于初始化此绑定元素的设置。</span><span class="sxs-lookup"><span data-stu-id="1491b-152">A binding element that contains the settings to be used to initialize this binding element.</span></span></param>
        <summary><span data-ttu-id="1491b-153">使用指定绑定元素的内容初始化此绑定元素。</span><span class="sxs-lookup"><span data-stu-id="1491b-153">Initializes this binding element with the content from the specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-154">获取或设置尝试向接收应用程序传递消息的最大重试周期数。</span><span class="sxs-lookup"><span data-stu-id="1491b-154">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span></span></summary>
        <value><span data-ttu-id="1491b-155">一个整数，指示尝试向接收应用程序传递消息的最大重试周期数。</span><span class="sxs-lookup"><span data-stu-id="1491b-155">An integer that indicates the maximum number of retry cycles to attempt delivery of messages to the application.</span></span> <span data-ttu-id="1491b-156">默认值为 2。</span><span class="sxs-lookup"><span data-stu-id="1491b-156">The default value is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-157">单个重试周期按指定次数尝试向应用程序传递消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-157">A single retry cycle attempts to deliver a message to an application a specified number of times.</span></span> <span data-ttu-id="1491b-158">尝试次数由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="1491b-158">The number of attempts made is set by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="1491b-159">如果在耗尽传递尝试次数后，应用程序仍未能处理消息，则将消息发送到重试队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-159">If the application fails to consume the message after the attempts at delivery have been exhausted, the message is sent to a retry queue.</span></span> <span data-ttu-id="1491b-160">后续的重试周期包括在经过由 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 属性指定的延迟后，从重试队列返回应用程序队列以再次尝试传递给接收应用程序的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-160">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="1491b-161"><xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 属性指定应用程序用于尝试传递消息的重试周期数。</span><span class="sxs-lookup"><span data-stu-id="1491b-161">The <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property specifies the number of retry cycles that the application uses to attempt to deliver the message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MsmqTransportSecurity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MsmqTransportSecurity As MsmqTransportSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ MsmqTransportSecurity { System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MsmqTransportSecurity : System.ServiceModel.Configuration.MsmqTransportSecurityElement" Usage="System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("msmqTransportSecurity")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("msmqTransportSecurity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.MsmqTransportSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-162">获取一个 <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> 实例，该实例封装绑定的传输安全设置。</span><span class="sxs-lookup"><span data-stu-id="1491b-162">Gets an <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</span></span></summary>
        <value><span data-ttu-id="1491b-163">一个 <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> 实例，该实例封装绑定的传输安全设置。</span><span class="sxs-lookup"><span data-stu-id="1491b-163">An <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-164">获取一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 实例，该实例包含一个 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象集合，这些对象可以是此配置元素的属性或 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1491b-164">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="1491b-165">一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 实例，该实例包含一个 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象集合，这些对象可以是此绑定配置元素的特性或 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1491b-165">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-166">获取或设置一个值，该值指定是否启用接收上下文来处理队列中的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-166">Gets or sets a value that specifies if receive context for processing messages in queues is enabled.</span></span></summary>
        <value><span data-ttu-id="1491b-167">如果启用接收上下文来处理队列中的消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-167"><see langword="true" /> if receive context for processing messages in queues is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-168">如果是 `true` ，服务可以 "扫视" 队列中的消息以开始处理它，如果发生任何错误并且引发异常，则该消息将保留在队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-168">When this is `true`, a service can "peek" a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue.</span></span> <span data-ttu-id="1491b-169">服务还可 "锁定" 消息以便在稍后的某个时间点重试处理。</span><span class="sxs-lookup"><span data-stu-id="1491b-169">Services can also "lock" messages in order to retry processing at a later point in time.</span></span> <span data-ttu-id="1491b-170">ReceiveContext 提供了一种机制，用于在处理后 "完成" 消息，以便可以从队列中删除该消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-170">ReceiveContext provides a mechanism for "completing" the message once processed so it can be removed from the queue.</span></span> <span data-ttu-id="1491b-171">消息将不再被读取并重新写入到网络上的队列中，并且在处理过程中各个消息不会在不同的服务实例之间切换。</span><span class="sxs-lookup"><span data-stu-id="1491b-171">Messages are no longer being read and re-written to queues over the network, and individual messages aren't bouncing across different service instances during processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-172">获取或设置一个枚举值，该值指定如何处理病毒消息和不可调度的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-172">Gets or sets an enumeration value that specifies how poison and nondispatchable messages are handled.</span></span></summary>
        <value><span data-ttu-id="1491b-173">一个 <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 值，指定如何处理病毒消息和不可调度的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-173">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and nondispatchable messages are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-174">当此属性设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Fault> 时，通道侦听器会出错，并且会跟踪和引发一个 <xref:System.ServiceModel.ProtocolException>（它包装一个 <xref:System.ServiceModel.MsmqPoisonMessageException>）。</span><span class="sxs-lookup"><span data-stu-id="1491b-174">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the channel listener is faulted and a <xref:System.ServiceModel.ProtocolException> (wrapping a <xref:System.ServiceModel.MsmqPoisonMessageException>) is traced and thrown.</span></span> <span data-ttu-id="1491b-175">有问题的消息会留在队列中，并且需要通过某种手动方法移除。</span><span class="sxs-lookup"><span data-stu-id="1491b-175">The offending message is left in the queue and needs to be removed by some manual method.</span></span> <span data-ttu-id="1491b-176"><xref:System.ServiceModel.MsmqPoisonMessageException> 包含一个 <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，它可用于标识有问题的消息并将其从病毒消息队列中手动移除。</span><span class="sxs-lookup"><span data-stu-id="1491b-176">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the offending message from the poison-message queue.</span></span>  
  
 <span data-ttu-id="1491b-177">当此属性设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Drop> 时，只是丢弃有问题的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-177">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the offending message is simply dropped.</span></span>  
  
 <span data-ttu-id="1491b-178">当此属性设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Reject> 时，会将一个否定确认发送到客户端，并从病毒消息队列中移除有问题的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-178">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgment is sent to the client and the offending message is removed from the poison-message queue.</span></span> <span data-ttu-id="1491b-179">此选项仅在消息队列（也称为 MSMQ）4.0 中可用。</span><span class="sxs-lookup"><span data-stu-id="1491b-179">This option is available only on Message Queuing (also known as MSMQ) 4.0.</span></span>  
  
 <span data-ttu-id="1491b-180">当设置为 <xref:System.ServiceModel.ReceiveErrorHandling.Move> 时，会将有问题的消息移动到最后一个病毒子队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-180">When set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the offending message is moved to the final poison subqueue.</span></span> <span data-ttu-id="1491b-181">此选项仅在“消息队列 4.0”(Message Queuing 4.0) 中可用。</span><span class="sxs-lookup"><span data-stu-id="1491b-181">This option is available only on Message Queuing 4.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.IntegerValidator(MinValue=0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.IntegerValidator(MinValue=0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-182">获取或设置队列管理器在将消息传输到重试队列前可尝试发送该消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="1491b-182">Gets or sets the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</span></span></summary>
        <value><span data-ttu-id="1491b-183">一个 32 位有符号整数，它指定队列管理器在将消息传输到重试队列前可尝试发送该消息的最大次数。</span><span class="sxs-lookup"><span data-stu-id="1491b-183">A 32-bit signed integer that specifies the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-184">如果达到尝试传递的最大次数且应用程序仍未处理消息，则会将消息发送到重试队列，以便在将来某个时刻重新进行传递。</span><span class="sxs-lookup"><span data-stu-id="1491b-184">If the maximum number of delivery attempts is reached and the message is not consumed by the application, then the message is sent to a retry queue for redelivery at some later point in time.</span></span> <span data-ttu-id="1491b-185">将消息传输回发送队列之前的时间量由 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A> 控制。</span><span class="sxs-lookup"><span data-stu-id="1491b-185">The amount of time before the message is transferred back to the sending queue is controlled by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="1491b-186">如果重试周期达到 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 值，则或者将消息发送到病毒消息队列，或者将否定确认发送回发送方。</span><span class="sxs-lookup"><span data-stu-id="1491b-186">If retry cycles reach the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> value, then either the message is sent to the poison-message queue, or a negative acknowledgment is sent back to the sender.</span></span>  
  
 <span data-ttu-id="1491b-187">有关详细信息，请参阅 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 和 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>。</span><span class="sxs-lookup"><span data-stu-id="1491b-187">For more information, see <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-188">获取或设置一个值，该值指示尝试传递无法立即传递的消息时，各个重试周期之间的时间延迟。</span><span class="sxs-lookup"><span data-stu-id="1491b-188">Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately.</span></span></summary>
        <value><span data-ttu-id="1491b-189">一个 <see cref="T:System.TimeSpan" />，指定在开始下一个尝试传递到接收应用程序的周期前等待的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="1491b-189">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span></span> <span data-ttu-id="1491b-190">默认值为 "00:10:00"。</span><span class="sxs-lookup"><span data-stu-id="1491b-190">The default value is "00:10:00".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-191">单个重试周期尝试按指定次数向接收应用程序传递消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-191">A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</span></span> <span data-ttu-id="1491b-192">尝试次数由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="1491b-192">The number of attempts made is specified by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="1491b-193">如果在连续重试了指定次数后，应用程序仍未能处理消息，则将消息发送到重试队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-193">If the application fails to consume the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="1491b-194">后续的重试周期包括在经过由 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 属性指定的延迟后，从重试队列返回应用程序队列以再次尝试传递给接收应用程序的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-194">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="1491b-195">重试周期数由 <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="1491b-195">The number of retry cycles is specified by the <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-196">获取或设置一个时间间隔，该时间间隔指示此绑定处理的消息在过期之前可以保留在队列中的时间长度。</span><span class="sxs-lookup"><span data-stu-id="1491b-196">Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</span></span></summary>
        <value><span data-ttu-id="1491b-197"><see cref="T:System.TimeSpan" />，指示消息在过期之前可以保留在队列中的时间长度。</span><span class="sxs-lookup"><span data-stu-id="1491b-197">The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire.</span></span> <span data-ttu-id="1491b-198">默认值为一天 (01:00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="1491b-198">The default value is one day (01:00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-199">设置 <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> 属性可以确保具有时效性的消息不会在由接收应用程序进行处理之前过时。</span><span class="sxs-lookup"><span data-stu-id="1491b-199">The <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</span></span> <span data-ttu-id="1491b-200">如果队列中的消息在指定时间间隔内未被接收应用程序进行处理，则称该消息为过时消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-200">A message in a queue that is not consumed by the receiving application within the time interval specified is said to be expired.</span></span> <span data-ttu-id="1491b-201">过期消息将发送到一个称为死信队列的特殊队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-201">Expired messages are sent to a special queue called the dead-letter queue.</span></span> <span data-ttu-id="1491b-202">死信队列的位置通过 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 属性进行设置，或基于保证设置为适当的默认值。</span><span class="sxs-lookup"><span data-stu-id="1491b-202">The location of the dead-letter queue is set with the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property or to the appropriate default, based on assurances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-203">获取或设置一个布尔值，该值指示是否应跟踪由此绑定处理的消息。</span><span class="sxs-lookup"><span data-stu-id="1491b-203">Gets or sets a Boolean value that indicates whether messages processed by this binding should be traced.</span></span></summary>
        <value><span data-ttu-id="1491b-204">如果应跟踪由此绑定处理的消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-204"><see langword="true" /> if messages processed by this binding should be traced; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1491b-205">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-206">如果启用跟踪，则每当消息离开或到达运行消息队列（也称为 MSMQ）的计算机时，都会创建报告消息并将其发送到报告队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-206">When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a computer running Message Queuing (also known as MSMQ).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-207">获取或设置一个布尔值，该值指示是否应将由此绑定处理的消息的副本存储在源日志队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-207">Gets or sets a Boolean value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span></span></summary>
        <value><span data-ttu-id="1491b-208">如果应将此绑定处理的消息副本存储在源日记队列中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-208"><see langword="true" /> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1491b-209">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1491b-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1491b-210">如果排队应用程序必须保留已离开计算机传出队列的消息的记录，则可以将这些消息复制到日志队列。</span><span class="sxs-lookup"><span data-stu-id="1491b-210">Queued applications that must keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</span></span> <span data-ttu-id="1491b-211">在消息离开传出队列，并且接收到目标计算机已接收该消息的确认后，该消息的副本就会保留在发送计算机的系统日志队列中。</span><span class="sxs-lookup"><span data-stu-id="1491b-211">Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1491b-212">获取或设置一个值，该值指示在使用排队通道时的连接超时。</span><span class="sxs-lookup"><span data-stu-id="1491b-212">Gets or sets a value that specifies a connection time-out when used with queued channels.</span></span></summary>
        <value><span data-ttu-id="1491b-213">与排队通道一起使用时，连接超时。</span><span class="sxs-lookup"><span data-stu-id="1491b-213">A connection time-out when used with queued channels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1491b-214">当 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> 对某一消息过期时，如果过期是在事务处理期间发生的，则会随工作流实例一起中止用于其处理的任何事务。</span><span class="sxs-lookup"><span data-stu-id="1491b-214">If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
