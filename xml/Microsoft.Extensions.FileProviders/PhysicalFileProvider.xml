<Type Name="PhysicalFileProvider" FullName="Microsoft.Extensions.FileProviders.PhysicalFileProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d53779c7816ddbefa17c2e0a0e44ee5f106ec14f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89886537" /></Metadata><TypeSignature Language="C#" Value="public class PhysicalFileProvider : IDisposable, Microsoft.Extensions.FileProviders.IFileProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PhysicalFileProvider extends System.Object implements class Microsoft.Extensions.FileProviders.IFileProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class PhysicalFileProvider&#xA;Implements IDisposable, IFileProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class PhysicalFileProvider : IDisposable, Microsoft::Extensions::FileProviders::IFileProvider" />
  <TypeSignature Language="F#" Value="type PhysicalFileProvider = class&#xA;    interface IFileProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.FileProviders.IFileProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="16164-101">使用磁盘上的文件系统查找文件。</span><span class="sxs-lookup"><span data-stu-id="16164-101">Looks up files using the on-disk file system.</span></span></summary>
    <remarks><span data-ttu-id="16164-102">环境变量 "DOTNET_USE_POLLING_FILE_WATCHER" 设置为 "1" 或 "true" 时，对 <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" /> 的调用将使用 <see cref="T:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken" /> 。</span><span class="sxs-lookup"><span data-stu-id="16164-102">When the environment variable "DOTNET_USE_POLLING_FILE_WATCHER" is set to "1" or "true", calls to <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" /> will use <see cref="T:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken" />.</span></span></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalFileProvider (string root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string root) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (root As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PhysicalFileProvider(System::String ^ root);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.PhysicalFileProvider : string -&gt; Microsoft.Extensions.FileProviders.PhysicalFileProvider" Usage="new Microsoft.Extensions.FileProviders.PhysicalFileProvider root" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="root" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="16164-103">根目录。</span><span class="sxs-lookup"><span data-stu-id="16164-103">The root directory.</span></span> <span data-ttu-id="16164-104">这应该是一个绝对路径。</span><span class="sxs-lookup"><span data-stu-id="16164-104">This should be an absolute path.</span></span></param>
        <summary><span data-ttu-id="16164-105">在给定的根目录初始化 PhysicalFileProvider 的新实例。</span><span class="sxs-lookup"><span data-stu-id="16164-105">Initializes a new instance of a PhysicalFileProvider at the given root directory.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PhysicalFileProvider (string root, Microsoft.Extensions.FileProviders.Physical.ExclusionFilters filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string root, valuetype Microsoft.Extensions.FileProviders.Physical.ExclusionFilters filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String,Microsoft.Extensions.FileProviders.Physical.ExclusionFilters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (root As String, filters As ExclusionFilters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PhysicalFileProvider(System::String ^ root, Microsoft::Extensions::FileProviders::Physical::ExclusionFilters filters);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.PhysicalFileProvider : string * Microsoft.Extensions.FileProviders.Physical.ExclusionFilters -&gt; Microsoft.Extensions.FileProviders.PhysicalFileProvider" Usage="new Microsoft.Extensions.FileProviders.PhysicalFileProvider (root, filters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="root" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="filters" Type="Microsoft.Extensions.FileProviders.Physical.ExclusionFilters" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="16164-106">根目录。</span><span class="sxs-lookup"><span data-stu-id="16164-106">The root directory.</span></span> <span data-ttu-id="16164-107">这应该是一个绝对路径。</span><span class="sxs-lookup"><span data-stu-id="16164-107">This should be an absolute path.</span></span></param>
        <param name="filters"><span data-ttu-id="16164-108">指定要排除的文件或目录。</span><span class="sxs-lookup"><span data-stu-id="16164-108">Specifies which files or directories are excluded.</span></span></param>
        <summary><span data-ttu-id="16164-109">在给定的根目录初始化 PhysicalFileProvider 的新实例。</span><span class="sxs-lookup"><span data-stu-id="16164-109">Initializes a new instance of a PhysicalFileProvider at the given root directory.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="physicalFileProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="16164-110">释放提供程序。</span><span class="sxs-lookup"><span data-stu-id="16164-110">Disposes the provider.</span></span> <span data-ttu-id="16164-111">释放提供程序后，可能不会触发更改令牌。</span><span class="sxs-lookup"><span data-stu-id="16164-111">Change tokens may not trigger after the provider is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="physicalFileProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="16164-112">如果从 <see cref="M:System.IDisposable.Dispose" /> 调用，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="16164-112"><see langword="true" /> is invoked from <see cref="M:System.IDisposable.Dispose" />.</span></span></param>
        <summary><span data-ttu-id="16164-113">释放提供程序。</span><span class="sxs-lookup"><span data-stu-id="16164-113">Disposes the provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PhysicalFileProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PhysicalFileProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="physicalFileProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="16164-114"><see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> 的析构函数。</span><span class="sxs-lookup"><span data-stu-id="16164-114">Destructor for <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryContents">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IDirectoryContents GetDirectoryContents (string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IDirectoryContents GetDirectoryContents(string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.GetDirectoryContents(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectoryContents (subpath As String) As IDirectoryContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IDirectoryContents ^ GetDirectoryContents(System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.IDirectoryContents&#xA;override this.GetDirectoryContents : string -&gt; Microsoft.Extensions.FileProviders.IDirectoryContents" Usage="physicalFileProvider.GetDirectoryContents subpath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IDirectoryContents</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subpath"><span data-ttu-id="16164-115">根目录下的路径。</span><span class="sxs-lookup"><span data-stu-id="16164-115">A path under the root directory.</span></span> <span data-ttu-id="16164-116">忽略前导左斜线。</span><span class="sxs-lookup"><span data-stu-id="16164-116">Leading slashes are ignored.</span></span></param>
        <summary><span data-ttu-id="16164-117">枚举位于给定路径的目录（如果有）。</span><span class="sxs-lookup"><span data-stu-id="16164-117">Enumerate a directory at the given path, if any.</span></span></summary>
        <returns><span data-ttu-id="16164-118">目录的内容。</span><span class="sxs-lookup"><span data-stu-id="16164-118">Contents of the directory.</span></span> <span data-ttu-id="16164-119">调用方必须检查 <see cref="P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="16164-119">Caller must check <see cref="P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists" /> property.</span></span> <span data-ttu-id="16164-120">如果 <paramref name="subpath" /> 为绝对路径、该目录不存在或 <paramref name="subpath" /> 包含无效字符，则为 <see cref="T:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents" />。</span><span class="sxs-lookup"><span data-stu-id="16164-120"><see cref="T:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents" /> if <paramref name="subpath" /> is absolute, if the directory does not exist, or <paramref name="subpath" /> has invalid characters.</span></span>
<span data-ttu-id="16164-121">。</span><span class="sxs-lookup"><span data-stu-id="16164-121">.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.FileProviders.IFileInfo GetFileInfo (string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IFileInfo GetFileInfo(string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.GetFileInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileInfo (subpath As String) As IFileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IFileInfo ^ GetFileInfo(System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileInfo : string -&gt; Microsoft.Extensions.FileProviders.IFileInfo&#xA;override this.GetFileInfo : string -&gt; Microsoft.Extensions.FileProviders.IFileInfo" Usage="physicalFileProvider.GetFileInfo subpath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IFileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subpath"><span data-ttu-id="16164-122">根目录下的路径</span><span class="sxs-lookup"><span data-stu-id="16164-122">A path under the root directory</span></span></param>
        <summary><span data-ttu-id="16164-123">通过将路径段直接映射到物理目录，在给定的路径查找某个文件。</span><span class="sxs-lookup"><span data-stu-id="16164-123">Locate a file at the given path by directly mapping path segments to physical directories.</span></span></summary>
        <returns><span data-ttu-id="16164-124">文件信息。</span><span class="sxs-lookup"><span data-stu-id="16164-124">The file information.</span></span> <span data-ttu-id="16164-125">调用方必须检查 <see cref="P:Microsoft.Extensions.FileProviders.IFileInfo.Exists" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="16164-125">Caller must check <see cref="P:Microsoft.Extensions.FileProviders.IFileInfo.Exists" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public string Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Root" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Root { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : string" Usage="Microsoft.Extensions.FileProviders.PhysicalFileProvider.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="16164-126">此实例的根目录。</span><span class="sxs-lookup"><span data-stu-id="16164-126">The root directory for this instance.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseActivePolling">
      <MemberSignature Language="C#" Value="public bool UseActivePolling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseActivePolling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UseActivePolling" />
      <MemberSignature Language="VB.NET" Value="Public Property UseActivePolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseActivePolling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseActivePolling : bool with get, set" Usage="Microsoft.Extensions.FileProviders.PhysicalFileProvider.UseActivePolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="16164-127">获取或设置一个值，该值确定此 <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> 实例是否主动轮询文件更改。</span><span class="sxs-lookup"><span data-stu-id="16164-127">Gets or sets a value that determines if this instance of <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> actively polls for file changes.</span></span>
            <para>
<span data-ttu-id="16164-128">若为 <see langword="true" />，<see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" /> 返回的 <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> 会主动轮询文件更改（<see cref="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks" /> 将为 <see langword="true" />），而不是被动轮询。</span><span class="sxs-lookup"><span data-stu-id="16164-128">When <see langword="true" />, the <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> returned by <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" /> actively polls for file changes (<see cref="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks" /> is <see langword="true" />) instead of being passive.</span></span>
            </para><para>
<span data-ttu-id="16164-129">此属性仅在设置了 <see cref="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UsePollingFileWatcher" /> 时才有效。</span><span class="sxs-lookup"><span data-stu-id="16164-129">This property is only effective when <see cref="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UsePollingFileWatcher" /> is set.</span></span>
            </para></summary>
        <value><span data-ttu-id="16164-130">此属性的默认值由名为 <c>DOTNET_USE_POLLING_FILE_WATCHER</c>的环境变量的值确定。</span><span class="sxs-lookup"><span data-stu-id="16164-130">The default value of this property is determined by the value of the environment variable named <c>DOTNET_USE_POLLING_FILE_WATCHER</c>.</span></span>
<span data-ttu-id="16164-131">如果 <see langword="true" /> 或 <c>1</c>，则此属性的默认值为 <see langword="true" /> ; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="16164-131">When <see langword="true" /> or <c>1</c>, this property defaults to <see langword="true" />; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsePollingFileWatcher">
      <MemberSignature Language="C#" Value="public bool UsePollingFileWatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePollingFileWatcher" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UsePollingFileWatcher" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePollingFileWatcher As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePollingFileWatcher { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePollingFileWatcher : bool with get, set" Usage="Microsoft.Extensions.FileProviders.PhysicalFileProvider.UsePollingFileWatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="16164-132">获取或设置一个值，该值确定此 <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> 实例是否使用轮询来确定文件更改。</span><span class="sxs-lookup"><span data-stu-id="16164-132">Gets or sets a value that determines if this instance of <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> uses polling to determine file changes.</span></span>
            <para>
<span data-ttu-id="16164-133">默认情况下，<see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> 使用 <see cref="T:System.IO.FileSystemWatcher" /> 侦听 <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" /> 的文件更改事件。</span><span class="sxs-lookup"><span data-stu-id="16164-133">By default, <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> uses <see cref="T:System.IO.FileSystemWatcher" /> to listen to file change events for <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" />.</span></span> <span data-ttu-id="16164-134"><see cref="T:System.IO.FileSystemWatcher" /> 在某些情况下（例如已安装驱动器的情况）无效。</span><span class="sxs-lookup"><span data-stu-id="16164-134"><see cref="T:System.IO.FileSystemWatcher" /> is ineffective in some scenarios such as mounted drives.</span></span> <span data-ttu-id="16164-135">需要轮询才能有效监视文件更改。</span><span class="sxs-lookup"><span data-stu-id="16164-135">Polling is required to effectively watch for file changes.</span></span>
            </para></summary>
        <value><span data-ttu-id="16164-136">此属性的默认值由名为 <c>DOTNET_USE_POLLING_FILE_WATCHER</c>的环境变量的值确定。</span><span class="sxs-lookup"><span data-stu-id="16164-136">The default value of this property is determined by the value of environment variable named <c>DOTNET_USE_POLLING_FILE_WATCHER</c>.</span></span> <span data-ttu-id="16164-137">如果 <see langword="true" /> 或 <c>1</c>，则此属性的默认值为 <see langword="true" /> ; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="16164-137">When <see langword="true" /> or <c>1</c>, this property defaults to <see langword="true" />; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UseActivePolling" />
      </Docs>
    </Member>
    <Member MemberName="Watch">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.IChangeToken Watch (string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Primitives.IChangeToken Watch(string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Watch (filter As String) As IChangeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Primitives::IChangeToken ^ Watch(System::String ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member Watch : string -&gt; Microsoft.Extensions.Primitives.IChangeToken&#xA;override this.Watch : string -&gt; Microsoft.Extensions.Primitives.IChangeToken" Usage="physicalFileProvider.Watch filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Physical</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.IChangeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="16164-138">用于确定要监视的文件或文件夹的筛选字符串。</span><span class="sxs-lookup"><span data-stu-id="16164-138">Filter string used to determine what files or folders to monitor.</span></span> <span data-ttu-id="16164-139">示例：<c>\*\*/\*.cs</c>、<c>\*.\*</c>、<c>subfolder/\*\*/\*.cshtml</c>。</span><span class="sxs-lookup"><span data-stu-id="16164-139">Examples: <c>\*\*/\*.cs</c>, <c>\*.\*</c>, <c>subfolder/\*\*/\*.cshtml</c>.</span></span></param>
        <summary><para><span data-ttu-id="16164-140">为指定的 <paramref name="filter" /> 创建 <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />。</span><span class="sxs-lookup"><span data-stu-id="16164-140">Creates an <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for the specified <paramref name="filter" />.</span></span></para>
          <para><span data-ttu-id="16164-141">glob 模式由 <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /> 进行解释。</span><span class="sxs-lookup"><span data-stu-id="16164-141">Globbing patterns are interpreted by <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</span></span></para></summary>
        <returns><para><span data-ttu-id="16164-142"><see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />，添加、修改或删除文件匹配 <paramref name="filter" /> 时进行通知。</span><span class="sxs-lookup"><span data-stu-id="16164-142">An <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that's notified when a file matching <paramref name="filter" /> is added, modified, or deleted.</span></span></para>
          <para><span data-ttu-id="16164-143">OR</span><span class="sxs-lookup"><span data-stu-id="16164-143">OR</span></span></para>
          <para><span data-ttu-id="16164-144">如果 <paramref name="filter" /> 包含无效的筛选器字符，或者是绝对路径或在构造函数 <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String)" /> 中指定的根目录外，则为 <see cref="T:Microsoft.Extensions.FileProviders.NullChangeToken" />。</span><span class="sxs-lookup"><span data-stu-id="16164-144">A <see cref="T:Microsoft.Extensions.FileProviders.NullChangeToken" /> if <paramref name="filter" /> has invalid filter characters or is an absolute path or is outside the root directory specified in the constructor <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String)" />.</span></span></para></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
