<Type Name="SoapServerVRoot" FullName="System.EnterpriseServices.Internal.SoapServerVRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="980e3b8f792c8252a353ef6841a3d30b9ffe4a2d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86818106" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapServerVRoot : System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapServerVRoot extends System.Object implements class System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapServerVRoot&#xA;Implements ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapServerVRoot sealed : System::EnterpriseServices::Internal::ISoapServerVRoot" />
  <TypeSignature Language="F#" Value="type SoapServerVRoot = class&#xA;    interface ISoapServerVRoot" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapServerVRoot</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("CAA817CC-0C04-4d22-A05C-2B7E162F4E8F")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("CAA817CC-0C04-4d22-A05C-2B7E162F4E8F")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51e54-101">在服务器上发布经过身份验证的加密 SOAP 虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51e54-101">Publishes authenticated, encrypted SOAP virtual roots on servers.</span></span> <span data-ttu-id="51e54-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="51e54-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51e54-103"><xref:System.EnterpriseServices.Internal.SoapServerVRoot> 由 .NET Framework 在内部使用。</span><span class="sxs-lookup"><span data-stu-id="51e54-103"><xref:System.EnterpriseServices.Internal.SoapServerVRoot> is used internally by the .NET Framework.</span></span> <span data-ttu-id="51e54-104">不需要直接在代码中使用它。</span><span class="sxs-lookup"><span data-stu-id="51e54-104">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapServerVRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapServerVRoot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51e54-105">初始化 <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="51e54-105">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRootEx : string * string * string * string * string * string * string * string * string * string * string -&gt; unit&#xA;override this.CreateVirtualRootEx : string * string * string * string * string * string * string * string * string * string * string -&gt; unit" Usage="soapServerVRoot.CreateVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot, homePage, discoFile, secureSockets, authentication, operation, baseUrl, virtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="51e54-106">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="51e54-106">The root Web server.</span></span> <span data-ttu-id="51e54-107">默认值为“IIS://localhost/W3SVC/1/ROOT”。</span><span class="sxs-lookup"><span data-stu-id="51e54-107">The default is "IIS://localhost/W3SVC/1/ROOT".</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="51e54-108">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="51e54-108">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="51e54-109">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51e54-109">The name of the virtual root.</span></span></param>
        <param name="homePage"><span data-ttu-id="51e54-110">主页的 URL。</span><span class="sxs-lookup"><span data-stu-id="51e54-110">The URL of the home page.</span></span></param>
        <param name="discoFile"><span data-ttu-id="51e54-111">如果要创建默认发现文件，为 <see langword="true" />；如果不创建任何发现文件，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-111"><see langword="true" /> if a default discovery file is to be created; <see langword="false" /> if there is to be no discovery file.</span></span> <span data-ttu-id="51e54-112">如果为 <see langword="false" />，而 Default.disco 文件存在，将删除该文件。</span><span class="sxs-lookup"><span data-stu-id="51e54-112">If <see langword="false" /> and a Default.disco file exists, the file is deleted.</span></span></param>
        <param name="secureSockets"><span data-ttu-id="51e54-113">如果要求 SSL 加密，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-113"><see langword="true" /> if SSL encryption is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="authentication"><span data-ttu-id="51e54-114">如果不使用任何身份验证（匿名用户），应指定“匿名”。</span><span class="sxs-lookup"><span data-stu-id="51e54-114">Specify "anonymous" if no authentication is to be used (anonymous user).</span></span> <span data-ttu-id="51e54-115">否则，应指定空字符串。</span><span class="sxs-lookup"><span data-stu-id="51e54-115">Otherwise, specify an empty string.</span></span></param>
        <param name="operation"><span data-ttu-id="51e54-116">未使用。</span><span class="sxs-lookup"><span data-stu-id="51e54-116">Not used.</span></span> <span data-ttu-id="51e54-117">为此参数指定 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-117">Specify <see langword="null" /> for this parameter.</span></span></param>
        <param name="baseUrl"><span data-ttu-id="51e54-118">此方法返回时，此参数包含基 URL。</span><span class="sxs-lookup"><span data-stu-id="51e54-118">When this method returns, this parameter contains the base URL.</span></span></param>
        <param name="virtualRoot"><span data-ttu-id="51e54-119">此方法返回时，此参数包含虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51e54-119">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="51e54-120">此方法返回时，此参数包含虚拟根目录的磁盘地址。</span><span class="sxs-lookup"><span data-stu-id="51e54-120">When this method returns, this parameter contains the disk address of the Virtual Root directory.</span></span></param>
        <summary><span data-ttu-id="51e54-121">用安全选项创建一个 SOAP 虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51e54-121">Creates a SOAP virtual root with security options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51e54-122">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51e54-122">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="51e54-123">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="51e54-123">The SOAP utility is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRootEx : string * string * string -&gt; unit&#xA;override this.DeleteVirtualRootEx : string * string * string -&gt; unit" Usage="soapServerVRoot.DeleteVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="51e54-124">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="51e54-124">The root Web server.</span></span> <span data-ttu-id="51e54-125">默认值为“IIS://localhost/W3SVC/1/ROOT”。</span><span class="sxs-lookup"><span data-stu-id="51e54-125">The default is "IIS://localhost/W3SVC/1/ROOT".</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="51e54-126">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="51e54-126">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="51e54-127">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51e54-127">The name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="51e54-128">删除虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51e54-128">Deletes a virtual root.</span></span> <span data-ttu-id="51e54-129">没有完全实现。</span><span class="sxs-lookup"><span data-stu-id="51e54-129">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51e54-130">删除虚拟根目录的功能尚不可用。</span><span class="sxs-lookup"><span data-stu-id="51e54-130">The functionality to delete a virtual root is not yet available.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="51e54-131">此方法返回，而不删除虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51e54-131">This method returns without deleting the virtual root.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51e54-132">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51e54-132">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="51e54-133">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="51e54-133">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="51e54-134">获取系统目录的调用失败。</span><span class="sxs-lookup"><span data-stu-id="51e54-134">The call to get the system directory failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string RootWebServer, string inBaseUrl, string inVirtualRoot, out string Exists, out string SSL, out string WindowsAuth, out string Anonymous, out string HomePage, out string DiscoFile, out string PhysicalPath, out string BaseUrl, out string VirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string RootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; Exists, [out] string&amp; SSL, [out] string&amp; WindowsAuth, [out] string&amp; Anonymous, [out] string&amp; HomePage, [out] string&amp; DiscoFile, [out] string&amp; PhysicalPath, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (RootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef Exists As String, ByRef SSL As String, ByRef WindowsAuth As String, ByRef Anonymous As String, ByRef HomePage As String, ByRef DiscoFile As String, ByRef PhysicalPath As String, ByRef BaseUrl As String, ByRef VirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetVirtualRootStatus(System::String ^ RootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % Exists, [Runtime::InteropServices::Out] System::String ^ % SSL, [Runtime::InteropServices::Out] System::String ^ % WindowsAuth, [Runtime::InteropServices::Out] System::String ^ % Anonymous, [Runtime::InteropServices::Out] System::String ^ % HomePage, [Runtime::InteropServices::Out] System::String ^ % DiscoFile, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRootStatus : string * string * string * string * string * string * string * string * string * string * string * string -&gt; unit&#xA;override this.GetVirtualRootStatus : string * string * string * string * string * string * string * string * string * string * string * string -&gt; unit" Usage="soapServerVRoot.GetVirtualRootStatus (RootWebServer, inBaseUrl, inVirtualRoot, Exists, SSL, WindowsAuth, Anonymous, HomePage, DiscoFile, PhysicalPath, BaseUrl, VirtualRoot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="Exists" Type="System.String" RefType="out" />
        <Parameter Name="SSL" Type="System.String" RefType="out" />
        <Parameter Name="WindowsAuth" Type="System.String" RefType="out" />
        <Parameter Name="Anonymous" Type="System.String" RefType="out" />
        <Parameter Name="HomePage" Type="System.String" RefType="out" />
        <Parameter Name="DiscoFile" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="BaseUrl" Type="System.String" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer"><span data-ttu-id="51e54-135">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="51e54-135">The root Web server.</span></span> <span data-ttu-id="51e54-136">默认值为“IIS://localhost/W3SVC/1/ROOT”。</span><span class="sxs-lookup"><span data-stu-id="51e54-136">The default is "IIS://localhost/W3SVC/1/ROOT".</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="51e54-137">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="51e54-137">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="51e54-138">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51e54-138">The name of the virtual root.</span></span></param>
        <param name="Exists"><span data-ttu-id="51e54-139">此方法返回时，如果虚拟目录存在，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-139">When this method returns, this parameter contains a <see langword="true" /> if the virtual directory exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="SSL"><span data-ttu-id="51e54-140">此方法返回时，如果要求 SSL 加密，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-140">When this method returns, this parameter contains a <see langword="true" /> if SSL encryption is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="WindowsAuth"><span data-ttu-id="51e54-141">此方法返回时，如果设置了 Windows 身份验证，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-141">When this method returns, this parameter contains <see langword="true" /> if Windows authentication is set, otherwise, <see langword="false" />.</span></span></param>
        <param name="Anonymous"><span data-ttu-id="51e54-142">此方法返回时，如果未设置身份验证（匿名用户），此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-142">When this method returns, this parameter contains <see langword="true" /> if no authentication is set (anonymous user); otherwise, <see langword="false" />.</span></span></param>
        <param name="HomePage"><span data-ttu-id="51e54-143">此方法返回时，如果设置了虚拟根目录的 <see langword="true" /> 属性，此参数将包含 <see langword="EnableDefaultDoc" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-143">When this method returns, this parameter contains a <see langword="true" /> if the Virtual Root's <see langword="EnableDefaultDoc" /> property is set; otherwise, <see langword="false" />.</span></span></param>
        <param name="DiscoFile"><span data-ttu-id="51e54-144">此方法返回时，如果 Default.disco 文件存在，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51e54-144">When this method returns, this parameter contains a <see langword="true" /> if a Default.disco file exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="51e54-145">此方法返回时，此参数包含虚拟根目录的磁盘地址。</span><span class="sxs-lookup"><span data-stu-id="51e54-145">When this method returns, this parameter contains the disk address of the virtual root directory.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="51e54-146">此方法返回时，此参数包含基 URL。</span><span class="sxs-lookup"><span data-stu-id="51e54-146">When this method returns, this parameter contains the base URL.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="51e54-147">此方法返回时，此参数包含虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51e54-147">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="51e54-148">返回现有 SOAP 虚拟根目录的安全状态。</span><span class="sxs-lookup"><span data-stu-id="51e54-148">Returns the security status of an existing SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
