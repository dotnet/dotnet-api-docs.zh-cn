<Type Name="IClrObjectFactory" FullName="System.EnterpriseServices.Internal.IClrObjectFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9134ec4d94dcc4f5a27d9e6f2976e0df7b291cea" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86818314" /></Metadata><TypeSignature Language="C#" Value="public interface IClrObjectFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClrObjectFactory" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClrObjectFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClrObjectFactory" />
  <TypeSignature Language="F#" Value="type IClrObjectFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("ecabafd2-7f19-11d2-978e-0000f8757e2a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("ecabafd2-7f19-11d2-978e-0000f8757e2a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="894a5-101">从客户端激活启用 SOAP 的 COM+ 应用程序代理。</span><span class="sxs-lookup"><span data-stu-id="894a5-101">Activates SOAP-enabled COM+ application proxies from a client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="894a5-102"><xref:System.EnterpriseServices.Internal.ClrObjectFactory>有关默认实现，请参阅。</span><span class="sxs-lookup"><span data-stu-id="894a5-102">See <xref:System.EnterpriseServices.Internal.ClrObjectFactory> for the default implementation.</span></span>  
  
 <span data-ttu-id="894a5-103"><xref:System.EnterpriseServices.Internal.IClrObjectFactory> 由 .NET Framework 在内部使用。</span><span class="sxs-lookup"><span data-stu-id="894a5-103"><xref:System.EnterpriseServices.Internal.IClrObjectFactory> is used internally by the .NET Framework.</span></span> <span data-ttu-id="894a5-104">不需要直接在代码中使用它。</span><span class="sxs-lookup"><span data-stu-id="894a5-104">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromAssembly">
      <MemberSignature Language="C#" Value="public object CreateFromAssembly (string assembly, string type, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromAssembly(string assembly, string type, string mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromAssembly (assembly As String, type As String, mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromAssembly(System::String ^ assembly, System::String ^ type, System::String ^ mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromAssembly : string * string * string -&gt; obj" Usage="iClrObjectFactory.CreateFromAssembly (assembly, type, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="894a5-105">要激活的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="894a5-105">The name of the assembly to activate.</span></span></param>
        <param name="type"><span data-ttu-id="894a5-106">要激活的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="894a5-106">The name of the type to activate.</span></span></param>
        <param name="mode"><span data-ttu-id="894a5-107">未使用。</span><span class="sxs-lookup"><span data-stu-id="894a5-107">Not used.</span></span></param>
        <summary><span data-ttu-id="894a5-108">使用程序集的配置文件，通过 .NET 远程处理激活远程程序集。</span><span class="sxs-lookup"><span data-stu-id="894a5-108">Activates a remote assembly through .NET remoting, using the assembly's configuration file.</span></span></summary>
        <returns><span data-ttu-id="894a5-109">表示此类型的 <see cref="T:System.Object" /> 实例，其区域性、参数、绑定和激活特性都设置为 <see langword="null" />；如果没有找到 <paramref name="type" /> 参数，则设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="894a5-109">An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to <see langword="null" />, or <see langword="null" /> if the <paramref name="type" /> parameter is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="894a5-110">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="894a5-110">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="894a5-111">类没有注册。</span><span class="sxs-lookup"><span data-stu-id="894a5-111">The class is not registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromMailbox">
      <MemberSignature Language="C#" Value="public object CreateFromMailbox (string Mailbox, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromMailbox(string Mailbox, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromMailbox (Mailbox As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromMailbox(System::String ^ Mailbox, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromMailbox : string * string -&gt; obj" Usage="iClrObjectFactory.CreateFromMailbox (Mailbox, Mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(4)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(4)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mailbox" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Mailbox"><span data-ttu-id="894a5-112">Web 服务上的邮箱。</span><span class="sxs-lookup"><span data-stu-id="894a5-112">A mailbox on the Web service.</span></span></param>
        <param name="Mode"><span data-ttu-id="894a5-113">未使用。</span><span class="sxs-lookup"><span data-stu-id="894a5-113">Not used.</span></span></param>
        <summary><span data-ttu-id="894a5-114">使用远程程序集的邮箱，通过 .NET 远程处理激活远程程序集。</span><span class="sxs-lookup"><span data-stu-id="894a5-114">Activates a remote assembly through .NET remoting, using the remote assembly's mailbox.</span></span> <span data-ttu-id="894a5-115">目前尚未实现；如果调用，将引发 <see cref="T:System.Runtime.InteropServices.COMException" />。</span><span class="sxs-lookup"><span data-stu-id="894a5-115">Currently not implemented; throws a <see cref="T:System.Runtime.InteropServices.COMException" /> if called.</span></span></summary>
        <returns><span data-ttu-id="894a5-116">调用此方法会引发异常。</span><span class="sxs-lookup"><span data-stu-id="894a5-116">This method throws an exception if called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="894a5-117">如果调用，则实现会引发异常。</span><span class="sxs-lookup"><span data-stu-id="894a5-117">The implementation throws an exception if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="894a5-118">简单邮件传输协议 (SMTP) 尚未实现。</span><span class="sxs-lookup"><span data-stu-id="894a5-118">Simple Mail Transfer Protocol (SMTP) is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVroot">
      <MemberSignature Language="C#" Value="public object CreateFromVroot (string VrootUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromVroot(string VrootUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromVroot (VrootUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromVroot(System::String ^ VrootUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromVroot : string * string -&gt; obj" Usage="iClrObjectFactory.CreateFromVroot (VrootUrl, Mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VrootUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VrootUrl"><span data-ttu-id="894a5-119">远程对象的虚拟根目录 URL。</span><span class="sxs-lookup"><span data-stu-id="894a5-119">The virtual root URL of the remote object.</span></span></param>
        <param name="Mode"><span data-ttu-id="894a5-120">未使用。</span><span class="sxs-lookup"><span data-stu-id="894a5-120">Not used.</span></span></param>
        <summary><span data-ttu-id="894a5-121">使用远程程序集的虚拟根 URL，通过 .NET 远程处理激活远程程序集。</span><span class="sxs-lookup"><span data-stu-id="894a5-121">Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.</span></span></summary>
        <returns><span data-ttu-id="894a5-122">表示此类型的 <see cref="T:System.Object" /> 实例，其区域性、参数以及绑定和激活特性均设置为 <see langword="null" />；如果找不到 <paramref name="VrootUrl" /> 参数标识的程序集，将设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="894a5-122">An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to <see langword="null" />, or <see langword="null" /> if the assembly identified by the <paramref name="VrootUrl" /> parameter is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="894a5-123">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="894a5-123">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="894a5-124">未能打开线程标记。</span><span class="sxs-lookup"><span data-stu-id="894a5-124">The thread token could not be opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromWsdl">
      <MemberSignature Language="C#" Value="public object CreateFromWsdl (string WsdlUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromWsdl(string WsdlUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromWsdl (WsdlUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromWsdl(System::String ^ WsdlUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromWsdl : string * string -&gt; obj" Usage="iClrObjectFactory.CreateFromWsdl (WsdlUrl, Mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(3)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(3)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WsdlUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="WsdlUrl"><span data-ttu-id="894a5-125">Web 服务的 WSDL URL。</span><span class="sxs-lookup"><span data-stu-id="894a5-125">The WSDL URL of the Web service.</span></span></param>
        <param name="Mode"><span data-ttu-id="894a5-126">未使用。</span><span class="sxs-lookup"><span data-stu-id="894a5-126">Not used.</span></span></param>
        <summary><span data-ttu-id="894a5-127">使用 XML Web services 的 Web 服务描述语言 (WSDL)，通过 .NET 远程处理激活远程程序集。</span><span class="sxs-lookup"><span data-stu-id="894a5-127">Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.</span></span></summary>
        <returns><span data-ttu-id="894a5-128">表示此类型的 <see cref="T:System.Object" /> 实例，其区域性、参数以及绑定和激活特性均设置为 <see langword="null" />；如果找不到 <paramref name="WsdlUrl" /> 参数标识的程序集，将设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="894a5-128">An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to <see langword="null" />, or <see langword="null" /> if the assembly identified by the <paramref name="WsdlUrl" /> parameter is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="894a5-129">处理传入的 WSDL，如有必要，将生成一个代理，然后激活远程对象。</span><span class="sxs-lookup"><span data-stu-id="894a5-129">Processes the WSDL passed in and, if necessary, generates a proxy, then activates the remote object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="894a5-130">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="894a5-130">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="894a5-131">未能打开线程标记。</span><span class="sxs-lookup"><span data-stu-id="894a5-131">The thread token could not be opened.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
