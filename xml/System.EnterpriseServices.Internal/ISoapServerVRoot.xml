<Type Name="ISoapServerVRoot" FullName="System.EnterpriseServices.Internal.ISoapServerVRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2572ee235f80d96f434ad6d7a3c68772fcc39037" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="90002408" /></Metadata><TypeSignature Language="C#" Value="public interface ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapServerVRoot" />
  <TypeSignature Language="F#" Value="type ISoapServerVRoot = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8cab6-101">在服务器上发布经过身份验证的加密 SOAP 虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="8cab6-101">Publishes authenticated, encrypted SOAP virtual roots on servers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-102"><xref:System.EnterpriseServices.Internal.SoapServerVRoot>有关默认实现，请参阅。</span><span class="sxs-lookup"><span data-stu-id="8cab6-102">See <xref:System.EnterpriseServices.Internal.SoapServerVRoot> for the default implementation.</span></span>  
  
 <span data-ttu-id="8cab6-103"><xref:System.EnterpriseServices.Internal.ISoapServerVRoot> 由 .NET Framework 在内部使用。</span><span class="sxs-lookup"><span data-stu-id="8cab6-103"><xref:System.EnterpriseServices.Internal.ISoapServerVRoot> is used internally by the .NET Framework.</span></span> <span data-ttu-id="8cab6-104">不需要直接在代码中使用它。</span><span class="sxs-lookup"><span data-stu-id="8cab6-104">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRootEx : string * string * string * string * string * string * string * string * string * string * string -&gt; unit" Usage="iSoapServerVRoot.CreateVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot, homePage, discoFile, secureSockets, authentication, operation, baseUrl, virtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="8cab6-105">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="8cab6-105">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="8cab6-106">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="8cab6-106">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="8cab6-107">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="8cab6-107">The name of the virtual root.</span></span></param>
        <param name="homePage"><span data-ttu-id="8cab6-108">如果要设置 <see langword="true" /> 属性，为 <see langword="EnableDefaultDoc" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-108"><see langword="true" /> if the <see langword="EnableDefaultDoc" /> property is to be set; otherwise, <see langword="false" />.</span></span></param>
        <param name="discoFile"><span data-ttu-id="8cab6-109">如果要创建默认发现文件，为 <see langword="true" />；如果不创建任何发现文件，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-109"><see langword="true" /> if a default discovery file is to be created; <see langword="false" /> if there is to be no discovery file.</span></span> <span data-ttu-id="8cab6-110">如果为 <see langword="false" />，而 Default.disco 文件存在，将删除该文件。</span><span class="sxs-lookup"><span data-stu-id="8cab6-110">If <see langword="false" /> and a Default.disco file exists, the file is deleted.</span></span></param>
        <param name="secureSockets"><span data-ttu-id="8cab6-111">如果要求 SSL 加密，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-111"><see langword="true" /> if SSL encryption is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="authentication"><span data-ttu-id="8cab6-112">如果不使用任何身份验证（匿名用户），应指定“匿名”。</span><span class="sxs-lookup"><span data-stu-id="8cab6-112">Specify "anonymous" if no authentication is to be used (anonymous user).</span></span> <span data-ttu-id="8cab6-113">否则，应指定空字符串。</span><span class="sxs-lookup"><span data-stu-id="8cab6-113">Otherwise, specify an empty string.</span></span></param>
        <param name="operation"><span data-ttu-id="8cab6-114">未使用。</span><span class="sxs-lookup"><span data-stu-id="8cab6-114">Not used.</span></span> <span data-ttu-id="8cab6-115">为此参数指定 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-115">Specify <see langword="null" /> for this parameter.</span></span></param>
        <param name="baseUrl"><span data-ttu-id="8cab6-116">此方法返回时，此参数包含基 URL。</span><span class="sxs-lookup"><span data-stu-id="8cab6-116">When this method returns, this parameter contains the base URL.</span></span></param>
        <param name="virtualRoot"><span data-ttu-id="8cab6-117">此方法返回时，此参数包含虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="8cab6-117">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="8cab6-118">此方法返回时，此参数包含虚拟根目录的磁盘地址。</span><span class="sxs-lookup"><span data-stu-id="8cab6-118">When this method returns, this parameter contains the disk address of the Virtual Root directory.</span></span></param>
        <summary><span data-ttu-id="8cab6-119">用安全选项创建一个 SOAP 虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="8cab6-119">Creates a SOAP virtual root with security options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8cab6-120">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="8cab6-120">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8cab6-121">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="8cab6-121">The SOAP utility is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string baseUrl, string virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, baseUrl As String, virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ baseUrl, System::String ^ virtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRootEx : string * string * string -&gt; unit" Usage="iSoapServerVRoot.DeleteVirtualRootEx (rootWebServer, baseUrl, virtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="virtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="8cab6-122">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="8cab6-122">The root Web server.</span></span></param>
        <param name="baseUrl"><span data-ttu-id="8cab6-123">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="8cab6-123">The base URL that contains the virtual root.</span></span></param>
        <param name="virtualRoot"><span data-ttu-id="8cab6-124">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="8cab6-124">The name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="8cab6-125">删除虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="8cab6-125">Deletes a virtual root.</span></span> <span data-ttu-id="8cab6-126">没有完全实现。</span><span class="sxs-lookup"><span data-stu-id="8cab6-126">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-127">用于删除虚拟根目录的功能当前在此接口的实现中不可用。</span><span class="sxs-lookup"><span data-stu-id="8cab6-127">The functionality to delete a virtual root is not currently available in the implementation of this interface.</span></span> <span data-ttu-id="8cab6-128">实现返回而不删除根。</span><span class="sxs-lookup"><span data-stu-id="8cab6-128">The implementation returns without deleting the root.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8cab6-129">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="8cab6-129">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8cab6-130">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="8cab6-130">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="8cab6-131">标识系统目录的调用失败。</span><span class="sxs-lookup"><span data-stu-id="8cab6-131">The call to identify the system directory failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; exists, [out] string&amp; secureSockets, [out] string&amp; windowsAuth, [out] string&amp; anonymous, [out] string&amp; homePage, [out] string&amp; discoFile, [out] string&amp; physicalPath, [out] string&amp; baseUrl, [out] string&amp; virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef exists As String, ByRef secureSockets As String, ByRef windowsAuth As String, ByRef anonymous As String, ByRef homePage As String, ByRef discoFile As String, ByRef physicalPath As String, ByRef baseUrl As String, ByRef virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVirtualRootStatus(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % exists, [Runtime::InteropServices::Out] System::String ^ % secureSockets, [Runtime::InteropServices::Out] System::String ^ % windowsAuth, [Runtime::InteropServices::Out] System::String ^ % anonymous, [Runtime::InteropServices::Out] System::String ^ % homePage, [Runtime::InteropServices::Out] System::String ^ % discoFile, [Runtime::InteropServices::Out] System::String ^ % physicalPath, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRootStatus : string * string * string * string * string * string * string * string * string * string * string * string -&gt; unit" Usage="iSoapServerVRoot.GetVirtualRootStatus (rootWebServer, inBaseUrl, inVirtualRoot, exists, secureSockets, windowsAuth, anonymous, homePage, discoFile, physicalPath, baseUrl, virtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(3)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(3)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="exists" Type="System.String" RefType="out" />
        <Parameter Name="secureSockets" Type="System.String" RefType="out" />
        <Parameter Name="windowsAuth" Type="System.String" RefType="out" />
        <Parameter Name="anonymous" Type="System.String" RefType="out" />
        <Parameter Name="homePage" Type="System.String" RefType="out" />
        <Parameter Name="discoFile" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="8cab6-132">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="8cab6-132">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="8cab6-133">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="8cab6-133">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="8cab6-134">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="8cab6-134">The name of the virtual root.</span></span></param>
        <param name="exists"><span data-ttu-id="8cab6-135">此方法返回时，如果虚拟目录存在，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-135">When this method returns, this parameter contains a <see langword="true" /> if the virtual directory exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="secureSockets"><span data-ttu-id="8cab6-136">此方法返回时，如果要求 SSL 加密，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-136">When this method returns, this parameter contains a <see langword="true" /> if SSL encryption is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="windowsAuth"><span data-ttu-id="8cab6-137">此方法返回时，如果设置了 Windows 身份验证，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-137">When this method returns, this parameter contains <see langword="true" /> if Windows authentication is set, otherwise, <see langword="false" />.</span></span></param>
        <param name="anonymous"><span data-ttu-id="8cab6-138">此方法返回时，如果未设置身份验证（匿名用户），此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-138">When this method returns, this parameter contains <see langword="true" /> if no authentication is set (anonymous user); otherwise, <see langword="false" />.</span></span></param>
        <param name="homePage"><span data-ttu-id="8cab6-139">此方法返回时，如果设置了虚拟根目录的 <see langword="true" /> 属性，此参数将包含 <see langword="EnableDefaultDoc" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-139">When this method returns, this parameter contains a <see langword="true" /> if the Virtual Root directory's <see langword="EnableDefaultDoc" /> property is set; otherwise, <see langword="false" />.</span></span></param>
        <param name="discoFile"><span data-ttu-id="8cab6-140">此方法返回时，如果 Default.disco 文件存在，此参数将包含 <see langword="true" />；否则将包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8cab6-140">When this method returns, this parameter contains a <see langword="true" /> if a Default.disco file exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="8cab6-141">此方法返回时，此参数包含虚拟根目录的磁盘地址。</span><span class="sxs-lookup"><span data-stu-id="8cab6-141">When this method returns, this parameter contains the disk address of the Virtual Root directory.</span></span></param>
        <param name="baseUrl"><span data-ttu-id="8cab6-142">此方法返回时，此参数包含基 URL。</span><span class="sxs-lookup"><span data-stu-id="8cab6-142">When this method returns, this parameter contains the base URL.</span></span></param>
        <param name="virtualRoot"><span data-ttu-id="8cab6-143">此方法返回时，此参数包含虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="8cab6-143">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="8cab6-144">返回现有 SOAP 虚拟根目录的安全状态。</span><span class="sxs-lookup"><span data-stu-id="8cab6-144">Returns the security status of an existing SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
