<Type Name="IComSoapMetadata" FullName="System.EnterpriseServices.Internal.IComSoapMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffb83f2afc550371cc63c8e185e2b9e13276ab2f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89739010" /></Metadata><TypeSignature Language="C#" Value="public interface IComSoapMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComSoapMetadata" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComSoapMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComSoapMetadata" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComSoapMetadata" />
  <TypeSignature Language="F#" Value="type IComSoapMetadata = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("d8013ff0-730b-45e2-ba24-874b7242c425")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("d8013ff0-730b-45e2-ba24-874b7242c425")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定为 COM+ 组件生成公共语言运行时 (CLR) 元数据的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.IComSoapMetadata>无需在代码中直接实现接口。 它由 <xref:System.EnterpriseServices.Internal.GenerateMetadata> .NET Framework 基础结构中的类实现。  
  
 如有必要， <xref:System.EnterpriseServices.Internal.IComSoapMetadata> 指定为指定类型库生成包含 CLR 元数据的程序集。  
  
 <xref:System.EnterpriseServices.Internal.IComSoapMetadata> 由 .NET Framework 在内部使用。 不需要直接在代码中使用它。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public string Generate (string SrcTypeLibFileName, string OutPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Generate(string SrcTypeLibFileName, string OutPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (SrcTypeLibFileName As String, OutPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Generate(System::String ^ SrcTypeLibFileName, System::String ^ OutPath);" />
      <MemberSignature Language="F#" Value="abstract member Generate : string * string -&gt; string" Usage="iComSoapMetadata.Generate (SrcTypeLibFileName, OutPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SrcTypeLibFileName" Type="System.String" />
        <Parameter Name="OutPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SrcTypeLibFileName">类型库的名称，将为该类型库生成一个程序集。</param>
        <param name="OutPath">将在其中生成程序集的文件夹。</param>
        <summary>生成一个程序集，该程序集包含指定类型库所表示的 COM+ 组件的公共语言运行时 (CLR) 元数据。</summary>
        <returns>生成的程序集的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如有必要，该 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.Generate%2A> 方法指定为指定的类型库生成包含 CLR 元数据的程序集。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateSigned">
      <MemberSignature Language="C#" Value="public string GenerateSigned (string SrcTypeLibFileName, string OutPath, bool InstallGac, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateSigned(string SrcTypeLibFileName, string OutPath, bool InstallGac, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateSigned (SrcTypeLibFileName As String, OutPath As String, InstallGac As Boolean, ByRef Error As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateSigned(System::String ^ SrcTypeLibFileName, System::String ^ OutPath, bool InstallGac, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSigned : string * string * bool * string -&gt; string" Usage="iComSoapMetadata.GenerateSigned (SrcTypeLibFileName, OutPath, InstallGac, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SrcTypeLibFileName" Type="System.String" />
        <Parameter Name="OutPath" Type="System.String" />
        <Parameter Name="InstallGac" Type="System.Boolean" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="SrcTypeLibFileName">类型库的名称，将为该类型库生成一个程序集。</param>
        <param name="OutPath">将在其中生成程序集的文件夹。</param>
        <param name="InstallGac">一个标志，指示是否将程序集安装在全局程序集缓存中。</param>
        <param name="Error">一个可写入错误信息的字符串。</param>
        <summary>生成一个程序集，该程序集包含指定类型库所表示的 COM+ 组件的公共语言运行时 (CLR) 元数据；使用强名称密钥对来对程序集进行签名；然后将该程序集安装在全局程序集缓存中。</summary>
        <returns>生成的程序集的名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如有必要，该 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> 方法指定为指定的类型库生成包含 CLR 元数据的程序集。 此外， <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> 将生成强名称密钥对并对程序集进行签名。  
  
 `InstallGac`参数指示是否将程序集安装到全局程序集缓存中。 但是，通过类实现的一个实现将 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> <xref:System.EnterpriseServices.Internal.GenerateMetadata> 忽略此值，并始终尝试在全局程序集缓存中安装已签名的程序集。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
