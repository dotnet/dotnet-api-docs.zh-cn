<Type Name="SoapUtility" FullName="System.EnterpriseServices.Internal.SoapUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1dfcdf243bdaeb0a73842dd0cece7f071a637b1f" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="90002328" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapUtility : System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapUtility extends System.Object implements class System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapUtility&#xA;Implements ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapUtility sealed : System::EnterpriseServices::Internal::ISoapUtility" />
  <TypeSignature Language="F#" Value="type SoapUtility = class&#xA;    interface ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapUtility</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("5F9A955F-AA55-4127-A32B-33496AA8A44E")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("5F9A955F-AA55-4127-A32B-33496AA8A44E")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供一些实用工具，以便支持由服务器导出启用 SOAP 的 COM+ 应用程序代理，以及由客户端导入这些代理。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供的实用工具函数 <xref:System.EnterpriseServices.Internal.SoapUtility> 从 COM + 内的多个位置调用，但是它们的主要用途是支持导出和导入客户端代理。  
  
 <xref:System.EnterpriseServices.Internal.SoapUtility> 由 .NET Framework 在内部使用。 不需要直接在代码中使用它。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerBinPath : string * string * string * string -&gt; unit&#xA;override this.GetServerBinPath : string * string * string * string -&gt; unit" Usage="soapUtility.GetServerBinPath (rootWebServer, inBaseUrl, inVirtualRoot, binPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">根 Web 服务器。</param>
        <param name="inBaseUrl">基 URL 地址。</param>
        <param name="inVirtualRoot">虚拟根目录的名称。</param>
        <param name="binPath">此方法返回时，此参数包含 SOAP 虚拟根 bin 目录的文件路径。</param>
        <summary>返回 SOAP bin 目录的路径。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">调用链中的调用方无权访问非托管代码。</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 实用工具不可用。</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">获取系统目录的调用失败。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerPhysicalPath : string * string * string * string -&gt; unit&#xA;override this.GetServerPhysicalPath : string * string * string * string -&gt; unit" Usage="soapUtility.GetServerPhysicalPath (rootWebServer, inBaseUrl, inVirtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">根 Web 服务器。</param>
        <param name="inBaseUrl">基 URL 地址。</param>
        <param name="inVirtualRoot">虚拟根目录的名称。</param>
        <param name="physicalPath">此方法返回时，此参数包含 SOAP 虚拟根目录的文件路径。</param>
        <summary>返回 SOAP 虚拟根目录的路径。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">调用链中的调用方无权访问非托管代码。</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 实用工具不可用。</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">获取系统目录的调用失败。</exception>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Present();" />
      <MemberSignature Language="F#" Value="abstract member Present : unit -&gt; unit&#xA;override this.Present : unit -&gt; unit" Usage="soapUtility.Present " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.Present</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定是否存在经过身份验证的、加密的 SOAP 接口。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">调用链中的调用方无权访问非托管代码。</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 实用工具不可用。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
