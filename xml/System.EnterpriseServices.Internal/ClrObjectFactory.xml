<Type Name="ClrObjectFactory" FullName="System.EnterpriseServices.Internal.ClrObjectFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d55b7090c03f80cbfcf945e3bbc1e8158d4bcc27" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86818353" /></Metadata><TypeSignature Language="C#" Value="public class ClrObjectFactory : System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrObjectFactory extends System.Object implements class System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ClrObjectFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrObjectFactory&#xA;Implements IClrObjectFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClrObjectFactory : System::EnterpriseServices::Internal::IClrObjectFactory" />
  <TypeSignature Language="F#" Value="type ClrObjectFactory = class&#xA;    interface IClrObjectFactory" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IClrObjectFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("ecabafd1-7f19-11d2-978e-0000f8757e2a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("ecabafd1-7f19-11d2-978e-0000f8757e2a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>从客户端激活启用 SOAP 的 COM+ 应用程序代理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory> 由 .NET Framework 在内部使用。 不需要直接在代码中使用类。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrObjectFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClrObjectFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.EnterpriseServices.Internal.ClrObjectFactory" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromAssembly">
      <MemberSignature Language="C#" Value="public object CreateFromAssembly (string AssemblyName, string TypeName, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromAssembly(string AssemblyName, string TypeName, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromAssembly (AssemblyName As String, TypeName As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromAssembly(System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromAssembly : string * string * string -&gt; obj&#xA;override this.CreateFromAssembly : string * string * string -&gt; obj" Usage="clrObjectFactory.CreateFromAssembly (AssemblyName, TypeName, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyName">要激活的程序集的名称。</param>
        <param name="TypeName">要激活的类型的名称。</param>
        <param name="Mode">未使用。</param>
        <summary>使用程序集的配置文件，通过 .NET 远程处理激活远程程序集。</summary>
        <returns>表示此类型的 <see cref="T:System.Object" /> 实例，其区域性、参数以及绑定和激活特性均设置为 <see langword="null" />；如果找不到 <paramref name="TypeName" /> 参数，将设置为 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">调用链中的调用方无权访问非托管代码。</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">类没有注册。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromMailbox">
      <MemberSignature Language="C#" Value="public object CreateFromMailbox (string Mailbox, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromMailbox(string Mailbox, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromMailbox (Mailbox As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromMailbox(System::String ^ Mailbox, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromMailbox : string * string -&gt; obj&#xA;override this.CreateFromMailbox : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromMailbox (Mailbox, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mailbox" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Mailbox">Web 服务上的邮箱。</param>
        <param name="Mode">未使用。</param>
        <summary>使用远程程序集的邮箱，通过 .NET 远程处理激活远程程序集。 目前尚未实现；如果调用，将引发 <see cref="T:System.Runtime.InteropServices.COMException" />。</summary>
        <returns>调用此方法会引发异常。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用，则引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">简单邮件传输协议 (SMTP) 尚未实现。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVroot">
      <MemberSignature Language="C#" Value="public object CreateFromVroot (string VrootUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromVroot(string VrootUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromVroot (VrootUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromVroot(System::String ^ VrootUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromVroot : string * string -&gt; obj&#xA;override this.CreateFromVroot : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromVroot (VrootUrl, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VrootUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VrootUrl">要激活的对象的虚拟根目录 URL。</param>
        <param name="Mode">未使用。</param>
        <summary>使用远程程序集的虚拟根 URL，通过 .NET 远程处理激活远程程序集。</summary>
        <returns>表示此类型的 <see cref="T:System.Object" /> 实例，其区域性、参数以及绑定和激活特性均设置为 <see langword="null" />；如果找不到 <paramref name="VrootUrl" /> 参数标识的程序集，将设置为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> 将字符串 "？ wsdl" 追加到 `VrootUrl` ，并调用 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> 以激活远程对象。  
  
 .NET 远程处理所使用的 SOAP 版本是 RPC/编码的，而不是文档/文字，这是 SOAP 互操作性所必需的。 因此， <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> 不能用于大多数的 "Web 服务"。  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> 首次运行时，需要在本地计算机上具有管理权限，因为它会创建和安装客户端代理以与远程程序集通信。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">调用链中的调用方无权访问非托管代码。</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">未能打开线程标记。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromWsdl">
      <MemberSignature Language="C#" Value="public object CreateFromWsdl (string WsdlUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromWsdl(string WsdlUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromWsdl (WsdlUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromWsdl(System::String ^ WsdlUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromWsdl : string * string -&gt; obj&#xA;override this.CreateFromWsdl : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromWsdl (WsdlUrl, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WsdlUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="WsdlUrl">Web 服务的 WSDL URL。</param>
        <param name="Mode">未使用。</param>
        <summary>使用 XML Web services 的 Web 服务描述语言 (WSDL)，通过 .NET 远程处理激活远程程序集。</summary>
        <returns>表示此类型的 <see cref="T:System.Object" /> 实例，其区域性、参数以及绑定和激活特性均设置为 <see langword="null" />；如果找不到 <paramref name="WsdlUrl" /> 参数标识的程序集，将设置为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理传入的 WSDL，如有必要，将生成一个代理，然后激活远程对象。  
  
 .NET 远程处理所使用的 SOAP 版本是 RPC/编码的，而不是文档/文字，这是 SOAP 互操作性所必需的。 因此， <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> 不能用于大多数的 "Web 服务"。  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> 首次运行时，需要在本地计算机上具有管理权限，因为它会创建和安装客户端代理以与远程程序集通信。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">调用链中的调用方无权访问非托管代码。</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">未能打开线程标记。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
