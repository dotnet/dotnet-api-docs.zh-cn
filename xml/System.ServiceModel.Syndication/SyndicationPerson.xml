<Type Name="SyndicationPerson" FullName="System.ServiceModel.Syndication.SyndicationPerson">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6184ecebb68344cc163817ef9780607e838ca6f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86849060" /></Metadata><TypeSignature Language="C#" Value="public class SyndicationPerson" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationPerson extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationPerson" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationPerson" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationPerson" />
  <TypeSignature Language="F#" Value="type SyndicationPerson = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Syndication" ToVersion="4.0.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel.Web" FromVersion="4.0.0.0" To="System.ServiceModel" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="caf48-101">表示联合内容的作者或参与者。</span><span class="sxs-lookup"><span data-stu-id="caf48-101">Represents an author or contributor of syndication content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-102"><xref:System.ServiceModel.Syndication.SyndicationPerson> 对象可添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed> 和 <xref:System.ServiceModel.Syndication.SyndicationItem> 对象上的作者和参与者集合。</span><span class="sxs-lookup"><span data-stu-id="caf48-102"><xref:System.ServiceModel.Syndication.SyndicationPerson> objects can be added to the authors and contributors collections on <xref:System.ServiceModel.Syndication.SyndicationFeed> and <xref:System.ServiceModel.Syndication.SyndicationItem> objects.</span></span>  
  
 <span data-ttu-id="caf48-103">序列化为 Atom 1.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 以 `<author>` 或 `<contributor>` 元素形式写出。</span><span class="sxs-lookup"><span data-stu-id="caf48-103">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationPerson> is written out as an `<author>` or `<contributor>` element.</span></span>  
  
 <span data-ttu-id="caf48-104">序列化为 RSS 2.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例以 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 元素形式写出。</span><span class="sxs-lookup"><span data-stu-id="caf48-104">When serialized to RSS 2.0, a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance is written out as a `<managingEditor>`, `<a10:author>`, or `<a10:contributor>` element.</span></span> <span data-ttu-id="caf48-105">序列化 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的方式取决于添加到 <xref:System.ServiceModel.Syndication.SyndicationPerson> 或 <xref:System.ServiceModel.Syndication.SyndicationFeed> 的 <xref:System.ServiceModel.Syndication.SyndicationItem> 对象数、向其中添加 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例的集合以及传递给 `SerializeExtensionAsAtom` 构造函数的 <xref:System.ServiceModel.Syndication.Rss20ItemFormatter.%23ctor%28System.ServiceModel.Syndication.SyndicationItem%2CSystem.Boolean%29> 参数值。</span><span class="sxs-lookup"><span data-stu-id="caf48-105">How a <xref:System.ServiceModel.Syndication.SyndicationPerson> is serialized depends on the number of <xref:System.ServiceModel.Syndication.SyndicationPerson> objects added to a <xref:System.ServiceModel.Syndication.SyndicationFeed> or <xref:System.ServiceModel.Syndication.SyndicationItem>, which collection the <xref:System.ServiceModel.Syndication.SyndicationPerson> instances are added to, and the value of the `SerializeExtensionAsAtom` parameter to the <xref:System.ServiceModel.Syndication.Rss20ItemFormatter.%23ctor%28System.ServiceModel.Syndication.SyndicationItem%2CSystem.Boolean%29> constructor.</span></span> <span data-ttu-id="caf48-106">如果只有一个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A>（或 <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>）集合，则会将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 序列化为 `<managingEditor>` 元素。</span><span class="sxs-lookup"><span data-stu-id="caf48-106">If only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (or <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) collection, the <xref:System.ServiceModel.Syndication.SyndicationPerson> is serialized to a `<managingEditor>` element.</span></span> <span data-ttu-id="caf48-107">如果有多个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A>（或 <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>）集合，而且 `SerializeExtensionsAsAtom` 设置为 `true`，则会将所有 <xref:System.ServiceModel.Syndication.SyndicationPerson> 对象都序列化为 `<a10:author>` 元素。</span><span class="sxs-lookup"><span data-stu-id="caf48-107">If more than one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (or <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) collection and `SerializeExtensionsAsAtom` is set to `true`, all of the <xref:System.ServiceModel.Syndication.SyndicationPerson> objects are serialized to `<a10:author>` elements.</span></span> <span data-ttu-id="caf48-108">如果将 `SerializeExtensionsAsAtom` 设置为 `false`，则不会序列化 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-108">If `SerializeExtensionsAsAtom` is set to `false`, the <xref:System.ServiceModel.Syndication.SyndicationPerson> instances is not serialized.</span></span> <span data-ttu-id="caf48-109">只有在 <xref:System.ServiceModel.Syndication.SyndicationPerson> 设置为 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 时，才会将所有添加到 <xref:System.ServiceModel.Syndication.SyndicationItem.Contributors%2A>（或 `SerializeExtensionsAsAtom`）集合的 `true` 序列化为 `<a10:contributor>` 元素。</span><span class="sxs-lookup"><span data-stu-id="caf48-109">Any <xref:System.ServiceModel.Syndication.SyndicationPerson> instances added to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> (or <xref:System.ServiceModel.Syndication.SyndicationItem.Contributors%2A>) collection are only serialized if `SerializeExtensionsAsAtom` is set to `true`, in which case they are serialized to `<a10:contributor>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf48-110">下面的代码演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed> 实例的作者集合中。</span><span class="sxs-lookup"><span data-stu-id="caf48-110">The following code shows how to add a <xref:System.ServiceModel.Syndication.SyndicationPerson> to the authors collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationPerson#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#8)]
 [!code-vb[SyndicationPerson#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#8)]  
  
 <span data-ttu-id="caf48-111">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-111">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationPerson> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 <span data-ttu-id="caf48-112">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-112">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationPerson> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="caf48-113">初始化一个新 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-113">Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="caf48-114">初始化一个新 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-114">Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationPerson (System.ServiceModel.Syndication.SyndicationPerson source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationPerson source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationPerson(System::ServiceModel::Syndication::SyndicationPerson ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : System.ServiceModel.Syndication.SyndicationPerson -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationPerson" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="caf48-115">要初始化新实例的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-115">The <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance to initialize the new instance.</span></span></param>
        <summary><span data-ttu-id="caf48-116">使用指定的实例初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> class with the specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson email" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email"><span data-ttu-id="caf48-117">人员的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="caf48-117">The email address of the person.</span></span></param>
        <summary><span data-ttu-id="caf48-118">使用指定的电子邮件地址初始化新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-118">Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified email address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="caf48-119">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="caf48-119">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationPerson#2](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#2)]
 [!code-vb[SyndicationPerson#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email, string name, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email, string name, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String, name As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email, System::String ^ name, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string * string * string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson (email, name, uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email"><span data-ttu-id="caf48-120">人员的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="caf48-120">The email address of the person.</span></span></param>
        <param name="name"><span data-ttu-id="caf48-121">人员的名称。</span><span class="sxs-lookup"><span data-stu-id="caf48-121">The name of the person.</span></span></param>
        <param name="uri"><span data-ttu-id="caf48-122">人员网页的 URI。</span><span class="sxs-lookup"><span data-stu-id="caf48-122">The URI of the person's Web page.</span></span></param>
        <summary><span data-ttu-id="caf48-123">使用指定的电子邮件地址、名称和统一资源标识符 (URI) 初始化新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-123">Initializes a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance with the specified email address, name, and Uniform Resource Identifier (URI).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="caf48-124">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="caf48-124">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationPerson#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#3)]
 [!code-vb[SyndicationPerson#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caf48-125">获取 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的属性扩展。</span><span class="sxs-lookup"><span data-stu-id="caf48-125">Gets the attribute extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</span></span></summary>
        <value><span data-ttu-id="caf48-126">一个包含属性扩展集合的字典。</span><span class="sxs-lookup"><span data-stu-id="caf48-126">A dictionary that contains a collection of attribute extensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-127">联合对象模型允许您将自定义属性添加到 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例中。</span><span class="sxs-lookup"><span data-stu-id="caf48-127">The Syndication object model allows you to add custom attributes to a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span> <span data-ttu-id="caf48-128">您可以添加任何有效的 XML 属性/值。</span><span class="sxs-lookup"><span data-stu-id="caf48-128">You can add any valid XML attribute/value.</span></span>  
  
 <span data-ttu-id="caf48-129">序列化为 Atom 1.0 时，会将任何自定义属性/值以 `<author>` 或 `<contributor>` 元素中的属性形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-129">When serialized to Atom 1.0, any custom attribute/value is written as an attribute in the `<author>` or `<contributor>` elements.</span></span> <span data-ttu-id="caf48-130">当序列化为 RSS 2.0 时，会将任何自定义属性/值作为 `<managingEditor>`、`<a10:contributor>` 或 `<a10:author>` 元素中的一个属性写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-130">When serialized to RSS 2.0, any custom attribute/value is written as an attribute in the `<managingEditor>`, `<a10:contributor>`, or `<a10:author>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf48-131">下面的代码演示如何将属性扩展添加到 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-131">The following code shows how to add an attribute extension to a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span>  
  
 [!code-csharp[SyndicationPerson#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#9)]
 [!code-vb[SyndicationPerson#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#9)]  
  
 <span data-ttu-id="caf48-132">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-132">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationPerson#4](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#4)]  
  
 <span data-ttu-id="caf48-133">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-133">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationPerson#5](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationPerson Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="syndicationPerson.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="caf48-134">创建现有 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例的副本。</span><span class="sxs-lookup"><span data-stu-id="caf48-134">Creates a copy of the existing <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span></span></summary>
        <returns><span data-ttu-id="caf48-135">新 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-135">A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="caf48-136">下面的代码演示如何克隆 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-136">The following code shows how to clone a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span>  
  
 [!code-csharp[SyndicationPerson#14](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#14)]
 [!code-vb[SyndicationPerson#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caf48-137">获取 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的元素扩展。</span><span class="sxs-lookup"><span data-stu-id="caf48-137">Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</span></span></summary>
        <value><span data-ttu-id="caf48-138">一个包含元素扩展的 <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-138">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-139">联合对象模型允许您将自定义 XML 元素添加到 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例中。</span><span class="sxs-lookup"><span data-stu-id="caf48-139">The Syndication object model allows you to add custom XML elements to a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span> <span data-ttu-id="caf48-140">可以添加任何有效的 XML 元素，只要该元素的命名空间与包含的命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="caf48-140">You can add any valid XML element as long as the element namespace and the containing namespace are different.</span></span>  
  
 <span data-ttu-id="caf48-141">序列化为 Atom 1.0 时，会将任何自定义元素以 `<author>` 或 `<contributor>` 元素中的 XML 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-141">When serialized to Atom 1.0, any custom element is written as an XML element within an `<author>` or `<contributor>` element.</span></span>  
  
 <span data-ttu-id="caf48-142">序列化为 RSS 2.0 时，会将任何自定义元素以 `<managingEditor>`、`<a10:contributor>` 或 `<a10:author>` 元素中的 XML 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-142">When serialized to RSS 2.0, any custom element is written as an XML element within the `<managingEditor>`, `<a10:contributor>`, or `<a10:author>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf48-143">下面的代码演示如何将元素扩展添加到 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例。</span><span class="sxs-lookup"><span data-stu-id="caf48-143">The following code shows how to add an element extension to a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span>  
  
 [!code-csharp[SyndicationPerson#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#10)]
 [!code-vb[SyndicationPerson#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#10)]  
  
 <span data-ttu-id="caf48-144">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> 集合序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-144">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationPerson#6](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#6)]  
  
 <span data-ttu-id="caf48-145">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> 集合序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-145">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationPerson#7](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberSignature Language="VB.NET" Value="Public Property Email As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Email { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Email : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caf48-146">获取或设置 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="caf48-146">Gets or sets the email address of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</span></span></summary>
        <value><span data-ttu-id="caf48-147">人员的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="caf48-147">The email address of the person.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-148">序列化为 Atom 1.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 属性以 `<email>` 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-148">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationPerson> property is written as an `<email>` element.</span></span> <span data-ttu-id="caf48-149">`<email>` 元素出现在 `<author>` 或 `<contributor>` 元素中，这取决于向其中添加 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的集合（作者或参与者）。</span><span class="sxs-lookup"><span data-stu-id="caf48-149">The `<email>` element appears within an `<author>` or `<contributor>` element, which depends upon which collection (authors or contributors) the <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to.</span></span>  
  
 <span data-ttu-id="caf48-150">序列化为 RSS 2.0 时，此值会以 `<a10:email>` 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-150">When serialized to RSS 2.0, this value is written as an `<a10:email>` element.</span></span> <span data-ttu-id="caf48-151">`<a10:email>` 元素出现在 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-151">The `<a10:email>` element appears within a `<managingEditor>`, `<a10:author>`, or `<a10:contributor>` element.</span></span> <span data-ttu-id="caf48-152">如果只有一个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到作者集合，则会将 `<email>` 元素写入 `<managingEditor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-152">If only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the authors collection, the `<email>` element is written within the `<managingEditor>` element.</span></span> <span data-ttu-id="caf48-153">如果有多个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到作者集合，则会将 `<email>` 元素写入 `<a10:author>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-153">If more than one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the authors collection, the `<email>` element is written within an `<a10:author>` element.</span></span> <span data-ttu-id="caf48-154">如果将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到参与者集合，则会将 `<email>` 元素写入 `<a10:contributor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-154">If the <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the contributors collection, the `<email>` element is written within an `<a10:contributor>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf48-155">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="caf48-155">The following code shows how to set the email address of a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span>  
  
 [!code-csharp[SyndicationPerson#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#11)]
 [!code-vb[SyndicationPerson#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#11)]  
  
 <span data-ttu-id="caf48-156">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-156">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> is serialized for Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 <span data-ttu-id="caf48-157">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> 序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-157">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> is serialized for RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caf48-158">获取或设置 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="caf48-158">Gets or sets the name of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</span></span></summary>
        <value><span data-ttu-id="caf48-159">人员的名称。</span><span class="sxs-lookup"><span data-stu-id="caf48-159">The name of the person.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-160">序列化为 Atom 1.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 属性以 `<name>` 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-160">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> property is written as a `<name>` element.</span></span> <span data-ttu-id="caf48-161">`<name>` 元素出现在 `<author>` 或 `<contributor>` 元素中，这取决于向其中添加 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的集合（作者或参与者）。</span><span class="sxs-lookup"><span data-stu-id="caf48-161">The `<name>` element appears within an `<author>` or `<contributor>` element, which depends upon which collection (authors or contributors) the <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to.</span></span>  
  
 <span data-ttu-id="caf48-162">序列化为 RSS 2.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 属性以 `<a10:name>` 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-162">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> property is written as an `<a10:name>` element.</span></span> <span data-ttu-id="caf48-163">`<a10:name>` 元素出现在 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-163">The `<a10:name>` element appears within a `<managingEditor>`, `<a10:author>`, or `<a10:contributor>` element.</span></span> <span data-ttu-id="caf48-164">如果只有一个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到作者集合，则会将 `<a10:name>` 元素写入 `<managingEditor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-164">If only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the authors collection, the `<a10:name>` element is written within the `<managingEditor>` element.</span></span> <span data-ttu-id="caf48-165">如果有多个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到作者集合，则会将 `<a10:name>` 元素写入 `<a10:author>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-165">If more than one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the authors collection, the `<a10:name>` element is written within the `<a10:author>` element.</span></span> <span data-ttu-id="caf48-166">如果将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到参与者集合，则会将 `<a10:name>` 元素写入 `<a10:contributor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-166">If the <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the contributors collection, the `<a10:name>` element is written within the `<a10:contributor>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf48-167">下面的代码演示如何设置 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的名称。</span><span class="sxs-lookup"><span data-stu-id="caf48-167">The following code shows how to set the name of a <xref:System.ServiceModel.Syndication.SyndicationPerson>.</span></span>  
  
 [!code-csharp[SyndicationPerson#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#12)]
 [!code-vb[SyndicationPerson#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#12)]  
  
 <span data-ttu-id="caf48-168">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-168">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> is serialized for Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 <span data-ttu-id="caf48-169">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-169">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> is serialized for RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationPerson.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="caf48-170">元素的名称。</span><span class="sxs-lookup"><span data-stu-id="caf48-170">The name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="caf48-171">元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="caf48-171">The namespace of the element.</span></span></param>
        <param name="value"><span data-ttu-id="caf48-172">要分析的属性。</span><span class="sxs-lookup"><span data-stu-id="caf48-172">The attribute to parse.</span></span></param>
        <param name="version"><span data-ttu-id="caf48-173">要在分析时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="caf48-173">The syndication version to use when parsing.</span></span></param>
        <summary><span data-ttu-id="caf48-174">试图分析属性扩展。</span><span class="sxs-lookup"><span data-stu-id="caf48-174">Attempts to parse an attribute extension.</span></span></summary>
        <returns><span data-ttu-id="caf48-175">一个指定是否已成功分析属性扩展的值。</span><span class="sxs-lookup"><span data-stu-id="caf48-175">A value that specifies whether the attribute extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-176">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="caf48-176">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="caf48-177">若为 Atom 1.0，这些扩展会序列化为 `<author>` 或 `<contributor>` 元素的属性。若为 RSS 2.0，这些扩展会序列化为 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 元素的属性。</span><span class="sxs-lookup"><span data-stu-id="caf48-177">They are serialized as an attribute of the `<author>` or `<contributor>` element for Atom 1.0 or `<managingEditor>`, `<a10:author>`, or `<a10:contributor>` element for RSS 2.0.</span></span> <span data-ttu-id="caf48-178">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的反序列化。</span><span class="sxs-lookup"><span data-stu-id="caf48-178">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="caf48-179">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationPerson> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-179">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationPerson> and override this method.</span></span> <span data-ttu-id="caf48-180">将为所有无法识别的属性扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-180">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="caf48-181">读取过程中遇到无效的 XML。</span><span class="sxs-lookup"><span data-stu-id="caf48-181">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationPerson.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="caf48-182">要从其中进行读取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-182">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="version"><span data-ttu-id="caf48-183">要在分析时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="caf48-183">The syndication version to use while parsing.</span></span></param>
        <summary><span data-ttu-id="caf48-184">试图分析元素扩展。</span><span class="sxs-lookup"><span data-stu-id="caf48-184">Attempts to parse an element extension.</span></span></summary>
        <returns><span data-ttu-id="caf48-185">一个指定是否已成功分析元素扩展的值。</span><span class="sxs-lookup"><span data-stu-id="caf48-185">A value that specifies whether the element extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-186">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="caf48-186">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="caf48-187">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="caf48-187">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="caf48-188">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的反序列化。</span><span class="sxs-lookup"><span data-stu-id="caf48-188">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="caf48-189">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationPerson> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-189">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationPerson> and override this method.</span></span> <span data-ttu-id="caf48-190">将为所有无法识别的元素扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-190">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="caf48-191">读取过程中遇到无效的 XML。</span><span class="sxs-lookup"><span data-stu-id="caf48-191">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="caf48-192">获取或设置 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的 URI。</span><span class="sxs-lookup"><span data-stu-id="caf48-192">Gets or sets the URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</span></span></summary>
        <value><span data-ttu-id="caf48-193">人员网站的 URI。</span><span class="sxs-lookup"><span data-stu-id="caf48-193">The URI of the person's Web site.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-194">序列化为 Atom 1.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> 属性以 `<uri>` 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-194">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> property is written as a `<uri>` element.</span></span> <span data-ttu-id="caf48-195">`<uri>` 元素出现在 `<author>` 或 `<contributor>` 元素中，这取决于向其中添加 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的集合（作者或参与者）。</span><span class="sxs-lookup"><span data-stu-id="caf48-195">The `<uri>` element appears within an `<author>` or `<contributor>` element, which depends upon which collection (authors or contributors) the <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to.</span></span>  
  
 <span data-ttu-id="caf48-196">序列化为 RSS 2.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> 属性以 `<a10:uri>` 元素形式写入。</span><span class="sxs-lookup"><span data-stu-id="caf48-196">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> property is written as an `<a10:uri>` element.</span></span> <span data-ttu-id="caf48-197">`<a10:uri>` 元素出现在 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-197">The `<a10:uri>` element appears within a `<managingEditor>`, `<a10:author>`, or `<a10:contributor>` element.</span></span> <span data-ttu-id="caf48-198">如果只有一个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到作者集合，则会将 `<a10:uri>` 元素写入 `<managingEditor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-198">If only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the authors collection, the `<a10:uri>` element is written within the `<managingEditor>` element.</span></span> <span data-ttu-id="caf48-199">如果有多个 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到作者集合，则会将 `<a10:uri>` 元素写入 `<a10:author>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-199">If more than one <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the authors collection, the `<a10:uri>` element is written within the `<a10:author>` element.</span></span> <span data-ttu-id="caf48-200">如果将 <xref:System.ServiceModel.Syndication.SyndicationPerson> 添加到参与者集合，则会将 `<a10:uri>` 元素写入 `<a10:contributor>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="caf48-200">If the <xref:System.ServiceModel.Syndication.SyndicationPerson> is added to the contributors collection, the `<a10:uri>` element is written within the `<a10:contributor>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="caf48-201">下面的代码演示如何为 <xref:System.ServiceModel.Syndication.SyndicationPerson> 实例设置 URI。</span><span class="sxs-lookup"><span data-stu-id="caf48-201">The following code shows how to set the URI for a <xref:System.ServiceModel.Syndication.SyndicationPerson> instance.</span></span>  
  
 [!code-csharp[SyndicationPerson#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#13)]
 [!code-vb[SyndicationPerson#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#13)]  
  
 <span data-ttu-id="caf48-202">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-202">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> is serialized for Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 <span data-ttu-id="caf48-203">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="caf48-203">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> is serialized for RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="caf48-204">要向其中进行写入的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-204">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="caf48-205">要在写入时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="caf48-205">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="caf48-206">使用指定的联合版本将属性扩展写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-206">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-207">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="caf48-207">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="caf48-208">若为 Atom 1.0，这些扩展会序列化为 `<author>` 或 `<contributor>` 元素的属性。若为 RSS 2.0，这些扩展会序列化为 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 元素的属性。</span><span class="sxs-lookup"><span data-stu-id="caf48-208">They are serialized as an attribute of the `<author>` or `<contributor>` element for Atom 1.0 or `<managingEditor>`, `<a10:author>`, or `<a10:contributor>` element for RSS 2.0.</span></span> <span data-ttu-id="caf48-209">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的序列化。</span><span class="sxs-lookup"><span data-stu-id="caf48-209">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="caf48-210">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationLink> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-210">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="caf48-211">将为所有无法识别的属性扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-211">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="caf48-212">要向其中进行写入的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-212">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="caf48-213">要在写入时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="caf48-213">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="caf48-214">使用指定的联合版本将元素扩展写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="caf48-214">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="caf48-215">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="caf48-215">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="caf48-216">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="caf48-216">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="caf48-217">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的序列化。</span><span class="sxs-lookup"><span data-stu-id="caf48-217">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="caf48-218">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationPerson> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-218">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationPerson> and override this method.</span></span> <span data-ttu-id="caf48-219">将为所有无法识别的元素扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="caf48-219">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
