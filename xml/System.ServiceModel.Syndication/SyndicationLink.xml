<Type Name="SyndicationLink" FullName="System.ServiceModel.Syndication.SyndicationLink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="830b885eae86d3219fa2378e20b8a950d8eb0448" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89952996" /></Metadata><TypeSignature Language="C#" Value="public class SyndicationLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationLink extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationLink" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationLink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationLink" />
  <TypeSignature Language="F#" Value="type SyndicationLink = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Syndication" ToVersion="4.0.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel.Web" FromVersion="4.0.0.0" To="System.ServiceModel" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0d6b-101">表示联合源或联合项中的链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-101">Represents a link within a syndication feed or item.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-102"><xref:System.ServiceModel.Syndication.SyndicationLink> 可添加到 <xref:System.ServiceModel.Syndication.SyndicationFeed> 或 <xref:System.ServiceModel.Syndication.SyndicationItem> 中。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-102"><xref:System.ServiceModel.Syndication.SyndicationLink> can be added to a <xref:System.ServiceModel.Syndication.SyndicationFeed> or <xref:System.ServiceModel.Syndication.SyndicationItem>.</span></span> <span data-ttu-id="f0d6b-103">序列化为 Atom 1.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationLink> 以 `<link>` 元素形式写出，而且将 <xref:System.ServiceModel.Syndication.SyndicationLink> 属性 (Property) 以 `<link>` 元素的属性 (Attribute) 形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-103">When serialized to Atom 1.0 a <xref:System.ServiceModel.Syndication.SyndicationLink> is written out as a `<link>` element, with the <xref:System.ServiceModel.Syndication.SyndicationLink> properties written out as attributes of the `<link>` element.</span></span> <span data-ttu-id="f0d6b-104">序列化为 RSS 2.0 时，将 <xref:System.ServiceModel.Syndication.SyndicationLink> 以元素形式写出关系值为 "替补" 的第一个 `<link>` 。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-104">When serialized to RSS 2.0, the first <xref:System.ServiceModel.Syndication.SyndicationLink> with a relationship value of 'alternate' is written out as a `<link>` element.</span></span> <span data-ttu-id="f0d6b-105">而将任何其他链接以 `<a10:link>` 元素形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-105">Any additional links are written out as a `<a10:link>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-106">下面的示例演示如何使用 <xref:System.ServiceModel.Syndication.SyndicationLink> 类。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-106">The following example shows how to use the <xref:System.ServiceModel.Syndication.SyndicationLink> class.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0d6b-107">初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0d6b-108">创建 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-108">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationLink (System.ServiceModel.Syndication.SyndicationLink source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationLink source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationLink(System::ServiceModel::Syndication::SyndicationLink ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : System.ServiceModel.Syndication.SyndicationLink -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationLink" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f0d6b-109">用于初始化新实例的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-109">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance used to initialize the new instance.</span></span></param>
        <summary><span data-ttu-id="f0d6b-110">使用指定的实例初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-111">指向链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-111">The URI to the linked resource.</span></span></param>
        <summary><span data-ttu-id="f0d6b-112">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-113">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-113">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#1](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#1)]
 [!code-vb[SyndicationLink#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri, string relationshipType, string title, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string relationshipType, string title, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri, relationshipType As String, title As String, mediaType As String, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri, System::String ^ relationshipType, System::String ^ title, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri * string * string * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink (uri, relationshipType, title, mediaType, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-114">指向链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-114">The URI to the linked resource.</span></span></param>
        <param name="relationshipType"><span data-ttu-id="f0d6b-115">关系类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-115">The relationship type.</span></span></param>
        <param name="title"><span data-ttu-id="f0d6b-116">链接的标题。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-116">The title of the link.</span></span></param>
        <param name="mediaType"><span data-ttu-id="f0d6b-117">链接的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-117">The media type of the link.</span></span></param>
        <param name="length"><span data-ttu-id="f0d6b-118">链接内容的长度。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-118">The length of the linked content.</span></span></param>
        <summary><span data-ttu-id="f0d6b-119">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />、关系类型、标题、媒体类型和长度初始化 <see cref="T:System.Uri" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />, relation type, title, media type, and length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-120">已知关系类型包括：</span><span class="sxs-lookup"><span data-stu-id="f0d6b-120">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="f0d6b-121">`alternate` -该链接标识包含源或项所描述的资源的备用版本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-121">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f0d6b-122">`related` — 该链接识别与外层源或项关联的资源。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-122">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f0d6b-123">`self` -该链接标识与包含源或项等效的资源。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-123">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f0d6b-124">`enclosure` — 该链接识别相关资源，其大小可能很大，还可能需要特殊处理。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-124">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="f0d6b-125">此链接关系通常用于在源中分发播客或音频文件的情况。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-125">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="f0d6b-126">`via` — 该链接识别充当外层源或项中所提供信息的来源的资源。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-126">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-127">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-127">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-128">获取链接的属性扩展。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-128">Gets the attribute extensions of the link.</span></span></summary>
        <value><span data-ttu-id="f0d6b-129">一个包含属性扩展集合的字典。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-129">A dictionary that contains a collection of attribute extensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> 允许您将自定义属性添加到 <xref:System.ServiceModel.Syndication.SyndicationLink> 中。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> allows you to add custom attributes to the <xref:System.ServiceModel.Syndication.SyndicationLink>.</span></span> <span data-ttu-id="f0d6b-131">序列化为 Atom 1.0 时，自定义属性会出现在 `<link>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-131">When serialized to Atom 1.0, the custom attributes appear within the `<link>` element.</span></span> <span data-ttu-id="f0d6b-132">序列化为 RSS 2.0 时，自定义属性会出现在 `<a10:link>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-132">When serialized to RSS 2.0, the custom attributes appear in the `<a10:link>` element.</span></span> <span data-ttu-id="f0d6b-133">可添加任何有效的 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-133">Any valid XML attribute can be added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-134">下面的代码说明如何向联合链接添加属性扩展。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-134">The following code shows how to add an attribute extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#4)]
 [!code-vb[LooselyTypedExtensions#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-135">获取或设置联合链接的基 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-135">Gets or sets the base URI of the syndication link.</span></span></summary>
        <value><span data-ttu-id="f0d6b-136">一个包含联合链接的基 URI 的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-136">A <see cref="T:System.Uri" /> instance that contains the base URI of the syndication link.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-137">下面的代码演示如何设置联合链接的基 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-137">The following code shows how to set the base URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationLink Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="syndicationLink.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0d6b-138">创建当前 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例的副本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-138">Creates a copy of the current <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-139">新 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-139">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-140">下面的代码演示如何创建联合链接的克隆。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-140">The following code shows how to create a clone of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAlternateLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0d6b-141">创建一个新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-141">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-142">此方法会创建新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 对象并将 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 设置为 `alternate`。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-142">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `alternate`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAlternateLink (uri As Uri) As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-143">链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-143">The URI of the linked resource.</span></span></param>
        <summary><span data-ttu-id="f0d6b-144">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 创建新的 <see cref="T:System.Uri" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-144">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" />.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-145">新 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-145">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-146">下面的示例演示如何创建一个替代链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-146">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#4)]
 [!code-vb[SyndicationLink#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAlternateLink (uri As Uri, mediaType As String) As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-147">链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-147">The URI of the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="f0d6b-148">链接的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-148">The media type of the link.</span></span></param>
        <summary><span data-ttu-id="f0d6b-149">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 和媒体类型创建新的 <see cref="T:System.Uri" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-149">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" /> and media type.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-150">新 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-150">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-151">下面的示例演示如何创建一个替代链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-151">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#5)]
 [!code-vb[SyndicationLink#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaEnclosureLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink (Uri uri, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink(class System.Uri uri, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaEnclosureLink (uri As Uri, mediaType As String, length As Long) As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateMediaEnclosureLink(Uri ^ uri, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="static member CreateMediaEnclosureLink : Uri * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink (uri, mediaType, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-152">链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-152">The URI of the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="f0d6b-153">链接的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-153">The media type of the link.</span></span></param>
        <param name="length"><span data-ttu-id="f0d6b-154">链接内容的长度。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-154">The length of the linked content.</span></span></param>
        <summary><span data-ttu-id="f0d6b-155">使用指定的 URI、媒体类型和长度创建媒体 enclosure 链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-155">Creates a media enclosure link with the specified URI, media type, and length.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-156">新 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-156">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-157">此方法会创建新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 对象并将 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 设置为 `enclosure`。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-157">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `enclosure`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-158">下面的示例演示如何创建一个媒体 enclosure 链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-158">The following example shows how to create a media enclosure link.</span></span>  
  
 [!code-csharp[SyndicationLink#6](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#6)]
 [!code-vb[SyndicationLink#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSelfLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0d6b-159">使用设置为 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的关系类型创建新的 <see langword="self" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-159">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the relationship type set to <see langword="self" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-160">此方法会创建新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 对象并将 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 设置为 `self`。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-160">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSelfLink (uri As Uri) As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-161">指向链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-161">The URI to the linked resource.</span></span></param>
        <summary><span data-ttu-id="f0d6b-162">使用指定的 URI 和设置为 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的关系类型创建新的 <see langword="self" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-162">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI and relationship type set to <see langword="self" />.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-163">一个 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-163">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-164">下面的示例演示如何创建一个 self 链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-164">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#7](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#7)]
 [!code-vb[SyndicationLink#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSelfLink (uri As Uri, mediaType As String) As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="f0d6b-165">指向链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-165">The URI to the linked resource.</span></span></param>
        <param name="mediaType"><span data-ttu-id="f0d6b-166">链接的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-166">The media type of the link.</span></span></param>
        <summary><span data-ttu-id="f0d6b-167">使用指定的 URI、媒体类型和设置为 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的关系类型创建新的 <see langword="self" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-167">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI, media type, and relationship type set to <see langword="self" />.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-168">一个 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-168">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-169">下面的示例演示如何创建一个 self 链接。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-169">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#8)]
 [!code-vb[SyndicationLink#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-170">获取 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的元素扩展。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-170">Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></summary>
        <value><span data-ttu-id="f0d6b-171">一个包含 <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> 的元素扩展的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-171">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-172">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-172">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f0d6b-173">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-173">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-174">下面的代码说明如何向联合链接添加元素扩展。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-174">The following code shows how to add an element extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#5)]
 [!code-vb[LooselyTypedExtensions#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri GetAbsoluteUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetAbsoluteUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbsoluteUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetAbsoluteUri();" />
      <MemberSignature Language="F#" Value="member this.GetAbsoluteUri : unit -&gt; Uri" Usage="syndicationLink.GetAbsoluteUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0d6b-175">获取 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-175">Gets the absolute URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-176">一个 <see cref="T:System.Uri" /> 实例，其中包含 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-176">A <see cref="T:System.Uri" /> instance that contains the absolute URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f0d6b-177">下面的代码演示如何获取联合链接的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-177">The following code shows how to get the absolute URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64 with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-178">获取或设置链接资源的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-178">Gets or sets the length of the linked resource in bytes.</span></span></summary>
        <value><span data-ttu-id="f0d6b-179">链接资源的长度。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-179">The length of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-180">当序列化为 Atom 1.0 时，会将 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 属性 (Property) 以 `length` 属性写入 `<link>` 元素。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-180">When serialized to Atom 1.0 the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is written as a `length` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="f0d6b-181">当序列化为 RSS 2.0 时，会将此值以 `length` 元素的 `<a10:link>` 属性形式写入。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-181">When serialized to RSS 2.0 this value is written as the `length` attribute of the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-182">下面的代码演示如何设置联合链接的长度。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-182">The following code shows how to set the length of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f0d6b-183">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-183">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f0d6b-184">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-184">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-185">获取或设置链接资源的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-185">Gets or sets the media type of the linked resource.</span></span></summary>
        <value><span data-ttu-id="f0d6b-186">链接资源的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-186">The media type of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-187">序列化为 Atom 1.0 时，会将此值以 `type` 元素中的 `<link>` 属性形式写入。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-187">When serialized to Atom 1.0 this value is written as a `type` attribute in the `<link>` element.</span></span> <span data-ttu-id="f0d6b-188">序列化为 RSS 2.0 时，会将此值以 `type` 元素中的 `<a10:link>` 属性形式写入。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-188">When serialized to RSS 2.0 this value is written as the `type` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-189">下面的代码演示如何设置联合链接上的媒体类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-189">The following code shows how to set the media type on a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f0d6b-190">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-190">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f0d6b-191">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-191">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-192">获取或设置链接资源的关系类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-192">Gets or sets the relationship type of the linked resource.</span></span></summary>
        <value><span data-ttu-id="f0d6b-193">链接资源的关系类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-193">The relationship type of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-194">已知关系类型包括：</span><span class="sxs-lookup"><span data-stu-id="f0d6b-194">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="f0d6b-195">`alternate` -该链接标识包含源或项所描述的资源的备用版本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-195">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f0d6b-196">`related` — 该链接识别与外层源或项关联的资源。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-196">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f0d6b-197">`self` -该链接标识与包含源或项等效的资源。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-197">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f0d6b-198">`enclosure` — 该链接识别相关资源，其大小可能很大，还可能需要特殊处理。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-198">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="f0d6b-199">此链接关系通常用于在源中分发播客或音频文件的情况。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-199">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="f0d6b-200">`via` — 该链接识别充当外层源或项中所提供信息的来源的资源。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-200">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
 <span data-ttu-id="f0d6b-201">序列化为 Atom 1.0 时，会将此值以 `rel` 元素的 `<link>` 属性形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-201">When serialized to Atom 1.0 this value is written out as the `rel` attribute of the `<link>` element.</span></span> <span data-ttu-id="f0d6b-202">序列化为 RSS 2.0 时，会将此值以 `rel` 元素中的 `<a10:link>` 属性形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-202">When serialized to RSS 2.0, this value is written out as the `rel` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-203">下面的代码演示如何设置联合链接的关系类型。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-203">The following code shows how to set the relationship type of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f0d6b-204">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-204">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f0d6b-205">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-206">获取或设置链接资源的标题。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-206">Gets or sets the title of the linked resource.</span></span></summary>
        <value><span data-ttu-id="f0d6b-207">链接资源的标题。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-207">The title of the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-208">序列化为 Atom 1.0 时，会将此值以 `title` 元素中的 `<link>` 属性形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-208">When serialized to Atom 1.0 this value is written out as the `title` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="f0d6b-209">序列化为 RSS 2.0 时，会将此标题以 `title` 元素中的 `<a10:link>` 属性形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-209">When serialized to RSS 2.0 the title is written out as the `title` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-210">下面的代码演示如何设置联合链接的标题。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-210">The following code shows how to set the title of a syndication link.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 <span data-ttu-id="f0d6b-211">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-211">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f0d6b-212">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-212">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationLink.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f0d6b-213">元素的名称。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-213">The name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="f0d6b-214">元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-214">The namespace of the element.</span></span></param>
        <param name="value"><span data-ttu-id="f0d6b-215">要分析的属性。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-215">The attribute to parse.</span></span></param>
        <param name="version"><span data-ttu-id="f0d6b-216">要在分析时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-216">The syndication version to use when parsing.</span></span></param>
        <summary><span data-ttu-id="f0d6b-217">试图分析属性扩展。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-217">Attempts to parse an attribute extension.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-218">一个指定是否已成功分析属性扩展的值。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-218">A value that specifies whether the attribute extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-219">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-219">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f0d6b-220">这些扩展会序列化为 `<link>` 元素的属性。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-220">They are serialized as an attribute of the `<link>` element.</span></span> <span data-ttu-id="f0d6b-221">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的反序列化。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-221">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="f0d6b-222">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationLink> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-222">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f0d6b-223">将为所有无法识别的属性扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-223">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="f0d6b-224">读取过程中遇到无效的 XML。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-224">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationLink.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="f0d6b-225">要从其中进行读取的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-225">The <see cref="T:System.Xml.XmlReader" /> to read from.</span></span></param>
        <param name="version"><span data-ttu-id="f0d6b-226">要在分析时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-226">The syndication version to use while parsing.</span></span></param>
        <summary><span data-ttu-id="f0d6b-227">试图分析元素扩展。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-227">Attempts to parse an element extension.</span></span></summary>
        <returns><span data-ttu-id="f0d6b-228">一个指定是否已成功分析元素扩展的值。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-228">A value that specifies whether the element extension was parsed successfully.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-229">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-229">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f0d6b-230">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-230">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="f0d6b-231">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的反序列化。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-231">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="f0d6b-232">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationLink> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-232">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f0d6b-233">将为所有无法识别的元素扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-233">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="f0d6b-234">读取过程中遇到无效的 XML。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-234">Invalid XML encountered during read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0d6b-235">获取或设置链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-235">Gets or sets the URI for the linked resource.</span></span></summary>
        <value><span data-ttu-id="f0d6b-236">一个 <see cref="T:System.Uri" /> 实例，其中包含链接资源的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-236">A <see cref="T:System.Uri" /> instance that contains the URI for the linked resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-237">序列化为 Atom 1.0 时，会将此值以 `href` 元素中的 `<link>` 属性形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-237">When serialized to Atom 1.0 this value is written out as the `href` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="f0d6b-238">序列化为 RSS 2.0 时，会将此值以 `href` 元素中的 `<a10:link>` 属性形式写出。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-238">When serialized to RSS 2.0, this value is written out as the `href` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0d6b-239">下面的代码演示如何设置联合链接的 URI。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-239">The following code shows how to set the URI of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f0d6b-240">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> 属性序列化为 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-240">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f0d6b-241">下面的 XML 演示如何将 <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> 属性序列化为 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-241">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f0d6b-242">要向其中进行写入的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-242">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="f0d6b-243">要在写入时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-243">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="f0d6b-244">使用指定的联合版本将属性扩展写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-244">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-245">属性扩展是 Atom 1.0 或 RSS 2.0 规范未定义的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-245">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f0d6b-246">这些扩展会序列化为 `<link>` 元素的属性。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-246">They are serialized as an attribute of the `<link>` element.</span></span> <span data-ttu-id="f0d6b-247">此方法是一个扩展点，您可以利用它来处理自定义属性扩展的序列化。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-247">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="f0d6b-248">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationLink> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-248">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f0d6b-249">将为所有无法识别的属性扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-249">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="f0d6b-250">要向其中进行写入的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-250">The <see cref="T:System.Xml.XmlReader" /> to write to.</span></span></param>
        <param name="version"><span data-ttu-id="f0d6b-251">要在写入时使用的联合版本。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-251">The syndication version to use while writing.</span></span></param>
        <summary><span data-ttu-id="f0d6b-252">使用指定的联合版本将元素扩展写入指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-252">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0d6b-253">元素扩展是 Atom 1.0 或 RSS 2.0 规范中未指定的有效 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-253">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f0d6b-254">可以添加任何有效的 XML 元素作为扩展名，只要该元素的命名空间与外层命名空间不同。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-254">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="f0d6b-255">此方法是一个扩展点，您可以利用它来处理自定义元素扩展的序列化。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-255">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="f0d6b-256">为此，必须从 <xref:System.ServiceModel.Syndication.SyndicationLink> 中派生一个类，并重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-256">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f0d6b-257">将为所有无法识别的元素扩展调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f0d6b-257">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
