<Type Name="IBaseIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22a5bc27ccba7224403932485f6f413019763410" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70444603" /></Metadata><TypeSignature Language="C#" Value="public interface IBaseIterator&lt;TValue&gt; : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IBaseIterator`1&lt;TValue&gt; implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBaseIterator(Of TValue)&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IBaseIterator : ICloneable" />
  <TypeSignature Language="F#" Value="type IBaseIterator&lt;'Value&gt; = interface&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary>定义所有 STL/CLR 迭代器的基接口。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="container">
      <MemberSignature Language="C#" Value="public object container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object container() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
      <MemberSignature Language="VB.NET" Value="Public Function container () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ container();" />
      <MemberSignature Language="F#" Value="abstract member container : unit -&gt; obj" Usage="iBaseIterator.container " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取迭代器正在遍历的容器。</summary>
        <returns>迭代器正在遍历的容器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_bias">
      <MemberSignature Language="C#" Value="public int get_bias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 get_bias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
      <MemberSignature Language="VB.NET" Value="Public Function get_bias () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int get_bias();" />
      <MemberSignature Language="F#" Value="abstract member get_bias : unit -&gt; int" Usage="iBaseIterator.get_bias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取迭代器的偏移。 偏移是迭代器相对于元素零的偏移量。</summary>
        <returns>迭代器的偏移。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_node">
      <MemberSignature Language="C#" Value="public object get_node ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object get_node() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
      <MemberSignature Language="VB.NET" Value="Public Function get_node () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ get_node();" />
      <MemberSignature Language="F#" Value="abstract member get_node : unit -&gt; obj" Usage="iBaseIterator.get_node " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取迭代器指向的节点或元素。</summary>
        <returns>迭代器当前指向的节点。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="next">
      <MemberSignature Language="C#" Value="public void next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
      <MemberSignature Language="VB.NET" Value="Public Sub next ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void next();" />
      <MemberSignature Language="F#" Value="abstract member next : unit -&gt; unit" Usage="iBaseIterator.next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将迭代器递增到基础容器中的下一个位置，如果已完全遍历该容器，则递增到容器末尾以外的第一个位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid">
      <MemberSignature Language="C#" Value="public bool valid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
      <MemberSignature Language="VB.NET" Value="Public Function valid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool valid();" />
      <MemberSignature Language="F#" Value="abstract member valid : unit -&gt; bool" Usage="iBaseIterator.valid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定迭代器是否有效并可安全用于遍历基础容器。</summary>
        <returns>如果迭代器有效并可安全使用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
