<Type Name="IForwardIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IForwardIterator&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33838695adf36c874a11c2a98d2526e5d88bf0f3" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102092003" /></Metadata><TypeSignature Language="C#" Value="public interface IForwardIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;, Microsoft.VisualC.StlClr.Generic.IOutputIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IForwardIterator`1&lt;TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.IOutputIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IForwardIterator(Of TValue)&#xA;Implements IInputIterator(Of TValue), IOutputIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IForwardIterator : Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt;, Microsoft::VisualC::StlClr::Generic::IOutputIterator&lt;TValue&gt;" />
  <TypeSignature Language="F#" Value="type IForwardIterator&lt;'Value&gt; = interface&#xA;    interface IInputIterator&lt;'Value&gt;&#xA;    interface IOutputIterator&lt;'Value&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IOutputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue"><span data-ttu-id="4e8c2-101">受控序列中的元素的类型。</span><span class="sxs-lookup"><span data-stu-id="4e8c2-101">The type of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="4e8c2-102">迭代器的接口，只能通过使用递增运算符向前访问容器中的元素。</span><span class="sxs-lookup"><span data-stu-id="4e8c2-102">Interface for an iterator that can access elements in a container only in the forward direction by using the increment operator.</span></span> <span data-ttu-id="4e8c2-103">迭代器指向的元素可以写入和读出任意多次。</span><span class="sxs-lookup"><span data-stu-id="4e8c2-103">The element that the iterator points to can be both written to and read from any number of times.</span></span> <span data-ttu-id="4e8c2-104">无论是需要输入迭代器还是输出迭代器，均可以使用向前迭代器。</span><span class="sxs-lookup"><span data-stu-id="4e8c2-104">Forward iterators can be used anywhere an input or output iterator is required.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>
