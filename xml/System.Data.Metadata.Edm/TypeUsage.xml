<Type Name="TypeUsage" FullName="System.Data.Metadata.Edm.TypeUsage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6643e15652c2a5be5ec87b2b171d22367d0f543" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86583165" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeUsage : System.Data.Metadata.Edm.MetadataItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeUsage extends System.Data.Metadata.Edm.MetadataItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.TypeUsage" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeUsage&#xA;Inherits MetadataItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeUsage sealed : System::Data::Metadata::Edm::MetadataItem" />
  <TypeSignature Language="F#" Value="type TypeUsage = class&#xA;    inherit MetadataItem" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.MetadataItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("EdmType={EdmType}, Facets.Count={Facets.Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("EdmType={EdmType}, Facets.Count={Facets.Count}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>描述一个类型以及该类型的一组方面。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.TypeUsage.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Metadata::Edm::BuiltInTypeKind BuiltInTypeKind { System::Data::Metadata::Edm::BuiltInTypeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Metadata.Edm.TypeUsage.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 的内置类型种类。</summary>
        <value>一个 <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> 对象，表示此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 的内置类型种类。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBinaryTypeUsage">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个使用指定方面值描述二进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBinaryTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBinaryTypeUsage (primitiveType As PrimitiveType, isFixedLength As Boolean) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateBinaryTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isFixedLength);" />
      <MemberSignature Language="F#" Value="static member CreateBinaryTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage (primitiveType, isFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="primitiveType">要为其创建 <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <param name="isFixedLength">如果将 binary 类型的长度设置为固定值，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>创建一个使用指定方面值描述二进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个使用指定方面值描述二进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关二进制类型的详细信息，请参阅 [二进制 (EDM) ](https://msdn.microsoft.com/library/ca858ce4-62d3-4516-bfb1-8a943dc66c61)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateBinaryTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isFixedLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateBinaryTypeUsage (primitiveType As PrimitiveType, isFixedLength As Boolean, maxLength As Integer) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateBinaryTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="F#" Value="static member CreateBinaryTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool * int -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage (primitiveType, isFixedLength, maxLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="primitiveType">要为其创建 <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <param name="isFixedLength">如果将 binary 类型的长度设置为固定值，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="maxLength">二进制类型的最大长度。</param>
        <summary>创建一个使用指定方面值描述二进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个使用指定方面值描述二进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关二进制类型的详细信息，请参阅 [二进制 (EDM) ](https://msdn.microsoft.com/library/ca858ce4-62d3-4516-bfb1-8a943dc66c61)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffsetTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDateTimeOffsetTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, byte? precision);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDateTimeOffsetTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, valuetype System.Nullable`1&lt;unsigned int8&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDateTimeOffsetTypeUsage (primitiveType As PrimitiveType, precision As Nullable(Of Byte)) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDateTimeOffsetTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, Nullable&lt;System::Byte&gt; precision);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffsetTypeUsage : System.Data.Metadata.Edm.PrimitiveType * Nullable&lt;byte&gt; -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage (primitiveType, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveType">定义偏移的度量单位的简单类型。</param>
        <param name="precision">用秒的小数部分（基于支持的小数位数）表示的 <see cref="T:System.DateTimeOffset" /> 的粒度。 例如，精度为 3 表示支持的粒度为毫秒。</param>
        <summary>创建参数所描述类型的 <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTimeOffset" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个 <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTimeOffset" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDateTimeTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, byte? precision);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDateTimeTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, valuetype System.Nullable`1&lt;unsigned int8&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDateTimeTypeUsage (primitiveType As PrimitiveType, precision As Nullable(Of Byte)) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDateTimeTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, Nullable&lt;System::Byte&gt; precision);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeTypeUsage : System.Data.Metadata.Edm.PrimitiveType * Nullable&lt;byte&gt; -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage (primitiveType, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveType">定义 <see cref="T:System.DateTime" /> 对象的度量单位的简单类型。</param>
        <param name="precision">用秒的小数部分（基于支持的小数位数）表示的 <see cref="T:System.DateTimeOffset" /> 的粒度。 例如，精度为 3 表示支持的粒度为毫秒。</param>
        <summary>创建参数所描述类型的 <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTime" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个 <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTime" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecimalTypeUsage">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个描述十进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecimalTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDecimalTypeUsage (primitiveType As PrimitiveType) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDecimalTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType);" />
      <MemberSignature Language="F#" Value="static member CreateDecimalTypeUsage : System.Data.Metadata.Edm.PrimitiveType -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage primitiveType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
      </Parameters>
      <Docs>
        <param name="primitiveType">要为其创建 <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <summary>创建一个用无限精度和小数位数方面值描述十进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个使用无限精度和小数位数方面值描述十进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关 decimal 类型的详细信息，请参阅 [decimal (EDM) ](https://msdn.microsoft.com/library/99239537-0336-4705-b581-a79d89430bc7)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecimalTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, byte precision, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDecimalTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, unsigned int8 precision, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDecimalTypeUsage (primitiveType As PrimitiveType, precision As Byte, scale As Byte) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDecimalTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, System::Byte precision, System::Byte scale);" />
      <MemberSignature Language="F#" Value="static member CreateDecimalTypeUsage : System.Data.Metadata.Edm.PrimitiveType * byte * byte -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage (primitiveType, precision, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="primitiveType">要为其创建 <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <param name="precision">十进制类型的精度（以 <see cref="T:System.Byte" /> 类型表示）。</param>
        <param name="scale">十进制类型的小数位数（以 <see cref="T:System.Byte" /> 类型表示）。</param>
        <summary>创建一个使用指定方面值描述十进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个使用指定方面值描述十进制类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关 decimal 类型的详细信息，请参阅 [decimal (EDM) ](https://msdn.microsoft.com/library/99239537-0336-4705-b581-a79d89430bc7)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateDefaultTypeUsage (System.Data.Metadata.Edm.EdmType edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateDefaultTypeUsage(class System.Data.Metadata.Edm.EdmType edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultTypeUsage (edmType As EdmType) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateDefaultTypeUsage(System::Data::Metadata::Edm::EdmType ^ edmType);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultTypeUsage : System.Data.Metadata.Edm.EdmType -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage edmType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="edmType">要为其创建 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <summary>创建一个具有指定概念模型类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个具有指定 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 的默认方面值的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Data.Metadata.Edm.EdmType> 是基元类型（如、或），则 `String` `Decimal` `Binary` `DateTime` 此方法将调用在类中声明的相应方法之一 <xref:System.Data.Metadata.Edm.TypeUsage> 。 否则，它将直接创建一个具有指定 <xref:System.Data.Metadata.Edm.TypeUsage> 的 <xref:System.Data.Metadata.Edm.EdmType> 对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateStringTypeUsage">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>创建一个使用指定方面值描述字符串类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateStringTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStringTypeUsage (primitiveType As PrimitiveType, isUnicode As Boolean, isFixedLength As Boolean) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateStringTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isUnicode, bool isFixedLength);" />
      <MemberSignature Language="F#" Value="static member CreateStringTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool * bool -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage (primitiveType, isUnicode, isFixedLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isUnicode" Type="System.Boolean" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="primitiveType">要为其创建 <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <param name="isUnicode">如果将 string 类型的字符编码标准设置为 Unicode，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFixedLength">如果将 string 类型的长度设置为固定值，则为 <see langword="true" />；否则为 <see langword="false" /></param>
        <summary>创建一个 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象，该对象使用指定的 Facet 值和无限 <see langword="MaxLength" /> 描述字符串类型。</summary>
        <returns>一个使用指定 Facet 值和无限 <see langword="MaxLength" /> 描述字符串类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关字符串类型的详细信息，请参阅 [string (EDM) ](https://msdn.microsoft.com/library/66035587-41f3-4c36-8be0-71b035700c82)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStringTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateStringTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, bool isUnicode, bool isFixedLength, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateStringTypeUsage (primitiveType As PrimitiveType, isUnicode As Boolean, isFixedLength As Boolean, maxLength As Integer) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateStringTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, bool isUnicode, bool isFixedLength, int maxLength);" />
      <MemberSignature Language="F#" Value="static member CreateStringTypeUsage : System.Data.Metadata.Edm.PrimitiveType * bool * bool * int -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage (primitiveType, isUnicode, isFixedLength, maxLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isUnicode" Type="System.Boolean" />
        <Parameter Name="isFixedLength" Type="System.Boolean" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="primitiveType">要为其创建 <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> 对象的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" />。</param>
        <param name="isUnicode">如果将 string 类型的字符编码标准设置为 Unicode，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isFixedLength">如果将 string 类型的字符编码标准设置为 Unicode，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="maxLength">如果将 string 类型的长度设置为固定值，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>创建一个使用指定方面值描述字符串类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个使用指定方面值描述字符串类型的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关字符串类型的详细信息，请参阅 [string (EDM) ](https://msdn.microsoft.com/library/66035587-41f3-4c36-8be0-71b035700c82)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTimeTypeUsage">
      <MemberSignature Language="C#" Value="public static System.Data.Metadata.Edm.TypeUsage CreateTimeTypeUsage (System.Data.Metadata.Edm.PrimitiveType primitiveType, byte? precision);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Metadata.Edm.TypeUsage CreateTimeTypeUsage(class System.Data.Metadata.Edm.PrimitiveType primitiveType, valuetype System.Nullable`1&lt;unsigned int8&gt; precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTimeTypeUsage (primitiveType As PrimitiveType, precision As Nullable(Of Byte)) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Metadata::Edm::TypeUsage ^ CreateTimeTypeUsage(System::Data::Metadata::Edm::PrimitiveType ^ primitiveType, Nullable&lt;System::Byte&gt; precision);" />
      <MemberSignature Language="F#" Value="static member CreateTimeTypeUsage : System.Data.Metadata.Edm.PrimitiveType * Nullable&lt;byte&gt; -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage (primitiveType, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primitiveType" Type="System.Data.Metadata.Edm.PrimitiveType" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="primitiveType">定义 <see cref="T:System.DateTime" /> 对象的度量单位的简单类型。</param>
        <param name="precision">用秒的小数部分（基于支持的小数位数）表示的 <see cref="T:System.DateTimeOffset" /> 的粒度。 例如，精度为 3 表示支持的粒度为毫秒。</param>
        <summary>创建参数所描述类型的 <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Time" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</summary>
        <returns>一个 <see cref="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Time" /><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdmType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType EdmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EdmType EdmType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.TypeUsage.EdmType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EdmType As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EdmType ^ EdmType { System::Data::Metadata::Edm::EdmType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EdmType : System.Data.Metadata.Edm.EdmType" Usage="System.Data.Metadata.Edm.TypeUsage.EdmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 描述的类型信息。</summary>
        <value>一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象，表示由此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 描述的类型信息。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Facets">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.Facet&gt; Facets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.Facet&gt; Facets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.TypeUsage.Facets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Facets As ReadOnlyMetadataCollection(Of Facet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::Facet ^&gt; ^ Facets { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::Facet ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Facets : System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.Facet&gt;" Usage="System.Data.Metadata.Edm.TypeUsage.Facets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.Facet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 描述的类型的方面列表。</summary>
        <value>一个 <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> 类型的集合，其中包含由此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 描述的类型的方面列表。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubtypeOf">
      <MemberSignature Language="C#" Value="public bool IsSubtypeOf (System.Data.Metadata.Edm.TypeUsage typeUsage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubtypeOf(class System.Data.Metadata.Edm.TypeUsage typeUsage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.IsSubtypeOf(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubtypeOf (typeUsage As TypeUsage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubtypeOf(System::Data::Metadata::Edm::TypeUsage ^ typeUsage);" />
      <MemberSignature Language="F#" Value="member this.IsSubtypeOf : System.Data.Metadata.Edm.TypeUsage -&gt; bool" Usage="typeUsage.IsSubtypeOf typeUsage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeUsage" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="typeUsage">要检查的 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 对象。</param>
        <summary>检查此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 是否为指定 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 的子类型。</summary>
        <returns>如果此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 是指定 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 的子类型，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.TypeUsage.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="typeUsage.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回由此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 描述的类型的全名。</summary>
        <returns>此 <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 描述的类型的全名（采用字符串的形式）。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
