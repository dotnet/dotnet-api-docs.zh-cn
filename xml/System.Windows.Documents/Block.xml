<Type Name="Block" FullName="System.Windows.Documents.Block">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3634279ae3645cdc970a194b76408b6fe03cf4fd" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102064157" /></Metadata><TypeSignature Language="C#" Value="public abstract class Block : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Block extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Block" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Block&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Block abstract : System::Windows::Documents::TextElement" />
  <TypeSignature Language="F#" Value="type Block = class&#xA;    inherit TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为所有块级别流内容元素提供基类的抽象类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 继承自类的元素 <xref:System.Windows.Documents.Block> (如) ， <xref:System.Windows.Documents.Section> 可用于对公共父级下的元素进行分组，或将公共属性应用于组。 从概念上讲，这类似于你如何 \<DIV> 在 HTML 中使用标记。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Run" />
    <altmember cref="T:System.Windows.Documents.Span" />
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
    <altmember cref="T:System.Windows.Documents.Floater" />
    <altmember cref="T:System.Windows.Documents.Figure" />
    <altmember cref="T:System.Windows.Documents.LineBreak" />
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Block ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Block();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>由某个派生类调用时，初始化 <see cref="T:System.Windows.Documents.Block" /> 基类的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Documents.Block.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置绘制元素边框时使用的 <see cref="T:System.Windows.Media.Brush" />。</summary>
        <value>用来应用于元素边框的画笔。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关显示可用预定义画笔颜色的样本表，请参阅 <xref:System.Windows.Media.Brushes> 。  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.BorderBrushProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.BorderBrush%2A> 属性 <xref:System.Windows.Documents.Block> (<xref:System.Windows.Documents.Paragraph>) 。  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 下图显示了前面的示例的呈现效果。  
  
 ![屏幕快照：蓝色、1&#47;1/4 的边框](~/add/media/block-borders.png "屏幕快照：Block 周围 1/4 英寸的蓝色边框")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.BorderBrush%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.BorderThickness : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.Block.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置元素的边框粗细。</summary>
        <value>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边框量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a>XAML 值  
 *uniformThickness*  
 <xref:System.Double>要统一应用于所有四个厚度尺寸的单个值的字符串表示形式。  例如，的值等效于的 `"10"` 值 `"10,10,10,10"` 。  非限定值以与设备无关的像素度量。 字符串不需要显式包含小数点。  
  
 *independentThickness*  
 四个有序值的字符串表示形式， <xref:System.Double> 对应于 "左"、"上"、"右" 和 "下"，按此顺序排列。  这四个值必须用逗号分隔;不允许使用空格。  例如，"5，10，15，20" 会导致 "内容" 左侧有5个像素的边框，内容的上边为10个像素，内容右侧有15个像素的边框，内容的下方有20个像素的边框。  
  
 *qualifiedUniformThickness*  
 *UniformThickness* 描述的值后跟以下单元说明符之一： `px` 、 `in` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 例如， `"1in"` 在所有方向上都提供均匀的边框。  
  
 *qualifiedIndependentThickness*  
 *IndependentThickness* 描述的值，每个独立值后跟以下单元说明符之一： `px` 、 `in` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 例如，`"1.5in,0.8in,1.5in,0.8in"`。  可以在一个或多个值中混合或省略单元说明符。  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.BorderThicknessProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.BorderThickness%2A> 属性 <xref:System.Windows.Documents.Block> (<xref:System.Windows.Documents.Paragraph>) 。  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 下图显示了前面的示例的呈现效果。  
  
 ![屏幕快照：蓝色、1&#47;1/4 的边框](~/add/media/block-borders.png "屏幕快照：Block 周围 1/4 英寸的蓝色边框")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.BorderThickness%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BorderThicknessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBefore">
      <MemberSignature Language="C#" Value="public bool BreakColumnBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakColumnBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakColumnBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakColumnBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakColumnBefore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakColumnBefore : bool with get, set" Usage="System.Windows.Documents.Block.BreakColumnBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当元素参与使用了分栏的内容呈现时，是否自动在此元素之前插入一个分栏符。</summary>
        <value>如果为 <see langword="true" />，则在此元素之前自动插入一个分栏符；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakColumnBefore"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakPageBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakColumnBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakColumnBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakColumnBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakColumnBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakColumnBeforeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BreakColumnBeforeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BreakColumnBeforeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakPageBefore">
      <MemberSignature Language="C#" Value="public bool BreakPageBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakPageBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakPageBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakPageBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakPageBefore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakPageBefore : bool with get, set" Usage="System.Windows.Documents.Block.BreakPageBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否自动在此元素之前插入一个分页符。</summary>
        <value>如果为 <see langword="true" />，则在此元素之前自动插入一个分页符；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakPageBefore"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakColumnBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakPageBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakPageBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakPageBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakPageBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakPageBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakPageBeforeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BreakPageBeforeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.BreakPageBeforeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloaters">
      <MemberSignature Language="C#" Value="public System.Windows.WrapDirection ClearFloaters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WrapDirection ClearFloaters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.ClearFloaters" />
      <MemberSignature Language="VB.NET" Value="Public Property ClearFloaters As WrapDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WrapDirection ClearFloaters { System::Windows::WrapDirection get(); void set(System::Windows::WrapDirection value); };" />
      <MemberSignature Language="F#" Value="member this.ClearFloaters : System.Windows.WrapDirection with get, set" Usage="System.Windows.Documents.Block.ClearFloaters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WrapDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置某个 <see cref="T:System.Windows.Documents.Floater" /> 元素所包含的任何 <see cref="T:System.Windows.Documents.Block" /> 元素的重新定位方向。</summary>
        <value><see cref="T:System.Windows.WrapDirection" /> 值之一，它指定将 <see cref="T:System.Windows.Documents.Floater" /> 元素中所包含的任何 <see cref="T:System.Windows.Documents.Block" /> 元素与其他内容分隔开来的方向。 默认值为 <see cref="F:System.Windows.WrapDirection.None" />，它指示浮标应在现有位置上呈现。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.ClearFloaters%2A>属性影响内容在中的布局方式 <xref:System.Windows.Documents.Block> ，旨在用于防止 <xref:System.Windows.Documents.Floater> 元素 congesting 元素的内容 <xref:System.Windows.Documents.Block> 。  为此属性指定方向会导致 floater 在内容内以统一方向重新定位 <xref:System.Windows.Documents.Block> 。  Floater 不会重新定位在其父级的外部 <xref:System.Windows.Documents.Block> 。  
  
<a name="dependencyPropertyInfo_ClearFloaters"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.ClearFloatersProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloatersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClearFloatersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClearFloatersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.ClearFloatersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClearFloatersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClearFloatersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClearFloatersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.ClearFloatersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Documents.Block.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Documents.Block" /> 元素中内容流的相对方向。</summary>
        <value><see cref="T:System.Windows.FlowDirection" /> 值之一，指定相对流动方向。 默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取此属性将返回当前有效的流动方向。  设置此属性将导致 <xref:System.Windows.Documents.Block> 元素的内容重新沿指示的方向流动。  
  
 内容的流动方向通常对应于所表示语言的原始流方向。  希伯来语和阿拉伯语是自然从右到左的语言的示例。  英语、德语和俄语是自然从左至右流动的语言的示例。  
  
> [!NOTE]
>  **此属性的值不会自动更改，与操作系统所使用的语言相匹配。如果需要对****的默认** 值（默认值为）使用不同的值 <xref:System.Windows.FlowDirection.LeftToRight> **，则必须自行指定。**  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.FlowDirectionProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.FlowDirection%2A> 属性 <xref:System.Windows.Documents.Block> (<xref:System.Windows.Documents.Paragraph>) 。  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.FlowDirection%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsHyphenationEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsHyphenationEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsHyphenationEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsHyphenationEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsHyphenationEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Documents.Block.GetIsHyphenationEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 属性值的依赖对象。</param>
        <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性值。</summary>
        <returns><see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineHeight">
      <MemberSignature Language="C#" Value="public static double GetLineHeight (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLineHeight(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineHeight (element As DependencyObject) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLineHeight(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLineHeight : System.Windows.DependencyObject -&gt; double" Usage="System.Windows.Documents.Block.GetLineHeight element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 属性值的依赖对象。</param>
        <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性值。</summary>
        <returns><see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.LineStackingStrategy GetLineStackingStrategy(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineStackingStrategy (element As DependencyObject) As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::LineStackingStrategy GetLineStackingStrategy(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLineStackingStrategy : System.Windows.DependencyObject -&gt; System.Windows.LineStackingStrategy" Usage="System.Windows.Documents.Block.GetLineStackingStrategy element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性值的依赖对象。</param>
        <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性值。</summary>
        <returns><see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.TextAlignment GetTextAlignment(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextAlignment (element As DependencyObject) As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::TextAlignment GetTextAlignment(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTextAlignment : System.Windows.DependencyObject -&gt; System.Windows.TextAlignment" Usage="System.Windows.Documents.Block.GetTextAlignment element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中检索 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 属性值的依赖对象。</param>
        <summary>返回指定的依赖对象的 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性值。</summary>
        <returns><see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的当前值（位于指定的依赖对象上）。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public bool IsHyphenationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHyphenationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.IsHyphenationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHyphenationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHyphenationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHyphenationEnabled : bool with get, set" Usage="System.Windows.Documents.Block.IsHyphenationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用文字的自动断字功能。</summary>
        <value>如果启用自动对文字进行断字和添加连字符，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自动断字功能使 <xref:System.Windows.Documents.Block> 元素能够根据当前布局条件自动对单词进行断字和断字。  这样一来，就可以在一行中开始，并继续下一步，并在对齐文本中实现更均匀的空白分布。  根据标准语法规则对单词进行断字和断字。  
  
<a name="dependencyPropertyInfo_IsHyphenationEnabled"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.IsHyphenationEnabledProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> 属性 <xref:System.Windows.Documents.Block> 。  
  
 [!code-xaml[BlockSnippets#_Block_HyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_hyphenatexaml)]  
  
 下图显示了前面的示例的呈现效果。  
  
 ![屏幕快照：启用连字符的 FlowDocument](~/add/media/flowdoc-hyphenenabled.png "屏幕快照：启用连字符的 FlowDocument")  
  
 下图显示了在的默认设置下，该示例的呈现方式 <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> = `false` 。  
  
 ![屏幕快照：具有禁用的连字符的 FlowDocument](~/add/media/flowdoc-hyphendisabled.png "屏幕快照：具有禁用的连字符的 FlowDocument")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_Hyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_hyphenate)]
 [!code-vb[BlockSnippets#_Block_Hyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_hyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHyphenationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHyphenationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHyphenationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHyphenationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.IsHyphenationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Documents.Block.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置各行内容的高度。</summary>
        <value>0.0034 到 160000 范围内的每行高度（以与设备无关的像素为单位），或使用 <see cref="F:System.Double.NaN" /> 自动确定高度。 默认值为 <see cref="F:System.Double.NaN" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果值 <xref:System.Double.NaN?displayProperty=nameWithType> (等效于属性值) ，则 `Auto` 指示行高度由当前字体特征自动确定。  
  
 更改此值不会更改关联文本的高度;相反，它更改包含文本的行的高度。 若要更改文本大小，请使用 <xref:System.Windows.Documents.FlowDocument.FontSize%2A> 属性。  
  
 除了此属性，中的行布局还 <xref:System.Windows.Documents.Block> 受其属性的影响 <xref:System.Windows.Documents.Block.LineStackingStrategy%2A> 。  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>XAML 值  
 *double*  
 <xref:System.Double>  
  
 大于 <xref:System.Double> 或等于0.0034 但小于160000的值的字符串表示形式。 非限定值以与设备无关的像素度量。 字符串不需要显式包含小数点。  
  
 *qualifiedDouble*  
 如上所述的 *双精度* 值， (只不过 `Auto`) 后跟以下单元说明符之一： `px` 、 `in` 、 `cm` 和 `pt` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 `cm` 为厘米;1cm = = (96/2.54) px  
  
 `pt` 为点;1pt = = (96/72) px  
  
 自动  
 使行高度由当前字体特征自动确定。  等效于的属性值 <xref:System.Double.NaN?displayProperty=nameWithType> 。  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.LineHeightProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.LineHeight%2A> 属性 <xref:System.Windows.Documents.Block> 。  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 下图显示了前面的示例的呈现效果。  
  
 ![屏幕快照：FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "屏幕快照：FlowDocument LineHeight")  
  
 下图显示了 <xref:System.Windows.Documents.FlowDocument> 具有的默认设置的相同呈现方式 <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> = <xref:System.Double.NaN?displayProperty=nameWithType> 。  
  
 ![屏幕快照：FlowDocument LineHeight 默认值](~/add/media/flowdocument-lineheightdefault.png "屏幕快照：FlowDocument LineHeight 默认值")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.LineHeight%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为非正值。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberSignature Language="F#" Value="member this.LineStackingStrategy : System.Windows.LineStackingStrategy with get, set" Usage="System.Windows.Documents.Block.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为块级别流内容元素内的每行文本确定行框的方式。</summary>
        <value><see cref="T:System.Windows.LineStackingStrategy" /> 值之一，它指定为块级别流内容元素内的每行文本确定行框的方式。 默认值是 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此依赖属性还具有附加的属性用法。 在 XAML 中，用法为 `<object Block.LineStackingStrategy="value".../>` ，其中 *object* 是对象元素， (通常是派生类中包含的 flow 元素) <xref:System.Windows.Documents.Block> ， *值* 是枚举的字符串值 <xref:System.Windows.LineStackingStrategy> 。 在代码中，和方法支持附加的属性用法 <xref:System.Windows.Documents.Block.GetLineStackingStrategy%2A> <xref:System.Windows.Documents.Block.SetLineStackingStrategy%2A> 。 附加的属性用法并不常见。  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.LineStackingStrategyProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> 属性来确定如何为的文本行创建行框 <xref:System.Windows.Controls.TextBlock> 。 第一个的 <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> 值为 <xref:System.Windows.LineStackingStrategy.MaxHeight> ，第二个 <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.LineStackingStrategy.BlockLineHeight> 的值为。  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 下图显示了前面的代码的结果。  
  
 ![屏幕快照：比较 LineStackingStrategy 值](~/add/media/flow-linestackingstrategy.gif "屏幕快照：比较 LineStackingStrategy 值")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LineStackingStrategyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.Block.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置元素的边距粗细。</summary>
        <value>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边距量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.Margin%2A> 是位于元素的内容区域外、元素内容区域边缘和父元素边缘之间的缓冲空间。  与相对 <xref:System.Windows.Documents.Block.Padding%2A> 应的是，它是位于元素的内容区域内部、元素的内容和元素的内部边缘之间的缓冲空间。  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a>XAML 值  
 *uniformThickness*  
 <xref:System.Double>要统一应用于所有四个厚度尺寸的单个值的字符串表示形式。  例如，的值等效于的 `"10"` 值 `"10,10,10,10"` 。  非限定值以与设备无关的像素度量。 字符串不需要显式包含小数点。  
  
 *independentThickness*  
 四个有序值的字符串表示形式， <xref:System.Double> 对应于 "左"、"上"、"右" 和 "下"，按此顺序排列。  这四个值必须用逗号分隔;不允许使用空格。  例如，"5，10，15，20" 会使内容的左侧有5个像素的边距，内容的上方边距为10个像素，内容右侧有15个像素的边距，内容的下方有20个像素的边距。  
  
 *qualifiedUniformThickness*  
 *UniformThickness* 描述的值后跟以下单元说明符之一： `px` 、 `in` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 例如， `"1in"` 在所有方向上都提供1英寸的统一边距。  
  
 *qualifiedIndependentThickness*  
 *IndependentThickness* 描述的值，每个独立值后跟以下单元说明符之一： `px` 、 `in` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 例如，`"1.5in,0.8in,1.5in,0.8in"`。  可以在一个或多个值中混合或省略单元说明符。  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.MarginProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.Margin%2A> 属性 <xref:System.Windows.Documents.Block> (<xref:System.Windows.Documents.Paragraph>) 。  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 下图显示了前面的示例的呈现效果。  使用夸大的厚度和颜色进行说明。  
  
 ![屏幕快照：具有填充和边距的段落](~/add/media/block-marginpadding.png "屏幕快照：具有填充和边距的段落")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.Margin%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.Margin" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block NextBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block NextBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.NextBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ NextBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextBlock : System.Windows.Documents.Block" Usage="System.Windows.Documents.Block.NextBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取紧随当前 <see cref="T:System.Windows.Documents.Block" /> 元素之后的同级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
        <value>紧随当前 <see cref="T:System.Windows.Documents.Block" /> 元素之后的同级 <see cref="T:System.Windows.Documents.Block" /> 元素，或者，如果不存在这样的元素，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Thickness with get, set" Usage="System.Windows.Documents.Block.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置元素的填充厚度。</summary>
        <value>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的填充量（以与设备无关的像素为单位）。 默认为统一粗细，即零 (0.0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.Padding%2A> 是位于元素的内容区域内部、元素的内容和元素的内部边缘之间的缓冲空间。  与相对 <xref:System.Windows.Documents.Block.Margin%2A> 应的是，它是位于元素内容区域外、元素内容区域边缘和父元素边缘之间的缓冲空间。  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a>XAML 值  
 *uniformThickness*  
 <xref:System.Double>要统一应用于所有四个厚度尺寸的单个值的字符串表示形式。  例如，的值等效于的 `"10"` 值 `"10,10,10,10"` 。  非限定值以与设备无关的像素度量。 字符串不需要显式包含小数点。  
  
 *independentThickness*  
 四个有序值的字符串表示形式， <xref:System.Double> 对应于 "左"、"上"、"右" 和 "下"，按此顺序排列。  这四个值必须用逗号分隔;不允许使用空格。  例如，"5，10，15，20" 将在内容左侧填充5个像素，在内容右侧填充10个像素，在内容右侧填充15个像素，在内容的下方填充20个像素。  
  
 *qualifiedUniformThickness*  
 *UniformThickness* 描述的值后跟以下单元说明符之一： `px` 、 `in` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 例如， `"1in"` 在所有方向上都提供1英寸的统一填充。  
  
 *qualifiedIndependentThickness*  
 *IndependentThickness* 描述的值，每个独立值后跟以下单元说明符之一： `px` 、 `in` 。  
  
 `px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸)   
  
 `in` 为英寸;1in = = 96px  
  
 例如，`"1.5in,0.8in,1.5in,0.8in"`。  可以在一个或多个值中混合或省略单元说明符。  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.PaddingProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.Padding%2A> 属性 <xref:System.Windows.Documents.Block> (<xref:System.Windows.Documents.Paragraph>) 。  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 下图显示了前面的示例的呈现效果。  使用夸大的厚度和颜色进行说明。  
  
 ![屏幕快照：具有填充和边距的段落](~/add/media/block-marginpadding.png "屏幕快照：具有填充和边距的段落")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.Padding%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PaddingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.Padding" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block PreviousBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block PreviousBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.PreviousBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ PreviousBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousBlock : System.Windows.Documents.Block" Usage="System.Windows.Documents.Block.PreviousBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取紧邻当前 <see cref="T:System.Windows.Documents.Block" /> 元素之前的同级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
        <value>紧邻当前 <see cref="T:System.Windows.Documents.Block" /> 元素之前的同级 <see cref="T:System.Windows.Documents.Block" /> 元素，或者，如果不存在这样的元素，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="SetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsHyphenationEnabled (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsHyphenationEnabled(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsHyphenationEnabled (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsHyphenationEnabled(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsHyphenationEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Documents.Block.SetIsHyphenationEnabled (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 属性值的依赖对象。</param>
        <param name="value">要将此属性设为的新值。</param>
        <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineHeight">
      <MemberSignature Language="C#" Value="public static void SetLineHeight (System.Windows.DependencyObject element, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineHeight(class System.Windows.DependencyObject element, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineHeight (element As DependencyObject, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineHeight(System::Windows::DependencyObject ^ element, double value);" />
      <MemberSignature Language="F#" Value="static member SetLineHeight : System.Windows.DependencyObject * double -&gt; unit" Usage="System.Windows.Documents.Block.SetLineHeight (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 属性值的依赖对象。</param>
        <param name="value">要将此属性设为的新值。</param>
        <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> 为负数。</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineStackingStrategy(class System.Windows.DependencyObject element, valuetype System.Windows.LineStackingStrategy value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineStackingStrategy (element As DependencyObject, value As LineStackingStrategy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineStackingStrategy(System::Windows::DependencyObject ^ element, System::Windows::LineStackingStrategy value);" />
      <MemberSignature Language="F#" Value="static member SetLineStackingStrategy : System.Windows.DependencyObject * System.Windows.LineStackingStrategy -&gt; unit" Usage="System.Windows.Documents.Block.SetLineStackingStrategy (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.LineStackingStrategy" />
      </Parameters>
      <Docs>
        <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 属性值的依赖对象。</param>
        <param name="value">要将此属性设为的新值。</param>
        <summary>设置指定的依赖对象上的 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetTextAlignment">
      <MemberSignature Language="C#" Value="public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTextAlignment(class System.Windows.DependencyObject element, valuetype System.Windows.TextAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTextAlignment (element As DependencyObject, value As TextAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTextAlignment(System::Windows::DependencyObject ^ element, System::Windows::TextAlignment value);" />
      <MemberSignature Language="F#" Value="static member SetTextAlignment : System.Windows.DependencyObject * System.Windows.TextAlignment -&gt; unit" Usage="System.Windows.Documents.Block.SetTextAlignment (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.TextAlignment" />
      </Parameters>
      <Docs>
        <param name="element">要在其上设置 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 属性值的依赖对象。</param>
        <param name="value">要将此属性设为的新值。</param>
        <summary>设置指定依赖对象的 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Documents.Block.GetTextAlignment%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingBlocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection SiblingBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection SiblingBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.SiblingBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingBlocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ SiblingBlocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiblingBlocks : System.Windows.Documents.BlockCollection" Usage="System.Windows.Documents.Block.SiblingBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Windows.Documents.Block" /> 元素的集合，这些元素是当前 <see cref="T:System.Windows.Documents.Block" /> 元素的同级元素。</summary>
        <value>一个包含子级 <see cref="T:System.Windows.Documents.BlockCollection" /> 元素的 <see cref="T:System.Windows.Documents.Block" />，这些元素直接由当前 <see cref="T:System.Windows.Documents.Block" /> 元素的父级承载；如果当前 <see cref="T:System.Windows.Documents.Block" /> 元素无父级，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.BlockCollection>此属性返回的包含 <xref:System.Windows.Documents.Block> 通过其访问集合的元素; 即，拥有此属性的元素被视为其自己的同级，目的是为了生成同级的集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Documents.Block.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本内容的水平对齐方式。</summary>
        <value><see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需的对齐方式。 默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Documents.Block.TextAlignmentProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置元素的 <xref:System.Windows.Documents.Block.TextAlignment%2A> 属性 <xref:System.Windows.Documents.Block> 。  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 下图显示了前面的示例在 <xref:System.Windows.TextAlignment.Left> 默认)  (如何呈现文本对齐方式。  
  
 ![屏幕快照：左对齐的 TextAlign 属性值](~/add/media/flowdoc-textalign-left.png "屏幕快照：左对齐的 TextAlign 属性值")  
  
 下图显示了同一个示例如何与 <xref:System.Windows.TextAlignment.Right> 文本对齐。  
  
 ![屏幕快照：右对齐的 TextAlign 值](~/add/media/flowdoc-textalign-right.png "屏幕快照：右对齐的 TextAlign 值")  
  
 下图显示了同一个示例如何与 <xref:System.Windows.TextAlignment.Center> 文本对齐。  
  
 ![屏幕快照：居中对齐的 TextAlign 属性值](~/add/media/flowdoc-textalign-center.png "屏幕快照：居中对齐的 TextAlign 属性值")  
  
 下面的示例演示如何以 <xref:System.Windows.Documents.Block.TextAlignment%2A> 编程方式设置属性。  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.Block.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
