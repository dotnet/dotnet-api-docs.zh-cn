<Type Name="FixedDocument" FullName="System.Windows.Documents.FixedDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e205941edd3e2ed70bee089750b845b5793afcf" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86711622" /></Metadata><TypeSignature Language="C#" Value="public class FixedDocument : System.Windows.FrameworkContentElement, IServiceProvider, System.Windows.Documents.IDocumentPaginatorSource, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FixedDocument extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.FixedDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class FixedDocument&#xA;Inherits FrameworkContentElement&#xA;Implements IDocumentPaginatorSource, IServiceProvider, IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixedDocument : System::Windows::FrameworkContentElement, IServiceProvider, System::Windows::Documents::IDocumentPaginatorSource, System::Windows::Markup::IUriContext" />
  <TypeSignature Language="F#" Value="type FixedDocument = class&#xA;    inherit FrameworkContentElement&#xA;    interface IServiceProvider&#xA;    interface IDocumentPaginatorSource&#xA;    interface IAddChild&#xA;    interface IUriContext" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FixedDocument extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type FixedDocument = class&#xA;    inherit FrameworkContentElement&#xA;    interface IDocumentPaginatorSource&#xA;    interface IAddChild&#xA;    interface IServiceProvider&#xA;    interface IUriContext" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Documents.IDocumentPaginatorSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Pages")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Pages")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0da47-101">用于托管对用户文本选择、键盘导航和搜索具有读访问权限的可移植、高保真和格式固定的文档。</span><span class="sxs-lookup"><span data-stu-id="0da47-101">Hosts a portable, high fidelity, fixed-format document with read access for user text selection, keyboard navigation, and search.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da47-102"><xref:System.Windows.Documents.FixedDocument> 以逻辑方式将有序的一系列页绑定到一个多页、固定布局的文档中。</span><span class="sxs-lookup"><span data-stu-id="0da47-102"><xref:System.Windows.Documents.FixedDocument> logically binds an ordered sequence of pages together into a single, multi-page, fixed-layout document.</span></span>  
  
 <span data-ttu-id="0da47-103"><xref:System.Windows.Documents.PageContent> 是元素的唯一允许的子元素 <xref:System.Windows.Documents.FixedDocument> 。</span><span class="sxs-lookup"><span data-stu-id="0da47-103"><xref:System.Windows.Documents.PageContent> is the only allowable child element of the <xref:System.Windows.Documents.FixedDocument> element.</span></span>  <span data-ttu-id="0da47-104">每个 <xref:System.Windows.Documents.PageContent> 元素都引用单个页面的内容源。</span><span class="sxs-lookup"><span data-stu-id="0da47-104">Each <xref:System.Windows.Documents.PageContent> element refers to the source of the content for a single page.</span></span> <span data-ttu-id="0da47-105"><xref:System.Windows.Documents.PageContent> 元素必须按顺序标记顺序排列，并且与文档的页面顺序相匹配。</span><span class="sxs-lookup"><span data-stu-id="0da47-105"><xref:System.Windows.Documents.PageContent> elements must be in sequential markup order, matching the page order of the document.</span></span>  
  
 <span data-ttu-id="0da47-106"><xref:System.Windows.Documents.FixedDocument> 适用于应用 [!INCLUDE[TLA#tla_wys](~/includes/tlasharptla-wys-md.md)] 程序在应用程序中定义和控制文档布局以呈现给显示或打印设备的最高准确性的应用程序。</span><span class="sxs-lookup"><span data-stu-id="0da47-106"><xref:System.Windows.Documents.FixedDocument> is designed for [!INCLUDE[TLA#tla_wys](~/includes/tlasharptla-wys-md.md)] applications where the document layout is defined and controlled by the application for rendering to the highest accuracy of the display or print device.</span></span>  
  
 <span data-ttu-id="0da47-107"><xref:System.Windows.Documents.FlowDocument>另一方面，旨在最大程度地提高用户的可读性，并根据用户首选项动态调整文档布局 (例如，用户选择的类型大小或字体) 和其他变量，如显示大小和分辨率。</span><span class="sxs-lookup"><span data-stu-id="0da47-107"><xref:System.Windows.Documents.FlowDocument>, on the other hand, is designed to maximize user readability, and dynamically adjusts the document layout based on user preferences (for example, a user-chosen type size or font) and other variables, such as display size and resolution.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0da47-108">初始化 <see cref="T:System.Windows.Documents.FixedDocument" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0da47-108">Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0da47-109">下面的示例演示如何使用 **FixedDocument** 构造函数。</span><span class="sxs-lookup"><span data-stu-id="0da47-109">The following example shows use of the **FixedDocument** constructor.</span></span>  
  
 [!code-csharp[XpsSave#CreateFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#createfixeddocument)]
 [!code-vb[XpsSave#CreateFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#createfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentPaginator">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.DocumentPaginator DocumentPaginator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.DocumentPaginator DocumentPaginator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.DocumentPaginator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentPaginator As DocumentPaginator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::DocumentPaginator ^ DocumentPaginator { System::Windows::Documents::DocumentPaginator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentPaginator : System.Windows.Documents.DocumentPaginator" Usage="System.Windows.Documents.FixedDocument.DocumentPaginator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPaginator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da47-110">获取 <see cref="T:System.Windows.Documents.FixedDocument" /> 的分页程序，该分页程序提供面向页的服务（如获取特定页及重标页码以响应更改）。</span><span class="sxs-lookup"><span data-stu-id="0da47-110">Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument" /> that provides page-oriented services such as getting a particular page and repaginating in response to changes.</span></span></summary>
        <value><span data-ttu-id="0da47-111">一个从提供分页服务的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 派生的类的对象。</span><span class="sxs-lookup"><span data-stu-id="0da47-111">An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator" /> that provides pagination services.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da47-112">如果需要在对更改的响应中自动重新分页的分页程序（如向文档添加内容），请从其继承的类中派生一个类 <xref:System.Windows.Documents.DynamicDocumentPaginator> <xref:System.Windows.Documents.DocumentPaginator> 。</span><span class="sxs-lookup"><span data-stu-id="0da47-112">If you need a paginator with automatic repagination in responses to changes, such as adding content to the document, derive a class from <xref:System.Windows.Documents.DynamicDocumentPaginator> which itself inherits from <xref:System.Windows.Documents.DocumentPaginator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0da47-113">下面的示例演示如何创建一个 <xref:System.Windows.Documents.FixedDocument> 具有为特定页面大小配置的分页程序的。</span><span class="sxs-lookup"><span data-stu-id="0da47-113">The following example shows how to create a <xref:System.Windows.Documents.FixedDocument> that has a paginator configured for a particular page size.</span></span>  
  
 [!code-csharp[XpsPrint#CreateFixedDocumentWithConfiguredPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/WpfContent.cs#createfixeddocumentwithconfiguredpaginator)]
 [!code-vb[XpsPrint#CreateFixedDocumentWithConfiguredPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/wpfcontent.vb#createfixeddocumentwithconfiguredpaginator)]  
  
 <span data-ttu-id="0da47-114">下面的示例还演示属性的用法 <xref:System.Windows.Documents.FixedDocument.DocumentPaginator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0da47-114">The following example also shows use of the <xref:System.Windows.Documents.FixedDocument.DocumentPaginator%2A> property.</span></span>  
  
 [!code-csharp[XpsSave#CreateFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#createfixeddocument)]
 [!code-vb[XpsSave#CreateFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#createfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Documents.FixedDocument.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da47-115">获取一个枚举器，用于访问文档的 <see cref="T:System.Windows.Documents.PageContent" /> 子元素。</span><span class="sxs-lookup"><span data-stu-id="0da47-115">Gets an enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</span></span></summary>
        <value><span data-ttu-id="0da47-116">一个枚举数，用于访问文档的 <see cref="T:System.Windows.Documents.PageContent" /> 子元素。</span><span class="sxs-lookup"><span data-stu-id="0da47-116">An enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="fixedDocument.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0da47-117">创建文档的自动化对等方。</span><span class="sxs-lookup"><span data-stu-id="0da47-117">Creates an automation peer for the document.</span></span></summary>
        <returns><span data-ttu-id="0da47-118">一个 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />，它向 Microsoft UI 自动化公开 <see cref="T:System.Windows.Documents.FixedDocument" />。</span><span class="sxs-lookup"><span data-stu-id="0da47-118">A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> that exposes the <see cref="T:System.Windows.Documents.FixedDocument" /> to Microsoft UI Automation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0da47-119">派生版本可以返回任何 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> ，而不一定是 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 。</span><span class="sxs-lookup"><span data-stu-id="0da47-119">Your derived version can return any <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, it does not have to be a <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Pages">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.PageContentCollection Pages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.PageContentCollection Pages" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.Pages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pages As PageContentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::PageContentCollection ^ Pages { System::Windows::Documents::PageContentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pages : System.Windows.Documents.PageContentCollection" Usage="System.Windows.Documents.FixedDocument.Pages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.PageContentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da47-120">获取文档的 <see cref="T:System.Windows.Documents.PageContent" /> 元素的集合。</span><span class="sxs-lookup"><span data-stu-id="0da47-120">Gets a collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</span></span></summary>
        <value><span data-ttu-id="0da47-121">文档的 <see cref="T:System.Windows.Documents.PageContent" /> 元素的集合。</span><span class="sxs-lookup"><span data-stu-id="0da47-121">A collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.FixedDocument.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public object PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.PrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTicket As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrintTicket { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintTicket : obj with get, set" Usage="System.Windows.Documents.FixedDocument.PrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da47-122">获取或设置与此文档关联的 <see cref="T:System.Printing.PrintTicket" />。</span><span class="sxs-lookup"><span data-stu-id="0da47-122">Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with this document.</span></span></summary>
        <value><span data-ttu-id="0da47-123">此文档的 <see cref="T:System.Printing.PrintTicket" />。</span><span class="sxs-lookup"><span data-stu-id="0da47-123">The <see cref="T:System.Printing.PrintTicket" /> for this document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da47-124"><xref:System.Printing.PrintTicket>包含打印信息，如是否在每张纸的两侧打印。</span><span class="sxs-lookup"><span data-stu-id="0da47-124">A <xref:System.Printing.PrintTicket> contains printing information such as whether to print on both sides of each sheet.</span></span>  
  
 <span data-ttu-id="0da47-125">设置此 <xref:System.Windows.Documents.FixedDocument.PrintTicket%2A> 属性不会验证或修改特定 <xref:System.Printing.PrintTicket> 的指定 <xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="0da47-125">Setting this <xref:System.Windows.Documents.FixedDocument.PrintTicket%2A> property does not validate or modify the specified <xref:System.Printing.PrintTicket> for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="0da47-126">如果需要，请使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> 方法创建特定于 <xref:System.Printing.PrintQueue> 的 <xref:System.Printing.PrintTicket>（对给定打印机有效）。</span><span class="sxs-lookup"><span data-stu-id="0da47-126">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
<a name="dependencyPropertyInfo_PrintTicket"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0da47-127">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="0da47-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0da47-128">标识符字段</span><span class="sxs-lookup"><span data-stu-id="0da47-128">Identifier field</span></span>|<xref:System.Windows.Documents.FixedDocument.PrintTicketProperty>|  
|<span data-ttu-id="0da47-129">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="0da47-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="0da47-130">无</span><span class="sxs-lookup"><span data-stu-id="0da47-130">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTicketProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PrintTicketProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PrintTicketProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FixedDocument.PrintTicketProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PrintTicketProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PrintTicketProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PrintTicketProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FixedDocument.PrintTicketProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da47-131">标识 <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="0da47-131">Identifies the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberSignature Language="F#" Value="abstract member System.IServiceProvider.GetService : Type -&gt; obj&#xA;override this.System.IServiceProvider.GetService : Type -&gt; obj" Usage="fixedDocument.System.IServiceProvider.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="0da47-132">一个对象，它指定要获取的服务对象的类型。</span><span class="sxs-lookup"><span data-stu-id="0da47-132">An object that specifies the type of service object to get.</span></span></param>
        <summary><span data-ttu-id="0da47-133">获取指定类型的服务对象。</span><span class="sxs-lookup"><span data-stu-id="0da47-133">Gets the service object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="0da47-134"><paramref name="serviceType" /> 类型的服务对象。</span><span class="sxs-lookup"><span data-stu-id="0da47-134">A service object of type <paramref name="serviceType" />.</span></span>  
  
<span data-ttu-id="0da47-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0da47-135">-or-</span></span> 
 <span data-ttu-id="0da47-136">如果没有类型为 <paramref name="serviceType" /> 的服务对象，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0da47-136"><see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="fixedDocument.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0da47-137">要添加的子对象。</span><span class="sxs-lookup"><span data-stu-id="0da47-137">The child object to add.</span></span></param>
        <summary><span data-ttu-id="0da47-138">添加子对象。</span><span class="sxs-lookup"><span data-stu-id="0da47-138">Adds a child object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="fixedDocument.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="0da47-139">要添加到对象的文本。</span><span class="sxs-lookup"><span data-stu-id="0da47-139">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="0da47-140">将节点的文本内容添加到对象。</span><span class="sxs-lookup"><span data-stu-id="0da47-140">Adds the text content of a node to the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System::Windows::Markup::IUriContext::BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.Markup.IUriContext.BaseUri : Uri with get, set" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0da47-141">获取或设置当前应用程序上下文的基 URI。</span><span class="sxs-lookup"><span data-stu-id="0da47-141">Gets or sets the base URI of the current application context.</span></span></summary>
        <value><span data-ttu-id="0da47-142">应用程序上下文的基 URI。</span><span class="sxs-lookup"><span data-stu-id="0da47-142">The base URI of the application context.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
