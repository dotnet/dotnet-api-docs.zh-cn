<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49263ae2e599b0a2fe7c900e866b88f492b21fde" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86810332" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a3fc4-101">指定在 <see cref="N:System.Net.PeerToPeer" /> 对象权限中使用的值。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-102">默认权限允许所有本地和 Intranet 区域应用程序访问 PNRP 服务。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="a3fc4-103">如果未更改默认权限，则所有本地链接和站点本地应用程序都具有对等服务的访问权限，但全局 (internet) 应用程序没有访问权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="a3fc4-104">此类型的实例具有两个权限状态：它们无权访问受权限保护的资源，或对这些资源具有不受限制的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-104">Instances of this type have two permission states: they either have no access to the resources protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="a3fc4-105">PNRP 命名空间提供程序 API</span><span class="sxs-lookup"><span data-stu-id="a3fc4-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="a3fc4-106"><see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的值之一。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="a3fc4-107">初始化具有所提供的初始权限状态的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-108">此类型的实例具有两个权限状态：它们无权访问资源 (s) 受权限保护的资源，或对这些资源具有不受限制的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="a3fc4-109">如果 `state` 是不受限制的，则 PnrpPermission 实例会传递所有需求。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="a3fc4-110">如果 `state` 包含任何其他值，则 PnrpPermission 实例将无法满足所有需求。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3fc4-111">创建并返回当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的一个相同副本。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="a3fc4-112">具有 IPermission 接口的对象，其实例包含 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的当前实例的副本。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-113">权限的副本表示对资源的相同访问权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="a3fc4-114">此类型的实例具有两个权限状态：它们无权访问资源 (s) 受权限保护的资源，或对这些资源具有不受限制的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3fc4-115">参数不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-115">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>

<span data-ttu-id="a3fc4-116">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a3fc4-116">-or-</span></span>

<span data-ttu-id="a3fc4-117">不支持该参数的版本号。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-117">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3fc4-118">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-118">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="a3fc4-119">PNRP 命名空间提供程序 API</span><span class="sxs-lookup"><span data-stu-id="a3fc4-119">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a3fc4-120">用于重新构造权限的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-120">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="a3fc4-121">通过 XML 编码重新构造具有指定状态的安全对象。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-121">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-122">表示用于对安全对象进行编码的 XML 对象模型。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-122">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="a3fc4-123">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-123">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="a3fc4-124">此类旨在作为在安全系统中使用的简单 XML 对象模型的轻型实现，而不是用作常规 XML 对象模型。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-124">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3fc4-125">参数不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-125">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>

<span data-ttu-id="a3fc4-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="a3fc4-126">-or-</span></span>

<span data-ttu-id="a3fc4-127">不支持该参数的版本号。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-127">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3fc4-128">该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-128">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a3fc4-129">与当前权限 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> 的权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-129">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="a3fc4-130">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-130">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="a3fc4-131">创建并返回一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的交集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-131">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="a3fc4-132">一个新权限，它表示当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的交集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-132">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="a3fc4-133">如果交集为空，则此新权限是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-133">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-134">两个权限的交集是描述它们共同描述的一组操作的权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-134">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="a3fc4-135">只有同时传递两个原始权限的请求才会传递交集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-135">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="a3fc4-136">以下语句需要 `true` 适用于 Intersect 方法的所有实现。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-136">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="a3fc4-137">X 和 Y 表示 <xref:System.Security.IPermission> 不是 `null` Visual Basic) 中 (任何内容的引用的对象引用。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-137">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="a3fc4-138">X (X) 返回等于 X 的值。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-138">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="a3fc4-139">X (Y) 返回与 (X) 相交的相同值。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-139">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="a3fc4-140">X (`null` 引用 (`Nothing` 在 Visual Basic) # A3 返回 (Visual Basic 中的 `null` 引用 `Nothing` 。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-140">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3fc4-141">目标参数不是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />），并且不是与当前权限相同的类的实例。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-141">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a3fc4-142">将要测试子集关系的权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="a3fc4-143">此权限必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="a3fc4-144">确定当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否为指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-144">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="a3fc4-145">如果当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-145"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a3fc4-146"><xref:System.Net.PeerToPeer.PnrpPermission>如果当前权限指定的一组操作完全包含在指定权限中，则当前为指定权限的子集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-146">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="a3fc4-147">例如，表示对 "*C:\example.txt*" 的访问权限的权限是表示对 "\*C： \\ \*" 的访问权限的权限子集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-147">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="a3fc4-148">如果此方法返回 `true` ，则当前权限表示对受保护资源的访问权限比指定权限更多。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
<span data-ttu-id="a3fc4-149">以下语句 `true` 对于 IsSubsetOf 方法的所有实现都是必需的。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-149">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="a3fc4-150">X、Y 和 Z 表示 <xref:System.Security.IPermission> 不是 `null` Visual Basic) 中 (引用的对象 `Nothing` 。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-150">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>

- <span data-ttu-id="a3fc4-151">`X.IsSubsetOf(X)` 返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-151">`X.IsSubsetOf(X)` returns `true`.</span></span>

- <span data-ttu-id="a3fc4-152">`X.IsSubsetOf(Y)` 如果 `Y.IsSubsetOf(X)` X 和 Y 表示相同的权限集，则返回与相同的值。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-152">`X.IsSubsetOf(Y)` returns the same value as `Y.IsSubsetOf(X)` if and only if X and Y represent the same set of permissions.</span></span>

- <span data-ttu-id="a3fc4-153">如果 `X.IsSubsetOf(Y)` 和 `Y.IsSubsetOf(Z)` 都返回 `true` ，则 `X.IsSubsetOf(Z)` 返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-153">If `X.IsSubsetOf(Y)` and `Y.IsSubsetOf(Z)` both return `true`, `X.IsSubsetOf(Z)` returns `true`.</span></span>
  
<span data-ttu-id="a3fc4-154">如果 X 表示 <xref:System.Security.IPermission> 权限状态为 *None*的空对象，而 Y 表示作为 <xref:System.Security.IPermission> `null` Visual Basic) 中 (引用的对象，则 `Nothing` `X.IsSubsetOf(Y)` 返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-154">If X represents an empty <xref:System.Security.IPermission> object with a permission state of *None*, and Y represents an <xref:System.Security.IPermission> object that is a `null` reference (`Nothing` in Visual Basic), `X.IsSubsetOf(Y)` returns `true`.</span></span> <span data-ttu-id="a3fc4-155">如果 Z 也是空权限，则复合集操作 `X.Union(Z).IsSubsetOf(Y)` 还会返回， `true` <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> 这是因为两个空权限的都是空的权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-155">If Z is also an empty permission, the compound set operation `X.Union(Z).IsSubsetOf(Y)` also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3fc4-156">目标参数不是一个 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />），并且不是与当前权限相同的类的实例。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-156">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3fc4-157">返回一个值，指定当前的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否不受限制。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-157">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="a3fc4-158">如果当前权限不受限制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-158"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-159">无限制的权限表示对受权限保护的任何资源和所有资源的访问权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-159">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3fc4-160">创建 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 及其当前状态的 XML 编码。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-160">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="a3fc4-161">一个 <see cref="T:System.Security.SecurityElement" /> 对象，该对象包含权限的 XML 编码（包括任何状态信息）。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-161">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a3fc4-162">与当前权限合并的权限。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-162">A permission to combine with the current permission.</span></span> <span data-ttu-id="a3fc4-163">它必须与当前权限属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-163">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="a3fc4-164">创建一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的并集。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-164">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="a3fc4-165">一个新权限，表示当前 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> 与指定权限的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-165">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc4-166">对的调用的结果 <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> 是一个权限，它表示当前和指定权限所表示的所有操作 <xref:System.Net.PeerToPeer.PnrpPermission> 。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-166">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="a3fc4-167">任何传递任意权限的需求都将传递其联合。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-167">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="a3fc4-168">以下语句 `true` 对于 Union 方法的所有实现都是必需的。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-168">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="a3fc4-169">X 和 Y 表示 <xref:System.Security.IPermission> 不是 `null` Visual Basic) 中 (引用的对象 `Nothing` 。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-169">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="a3fc4-170">X (X) 返回与 X 值相同的对象。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-170">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="a3fc4-171"> (Y) 返回一个对象，该对象的值与)  (X 返回的对象的值相同。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-171">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="a3fc4-172">`null`在 Visual Basic) # A3 中， (引用 (的引用将 `Nothing` 返回一个与 X 值相同的对象。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-172">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3fc4-173"><paramref name="target" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="a3fc4-173"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>
