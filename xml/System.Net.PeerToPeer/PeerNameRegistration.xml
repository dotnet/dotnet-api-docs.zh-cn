<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5597c2cfc78c35345288d35ff03e80db62b6ad58" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89835457" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="528ac-101">在一个 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 或一组群中注册 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-102">注册将创建 (或更新) 与 <xref:System.Net.PeerToPeer.PeerName> 对等云和云中的关联的所有信息。</span><span class="sxs-lookup"><span data-stu-id="528ac-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="528ac-103">可能有多个对象具有 <xref:System.Net.PeerToPeer.PeerNameRegistration> 相同的对等名称。</span><span class="sxs-lookup"><span data-stu-id="528ac-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="528ac-104">在这种情况下，如果对等名称是安全的，则每个实例表示 <xref:System.Net.PeerToPeer.PeerNameRegistration> 在不同的云中。</span><span class="sxs-lookup"><span data-stu-id="528ac-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="528ac-105">但是，如果对等名称是不安全的，则可以多次在同一云中注册，同时提供每个注册来自不同的进程。</span><span class="sxs-lookup"><span data-stu-id="528ac-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="528ac-106">初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="528ac-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="528ac-107">初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新默认实例。</span><span class="sxs-lookup"><span data-stu-id="528ac-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-108">返回类型为的新默认实例 <xref:System.Net.PeerToPeer.PeerNameRegistration> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="528ac-109">它不在构造过程中执行对等名称注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="528ac-110">使用此构造函数实例化对象后，调用方应在调用或之前填充该实例中的相应字段 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="528ac-111">要注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="528ac-112">指定要注册的端口号的整数值。</span><span class="sxs-lookup"><span data-stu-id="528ac-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="528ac-113">使用指定的名称和端口号初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="528ac-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-114">调用此构造函数将创建一个实例，该实例将用于注册 IPv6and IPv4)  (的所有源地址和对等方当前参与的所有云的提供端口。</span><span class="sxs-lookup"><span data-stu-id="528ac-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="528ac-115">如果成功构造对象，则将填充指定的 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> 和 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="528ac-116">如果对等名称是安全的，并且之前已在 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> 对等方中注册，则 <xref:System.Net.PeerToPeer.PeerToPeerException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="528ac-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="528ac-117">此构造函数仅创建 <xref:System.Net.PeerToPeer.PeerNameRegistration> 实例; 它不执行注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="528ac-118">在用此构造函数实例化注册对象并填充其字段之后，应用程序必须调用 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 以执行实际的注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="528ac-119"><paramref name="name" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="528ac-120">指定的端口号小于零。</span><span class="sxs-lookup"><span data-stu-id="528ac-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="528ac-121">端口号必须大于或等于零且小于 65,535 (0xFFFF)。</span><span class="sxs-lookup"><span data-stu-id="528ac-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="528ac-122">-   已从此主机注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="528ac-123">-   远程对等方不具有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="528ac-124">对象的引用，该对象保存反序列化此实例时所需的数据。</span><span class="sxs-lookup"><span data-stu-id="528ac-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="528ac-125">提供反序列化数据的方式的上下文。</span><span class="sxs-lookup"><span data-stu-id="528ac-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="528ac-126">也称为序列化数据的源。</span><span class="sxs-lookup"><span data-stu-id="528ac-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="528ac-127">初始化一个新的可序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer, cloud As Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="528ac-128">要注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="528ac-129">指定要注册的端口号的整数值。</span><span class="sxs-lookup"><span data-stu-id="528ac-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="528ac-130">要在其中注册对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="528ac-131">使用指定的对等名称、端口号和 <see cref="T:System.Net.PeerToPeer.Cloud" /> 初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="528ac-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-132">调用此构造函数将创建一个实例，该实例将用于注册 (IPv6 和 IPv4) 、提供的端口和指定的所有源地址 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="528ac-133">如果成功构造对象，则将用指定的和填充属性 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="528ac-134">如果 cloud 参数为 `null` ，则使用快捷方式注册该名称， <xref:System.Net.PeerToPeer.Cloud.Available> 这将初始化、和的默认 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 值 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="528ac-135">在实例化后， <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 必须调用方法来注册 <xref:System.Net.PeerToPeer.PeerName> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="528ac-136"><paramref name="name" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="528ac-137">指定的端口号小于零。</span><span class="sxs-lookup"><span data-stu-id="528ac-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="528ac-138">端口号必须大于或等于零且小于 65,535 (0xFFFF)。</span><span class="sxs-lookup"><span data-stu-id="528ac-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="528ac-139">-   已从此主机注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="528ac-140">-   远程对等方不具有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-141">获取或设置要在其中注册此对此 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的信息。</span><span class="sxs-lookup"><span data-stu-id="528ac-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="528ac-142">一个 <see cref="T:System.Net.PeerToPeer.Cloud" /> 类型的对象，它指定为其定义此注册的对等群。</span><span class="sxs-lookup"><span data-stu-id="528ac-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="528ac-143">默认情况下，此属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-144">获取或设置将要在 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象的其他信息。</span><span class="sxs-lookup"><span data-stu-id="528ac-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="528ac-145">包含要与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的其他信息的注释。</span><span class="sxs-lookup"><span data-stu-id="528ac-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="528ac-146">默认情况下，此属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="528ac-147">指定的字符串值大于 39 个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="528ac-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-148">获取或设置 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象的应用程序定义的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="528ac-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="528ac-149">包含与此项关联的二进制数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="528ac-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="528ac-150">默认情况下，此属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-151">可提供的最大数量 <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> 为4096字节。</span><span class="sxs-lookup"><span data-stu-id="528ac-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="528ac-152">指定的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> 大于 4096 字节。</span><span class="sxs-lookup"><span data-stu-id="528ac-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="528ac-153">释放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象使用的资源。</span><span class="sxs-lookup"><span data-stu-id="528ac-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-154">当对等机离开时 <xref:System.Net.PeerToPeer.Cloud> ，云不再需要 <xref:System.Net.PeerToPeer.PeerNameRegistration> 与该对等方关联的对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="528ac-155">注册对象是已停止还是已释放取决于云中是否会重复使用对象来注册此对等方或其他对等方。</span><span class="sxs-lookup"><span data-stu-id="528ac-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="528ac-156">如果要与对等主机通信的注册对象中存在任何其他终结点 () ，则必须在停止或释放此对象之前，在云中注册这些终结点。</span><span class="sxs-lookup"><span data-stu-id="528ac-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="528ac-157">如果云需要注册更多对等方，则 <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> 建议使用方法; 当云不再需要内存时，应通过方法将其返回到操作系统 <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="528ac-158">释放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="528ac-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="528ac-159">在销毁对象之前始终调用 Dispose 方法 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-159">Always call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="528ac-160">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-160"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="528ac-161">释放非托管资源，并（可选）释放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象占用的托管资源。</span><span class="sxs-lookup"><span data-stu-id="528ac-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="528ac-162">在释放对象的最后一个引用之前，始终调用 Dispose 方法 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-163">获取为其注册关联对等名称的网络终结点的集合。</span><span class="sxs-lookup"><span data-stu-id="528ac-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="528ac-164">一个 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> 对象，其中包含为其注册关联对等名称的网络终结点。</span><span class="sxs-lookup"><span data-stu-id="528ac-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="528ac-165">除非显式指定，否则对于引用类型，所有属性的默认值均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-166">在 <xref:System.Net> 命名空间中，将 <xref:System.Net.IPEndPoint> 网络终结点表示为 IP 地址和端口号。</span><span class="sxs-lookup"><span data-stu-id="528ac-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="528ac-167">对于 PNRP，必须为每个终结点提供 IP 地址和端口值。</span><span class="sxs-lookup"><span data-stu-id="528ac-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="528ac-168">最多可提供10个终结点。</span><span class="sxs-lookup"><span data-stu-id="528ac-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="528ac-169">如果此参数为，则使用自动地址选择 `null` 。</span><span class="sxs-lookup"><span data-stu-id="528ac-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="528ac-170">如果使用注册方法自动选择要注册的地址，则没有方法来确定对其注册对等名称的地址。</span><span class="sxs-lookup"><span data-stu-id="528ac-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine the addresses for which the peer name was registered.</span></span>  <span data-ttu-id="528ac-171">也就是说， <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 将不会更新属性以反映所选的地址。</span><span class="sxs-lookup"><span data-stu-id="528ac-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="528ac-172">为多个节点注册对等名称时，每个节点 <xref:System.Net.PeerToPeer.PeerNameRegistration> 都是不同的，并且 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 在每个注册实例上定义的属性将有所不同。</span><span class="sxs-lookup"><span data-stu-id="528ac-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="528ac-173">此外，当 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> 注册到多个时 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> ，每个注册都是不同的，并且对于每个实例，终结点的集合通常是不同的。</span><span class="sxs-lookup"><span data-stu-id="528ac-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="528ac-174">此对等方将与之通信的终结点的列表与此对等名称已知的终结点列表不同，以不同的方式存储。</span><span class="sxs-lookup"><span data-stu-id="528ac-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="528ac-175">保存与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的序列化数据。</span><span class="sxs-lookup"><span data-stu-id="528ac-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="528ac-176">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的序列化流的目标。</span><span class="sxs-lookup"><span data-stu-id="528ac-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="528ac-177">使用序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例所需的数据填充序列化信息对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="528ac-178">获取或设置在 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名称是否向主机上的特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行了注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="528ac-179">如果为 <see langword="true" />，则说明对等名称向对等主机的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 进行了注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="528ac-180">如果为 <see langword="false" />，则说明可以使用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 启动注册过程。</span><span class="sxs-lookup"><span data-stu-id="528ac-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="528ac-181">不能注册已经释放的对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-182">获取或设置要向对等群注册的对等名称。</span><span class="sxs-lookup"><span data-stu-id="528ac-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="528ac-183">一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 类型的对象，其中包含与此 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的值。</span><span class="sxs-lookup"><span data-stu-id="528ac-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="528ac-184">除非显式指定，否则对于引用类型，所有属性的默认值均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-185">可为多个节点注册对等名称;每个 <xref:System.Net.PeerToPeer.PeerNameRegistration> 实例都是不同的。</span><span class="sxs-lookup"><span data-stu-id="528ac-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="528ac-186"><xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>与每个对应的实例关联的属性 <xref:System.Net.PeerToPeer.PeerName> 不同。</span><span class="sxs-lookup"><span data-stu-id="528ac-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="528ac-187">此外，还可以为节点连接到的多个云注册对等名称;其中每个注册都是不同的。</span><span class="sxs-lookup"><span data-stu-id="528ac-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="528ac-188"><xref:System.Net.IPEndPointCollection>每个实例中的对等名称将不同。</span><span class="sxs-lookup"><span data-stu-id="528ac-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-189">获取或设置正在 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象中注册的对等方使用的 [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) 端口号。</span><span class="sxs-lookup"><span data-stu-id="528ac-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="528ac-190">一个整数值，指示 <see cref="T:System.Net.IPEndPoint" /> 的 TCP 端口号。</span><span class="sxs-lookup"><span data-stu-id="528ac-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="528ac-191">除非显式指定，否则此属性的默认值设置为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="528ac-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-192"><xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>仅当未指定任何终结点时，方法才使用默认端口。</span><span class="sxs-lookup"><span data-stu-id="528ac-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="528ac-193">指定的端口值小于零。</span><span class="sxs-lookup"><span data-stu-id="528ac-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="528ac-194">端口号必须大于或等于零且小于 65,535 (0xFFFF)。</span><span class="sxs-lookup"><span data-stu-id="528ac-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="528ac-195">将 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 注册到 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="528ac-196">如果未指定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />，则将自动地址选择和由 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> 属性指定的端口值结合使用。</span><span class="sxs-lookup"><span data-stu-id="528ac-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-197">方法将在属性中指定的对等名称注册到 <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> 构造函数中的所有源地址和 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> 指定的。</span><span class="sxs-lookup"><span data-stu-id="528ac-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="528ac-198">仅当未指定终结点时，此方法才使用默认端口。</span><span class="sxs-lookup"><span data-stu-id="528ac-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="528ac-199">如果 <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> 属性为 `null` ，则此方法使用字段注册在属性中指定的对等名称 <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> <xref:System.Net.PeerToPeer.Cloud.Available> ，这将初始化、和的默认值 <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="528ac-200"><xref:System.Net.PeerToPeer.PeerNameRegistration>对象启动后， <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> 使用方法将其停止。</span><span class="sxs-lookup"><span data-stu-id="528ac-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="528ac-201">若要更新注册， <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> 必须使用方法。</span><span class="sxs-lookup"><span data-stu-id="528ac-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="528ac-202">下面的代码示例创建一个 <xref:System.Net.PeerToPeer.PeerName> ，并将其注册到指定的元数据。</span><span class="sxs-lookup"><span data-stu-id="528ac-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="528ac-203">将 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="528ac-204">此对象此前让 Dispose() 对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="528ac-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="528ac-205">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="528ac-206"><see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法必须用于更新注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="528ac-207">-   远程对等方不具有指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="528ac-208">-   未指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 或 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />；必须提供其中一个。</span><span class="sxs-lookup"><span data-stu-id="528ac-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="528ac-209">-   消息或数据元素均无效。</span><span class="sxs-lookup"><span data-stu-id="528ac-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="528ac-210">或者，未设置 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> 或未指定任何数据 blob 或 <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="528ac-211">从对等名称注册的所有云中注销 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名称。</span><span class="sxs-lookup"><span data-stu-id="528ac-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-212">在注册过程停止后，注册对象的状态将与该状态在由无参数构造函数构造后直接相等。</span><span class="sxs-lookup"><span data-stu-id="528ac-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the parameterless constructor.</span></span> <span data-ttu-id="528ac-213">在此状态下，其所有属性都假设没有值。</span><span class="sxs-lookup"><span data-stu-id="528ac-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="528ac-214">此 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> 方法可用于重新启动它。</span><span class="sxs-lookup"><span data-stu-id="528ac-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="528ac-215">同一对等名称可以具有多个注册对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="528ac-216">在这种情况下，如果对等名称是安全的，则每个实例将表示在不同的 PNRP 云中的注册。</span><span class="sxs-lookup"><span data-stu-id="528ac-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="528ac-217">但是，如果对等名称是不安全的，则可以多次在同一云中注册它。</span><span class="sxs-lookup"><span data-stu-id="528ac-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="528ac-218">如果此实例已停止，则调用此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="528ac-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="528ac-219">尚未注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="528ac-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="528ac-220">使用空构造函数构造 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象时会出现此种情况。</span><span class="sxs-lookup"><span data-stu-id="528ac-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="528ac-221">调用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 前必须在此实例中填充 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="528ac-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="528ac-222">此对象此前让 Dispose() 对其进行调用。</span><span class="sxs-lookup"><span data-stu-id="528ac-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="528ac-223">保存与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例关联的序列化数据。</span><span class="sxs-lookup"><span data-stu-id="528ac-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="528ac-224">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例关联的序列化流的目标。</span><span class="sxs-lookup"><span data-stu-id="528ac-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="528ac-225">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例所需的数据。</span><span class="sxs-lookup"><span data-stu-id="528ac-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="528ac-226">为在特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中注册的节点更新 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="528ac-227">使用属性中指定的信息执行更新。</span><span class="sxs-lookup"><span data-stu-id="528ac-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-228">在此之前，在云中 () s 中注册的所有信息 <xref:System.Net.PeerToPeer.PeerName> 都将被完全丢弃。</span><span class="sxs-lookup"><span data-stu-id="528ac-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="528ac-229">新数据不与现有注册结合。</span><span class="sxs-lookup"><span data-stu-id="528ac-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="528ac-230">若要更新 <xref:System.Net.PeerToPeer.PeerNameRegistration> ，请先更新此实例上的属性，然后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="528ac-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="528ac-231">注册后 <xref:System.Net.PeerToPeer.PeerNameRecord> ， <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 无法更新属性。</span><span class="sxs-lookup"><span data-stu-id="528ac-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="528ac-232">记录中的所有其他字段可能会更新。</span><span class="sxs-lookup"><span data-stu-id="528ac-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="528ac-233">将 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="528ac-234">-   尚未注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="528ac-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="528ac-235"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名在一个或多个云中注册之前，无法调用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="528ac-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="528ac-236">-   在注册相应的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 后，<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名会更改。</span><span class="sxs-lookup"><span data-stu-id="528ac-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="528ac-237">无法注册已处理的对象。</span><span class="sxs-lookup"><span data-stu-id="528ac-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="528ac-238">将 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="528ac-239">获取或设置一个值，该值指定当遍历对等网格或 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 时是否使用自动终结点选择。</span><span class="sxs-lookup"><span data-stu-id="528ac-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="528ac-240">如果使用自动终结点选择，则为 <see langword="true" />；如果使用其他某个方法来确定终结点，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-240"><see langword="true" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="528ac-241">默认值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="528ac-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="528ac-242">当使用自动终结点选择时 (此属性设置为 `true`) 时，如果没有在开始之前指定任何终结点信息 <xref:System.Net.PeerToPeer.PeerNameRegistration> ，系统会选择各个终结点，并将关联的对等名称发布到所有可用的云。</span><span class="sxs-lookup"><span data-stu-id="528ac-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="528ac-243">如果未指定端口，则自动选择将选择零作为 <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="528ac-244">如果设置为 `false` ，则不执行上述自动选择。</span><span class="sxs-lookup"><span data-stu-id="528ac-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="528ac-245">这使注册过程能够按属性) 指定的方式发布对等名称以及数据 blob (<xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> 。</span><span class="sxs-lookup"><span data-stu-id="528ac-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="528ac-246">没有与该名称关联的终结点。</span><span class="sxs-lookup"><span data-stu-id="528ac-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="528ac-247">如果使用注册方法自动选择要注册的地址，则没有方法来确定为其 <xref:System.Net.PeerToPeer.PeerName> 注册对象的地址。</span><span class="sxs-lookup"><span data-stu-id="528ac-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="528ac-248">也就是说， <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> 将不会更新属性以反映所选的地址。</span><span class="sxs-lookup"><span data-stu-id="528ac-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="528ac-249">在开始对等名称注册后更新此属性不起作用。</span><span class="sxs-lookup"><span data-stu-id="528ac-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
