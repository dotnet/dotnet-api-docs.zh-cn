<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67da5f0724524bf06b76af977df03e2304437cea" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69113239" /></Metadata><TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>定义要创建的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的类型。 <span data-ttu-id="ff6ba-102">对等名称可以是安全的，也可以是不安全的。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-102">A peer name is either secured or unsecured.</span></span> <span data-ttu-id="ff6ba-103">安全的对等名称提供名称所有权证明。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-103">A secured peer name provides a proof of ownership of the name.</span></span> <span data-ttu-id="ff6ba-104">不安全的对等名称没有关联的标识。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-104">An unsecured peer name has no identity associated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6ba-105">节点必须有权访问与公钥关联的私钥，用于创建安全的私钥， <xref:System.Net.PeerToPeer.PeerName> 以证明所有权。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-105">A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership.</span></span> <span data-ttu-id="ff6ba-106">节点没有与公钥之间的关系。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-106">The node does not have a relationship to a public key.</span></span>  
  
 <span data-ttu-id="ff6ba-107">对等名称的格式为：*颁发机构. 分类器*。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-107">The format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="ff6ba-108">的值 <xref:System.Net.PeerToPeer.PeerName.Authority%2A> 取决于该名称是安全的对等名称还是不安全的对等名称。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-108">The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name.</span></span> <span data-ttu-id="ff6ba-109"><xref:System.Net.PeerToPeer.PeerName.Classifier%2A>名称的部分可以设置为包含15个或更少 Unicode 字符（包括终止符）的任何字符串 `null` 。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-109">The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator.</span></span> <span data-ttu-id="ff6ba-110"><xref:System.Net.PeerToPeer.PeerName.Authority%2A> <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> 建立对等方的和安全级别后，也可以使用相对名称或主机名来引用对等方。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-110">Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.</span></span>  
  
 <span data-ttu-id="ff6ba-111">只有所有者或对等主机才能使用[PNRP 命名空间提供程序 API](https://go.microsoft.com/fwlink?LinkID=92731)注册安全对等名称。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-111">Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](https://go.microsoft.com/fwlink?LinkID=92731).</span></span> <span data-ttu-id="ff6ba-112">任何节点都可以声明对任何不安全的进行所有权 <xref:System.Net.PeerToPeer.PeerName> 。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-112">Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 <span data-ttu-id="ff6ba-113">**注意**使用受保护的 <xref:System.Net.PeerToPeer.PeerName> 并不能确保网络应用程序的总体安全性。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-113">**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application.</span></span> <span data-ttu-id="ff6ba-114">应用程序的安全性是视具体实现而定的。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-114">Security of the application is implementation-dependent.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ff6ba-115">使用当前用户的标识创建一个安全的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-115">Create a secured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ff6ba-116">使用当前用户的标识创建一个不安全的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="ff6ba-116">Create an unsecured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
