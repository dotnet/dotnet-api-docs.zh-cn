<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e2922811d5fd691ccb916ccfac28258a6102786" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89759052" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定使用 PNRP 命名空间提供程序 API 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 的值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一个， <xref:System.Net.PeerToPeer.PeerNameRecord> 其中包含在 <xref:System.Net.PeerToPeer.PeerName> 或 cloud (s 中发布的的所有信息，在 <xref:System.Net.PeerToPeer.Cloud> 解析过程中查询) 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 类的新默认实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 成功解析后 <xref:System.Net.PeerToPeer.PeerName> ，将包含在该 <xref:System.Net.PeerToPeer.PeerNameRecord> <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 操作过程中查询的云中 (s) 中发布的指定的所有信息 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 对象，包含 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件返回的数据。</param>
        <summary>引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件后，将返回对等解析数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是一个异步回调，用于在对等解析完成后处理对等名称解析数据。  
  
 派生类型可以重写此方法，以便在 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 对等解析程序对象引发事件时执行其他任务。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">一个 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 对象，它包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件返回的对等名称解析进度信息。</param>
        <summary>引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件时，将返回对等解析进度数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是在请求对等解析进度之后用于处理对等解析数据的异步回调。  
  
 派生类型可以重写此方法，以便在事件发生时执行其他任务 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在派生类型中重写此方法时，请确保调用基类型的 <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> 方法，以便注册的委托接收事件。</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用 PNRP 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将对等名称与云相关联。 调用 <xref:System.Net.PeerToPeer.PeerNameResolver> 方法类似于对 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 中的每个对等名称记录调用方法 <xref:System.Net.PeerToPeer.PeerNameRecordCollection> 。 请注意，对单个对等名称记录使用 Resolve 方法不会使解析多个对等名称无效。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。  它们在传递的参数中是相同的，只不过 ResolveAsync 方法在其参数列表中包含用于异步事件处理的系统标记。  
  
 如果 <xref:System.Net.PeerToPeer.Cloud> 未提供参数，则方法将使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填写云参数。  如果 `maxRecords` 缺少参数，则默认值为零会 <xref:System.ArgumentOutOfRangeException> 引发异常。  
  
 如果解析操作在错误中完成或被取消，也会引发此事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <summary>解析调用对等方已知的所有群中指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
        <returns>包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。 对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将对等名称与云相关联。 将查询所有云 <xref:System.Net.PeerToPeer.PeerName> 。 如果对等名称无法解析或为 `null` ，则 <xref:System.Net.PeerToPeer.PeerToPeerException> 会引发。  
  
 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。  
  
 调用 <xref:System.Net.PeerToPeer.PeerNameResolver> 方法类似于对 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 中的每个对等名称记录调用方法 <xref:System.Net.PeerToPeer.PeerNameRecordCollection> 。 请注意，对单个对等名称记录使用 Resolve 方法不会使解析多个对等名称无效。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。  
  
 如果 <xref:System.Net.PeerToPeer.Cloud> 未提供参数，则方法将使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填写云参数。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
   
  
## Examples  
 下面的代码示例说明了如何解析 <xref:System.Net.PeerToPeer.PeerName> 在任何中发布的 <xref:System.Net.PeerToPeer.Cloud> 。  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的对等名称无法解析。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, maxRecords As Integer) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="maxRecords">要从所有 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 中获取提供的 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象的最大数目。</param>
        <summary>解析调用对等方已知的所有群中的指定对等名称，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
        <returns>大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将对等名称与云相关联。 将查询所有云的对等名称。 对于不安全的对等名称，同一对等名称可以由相同的不同用户注册 <xref:System.Net.PeerToPeer.Cloud> ，并与不同的终结点相关联。 <xref:System.Net.PeerToPeer.PeerName>例如，如果不能解析 (例如，将不会发布对等名称) <xref:System.Net.PeerToPeer.PeerToPeerException> 引发。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, cloud As Cloud) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">要在其中解析对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <summary>解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />。</summary>
        <returns>包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。 对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Net.PeerToPeer.PeerName> 无法解析 (即，则不会发布对等名称) <xref:System.Net.PeerToPeer.PeerToPeerException> 引发。  
  
 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。  
  
 如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则 <xref:System.Net.PeerToPeer.PeerNameResolver> 使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填充 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, cloud As Cloud, maxRecords As Integer) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <param name="maxRecords">要从指定群中获取指定 <paramref name="peerName" /> 的最大对等名称记录对象数。</param>
        <summary>解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
        <returns>大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。 如果对等名称无法解析， <xref:System.Net.PeerToPeer.PeerToPeerException> 则会引发。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。  
  
 如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则 <xref:System.Net.PeerToPeer.PeerNameResolver> 使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填充 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 参数小于或等于零。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>这些方法在调用对等方已知的所有群中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步解析操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有一个等效 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法，当需要异步处理时，将使用该方法。  它们在传递的参数中是相同的，只是 ResolveAsync 在其参数列表中包含一个用于事件处理的系统令牌。  
  
 如果解析方法与 ResolveAsync 方法之间发生参数不匹配，并且 <xref:System.Net.PeerToPeer.Cloud> 未提供参数，则该方法将使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式来填充云参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="userState">一个用户定义的对象，其中包含对等名称解析操作的状态信息。</param>
        <summary>在调用对等方已知的所有云中为指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 开始异步对等名称解析操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法以异步方式将对等名称与云关联。 将查询所有云 <xref:System.Net.PeerToPeer.PeerName> 。 它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。 或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。  
  
 如果对等名称无法解析， <xref:System.Net.PeerToPeer.PeerToPeerException> 则会引发。  
  
 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。  
  
 调用 <xref:System.Net.PeerToPeer.PeerNameResolver> 方法类似于对 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 中的每个对等名称记录调用方法 <xref:System.Net.PeerToPeer.PeerNameRecordCollection> 。 请注意，对单个对等名称记录使用 Resolve 方法不会使解析多个对等名称无效。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。  
  
 对解析程序对象的所有异步引用均与唯一标识符标记进行协调。 此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, maxRecords As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="maxRecords">为对等名称获取的最大的记录数。</param>
        <param name="userState">一个用户定义对象，其中包含解析操作的相关信息。</param>
        <summary>在调用对等方已知的所有云中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作，返回不超过 <paramref name="maxRecords" /> 的对等名称条目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法以异步方式将对等名称与云关联。 将查询所有云 <xref:System.Net.PeerToPeer.PeerName> 。 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。 如果对等名称无法解析或为 `null` ，则 <xref:System.Net.PeerToPeer.PeerToPeerException> 会引发。  
  
 此方法引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。 或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。  
  
 对解析程序对象的所有异步引用均与唯一标识符标记进行协调 <xref:System.Object> 。 此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 参数小于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, cloud As Cloud, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
        <param name="cloud">在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <param name="userState">一个用户定义的 <see cref="T:System.Object" />，其中包含对等名称解析操作的相关信息。</param>
        <summary>在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。 或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。  
  
 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。  
  
 如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则使用快捷方式解析名称， <xref:System.Net.PeerToPeer.Cloud.Available> 这将初始化 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和属性的默认值 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。  
  
 对解析程序对象的所有异步引用均与唯一标识符标记进行协调。 此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, cloud As Cloud, maxRecords As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">要解析的 <paramref name="peerName" />。</param>
        <param name="cloud">要在其中解析 <paramref name="peerName" /> 的 <paramref name="cloud" />。</param>
        <param name="maxRecords">从 <paramref name="cloud" /> 获取的 <paramref name="peerName" /> 的最大数量的记录数。</param>
        <param name="userState">一个用户定义的对象，其中包含对等名称解析操作的相关信息。</param>
        <summary>在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。  该解析操作为指定的对等名称所解析的条目不会超过 <paramref name="maxRecords" /> 个。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。  
  
 此方法引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。 或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。  
  
 如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则使用快捷方式解析名称， <xref:System.Net.PeerToPeer.Cloud.Available> 这将初始化 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和属性的默认值 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。  
  
 对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。  它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。  
  
 对等解析程序对象的所有异步引用均与唯一标识符标记进行协调 <xref:System.Object> 。 此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">提供的一个或多个参数均无效。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">要成功完成此操作至少需要一个事件处理程序。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 参数小于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">向启动解析操作的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 方法实例提供的对象。</param>
        <summary>取消指定的异步对等名称解析请求。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法可保证系统不会尝试获取指定的其他记录 <xref:System.Net.PeerToPeer.PeerName> 。  如果在异步对等名称解析操作未完成时调用此方法，则该方法将充当 "无操作" (无操作) 。  
  
 `userState`必须提供对象，因为在多个调用正在进行时，它用于跟踪特定的异步调用。 此调用方提供的对象对于每个对等名称解析请求都是唯一的。  
  
 此方法将立即返回，但该操作可能会或不会立即取消。 事件返回的事件参数 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 包含一个字段，该字段可由客户端轮询以确定是否发生了取消。  
  
 调用此方法可确保 ResolveCompleted 事件将在事件参数设置为的情况下尽快收到信号 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> `true` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userState" /> 参数不能为 <see langword="null" />。</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 的对等名称解析请求完成时发出 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件信号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>对于找到的每个终结点，将引发一次事件，并且在找到所有终结点后，将只引发一次此事件。  
  
 如果 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 操作在错误或被取消时完成，也会引发此事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>每当发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象时会发出有关此事件的信号，以响应针对特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在 <xref:System.Net.PeerToPeer.PeerName> 查询中存在多个对象 () ，则会为每个找到的事件终止此事件一次 <xref:System.Net.PeerToPeer.PeerNameRecord> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
