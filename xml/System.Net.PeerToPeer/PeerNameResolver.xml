<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e2922811d5fd691ccb916ccfac28258a6102786" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89759052" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c1117-101">指定使用 PNRP 命名空间提供程序 API 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="c1117-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-102">一个， <xref:System.Net.PeerToPeer.PeerNameRecord> 其中包含在 <xref:System.Net.PeerToPeer.PeerName> 或 cloud (s 中发布的的所有信息，在 <xref:System.Net.PeerToPeer.Cloud> 解析过程中查询) 。</span><span class="sxs-lookup"><span data-stu-id="c1117-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1117-103">初始化 <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 类的新默认实例。</span><span class="sxs-lookup"><span data-stu-id="c1117-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-104">成功解析后 <xref:System.Net.PeerToPeer.PeerName> ，将包含在该 <xref:System.Net.PeerToPeer.PeerNameRecord> <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 操作过程中查询的云中 (s) 中发布的指定的所有信息 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1117-105">一个 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 对象，包含 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件返回的数据。</span><span class="sxs-lookup"><span data-stu-id="c1117-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span></span></param>
        <summary><span data-ttu-id="c1117-106">引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件后，将返回对等解析数据。</span><span class="sxs-lookup"><span data-stu-id="c1117-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-107">此方法是一个异步回调，用于在对等解析完成后处理对等名称解析数据。</span><span class="sxs-lookup"><span data-stu-id="c1117-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="c1117-108">派生类型可以重写此方法，以便在 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 对等解析程序对象引发事件时执行其他任务。</span><span class="sxs-lookup"><span data-stu-id="c1117-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1117-109">一个 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 对象，它包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件返回的对等名称解析进度信息。</span><span class="sxs-lookup"><span data-stu-id="c1117-109"><see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="c1117-110">引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件时，将返回对等解析进度数据。</span><span class="sxs-lookup"><span data-stu-id="c1117-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-111">此方法是在请求对等解析进度之后用于处理对等解析数据的异步回调。</span><span class="sxs-lookup"><span data-stu-id="c1117-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="c1117-112">派生类型可以重写此方法，以便在事件发生时执行其他任务 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1117-113">在派生类型中重写此方法时，请确保调用基类型的 <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> 方法，以便注册的委托接收事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1117-114">使用 PNRP 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-115">此方法将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="c1117-116">调用 <xref:System.Net.PeerToPeer.PeerNameResolver> 方法类似于对 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 中的每个对等名称记录调用方法 <xref:System.Net.PeerToPeer.PeerNameRecordCollection> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="c1117-117">请注意，对单个对等名称记录使用 Resolve 方法不会使解析多个对等名称无效。</span><span class="sxs-lookup"><span data-stu-id="c1117-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="c1117-118">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="c1117-119">它们在传递的参数中是相同的，只不过 ResolveAsync 方法在其参数列表中包含用于异步事件处理的系统标记。</span><span class="sxs-lookup"><span data-stu-id="c1117-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="c1117-120">如果 <xref:System.Net.PeerToPeer.Cloud> 未提供参数，则方法将使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填写云参数。</span><span class="sxs-lookup"><span data-stu-id="c1117-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="c1117-121">如果 `maxRecords` 缺少参数，则默认值为零会 <xref:System.ArgumentOutOfRangeException> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="c1117-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="c1117-122">如果解析操作在错误中完成或被取消，也会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-123">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <summary><span data-ttu-id="c1117-124">解析调用对等方已知的所有群中指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <returns><span data-ttu-id="c1117-125">包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="c1117-126">对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-127">此方法将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="c1117-128">将查询所有云 <xref:System.Net.PeerToPeer.PeerName> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="c1117-129">如果对等名称无法解析或为 `null` ，则 <xref:System.Net.PeerToPeer.PeerToPeerException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="c1117-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="c1117-130">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="c1117-131">调用 <xref:System.Net.PeerToPeer.PeerNameResolver> 方法类似于对 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 中的每个对等名称记录调用方法 <xref:System.Net.PeerToPeer.PeerNameRecordCollection> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="c1117-132">请注意，对单个对等名称记录使用 Resolve 方法不会使解析多个对等名称无效。</span><span class="sxs-lookup"><span data-stu-id="c1117-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="c1117-133">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="c1117-134">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。</span><span class="sxs-lookup"><span data-stu-id="c1117-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="c1117-135">如果 <xref:System.Net.PeerToPeer.Cloud> 未提供参数，则方法将使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填写云参数。</span><span class="sxs-lookup"><span data-stu-id="c1117-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="c1117-136"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1117-137">下面的代码示例说明了如何解析 <xref:System.Net.PeerToPeer.PeerName> 在任何中发布的 <xref:System.Net.PeerToPeer.Cloud> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-138"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c1117-139">指定的对等名称无法解析。</span><span class="sxs-lookup"><span data-stu-id="c1117-139">The peer name specified cannot be resolved.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, maxRecords As Integer) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-140">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="c1117-141">要从所有 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 中获取提供的 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象的最大数目。</span><span class="sxs-lookup"><span data-stu-id="c1117-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="c1117-142">解析调用对等方已知的所有群中的指定对等名称，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c1117-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="c1117-143">大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="c1117-144">此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</span><span class="sxs-lookup"><span data-stu-id="c1117-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-145">此方法将对等名称与云相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="c1117-146">将查询所有云的对等名称。</span><span class="sxs-lookup"><span data-stu-id="c1117-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="c1117-147">对于不安全的对等名称，同一对等名称可以由相同的不同用户注册 <xref:System.Net.PeerToPeer.Cloud> ，并与不同的终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="c1117-148"><xref:System.Net.PeerToPeer.PeerName>例如，如果不能解析 (例如，将不会发布对等名称) <xref:System.Net.PeerToPeer.PeerToPeerException> 引发。</span><span class="sxs-lookup"><span data-stu-id="c1117-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="c1117-149">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="c1117-150">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。</span><span class="sxs-lookup"><span data-stu-id="c1117-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="c1117-151"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-152"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1117-153"><paramref name="maxRecords" /> 参数小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="c1117-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c1117-154">提供的对等名称无法解析。</span><span class="sxs-lookup"><span data-stu-id="c1117-154">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, cloud As Cloud) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-155">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="c1117-156">要在其中解析对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span></span></param>
        <summary><span data-ttu-id="c1117-157">解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <returns><span data-ttu-id="c1117-158">包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-158"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="c1117-159">对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.Cloud" />，并将其与不同的终结点关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-160">如果 <xref:System.Net.PeerToPeer.PeerName> 无法解析 (即，则不会发布对等名称) <xref:System.Net.PeerToPeer.PeerToPeerException> 引发。</span><span class="sxs-lookup"><span data-stu-id="c1117-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (that is, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="c1117-161">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="c1117-162">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="c1117-163">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。</span><span class="sxs-lookup"><span data-stu-id="c1117-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="c1117-164">如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则 <xref:System.Net.PeerToPeer.PeerNameResolver> 使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填充 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="c1117-165"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-166"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c1117-167">提供的对等名称无法解析。</span><span class="sxs-lookup"><span data-stu-id="c1117-167">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, cloud As Cloud, maxRecords As Integer) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-168">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="c1117-169">在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="c1117-170">要从指定群中获取指定 <paramref name="peerName" /> 的最大对等名称记录对象数。</span><span class="sxs-lookup"><span data-stu-id="c1117-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="c1117-171">解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 中的指定 <see cref="T:System.Net.PeerToPeer.Cloud" />，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c1117-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="c1117-172">大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="c1117-173">此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</span><span class="sxs-lookup"><span data-stu-id="c1117-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-174">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="c1117-175">如果对等名称无法解析， <xref:System.Net.PeerToPeer.PeerToPeerException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="c1117-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="c1117-176">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="c1117-177">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记。</span><span class="sxs-lookup"><span data-stu-id="c1117-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="c1117-178">如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则 <xref:System.Net.PeerToPeer.PeerNameResolver> 使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式填充 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="c1117-179"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-180"><paramref name="peerName" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1117-181"><paramref name="maxRecords" /> 参数小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="c1117-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c1117-182">提供的对等名称无法解析。</span><span class="sxs-lookup"><span data-stu-id="c1117-182">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1117-183">这些方法在调用对等方已知的所有群中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步解析操作。</span><span class="sxs-lookup"><span data-stu-id="c1117-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-184">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 种方法，都有一个等效 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 方法，当需要异步处理时，将使用该方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="c1117-185">它们在传递的参数中是相同的，只是 ResolveAsync 在其参数列表中包含一个用于事件处理的系统令牌。</span><span class="sxs-lookup"><span data-stu-id="c1117-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="c1117-186">如果解析方法与 ResolveAsync 方法之间发生参数不匹配，并且 <xref:System.Net.PeerToPeer.Cloud> 未提供参数，则该方法将使用 <xref:System.Net.PeerToPeer.Cloud.Available> 快捷方式来填充云参数。</span><span class="sxs-lookup"><span data-stu-id="c1117-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-187">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="userState"><span data-ttu-id="c1117-188">一个用户定义的对象，其中包含对等名称解析操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="c1117-188">A user-defined object that contains state information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="c1117-189">在调用对等方已知的所有云中为指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 开始异步对等名称解析操作。</span><span class="sxs-lookup"><span data-stu-id="c1117-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-190">此方法以异步方式将对等名称与云关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="c1117-191">将查询所有云 <xref:System.Net.PeerToPeer.PeerName> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="c1117-192">它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="c1117-193">或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="c1117-194">如果对等名称无法解析， <xref:System.Net.PeerToPeer.PeerToPeerException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="c1117-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="c1117-195">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="c1117-196">调用 <xref:System.Net.PeerToPeer.PeerNameResolver> 方法类似于对 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 中的每个对等名称记录调用方法 <xref:System.Net.PeerToPeer.PeerNameRecordCollection> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="c1117-197">请注意，对单个对等名称记录使用 Resolve 方法不会使解析多个对等名称无效。</span><span class="sxs-lookup"><span data-stu-id="c1117-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="c1117-198">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="c1117-199">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="c1117-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="c1117-200">对解析程序对象的所有异步引用均与唯一标识符标记进行协调。</span><span class="sxs-lookup"><span data-stu-id="c1117-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="c1117-201">此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。</span><span class="sxs-lookup"><span data-stu-id="c1117-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="c1117-202"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-203">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, maxRecords As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-204">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="c1117-205">为对等名称获取的最大的记录数。</span><span class="sxs-lookup"><span data-stu-id="c1117-205">The maximum number of records to obtain for the Peer Name.</span></span></param>
        <param name="userState"><span data-ttu-id="c1117-206">一个用户定义对象，其中包含解析操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="c1117-206">A user-defined object that contains information about the resolve operation.</span></span></param>
        <summary><span data-ttu-id="c1117-207">在调用对等方已知的所有云中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作，返回不超过 <paramref name="maxRecords" /> 的对等名称条目。</span><span class="sxs-lookup"><span data-stu-id="c1117-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-208">此方法以异步方式将对等名称与云关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="c1117-209">将查询所有云 <xref:System.Net.PeerToPeer.PeerName> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="c1117-210">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="c1117-211">如果对等名称无法解析或为 `null` ，则 <xref:System.Net.PeerToPeer.PeerToPeerException> 会引发。</span><span class="sxs-lookup"><span data-stu-id="c1117-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="c1117-212">此方法引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="c1117-213">或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="c1117-214">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="c1117-215">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="c1117-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="c1117-216">对解析程序对象的所有异步引用均与唯一标识符标记进行协调 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="c1117-217">此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。</span><span class="sxs-lookup"><span data-stu-id="c1117-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="c1117-218"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-219">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1117-220"><paramref name="maxRecords" /> 参数小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="c1117-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, cloud As Cloud, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-221">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="c1117-222">在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="c1117-223">一个用户定义的 <see cref="T:System.Object" />，其中包含对等名称解析操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="c1117-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="c1117-224">在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。</span><span class="sxs-lookup"><span data-stu-id="c1117-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-225">此方法引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="c1117-226">或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="c1117-227">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="c1117-228">如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则使用快捷方式解析名称， <xref:System.Net.PeerToPeer.Cloud.Available> 这将初始化 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和属性的默认值 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="c1117-229">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="c1117-230">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="c1117-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="c1117-231">对解析程序对象的所有异步引用均与唯一标识符标记进行协调。</span><span class="sxs-lookup"><span data-stu-id="c1117-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="c1117-232">此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。</span><span class="sxs-lookup"><span data-stu-id="c1117-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="c1117-233"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-234">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, cloud As Cloud, maxRecords As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="c1117-235">要解析的 <paramref name="peerName" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-235">The <paramref name="peerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="c1117-236">要在其中解析 <paramref name="peerName" /> 的 <paramref name="cloud" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-236">The <paramref name="cloud" /> in which to resolve <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="c1117-237">从 <paramref name="cloud" /> 获取的 <paramref name="peerName" /> 的最大数量的记录数。</span><span class="sxs-lookup"><span data-stu-id="c1117-237">The maximum number of records to obtain from <paramref name="cloud" /> for <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="c1117-238">一个用户定义的对象，其中包含对等名称解析操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="c1117-238">A user-defined object that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="c1117-239">在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。</span><span class="sxs-lookup"><span data-stu-id="c1117-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span>  <span data-ttu-id="c1117-240">该解析操作为指定的对等名称所解析的条目不会超过 <paramref name="maxRecords" /> 个。</span><span class="sxs-lookup"><span data-stu-id="c1117-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-241">对于不安全的对等名称，同一名称可以 (注册，并与同一云中不同对等方) 的不同终结点相关联。</span><span class="sxs-lookup"><span data-stu-id="c1117-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="c1117-242">此方法引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 事件，该事件回调到 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="c1117-243">或者，它引发 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 事件，该事件回调 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="c1117-244">如果 <xref:System.Net.PeerToPeer.Cloud> 参数为 `null` ，则使用快捷方式解析名称， <xref:System.Net.PeerToPeer.Cloud.Available> 这将初始化 <xref:System.Net.PeerToPeer.Cloud.Name%2A> 、 <xref:System.Net.PeerToPeer.Cloud.Scope%2A> 和属性的默认值 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="c1117-245">对于每 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 种方法，都有等效的 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c1117-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="c1117-246">它们的参数列表是相同的，只不过 ResolveAsync 方法包含用于异步事件处理的系统标记，解析方法用于同步处理。</span><span class="sxs-lookup"><span data-stu-id="c1117-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="c1117-247">对等解析程序对象的所有异步引用均与唯一标识符标记进行协调 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="c1117-248">此 `userState` 令牌或消息标识符允许操作系统将消息放入消息队列后，将消息传递给单个接收进程。</span><span class="sxs-lookup"><span data-stu-id="c1117-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="c1117-249"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>如果解析操作在错误中完成或被取消，则会引发事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-250">将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1117-251">提供的一个或多个参数均无效。</span><span class="sxs-lookup"><span data-stu-id="c1117-251">One or more supplied parameters are invalid.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="c1117-252">要成功完成此操作至少需要一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c1117-252">Successful completion of this operation requires at least one event handler.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c1117-253"><paramref name="maxRecords" /> 参数小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="c1117-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState"><span data-ttu-id="c1117-254">向启动解析操作的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 方法实例提供的对象。</span><span class="sxs-lookup"><span data-stu-id="c1117-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span></span></param>
        <summary><span data-ttu-id="c1117-255">取消指定的异步对等名称解析请求。</span><span class="sxs-lookup"><span data-stu-id="c1117-255">Cancels the specified asynchronous peer name resolution request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-256">调用此方法可保证系统不会尝试获取指定的其他记录 <xref:System.Net.PeerToPeer.PeerName> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="c1117-257">如果在异步对等名称解析操作未完成时调用此方法，则该方法将充当 "无操作" (无操作) 。</span><span class="sxs-lookup"><span data-stu-id="c1117-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="c1117-258">`userState`必须提供对象，因为在多个调用正在进行时，它用于跟踪特定的异步调用。</span><span class="sxs-lookup"><span data-stu-id="c1117-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="c1117-259">此调用方提供的对象对于每个对等名称解析请求都是唯一的。</span><span class="sxs-lookup"><span data-stu-id="c1117-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="c1117-260">此方法将立即返回，但该操作可能会或不会立即取消。</span><span class="sxs-lookup"><span data-stu-id="c1117-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="c1117-261">事件返回的事件参数 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 包含一个字段，该字段可由客户端轮询以确定是否发生了取消。</span><span class="sxs-lookup"><span data-stu-id="c1117-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="c1117-262">调用此方法可确保 ResolveCompleted 事件将在事件参数设置为的情况下尽快收到信号 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="c1117-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1117-263"><paramref name="userState" /> 参数不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c1117-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1117-264">特定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 的对等名称解析请求完成时发出 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件信号。</span><span class="sxs-lookup"><span data-stu-id="c1117-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-265"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>对于找到的每个终结点，将引发一次事件，并且在找到所有终结点后，将只引发一次此事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="c1117-266">如果 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 操作在错误或被取消时完成，也会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="c1117-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1117-267">每当发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象时会发出有关此事件的信号，以响应针对特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作。</span><span class="sxs-lookup"><span data-stu-id="c1117-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1117-268">如果在 <xref:System.Net.PeerToPeer.PeerName> 查询中存在多个对象 () ，则会为每个找到的事件终止此事件一次 <xref:System.Net.PeerToPeer.PeerNameRecord> 。</span><span class="sxs-lookup"><span data-stu-id="c1117-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
