<Type Name="BinaryMessageFormatter" FullName="System.Messaging.BinaryMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e331d80beaff3e17621c724f3b6c0e1b07cdb0d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89819331" /></Metadata><TypeSignature Language="C#" Value="public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.BinaryMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type BinaryMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3f7bb-101">使用二进制格式，将一个对象（或连接的对象的整个图形）序列化成“消息队列”消息体或从“消息队列”消息体反序列化一个对象。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-101">Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="3f7bb-102"><xref:System.Messaging.BinaryMessageFormatter>非常高效，可用于序列化大多数对象。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-102">The <xref:System.Messaging.BinaryMessageFormatter> is very efficient and can be used to serialize most objects.</span></span> <span data-ttu-id="3f7bb-103">分析结果非常简洁、速度快，但不允许将松散耦合的消息传递为 <xref:System.Messaging.XmlMessageFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-103">The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does.</span></span> <span data-ttu-id="3f7bb-104">松散耦合意味着客户端和服务器可以独立地为发送和接收的类型版本。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-104">Loosely coupled means that the client and the server can independently version the type that is sent and received.</span></span>  
  
 <span data-ttu-id="3f7bb-105">当应用程序使用类的实例将消息发送到队列时 <xref:System.Messaging.MessageQueue> ，格式化程序将对象序列化为流并将其插入消息正文。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-105">When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="3f7bb-106">当使用从队列进行读取时 <xref:System.Messaging.MessageQueue> ，格式化程序将消息数据反序列化为的 <xref:System.Messaging.Message.Body%2A> 属性 <xref:System.Messaging.Message> 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-106">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="3f7bb-107"><xref:System.Messaging.BinaryMessageFormatter> 提供比更快的吞吐量 <xref:System.Messaging.XmlMessageFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-107"><xref:System.Messaging.BinaryMessageFormatter> provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="3f7bb-108">如果需要，请使用 <xref:System.Messaging.BinaryMessageFormatter> 纯速度而不是松散耦合消息。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-108">Use the <xref:System.Messaging.BinaryMessageFormatter> when pure speed rather than loosely coupled messaging is desired.</span></span>  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f7bb-109">初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-109">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f7bb-110">初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 类的新实例，不指定类型样式或顶级对象程序集样式。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-110">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f7bb-111">您必须指定 <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> 属性 (的值，该属性定义关系图中的根对象如何布局) ，以及 <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> 定义对象类型说明在使用类的实例 <xref:System.Messaging.BinaryMessageFormatter> 来序列化和发送消息之前如何布局)  (属性。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-111">You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topObjectFormat As FormatterAssemblyStyle, typeFormat As FormatterTypeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle topObjectFormat, System::Runtime::Serialization::Formatters::FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="F#" Value="new System.Messaging.BinaryMessageFormatter : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.Formatters.FormatterTypeStyle -&gt; System.Messaging.BinaryMessageFormatter" Usage="new System.Messaging.BinaryMessageFormatter (topObjectFormat, typeFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topObjectFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="typeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Parameters>
      <Docs>
        <param name="topObjectFormat"><span data-ttu-id="3f7bb-112">确定图形的顶级（根）对象在序列化流中的布局方式。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-112">Determines how the top (root) object of a graph is laid out in the serialized stream.</span></span></param>
        <param name="typeFormat"><span data-ttu-id="3f7bb-113">确定类型说明在序列化流中的布局方式。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-113">Determines how type descriptions are laid out in the serialized stream.</span></span></param>
        <summary><span data-ttu-id="3f7bb-114">初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 类的新实例，并指定根对象和类型说明的格式。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-114">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRead (message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="binaryMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3f7bb-115">要检查的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-115">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="3f7bb-116">确定格式化程序是否可以反序列化消息的内容。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-116">Determines whether the formatter can deserialize the contents of the message.</span></span></summary>
        <returns><span data-ttu-id="3f7bb-117">如果二进制消息格式化程序可以反序列化消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-117"><see langword="true" /> if the binary message formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="3f7bb-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A>`false`如果消息正文不是二进制对象，则返回。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `false` if the message body is not a binary object.</span></span>  
  
 <span data-ttu-id="3f7bb-119">在接收计算机上， <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> `true` 如果要反序列化的类的程序集在本地存在，则返回。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-119">On the receiving computer, <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `true` if the assembly for the class to be deserialized exists locally.</span></span> <span data-ttu-id="3f7bb-120">该程序集必须位于全局程序集缓存中，或链接到应用程序 (例如，如果该对象表示自定义类) 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-120">The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f7bb-121"><paramref name="message" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-121">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="binaryMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f7bb-122">创建 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 类的实例，其读/写属性（根对象和类型说明格式）与当前 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-122">Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="3f7bb-123">一个对象，其属性与此 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 的属性相同，但其元数据并不将其指定为格式化程序类实例。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-123">An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]
 
<span data-ttu-id="3f7bb-124">此方法创建格式化程序的副本，并将其所有属性初始化为此的值 <xref:System.Messaging.BinaryMessageFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-124">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>.</span></span> <span data-ttu-id="3f7bb-125">它用于可伸缩性，但不保证读取或写入线程安全。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-125">It is used for scalability, but does not guarantee read or write thread safety.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (message As Message) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="binaryMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3f7bb-126">要反序列化的 <see cref="T:System.Messaging.Message" />（二进制格式）。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-126">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="3f7bb-127">从给定的消息中读取内容，并创建包含反序列化消息的对象。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-127">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="3f7bb-128">反序列化的消息。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-128">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="3f7bb-129">消息的正文必须为二进制格式，必须使用相同的序列化程序将消息反序列化为最初序列化该消息的消息。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-129">The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</span></span> <span data-ttu-id="3f7bb-130">如果正文表示自定义类，则该类的程序集必须在本地存在。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-130">If the body represents a custom class, the assembly for that class must exist locally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3f7bb-131">消息的 <see cref="P:System.Messaging.Message.BodyType" /> 属性不指示二进制对象。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-131">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f7bb-132"><paramref name="message" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-132">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TopObjectFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObjectFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle TopObjectFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TopObjectFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgTopObjectFormat")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgTopObjectFormat")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f7bb-133">获取或设置一个值，该值定义如何图形的顶级（根）对象如何进行与查找和加载其程序集相关的反序列化。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-133">Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</span></span></summary>
        <value><span data-ttu-id="3f7bb-134">定义反序列化行为的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-134">One of the enumeration values that defines the deserialization behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

<span data-ttu-id="3f7bb-135">目前，应接受默认值 `AssemblyStyle` 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-135">Currently, you should accept the default value, `AssemblyStyle`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgTypeFormat")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgTypeFormat")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f7bb-136">获取或设置一个值，该值定义类型说明在序列化流中的布局方式。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-136">Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</span></span></summary>
        <value><span data-ttu-id="3f7bb-137">定义类型说明格式的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-137">One of the enumeration values that defines the type description format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="3f7bb-138">目前，应接受默认值 `TypesWhenNeeded` 。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-138">Currently, you should accept the default value, `TypesWhenNeeded`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As Message, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="binaryMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3f7bb-139"><see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Body" /> 属性将包含序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-139">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="3f7bb-140">要序列化到消息体中的对象。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-140">The object to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="3f7bb-141">将对象序列化为消息体。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-141">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="3f7bb-142">在读取时，不需要指定 top 对象格式和类型格式来写入队列。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-142">The top object format and type format need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="3f7bb-143"><xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> 仅当反序列化消息时，格式化程序才使用和属性。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-143">The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="3f7bb-144"><xref:System.Messaging.BinaryMessageFormatter>可以序列化大多数对象，但结果并不松耦合。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-144">The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled.</span></span> <span data-ttu-id="3f7bb-145">不过，它是压缩的，因此格式化程序对于大型对象是高效的。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-145">However, it is compact, so the formatter is efficient for large objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f7bb-146"><paramref name="message" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3f7bb-146">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>
