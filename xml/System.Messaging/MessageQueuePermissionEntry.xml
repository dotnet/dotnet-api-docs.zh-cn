<Type Name="MessageQueuePermissionEntry" FullName="System.Messaging.MessageQueuePermissionEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91ccb6f6baaa03e95113db1c30358fdec52c7bd0" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86803312" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueuePermissionEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MessageQueuePermissionEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueuePermissionEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueuePermissionEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueuePermissionEntry" />
  <TypeSignature Language="F#" Value="type MessageQueuePermissionEntry = class" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为消息定义代码访问安全权限集的最小单位。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息，请参阅 [代码访问安全性](/dotnet/framework/misc/code-access-security)。  
  
   
  
## Examples  
 以下代码示例演示了 <xref:System.Messaging.MessageQueuePermissionEntry> 的用法。  
  
 [!code-cpp[MessageQueuePermissionEntry#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueuePermissionEntry#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.MessageQueuePermission" />
    <altmember cref="T:System.Messaging.MessageQueuePermissionAccess" />
    <altmember cref="T:System.Messaging.MessageQueuePermissionAttribute" />
    <altmember cref="T:System.Messaging.MessageQueuePermissionEntryCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueuePermissionEntry (System.Messaging.MessageQueuePermissionAccess permissionAccess, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Messaging.MessageQueuePermissionAccess permissionAccess, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permissionAccess As MessageQueuePermissionAccess, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueuePermissionEntry(System::Messaging::MessageQueuePermissionAccess permissionAccess, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueuePermissionEntry : System.Messaging.MessageQueuePermissionAccess * string -&gt; System.Messaging.MessageQueuePermissionEntry" Usage="new System.Messaging.MessageQueuePermissionEntry (permissionAccess, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionAccess" Type="System.Messaging.MessageQueuePermissionAccess" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permissionAccess"><see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。 <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> 属性被设置为该值。</param>
        <param name="path">由 <see cref="T:System.Messaging.MessageQueue" /> 对象引用的队列的路径。 <see cref="P:System.Messaging.MessageQueuePermissionEntry.Path" /> 属性被设置为该值。</param>
        <summary>通过指定的权限访问级别和队列的路径初始化 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建的一个新实例 <xref:System.Messaging.MessageQueuePermissionEntry> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueuePermissionEntry#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueuePermissionEntry (System.Messaging.MessageQueuePermissionAccess permissionAccess, string machineName, string label, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Messaging.MessageQueuePermissionAccess permissionAccess, string machineName, string label, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permissionAccess As MessageQueuePermissionAccess, machineName As String, label As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueuePermissionEntry(System::Messaging::MessageQueuePermissionAccess permissionAccess, System::String ^ machineName, System::String ^ label, System::String ^ category);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueuePermissionEntry : System.Messaging.MessageQueuePermissionAccess * string * string * string -&gt; System.Messaging.MessageQueuePermissionEntry" Usage="new System.Messaging.MessageQueuePermissionEntry (permissionAccess, machineName, label, category)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permissionAccess" Type="System.Messaging.MessageQueuePermissionAccess" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permissionAccess"><see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。 <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> 属性被设置为该值。</param>
        <param name="machineName">“消息队列”队列所在的计算机的名称。 <see cref="P:System.Messaging.MessageQueuePermissionEntry.MachineName" /> 属性被设置为该值。</param>
        <param name="label">队列说明。 <see cref="P:System.Messaging.MessageQueuePermissionEntry.Label" /> 属性被设置为该值。</param>
        <param name="category">队列类别（消息队列类型标识符）。 <see cref="P:System.Messaging.MessageQueuePermissionEntry.Category" /> 属性被设置为该值。</param>
        <summary>通过指定的权限访问级别、队列所在的计算机的名称、队列说明和查询类别初始化 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例创建的一个新实例 <xref:System.Messaging.MessageQueuePermissionEntry> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#2)]
 [!code-csharp[MessageQueuePermissionEntry#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueuePermissionEntry.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Messaging.MessageQueuePermissionEntry.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取队列类别。</summary>
        <value>队列类别（消息队列类型标识符），它允许应用程序将其队列分类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示消息队列权限条目的属性的值 <xref:System.Messaging.MessageQueuePermissionEntry.Category%2A> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#3](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#3)]
 [!code-csharp[MessageQueuePermissionEntry#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueuePermissionEntry.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Messaging.MessageQueuePermissionEntry.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取队列说明。</summary>
        <value>消息队列的标签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示消息队列权限条目的属性的值 <xref:System.Messaging.MessageQueuePermissionEntry.Label%2A> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#4](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#4)]
 [!code-csharp[MessageQueuePermissionEntry#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueuePermissionEntry.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Messaging.MessageQueuePermissionEntry.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取“消息队列”队列所在的计算机的名称。</summary>
        <value>队列所在的计算机的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示消息队列权限条目的属性的值 <xref:System.Messaging.MessageQueuePermissionEntry.MachineName%2A> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#5](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#5)]
 [!code-csharp[MessageQueuePermissionEntry#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueuePermissionEntry.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Messaging.MessageQueuePermissionEntry.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取队列的路径。</summary>
        <value>由 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示消息队列权限条目的属性的值 <xref:System.Messaging.MessageQueuePermissionEntry.Path%2A> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#6](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#6)]
 [!code-csharp[MessageQueuePermissionEntry#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionAccess">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueuePermissionAccess PermissionAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessageQueuePermissionAccess PermissionAccess" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PermissionAccess As MessageQueuePermissionAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueuePermissionAccess PermissionAccess { System::Messaging::MessageQueuePermissionAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionAccess : System.Messaging.MessageQueuePermissionAccess" Usage="System.Messaging.MessageQueuePermissionEntry.PermissionAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueuePermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在权限请求中使用的权限访问级别。</summary>
        <value><see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示消息队列权限条目的属性的值 <xref:System.Messaging.MessageQueuePermissionEntry.PermissionAccess%2A> 。  
  
 [!code-cpp[MessageQueuePermissionEntry#7](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueuePermissionEntry/cpp/class1.cpp#7)]
 [!code-csharp[MessageQueuePermissionEntry#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueuePermissionEntry/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
