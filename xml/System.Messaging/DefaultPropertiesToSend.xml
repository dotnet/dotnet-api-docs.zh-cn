<Type Name="DefaultPropertiesToSend" FullName="System.Messaging.DefaultPropertiesToSend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0fe3640da541008b62d5fb04df7b52be40c82f9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89915999" /></Metadata><TypeSignature Language="C#" Value="public class DefaultPropertiesToSend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPropertiesToSend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.DefaultPropertiesToSend" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultPropertiesToSend" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultPropertiesToSend" />
  <TypeSignature Language="F#" Value="type DefaultPropertiesToSend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4955-101">指定在向消息队列发送 <see cref="T:System.Messaging.Message" /> 实例以外的对象时所使用的默认属性值。</span><span class="sxs-lookup"><span data-stu-id="c4955-101">Specifies the default property values that will be used when sending objects other than <see cref="T:System.Messaging.Message" /> instances to a message queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-102">您可以对发送到的消息设置所选属性的默认值 <xref:System.Messaging.MessageQueue> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-102">You can set default values on selected properties for messages sent to a <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="c4955-103"><xref:System.Messaging.DefaultPropertiesToSend> 用于指定在将实例以外的对象发送到队列时发送的消息的默认属性值 <xref:System.Messaging.Message> ，例如，传递到代码片段中的方法的字符串自变量 <xref:System.Messaging.MessageQueue.Send%2A> `myMessageQueue.Send("hello")` 。</span><span class="sxs-lookup"><span data-stu-id="c4955-103"><xref:System.Messaging.DefaultPropertiesToSend> is used to specify default property values of the message being sent when objects other than <xref:System.Messaging.Message> instances are sent to a queue, for example, the string argument passed into the <xref:System.Messaging.MessageQueue.Send%2A> method in the code fragment, `myMessageQueue.Send("hello")`.</span></span> <span data-ttu-id="c4955-104"><xref:System.Messaging.Message>类在中具有与相同的、具有相同命名的属性，这些属性在 <xref:System.Messaging.DefaultPropertiesToSend> 专门发送实例时提供值 <xref:System.Messaging.Message> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-104">The <xref:System.Messaging.Message> class has corresponding, identically named properties to those in <xref:System.Messaging.DefaultPropertiesToSend> that provide the values when sending a <xref:System.Messaging.Message> instance specifically.</span></span> <span data-ttu-id="c4955-105">即使已 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> 为队列指定，也 <xref:System.Messaging.Message> 会将对象发送到该队列，这将导致具有相同命名属性的值 <xref:System.Messaging.Message> 覆盖队列的 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="c4955-105">Even if you have specified <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> for a queue, sending a <xref:System.Messaging.Message> object to that queue will cause the values for the identically named <xref:System.Messaging.Message> properties to override the queue's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> values.</span></span>  
  
 <span data-ttu-id="c4955-106">未显式设置的属性默认为构造函数指定的值 <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-106">Properties that you do not set explicitly default to the values specified by the constructor, <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="c4955-107">有关实例的初始属性值的列表 <xref:System.Messaging.DefaultPropertiesToSend> ，请参见 <xref:System.Messaging.DefaultPropertiesToSend> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4955-107">For a list of initial property values for an instance of <xref:System.Messaging.DefaultPropertiesToSend>, see the <xref:System.Messaging.DefaultPropertiesToSend> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4955-108">下面的代码示例使用消息的优先级来确定要为消息发送的默认属性。</span><span class="sxs-lookup"><span data-stu-id="c4955-108">The following code example uses the priority of a message to determine default properties to send for the message.</span></span>  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPropertiesToSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.DefaultPropertiesToSend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultPropertiesToSend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4955-109">初始化 <see cref="T:System.Messaging.DefaultPropertiesToSend" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c4955-109">Initializes a new instance of the <see cref="T:System.Messaging.DefaultPropertiesToSend" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-110">您可以创建的新实例 <xref:System.Messaging.DefaultPropertiesToSend> ，以定义要与发送到不属于类型的队列的对象关联的默认属性值 <xref:System.Messaging.Message> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-110">You can create a new instance of <xref:System.Messaging.DefaultPropertiesToSend> to define default property values to associate with objects sent to a queue that are not of type <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="c4955-111">使用对象时 <xref:System.Messaging.MessageQueue> ，将 <xref:System.Messaging.DefaultPropertiesToSend> 为你创建一个实例，并将其与 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> 的成员相关联 <xref:System.Messaging.MessageQueue> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-111">When working with <xref:System.Messaging.MessageQueue> objects, a <xref:System.Messaging.DefaultPropertiesToSend> instance is created for you and associated with the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> member of the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="c4955-112">可以通过两种方法来定义要发送的队列的默认属性，如下面的 c # 代码中所示。</span><span class="sxs-lookup"><span data-stu-id="c4955-112">There are two ways to define a queue's default properties to send, as shown in the following C# code.</span></span> <span data-ttu-id="c4955-113">可以设置此实例的值 <xref:System.Messaging.DefaultPropertiesToSend> ，并将其与队列的属性关联 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> ：</span><span class="sxs-lookup"><span data-stu-id="c4955-113">You can set values for this instance of <xref:System.Messaging.DefaultPropertiesToSend> and associate it with the queue's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property:</span></span>  
  
```  
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();  
  // Set default values for the properties.  
  myDefaultProperties.Label = "myLabel";  
  myDefaultProperties.Recoverable = false;  
 ...  
  myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;  
  myMessageQueue.Send("hello");  
```  
  
 <span data-ttu-id="c4955-114">或者，可以直接将值分配给 <xref:System.Messaging.MessageQueue> 实例的 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="c4955-114">Or, you can individually assign values to the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property directly:</span></span>  
  
```  
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";  
  myMessageQueue.DefaultPropertiesToSend.Recoverable = false;  
...  
  myMessageQueue.Send("hello");  
```  
  
 <span data-ttu-id="c4955-115">如果选择其中的第二个选项，则无需 <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> 显式调用构造函数。</span><span class="sxs-lookup"><span data-stu-id="c4955-115">If you choose the second of these options, you do not need to call the <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> constructor explicitly.</span></span> <span data-ttu-id="c4955-116"><xref:System.Messaging.DefaultPropertiesToSend>例如，如果属性的默认值取决于要发送的消息的某些条件，则您可能需要创建的实例。</span><span class="sxs-lookup"><span data-stu-id="c4955-116">You might want to create instances of <xref:System.Messaging.DefaultPropertiesToSend>, for example, if the properties' default values depend on some criterion of the message being sent.</span></span> <span data-ttu-id="c4955-117">可以创建多个 <xref:System.Messaging.DefaultPropertiesToSend> 实例，并在将 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> 消息发送到队列之前将一个实例分配给队列的属性。</span><span class="sxs-lookup"><span data-stu-id="c4955-117">You can create multiple <xref:System.Messaging.DefaultPropertiesToSend> instances and assign one to the queue's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property before sending the message to the queue.</span></span>  
  
 <span data-ttu-id="c4955-118">下表显示了实例的初始属性值 <xref:System.Messaging.DefaultPropertiesToSend> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-118">The following table shows initial property values for an instance of <xref:System.Messaging.DefaultPropertiesToSend>.</span></span>  
  
|<span data-ttu-id="c4955-119">属性</span><span class="sxs-lookup"><span data-stu-id="c4955-119">Property</span></span>|<span data-ttu-id="c4955-120">初始值</span><span class="sxs-lookup"><span data-stu-id="c4955-120">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|<span data-ttu-id="c4955-121">0</span><span class="sxs-lookup"><span data-stu-id="c4955-121">0</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|<span data-ttu-id="c4955-122">长度为零的字节数组</span><span class="sxs-lookup"><span data-stu-id="c4955-122">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|<span data-ttu-id="c4955-123">空字符串 ( "" ) </span><span class="sxs-lookup"><span data-stu-id="c4955-123">An empty string ("")</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgAcknowledgeType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgAcknowledgeType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-124">获取或设置返回给发送应用程序的确认消息的类型。</span><span class="sxs-lookup"><span data-stu-id="c4955-124">Gets or sets the type of acknowledgement message to be returned to the sending application.</span></span></summary>
        <value><span data-ttu-id="c4955-125"><see cref="T:System.Messaging.AcknowledgeTypes" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c4955-125">One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> enumeration values.</span></span> <span data-ttu-id="c4955-126">此值用于确定系统在管理队列中传递的确认消息的类型以及向发送应用程序返回确认消息的时间。</span><span class="sxs-lookup"><span data-stu-id="c4955-126">This value is used to determine the type of acknowledgment messages the system posts in the administration queue and when acknowledgments are returned to the sending application.</span></span> <span data-ttu-id="c4955-127">默认值为 <see langword="AcknowledgeTypes.None" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-127">The default is <see langword="AcknowledgeTypes.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-128"><xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>属性指定要返回给发送应用程序的确认消息的类型。</span><span class="sxs-lookup"><span data-stu-id="c4955-128">The <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property specifies the type of acknowledgment messages to return to the sending application.</span></span> <span data-ttu-id="c4955-129">例如，将属性设置 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> 为在消息到达其目标、检索时或超时是否阻止消息到达目标队列或从目标队列检索消息时请求通知。</span><span class="sxs-lookup"><span data-stu-id="c4955-129">For example, set the <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property to request notification when a message reaches its destination, when it is retrieved, or whether a time-out has prevented the message from reaching or being retrieved from the destination queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgAdministrationQueue")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgAdministrationQueue")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-130">获取或设置队列，该队列接收由消息队列生成的确认消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-130">Gets or sets the queue that receives acknowledgement messages generated by Message Queuing.</span></span></summary>
        <value><span data-ttu-id="c4955-131"><see cref="T:System.Messaging.MessageQueue" />，指定用于系统生成的确认消息的管理队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-131">The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.</span></span> <span data-ttu-id="c4955-132">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-132">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-133">属性中指定的队列 <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> 可以是任何非事务性队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-133">The queue specified in the <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> property can be any non-transactional queue.</span></span> <span data-ttu-id="c4955-134">发送到管理队列的确认消息可以指示原始消息是否已到达其目标队列，以及是否已从队列中删除该消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-134">The acknowledgment messages sent to the administration queue can indicate whether or not the original message reached its destination queue, and whether or not it was removed from the queue.</span></span>  
  
 <span data-ttu-id="c4955-135">当 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> 属性具有以外的任何值时 `None` ，发送应用程序必须指定要用作管理队列的队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-135">When the <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to be used as the administration queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgAppSpecific")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgAppSpecific")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-136">获取或设置应用程序特定的附加信息。</span><span class="sxs-lookup"><span data-stu-id="c4955-136">Gets or sets additional, application-specific information.</span></span></summary>
        <value><span data-ttu-id="c4955-137">应用程序特定的信息。</span><span class="sxs-lookup"><span data-stu-id="c4955-137">Information specific to the application.</span></span> <span data-ttu-id="c4955-138">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="c4955-138">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-139"><xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>属性包含附加的应用程序特定的信息，这些信息可用于组织不同类型的消息，例如，使用应用程序特定的索引。</span><span class="sxs-lookup"><span data-stu-id="c4955-139">The <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> property contains additional, application-specific information that can be used to organize different types of messages, for example, using application-specific indexes.</span></span> <span data-ttu-id="c4955-140">应用程序负责解释 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> 信息。</span><span class="sxs-lookup"><span data-stu-id="c4955-140">It is the responsibility of the application to interpret <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> information.</span></span>  
  
 <span data-ttu-id="c4955-141">如果可能，消息数据应包含在消息的正文中，而不是包含在 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="c4955-141">Where possible, message data should be included in the body of the message rather than in the <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> property.</span></span>  
  
 <span data-ttu-id="c4955-142">使用外部队列时，请使用 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> 属性指定非消息队列消息属性。</span><span class="sxs-lookup"><span data-stu-id="c4955-142">When working with foreign queues, use the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property to specify non-Message Queuing message properties.</span></span> <span data-ttu-id="c4955-143">与一样 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> ，应用程序负责了解属性的内容 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-143">As with <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>, it is the responsibility of the application to understand the content of the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.Extension" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgAttachSenderId")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgAttachSenderId")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-144">获取或设置一个值，该值指示发送方 ID 是否应附在消息中。</span><span class="sxs-lookup"><span data-stu-id="c4955-144">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span></span></summary>
        <value><span data-ttu-id="c4955-145">如果发送方 ID 应附在消息中，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-145"><see langword="true" /> if sender ID should be attached to the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c4955-146">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-146">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-147">发件人 ID 是表示发送用户的标识符的字节数组。</span><span class="sxs-lookup"><span data-stu-id="c4955-147">The sender ID is an array of bytes that represents the identifier of the sending user.</span></span> <span data-ttu-id="c4955-148">发件人 ID 由消息队列设置，接收队列管理器使用该 ID 来验证发送方是否有权访问队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-148">The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</span></span> <span data-ttu-id="c4955-149">仅当消息到达目标队列时已通过身份验证，才可信任发送方 ID。</span><span class="sxs-lookup"><span data-stu-id="c4955-149">The sender ID is only trustworthy if the message was authenticated when it reached the destination queue.</span></span>  
  
 <span data-ttu-id="c4955-150">如果未将发送方 ID 附加到消息，则发送应用程序会指示消息队列在将消息发送到目标队列时不应验证消息的发送方。</span><span class="sxs-lookup"><span data-stu-id="c4955-150">When the sender ID is not attached to the message, the sending application is indicating that Message Queuing should not validate the message's sender when the message is sent to the destination queue.</span></span> <span data-ttu-id="c4955-151">如果目标队列只接受经过身份验证的消息， <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> 或者或 <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> 为，则在 `false` 消息到达队列时将拒绝该消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-151">If the destination queue only accepts authenticated messages, and either <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> is `false`, the message will be rejected when it reaches the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-152">获取或设置用于加密私有消息体的加密算法。</span><span class="sxs-lookup"><span data-stu-id="c4955-152">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span></span></summary>
        <value><span data-ttu-id="c4955-153"><see cref="T:System.Messaging.EncryptionAlgorithm" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c4955-153">One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.</span></span> <span data-ttu-id="c4955-154">默认值为 <see langword="RC2" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-154">The default is <see langword="RC2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-155">如果消息是私有的，则在发送消息之前对其进行加密，并在收到消息时解密。</span><span class="sxs-lookup"><span data-stu-id="c4955-155">If a message is private, it is encrypted before it is sent and is decrypted when it is received.</span></span> <span data-ttu-id="c4955-156"><xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>属性指定用于对专用消息的消息正文进行加密的算法。</span><span class="sxs-lookup"><span data-stu-id="c4955-156">The <xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.</span></span>  
  
 <span data-ttu-id="c4955-157">队列可能要求对传入消息进行加密。</span><span class="sxs-lookup"><span data-stu-id="c4955-157">A queue can require that incoming messages be encrypted.</span></span> <span data-ttu-id="c4955-158">如果将非加密 (非私有) 消息发送到只接受私有消息的队列，或将私有消息发送到只接受非私有消息的队列，则队列将拒绝该消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-158">If a non-encrypted (non-private) message is sent to a queue that only accepts private messages, or if a private message is sent to a queue that only accepts non-private messages, the message is rejected by the queue.</span></span> <span data-ttu-id="c4955-159">如果消息被拒绝，则发送应用程序可以请求向发送应用程序返回否定确认消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-159">The sending application can request a negative acknowledgment message be returned to the sending application if a message was rejected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgExtension")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgExtension")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-160">获取或设置与消息关联的附加信息。</span><span class="sxs-lookup"><span data-stu-id="c4955-160">Gets or sets additional information associated with the message.</span></span></summary>
        <value><span data-ttu-id="c4955-161">字节数组，提供与消息关联的、应用程序定义的附加信息。</span><span class="sxs-lookup"><span data-stu-id="c4955-161">An array of bytes that provides additional, application-defined information associated with the message.</span></span> <span data-ttu-id="c4955-162">默认值为零长度的数组。</span><span class="sxs-lookup"><span data-stu-id="c4955-162">The default is a zero-length array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-163"><xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>属性提供与消息关联的应用程序定义的附加信息，例如大型二进制对象。</span><span class="sxs-lookup"><span data-stu-id="c4955-163">The <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property provides for additional application-defined information that is associated with the message, such as a large binary object.</span></span> <span data-ttu-id="c4955-164">接收应用程序负责解释的内容 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-164">It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>.</span></span>  
  
 <span data-ttu-id="c4955-165">如果可能，消息数据应包含在消息的正文中，而不是在扩展中。</span><span class="sxs-lookup"><span data-stu-id="c4955-165">Where possible, message data should be included in the body of the message rather than in the extension.</span></span>  
  
 <span data-ttu-id="c4955-166">使用外部队列时，请使用 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> 属性指定非消息队列消息属性。</span><span class="sxs-lookup"><span data-stu-id="c4955-166">When working with foreign queues, use the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property to specify non-Message Queuing message properties.</span></span>  
  
 <span data-ttu-id="c4955-167">在非 Microsoft 消息队列的队列系统中存在一个外部队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-167">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="c4955-168">Microsoft 消息队列通过连接器应用程序与此类队列通信。</span><span class="sxs-lookup"><span data-stu-id="c4955-168">Microsoft Message Queuing communicates with such queues through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgHashAlgorithm")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgHashAlgorithm")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-169">获取或设置在验证消息或为消息创建数字签名时使用的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c4955-169">Gets or sets the hashing algorithm used when authenticating messages or creating a digital signature for a message.</span></span></summary>
        <value><span data-ttu-id="c4955-170"><see cref="T:System.Messaging.HashAlgorithm" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c4955-170">One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.</span></span> <span data-ttu-id="c4955-171">默认值为 <see langword="MD5" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-171">The default is <see langword="MD5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-172">属性标识在对消息 <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> 进行身份验证或为消息创建数字签名时消息队列使用的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c4955-172">The <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> property identifies the hashing algorithm Message Queuing uses when authenticating messages or when creating a digital signature for a message.</span></span>  
  
 <span data-ttu-id="c4955-173">在为消息创建数字签名时，源计算机上的消息队列将使用哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c4955-173">Message Queuing on the source computer uses the hashing algorithm when creating a digital signature for a message.</span></span> <span data-ttu-id="c4955-174">然后，目标队列管理器使用相同的哈希算法在收到消息时对消息进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4955-174">The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</span></span>  

 <span data-ttu-id="c4955-175">由于与 MD5 冲突，Microsoft 建议使用 SHA256。</span><span class="sxs-lookup"><span data-stu-id="c4955-175">Due to collision problems with MD5, Microsoft recommends SHA256.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgLabel")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgLabel")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-176">获取或设置应用程序定义的、描述消息的字符串。</span><span class="sxs-lookup"><span data-stu-id="c4955-176">Gets or sets an application-defined string that describes the message.</span></span></summary>
        <value><span data-ttu-id="c4955-177">消息的标签。</span><span class="sxs-lookup"><span data-stu-id="c4955-177">The label of the message.</span></span> <span data-ttu-id="c4955-178">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="c4955-178">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-179">例如，消息标签可用于显示目的，或根据标签值有选择地处理消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-179">A message label can be used for display purposes, for example, or to selectively process messages based on the label value.</span></span> <span data-ttu-id="c4955-180">消息标签的最大长度为249个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="c4955-180">The maximum length for a message label is 249 Unicode characters.</span></span> <span data-ttu-id="c4955-181">此标签在消息中不必是唯一的。</span><span class="sxs-lookup"><span data-stu-id="c4955-181">The label does not need to be unique across messages.</span></span>  
  
 <span data-ttu-id="c4955-182">消息队列和消息标签代表一个应用程序定义的值，可帮助在用户可读的字词中标识队列或消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-182">Message queue and message labels represent an application-defined value that can help to identify the queue or message in human-readable terms.</span></span> <span data-ttu-id="c4955-183">应用程序负责解释标签内容;它们对于消息队列应用程序没有内部意义。</span><span class="sxs-lookup"><span data-stu-id="c4955-183">It is the responsibility of the application to interpret label contents; they have no intrinsic meaning to the Message Queuing application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgPriority")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgPriority")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-184">获取或设置消息优先级，用于确定消息在队列中的位置。</span><span class="sxs-lookup"><span data-stu-id="c4955-184">Gets or sets the message priority, which is used to determine where the message is placed in the queue.</span></span></summary>
        <value><span data-ttu-id="c4955-185">表示非事务性消息优先级的 <see cref="T:System.Messaging.MessagePriority" /> 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="c4955-185">One of the <see cref="T:System.Messaging.MessagePriority" /> enumeration values that represents the priority level of a non-transactional message.</span></span> <span data-ttu-id="c4955-186">默认值为 <see langword="Normal" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-186">The default is <see langword="Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-187"><xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>属性会影响消息队列在消息处理过程中处理消息的方式，以及消息到达其目标时消息在队列中的放置位置。</span><span class="sxs-lookup"><span data-stu-id="c4955-187">The <xref:System.Messaging.DefaultPropertiesToSend.Priority%2A> property affects how Message Queuing handles the message while it is en route, as well as where the message is placed in the queue when it reaches its destination.</span></span> <span data-ttu-id="c4955-188">优先级较高的消息在路由过程中给予首选项，并在队列前面插入。</span><span class="sxs-lookup"><span data-stu-id="c4955-188">Higher priority messages are given preference during routing and inserted toward the front of the queue.</span></span> <span data-ttu-id="c4955-189">而具有相同优先级的消息则会按照到达的先后时间插入到队列中。</span><span class="sxs-lookup"><span data-stu-id="c4955-189">Messages with the same priority are placed in the queue according to their arrival time.</span></span>  
  
 <span data-ttu-id="c4955-190">只能为非事务性消息设置消息优先级。</span><span class="sxs-lookup"><span data-stu-id="c4955-190">Message priority can only be set meaningfully for non-transactional messages.</span></span> <span data-ttu-id="c4955-191">事务性消息的优先级自动设置为 `Lowest` ，从而导致忽略事务消息优先级。</span><span class="sxs-lookup"><span data-stu-id="c4955-191">The priority for transactional messages is automatically set to `Lowest`, which causes transactional message priority to be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
        <altmember cref="P:System.Messaging.Message.Priority" />
        <altmember cref="T:System.Messaging.MessagePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgRecoverable")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgRecoverable")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-192">获取或设置一个值，该值指示在出现计算机故障或网络问题时是否保证传递消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-192">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span></span></summary>
        <value><span data-ttu-id="c4955-193">如果通过在消息传递过程中将消息保存到磁盘上来保证消息的传递，则为 <see langword="true" />；如果不能保证传递，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-193"><see langword="true" /> if the message is guaranteed delivery by saving it to disk while en route; <see langword="false" /> if delivery is not assured.</span></span> <span data-ttu-id="c4955-194">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-194">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-195"><xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>属性指示是否保证消息的传递，即使在消息发送到目标队列时计算机发生崩溃。</span><span class="sxs-lookup"><span data-stu-id="c4955-195">The <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> property indicates whether delivery of a message is guaranteed, even if a computer crashes while the message is en route to the destination queue.</span></span>  
  
 <span data-ttu-id="c4955-196">如果保证消息的传递，则会在路由中的每个步骤本地存储消息，直到将消息成功转发到下一台计算机。</span><span class="sxs-lookup"><span data-stu-id="c4955-196">If delivery of a message is guaranteed, the message is stored locally at every step along the route until the message is successfully forwarded to the next computer.</span></span> <span data-ttu-id="c4955-197">设置 <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> 为 `true` on <xref:System.Messaging.DefaultPropertiesToSend> 可能会影响吞吐量。</span><span class="sxs-lookup"><span data-stu-id="c4955-197">Setting <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> to `true` on <xref:System.Messaging.DefaultPropertiesToSend> could affect the throughput.</span></span>  
  
 <span data-ttu-id="c4955-198">如果消息是事务性的，则无论是否设置为，消息队列都会自动将消息视为可恢复消息 <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="c4955-198">If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of whether <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.Recoverable" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgResponseQueue")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgResponseQueue")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-199">获取或设置接收应用程序生成的响应消息的队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-199">Gets or sets the queue that receives application-generated response messages.</span></span></summary>
        <value><span data-ttu-id="c4955-200">应用程序生成的响应消息所返回到的 <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-200">The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.</span></span> <span data-ttu-id="c4955-201">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-201">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-202"><xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>属性标识接收应用程序生成的响应消息的队列，该消息由接收应用程序返回到发送应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4955-202">The <xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A> property identifies the queue that receives application-generated response messages that are returned to the sending application by the receiving application.</span></span> <span data-ttu-id="c4955-203">当应用程序发送消息时，发送应用程序会指定响应队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-203">Response queues are specified by the sending application when the application sends its messages.</span></span> <span data-ttu-id="c4955-204">任何可用队列均可指定为响应队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-204">Any available queue can be specified as a response queue.</span></span>  
  
 <span data-ttu-id="c4955-205">返回到响应队列的消息是应用程序特定的。</span><span class="sxs-lookup"><span data-stu-id="c4955-205">Messages returned to the response queue are application-specific.</span></span> <span data-ttu-id="c4955-206">应用程序必须定义消息中的内容，以及收到消息时要执行的操作。</span><span class="sxs-lookup"><span data-stu-id="c4955-206">The application must define what is in the messages as well as what is to be done when a message is received.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgTimeToBeReceived")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgTimeToBeReceived")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-207">获取或设置从目标队列中检索消息的时间限制。</span><span class="sxs-lookup"><span data-stu-id="c4955-207">Gets or sets the time limit for the message to be retrieved from the destination queue.</span></span></summary>
        <value><span data-ttu-id="c4955-208">从目标队列中接收已发送消息的总时间（以秒计）。</span><span class="sxs-lookup"><span data-stu-id="c4955-208">The total time, in seconds, for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="c4955-209">默认值为 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-209">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-210"><xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>属性指定从目标队列接收发送的消息的总时间（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="c4955-210">The <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> property specifies the total time in seconds for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="c4955-211">此时间限制包括进入目标队列所用的时间，以及应用程序检索消息之前在队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="c4955-211">This time limit includes the time spent getting to the destination queue, plus the time spent waiting in the queue before the message is retrieved by an application.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4955-212">使用从属客户端计算机时，请将客户端计算机上的时钟与运行消息队列的服务器上的时钟同步。</span><span class="sxs-lookup"><span data-stu-id="c4955-212">When using dependent client computers, synchronize the clock on the client computer with the clock on the server running Message Queuing.</span></span> <span data-ttu-id="c4955-213">如果两个时钟不同步，则当不是时发送消息时，可能会出现不可预知的行为 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> <xref:System.Messaging.Message.InfiniteTimeout> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-213">If the two clocks are not synchronized, you might see unpredictable behavior when sending messages when <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> is not <xref:System.Messaging.Message.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="c4955-214">如果 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 从队列中删除消息之前该间隔过期，则消息队列应用程序将丢弃该消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-214">If the <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> interval expires before the message is removed from the queue, the Message Queuing application discards the message.</span></span> <span data-ttu-id="c4955-215">如果消息的 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> 属性设置为 `true` ，或者如果为，则将消息发送到死信队列 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="c4955-215">The message is either sent to the dead-letter queue, if the message's <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> property is set to `true`, or ignored, if <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `false`.</span></span> <span data-ttu-id="c4955-216">如果 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 小于，则 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 优先。</span><span class="sxs-lookup"><span data-stu-id="c4955-216">If <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> is less than <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="c4955-217"><xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>如果在计时器过期之前未检索到消息，则可以将消息的属性设置为请求消息队列向发送应用程序发送否定确认消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-217">The message's <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property can be set to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c4955-218">如果你指定接收 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 否定确认，则当的值小于的值时，将不会收到这些确认 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="c4955-218">If you have specified to receive <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> negative acknowledgments, you will not receive them when the value of <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> is less than the value of <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>.</span></span>  
  
 <span data-ttu-id="c4955-219">当在事务中发送多条消息时，消息队列将使用第一条消息的 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4955-219">When several messages are sent in a transaction, Message Queuing uses the value of the first message's <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgTimeToReachQueue")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgTimeToReachQueue")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-220">获取或设置消息到达队列的时间限制。</span><span class="sxs-lookup"><span data-stu-id="c4955-220">Gets or sets the time limit for the message to reach the queue.</span></span></summary>
        <value><span data-ttu-id="c4955-221">从发送消息的时间算起，消息到达目标队列的时间限制（以秒计）。</span><span class="sxs-lookup"><span data-stu-id="c4955-221">The time limit in seconds for a message to reach the destination queue, from the time the message is sent.</span></span> <span data-ttu-id="c4955-222">默认值为 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-222">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-223">如果该 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 时间间隔在消息到达其目标之前过期，则消息队列应用程序将丢弃该消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-223">If the <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> interval expires before the message reaches its destination, the Message Queuing application discards the message.</span></span> <span data-ttu-id="c4955-224">如果消息的 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> 属性设置为 `true` ，或者如果为，则将消息发送到死信队列 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="c4955-224">The message is either sent to the dead-letter queue, if the message's <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> property is set to `true`, or ignored, if <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `false`.</span></span> <span data-ttu-id="c4955-225">如果 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 大于，则 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 优先。</span><span class="sxs-lookup"><span data-stu-id="c4955-225">If <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> is greater than <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="c4955-226">消息的 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> 属性可以设置为请求消息队列向发送应用程序发送否定确认消息（如果在计时器过期之前消息不会到达）。</span><span class="sxs-lookup"><span data-stu-id="c4955-226">The message's <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property can be set to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</span></span>  
  
 <span data-ttu-id="c4955-227">如果 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 为0秒，则当队列正在等待消息时，消息队列将尝试将消息发送到其目标。</span><span class="sxs-lookup"><span data-stu-id="c4955-227">If <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> is 0 seconds, Message Queuing tries once to send the message to its destination if the queue is waiting for the message.</span></span> <span data-ttu-id="c4955-228">如果队列是本地的，则消息始终到达队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-228">If the queue is local, the message always reaches the queue.</span></span>  
  
 <span data-ttu-id="c4955-229">当在事务中发送多条消息时，消息队列将使用第一条消息的 <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="c4955-229">When several messages are sent in a transaction, Message Queuing uses the value of the first message's <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgTransactionStatusQueue")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgTransactionStatusQueue")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-230">获取源计算机中的事务状态队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-230">Gets the transaction status queue on the source computer.</span></span></summary>
        <value><span data-ttu-id="c4955-231">源计算机中的事务状态队列，用于将确认消息发回发送应用程序。</span><span class="sxs-lookup"><span data-stu-id="c4955-231">The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</span></span> <span data-ttu-id="c4955-232">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-232">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-233"><xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>属性标识源计算机上的事务状态队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-233">The <xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A> property identifies the transaction status queue on the source computer.</span></span> <span data-ttu-id="c4955-234">属性由消息队列设置，在检索发送到外部队列的事务性消息时由连接器应用程序使用。</span><span class="sxs-lookup"><span data-stu-id="c4955-234">The property is set by Message Queuing, and is used by connector applications when retrieving transactional messages sent to a foreign queue.</span></span>  
  
 <span data-ttu-id="c4955-235">在非 Microsoft 消息队列的队列系统中存在一个外部队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-235">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="c4955-236">Microsoft 消息队列通过连接器应用程序与此类队列通信。</span><span class="sxs-lookup"><span data-stu-id="c4955-236">Microsoft Message Queuing communicates with such queues through a connector application.</span></span>  
  
 <span data-ttu-id="c4955-237">连接器应用程序可以使用事务状态队列向发送应用程序发送确认消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-237">The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</span></span> <span data-ttu-id="c4955-238">即使发送应用程序未请求其他确认，事务状态队列也应该接收这些确认。</span><span class="sxs-lookup"><span data-stu-id="c4955-238">The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgUseAuthentication")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgUseAuthentication")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-239">获取或设置一个值，该值指示发送前是否必须验证消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-239">Gets or sets a value that indicates whether the message must be authenticated before being sent.</span></span></summary>
        <value><span data-ttu-id="c4955-240">如果发送应用程序请求对消息进行验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-240"><see langword="true" /> if the sending application requested authentication for the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c4955-241">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-241">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-242"><xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>属性指定是否需要对消息进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4955-242">The <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> property specifies whether the message needs to be authenticated.</span></span> <span data-ttu-id="c4955-243">如果发送应用程序请求身份验证，则消息队列会创建数字签名，并使用它在发送消息时对消息进行签名，并在收到消息时对消息进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="c4955-243">If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and to authenticate the message when it is received.</span></span>  
  
 <span data-ttu-id="c4955-244">如果将消息发送到只接受经过身份验证的消息的队列，当设置为时，消息到达队列时将被拒绝 <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="c4955-244">If a message is sent to a queue that only accepts authenticated messages, the message will be rejected when it reaches the queue if <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="c4955-245">不能查看消息的属性，并确定消息身份验证是否失败。</span><span class="sxs-lookup"><span data-stu-id="c4955-245">It is not possible to look at the properties of a message and determine whether a message failed authentication.</span></span> <span data-ttu-id="c4955-246">身份验证失败的消息将被丢弃，且不会传递到队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-246">Messages that fail authentication are discarded and are not delivered to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-247">获取或设置一个值，该值指示是否将未能传递的消息的副本发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-247">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span></span></summary>
        <value><span data-ttu-id="c4955-248">如果消息传递失败应导致向死信队列发送消息的副本，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-248"><see langword="true" /> if message delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c4955-249">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-249">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-250"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> 并 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> 指定 "消息队列" 跟踪消息的方式。</span><span class="sxs-lookup"><span data-stu-id="c4955-250"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> and <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specify how Message Queuing will track a message.</span></span> <span data-ttu-id="c4955-251">如果 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> 为 `true` ，则在) 的非事务性消息 (传递失败时，消息将发送到无法传递消息的计算机上的非事务性死信队列 (例如，如果消息计时器过期) 。</span><span class="sxs-lookup"><span data-stu-id="c4955-251">If <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `true`, then in case of delivery failure (for non-transactional messages), the message is sent to the non-transactional dead-letter queue on the computer that could not deliver the message (for example, if a message timer expires).</span></span>  
  
 <span data-ttu-id="c4955-252">如果事务消息传递失败，则会在所有负面和有疑问的情况下将消息发送到源计算机上的事务性死信队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-252">In the case of delivery failure for transactional messages, the message is sent to the transactional dead-letter queue on the source computer in all negative and in-doubt cases.</span></span>  
  
 <span data-ttu-id="c4955-253">如果将消息存储在死信队列中，则定期清空队列以删除不再需要的消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-253">When you store messages in a dead-letter queue, empty the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="c4955-254">死信队列中存储的消息会根据队列所在计算机的大小配额计数。</span><span class="sxs-lookup"><span data-stu-id="c4955-254">Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</span></span> <span data-ttu-id="c4955-255">计算机配额由管理员设置，是指分配给计算机上的消息的总大小，而不只是在单个队列中。</span><span class="sxs-lookup"><span data-stu-id="c4955-255">The computer quota is set by the administrator and refers to the total size allocated for storing messages on a computer, not just in a single queue.</span></span>  
  
 <span data-ttu-id="c4955-256">不创建日志或死信队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-256">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="c4955-257">这些都是消息队列生成的系统队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-257">These are both system queues that are generated by Message Queuing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgUseEncryption")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgUseEncryption")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-258">获取或设置一个值，该值指示是否使消息成为私有的。</span><span class="sxs-lookup"><span data-stu-id="c4955-258">Gets or sets a value that indicates whether to make the message private.</span></span></summary>
        <value><span data-ttu-id="c4955-259">要求消息队列加密消息时为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-259"><see langword="true" /> to require Message Queuing to encrypt the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c4955-260">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-260">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-261">如果消息是私有的，则在发送消息并在收到消息时解密。</span><span class="sxs-lookup"><span data-stu-id="c4955-261">If a message is private, its body is encrypted before it is sent and is decrypted when it is received.</span></span> <span data-ttu-id="c4955-262">若要发送专用消息，发送应用程序必须指定使用加密，并根据需要指定要应用的加密算法。</span><span class="sxs-lookup"><span data-stu-id="c4955-262">To send a private message, the sending application must specify that encryption be used and, optionally, which encryption algorithm to apply.</span></span>  
  
 <span data-ttu-id="c4955-263">发送专用消息时，应用程序不需要执行消息加密。</span><span class="sxs-lookup"><span data-stu-id="c4955-263">When sending private messages, it is not necessary that your application perform the message encryption.</span></span> <span data-ttu-id="c4955-264">当你的应用程序在可访问目录服务的 Microsoft Windows 2000 企业内发送消息时，消息队列可以为你加密消息正文。</span><span class="sxs-lookup"><span data-stu-id="c4955-264">Message Queuing can encrypt the message body for you when your application sends messages within a Microsoft Windows 2000 enterprise where there is access to the directory service.</span></span> <span data-ttu-id="c4955-265">接收专用消息时，它始终是用于解密消息正文的接收队列管理器。</span><span class="sxs-lookup"><span data-stu-id="c4955-265">When receiving private messages, it is always the receiving Queue Manager that decrypts the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgUseJournalQueue")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgUseJournalQueue")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-266">获取或设置一个值，该值指示是否在始发计算机的计算机日记中保留消息的副本。</span><span class="sxs-lookup"><span data-stu-id="c4955-266">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span></span></summary>
        <value><span data-ttu-id="c4955-267">要求在消息成功地从发件计算机传送到下一步后，将消息的副本保存在发件计算机的计算机日记中时为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-267"><see langword="true" /> to require that a copy of a message be kept in the originating computer's machine journal after it has been successfully transmitted from the originating computer to the next step; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c4955-268">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-268">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-269"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> 并 <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> 指定 "消息队列" 跟踪消息的方式。</span><span class="sxs-lookup"><span data-stu-id="c4955-269"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> and <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specify how Message Queuing will track a message.</span></span> <span data-ttu-id="c4955-270">如果 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> 为 `true` ，则在传输消息的每个步骤中，将副本保存在原始计算机上的计算机日志中。</span><span class="sxs-lookup"><span data-stu-id="c4955-270">If <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> is `true`, then at each step that a message is transmitted, a copy is kept in the computer journal on the originating computer.</span></span>  
  
 <span data-ttu-id="c4955-271">如果目标队列位于远程计算机上，则仅将发送的消息复制到日记队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-271">The sent message will only be copied to the journal queue if the destination queue is on a remote computer.</span></span> <span data-ttu-id="c4955-272">如果目标在本地计算机上，则该消息将直接发送到队列;无需执行日记操作的中间步骤。</span><span class="sxs-lookup"><span data-stu-id="c4955-272">If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</span></span>  
  
 <span data-ttu-id="c4955-273">在日志队列中存储消息时，请定期清空队列以删除不再需要的消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-273">When you store messages in a journal queue, empty the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="c4955-274">日志队列中存储的消息会根据队列所在计算机的配额计数 (计算机配额由管理员) 设置。</span><span class="sxs-lookup"><span data-stu-id="c4955-274">Messages stored in journal queues count against the quota for the computer where the queue resides (the computer quota is set by the administrator).</span></span>  
  
 <span data-ttu-id="c4955-275">不创建日志或死信队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-275">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="c4955-276">这些都是消息队列生成的系统队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-276">These are both system queues that are generated by Message Queuing.</span></span>  
  
 <span data-ttu-id="c4955-277">消息和队列均可指定日志记录。</span><span class="sxs-lookup"><span data-stu-id="c4955-277">Journaling can be specified by both the message and the queue.</span></span> <span data-ttu-id="c4955-278">如果 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> 为 `true` ，则在发送消息时，会将其发送出去。</span><span class="sxs-lookup"><span data-stu-id="c4955-278">When <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> is `true`, the message is journaled when it is sent.</span></span> <span data-ttu-id="c4955-279">如果 <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> 为 `true` ，则在收到消息时，将对其进行日记。</span><span class="sxs-lookup"><span data-stu-id="c4955-279">When <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> is `true`, the message is journaled when it is received.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Messaging.MessagingDescription("MsgUseTracing")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Messaging.MessagingDescription("MsgUseTracing")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4955-280">获取或设置一个值，该值指示是否在消息向目标队列移动的过程中跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-280">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span></span></summary>
        <value><span data-ttu-id="c4955-281">如果在发往目标队列的过程中，由原始消息产生的每个中间步骤都生成发送给系统报告队列的报告，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-281"><see langword="true" /> if each intermediate step made by the original message en route to the destination queue will generate a report to be sent to the system's report queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c4955-282">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4955-282">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4955-283"><xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>属性指定在消息到达目标队列时是否跟踪该消息的路由。</span><span class="sxs-lookup"><span data-stu-id="c4955-283">The <xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue.</span></span> <span data-ttu-id="c4955-284">如果 `true` 为，则每次消息通过消息队列路由服务器时，消息队列生成的报告消息都会发送到报表队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-284">If `true`, a Message Queuing-generated report message is sent to a report queue each time the message passes through a Message Queuing routing server.</span></span> <span data-ttu-id="c4955-285">报表队列由源队列管理器指定。</span><span class="sxs-lookup"><span data-stu-id="c4955-285">The report queue is specified by the source Queue Manager.</span></span> <span data-ttu-id="c4955-286">报表队列并不限于消息队列生成的报表消息。</span><span class="sxs-lookup"><span data-stu-id="c4955-286">Report queues are not limited to Message Queuing-generated report messages.</span></span> <span data-ttu-id="c4955-287">还可以将应用程序生成的消息发送到报表队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-287">Your application-generated messages can be sent to report queues as well.</span></span>  
  
 <span data-ttu-id="c4955-288">使用跟踪涉及到设置 Active Directory 和为消息队列企业指定报表队列。</span><span class="sxs-lookup"><span data-stu-id="c4955-288">Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</span></span> <span data-ttu-id="c4955-289">这些设置由管理员配置。</span><span class="sxs-lookup"><span data-stu-id="c4955-289">These settings are configured by the administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
  </Members>
</Type>
