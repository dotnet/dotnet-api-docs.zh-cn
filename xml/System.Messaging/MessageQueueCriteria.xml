<Type Name="MessageQueueCriteria" FullName="System.Messaging.MessageQueueCriteria">
  <Metadata><Meta Name="ms.openlocfilehash" Value="301bc9e2bbb0743b1ef794cfe0afbc45404200d1" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69115890" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueueCriteria" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueCriteria extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueCriteria" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueCriteria" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueCriteria" />
  <TypeSignature Language="F#" Value="type MessageQueueCriteria = class" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>当执行查询时使用 <see cref="T:System.Messaging.MessageQueue" /> 类的 <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> 方法筛选消息队列。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue>类提供了许多方法，使用这些方法可以筛选网络上公用队列的搜索。 按队列标签、类别或服务器位置进行筛选的特定方法为 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%2A> 、 <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%2A> 和 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%2A> 。  
  
 <xref:System.Messaging.MessageQueueCriteria>与方法一起使用时，类 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 允许您优化筛选器。 您可以指定不是通过一种 `GetPublicQueuesBy` * 方法或多个条件专门解决的搜索条件。 您可以将实例传递给方法，以便进行 <xref:System.Messaging.MessageQueueCriteria> <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 搜索，例如，队列创建或修改时间、队列所在的计算机、队列标签或类别或这些属性的任意组合。  
  
 按多个属性进行筛选时，通过将 `AND` 运算符应用于属性集来撰写条件。 因此，当您将属性的值与属性一起指定时，您需要在 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> 指定的时间之后、在 <xref:System.Messaging.MessageQueueCriteria.MachineName%2A> 特定计算机上创建的所有队列。  
  
 设置任何属性时，设置属性的方法还会设置一个标志，用于指示该属性应包含在所生成的筛选器中。 不能从搜索筛选器中删除单独的属性。 相反，您可以通过调用从筛选器中删除所有属性 <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> ，然后将您要生成的属性设置为搜索筛选器。 <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>将所有属性重置为 "未设置" 默认状态。  
  
 必须先设置属性，然后才能尝试读取它;否则，将引发异常。  
  
   
  
## Examples  
 下面的示例循环访问消息队列，并显示在最后一天中创建并且存在于计算机 "MyComputer" 上的每个队列的路径。  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
    <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueCriteria ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueCriteria.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueCriteria();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Messaging.MessageQueueCriteria" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueCriteria.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置作为网络中队列的筛选依据的类别。</summary>
        <value>队列的类别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 队列类别允许应用程序将其队列分类。 例如，您可以将所有计费队列放在一个类别中，将所有订单队列放在另一个类别中。 此 <xref:System.Messaging.MessageQueue.Category%2A> 属性是应用程序定义的，对消息队列没有固有的意义。  
  
 如果在网络上搜索队列时只按类别进行筛选，则可以使用 <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%2A> 专门为此目的而设计的方法。 如果要按包含类别的多个条件进行搜索，请设置此 <xref:System.Messaging.MessageQueueCriteria.Category%2A> 属性并将参数传递给 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> 属性前未设置该属性。</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="ClearAll">
      <MemberSignature Language="C#" Value="public void ClearAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueCriteria.ClearAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAll();" />
      <MemberSignature Language="F#" Value="member this.ClearAll : unit -&gt; unit" Usage="messageQueueCriteria.ClearAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除置入筛选器的所有属性，并将所有属性值设为“未设置”状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用时 <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> ，方法会设置与每个属性相关的标志 <xref:System.Messaging.MessageQueueCriteria> ，这表示当应用程序创建搜索筛选器时不包含任何属性。 <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A>将当前具有值的所有属性重置为 "未设置" 默认状态。 以后更改的任何属性都将使用逻辑运算符组合起来 `AND` ，以便为方法定义新的筛选器 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 。 更改属性时，设置属性的方法还会设置一个标志，指示它应包含在所生成的筛选器中。  
  
 不能从搜索筛选器中删除单独的属性。 相反，您可以通过调用从筛选器中删除所有属性 <xref:System.Messaging.MessageQueueCriteria.ClearAll%2A> ，然后将您要生成的属性设置为搜索筛选器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAfter">
      <MemberSignature Language="C#" Value="public DateTime CreatedAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedAfter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.CreatedAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatedAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreatedAfter { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.CreatedAfter : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.CreatedAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置队列创建日期和时间的下限，以此作为筛选网络上的队列的依据。</summary>
        <value><see cref="T:System.DateTime" />，指定队列创建日期和时间的下限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueCriteria>使用逻辑来合并属性 `AND` ，因此， <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> 为队列的创建设置时间间隔和界限。 如果设置为 "仅" <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> ，则日期没有上边界。  
  
 如果尝试将设置 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> 为 <xref:System.DateTime> 大于的值 <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> ， <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> 则将重置为与相同的（新）值 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> 属性前未设置该属性。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
      </Docs>
    </Member>
    <Member MemberName="CreatedBefore">
      <MemberSignature Language="C#" Value="public DateTime CreatedBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreatedBefore" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.CreatedBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property CreatedBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreatedBefore { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.CreatedBefore : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.CreatedBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置队列创建日期和时间的上限，以此作为筛选网络上的队列的依据。</summary>
        <value><see cref="T:System.DateTime" />，指定队列创建日期和时间的上限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueCriteria>使用逻辑来合并属性 `AND` ，因此， <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> 为队列的创建设置时间间隔和界限。 如果设置为 "仅" <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> ，则日期没有下限。  
  
 如果尝试将设置 <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> 为早于的 <xref:System.DateTime> 值 <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> ， <xref:System.Messaging.MessageQueueCriteria.CreatedAfter%2A> 则将重置为与相同的（新）值 <xref:System.Messaging.MessageQueueCriteria.CreatedBefore%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> 属性前未设置该属性。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueCriteria.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置作为网络中队列的筛选依据的标签。</summary>
        <value>队列的标签。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 消息队列的标签是应用程序定义的队列描述。 它对于消息队列没有任何内部意义。  
  
 如果在网络上搜索队列时只按标签进行筛选，则可以使用 <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%2A> 专门为此目的而设计的方法。 如果要按多个包含标签的条件进行搜索，请设置此 <xref:System.Messaging.MessageQueueCriteria.Label%2A> 属性并将参数传递给 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> 属性前未设置该属性。</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Messaging.MessageQueueCriteria.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置作为网络中队列的筛选依据的计算机名。</summary>
        <value>队列驻留的计算机的服务器名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 消息队列反映了 <xref:System.Messaging.MessageQueue.MachineName%2A> 队列所驻留的服务器的名称，但没有前面的反斜杠（ \\ \\ ）。  
  
 如果在网络上搜索队列时只按计算机名进行筛选，则可以使用 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%2A> 专门为此目的而设计的方法。 如果要按包含计算机名称的多个条件进行搜索，请设置此 <xref:System.Messaging.MessageQueueCriteria.MachineName%2A> 属性，并将参数传递给 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 。  
  
 还可以通过在方法中指定计算机名称，在网络上搜索专用队列 <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> 属性前未设置该属性。  
  
- 或 - 
计算机名语法无效。</exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedAfter">
      <MemberSignature Language="C#" Value="public DateTime ModifiedAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedAfter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ModifiedAfter { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ModifiedAfter : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.ModifiedAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置队列修改日期和时间的下限，以此作为筛选网络上的队列的依据。</summary>
        <value><see cref="T:System.DateTime" />，指定队列最近修改日期和时间的下限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更改队列的属性时，将设置队列的修改标志，但不会在消息被读取或写入队列时设置。  
  
 <xref:System.Messaging.MessageQueueCriteria>使用逻辑来合并属性 `AND` ，因此， <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> 为队列的最后修改时间间隔设置和界限。 如果设置为 "仅" <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> ，则日期没有上边界。  
  
 如果尝试将设置 <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> 为 <xref:System.DateTime> 大于的值 <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> ， <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> 则将重置为与相同的（新）值 <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> 属性前未设置该属性。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedBefore">
      <MemberSignature Language="C#" Value="public DateTime ModifiedBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedBefore" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ModifiedBefore { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.ModifiedBefore : DateTime with get, set" Usage="System.Messaging.MessageQueueCriteria.ModifiedBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置队列修改日期和时间的上限，以此作为筛选网络上的队列的依据。</summary>
        <value><see cref="T:System.DateTime" />，指定队列最近修改日期和时间的上限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更改队列的属性时，将设置队列的修改标志，但不会在消息被读取或写入队列时设置。  
  
 <xref:System.Messaging.MessageQueueCriteria>使用逻辑来合并属性 `AND` ，因此， <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> 为队列的最后修改时间间隔设置和界限。 如果设置为 "仅" <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> ，则日期没有下限。  
  
 如果尝试将设置 <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> 为早于的 <xref:System.DateTime> 值 <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> ， <xref:System.Messaging.MessageQueueCriteria.ModifiedAfter%2A> 则将重置为与相同的（新）值 <xref:System.Messaging.MessageQueueCriteria.ModifiedBefore%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">应用程序在读取 <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> 属性前未设置该属性。</exception>
        <altmember cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
  </Members>
</Type>
