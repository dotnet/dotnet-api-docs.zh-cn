<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06d7d0e11493b9c6ffec8fc3198ba8fa4a7120ba" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70696039" /></Metadata><TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f2851-101">为 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="f2851-101">Provides data for the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span></span> <span data-ttu-id="f2851-102">当异步查看操作调用事件处理程序时，此类的一个实例将被传递给该处理程序。</span><span class="sxs-lookup"><span data-stu-id="f2851-102">When your asynchronous peek operation calls an event handler, an instance of this class is passed to the handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2851-103">如果使用事件通知来速览 (读取，而不从队列异步删除) 消息，则必须创建处理消息处理的方法。</span><span class="sxs-lookup"><span data-stu-id="f2851-103">When you use event notification to peek (read without removing) messages asynchronously from the queue, you must create a method that handles your message processing.</span></span> <span data-ttu-id="f2851-104">你的代码必须调用 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 来开始异步处理。</span><span class="sxs-lookup"><span data-stu-id="f2851-104">Your code must call <xref:System.Messaging.MessageQueue.BeginPeek%2A> to begin the asynchronous processing.</span></span> <span data-ttu-id="f2851-105">扫视消息时，会通过事件通知你的应用程序 <xref:System.Messaging.MessageQueue.PeekCompleted> 。</span><span class="sxs-lookup"><span data-stu-id="f2851-105">When a message is peeked, your application is notified through the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="f2851-106">的实例 <xref:System.Messaging.PeekCompletedEventArgs> 被传递到调用事件处理程序的事件委托。</span><span class="sxs-lookup"><span data-stu-id="f2851-106">An instance of <xref:System.Messaging.PeekCompletedEventArgs> is passed into the event delegate that calls your event handler.</span></span> <span data-ttu-id="f2851-107">与事件关联的数据 <xref:System.Messaging.MessageQueue.PeekCompleted> 包含在委托的 <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> 参数中。</span><span class="sxs-lookup"><span data-stu-id="f2851-107">The data associated with the <xref:System.Messaging.MessageQueue.PeekCompleted> event is contained in the delegate's <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.</span></span>  
  
 <span data-ttu-id="f2851-108">可以通过两种方式提供事件完成通知：事件通知和回调。</span><span class="sxs-lookup"><span data-stu-id="f2851-108">There are two ways to provide notification of event completion: event notification and callbacks.</span></span> <span data-ttu-id="f2851-109"><xref:System.Messaging.PeekCompletedEventArgs> 仅与事件通知一起使用。</span><span class="sxs-lookup"><span data-stu-id="f2851-109"><xref:System.Messaging.PeekCompletedEventArgs> is used only with event notification.</span></span> <span data-ttu-id="f2851-110">有关回调和事件通知的比较信息，请参阅 MSDN 上的 "事件与回调"。</span><span class="sxs-lookup"><span data-stu-id="f2851-110">For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</span></span>  
  
 <span data-ttu-id="f2851-111"><xref:System.Messaging.PeekCompletedEventArgs> 提供对通过成员启动异步查看操作结束的消息的访问 <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f2851-111"><xref:System.Messaging.PeekCompletedEventArgs> provides access to the message that initiated the end of the asynchronous peek operation, through the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> member.</span></span> <span data-ttu-id="f2851-112">这是对消息的另一种访问权限，其行为与对的调用大致相同 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f2851-112">This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2851-113">下面的代码示例为事件创建事件处理程序 <xref:System.Messaging.MessageQueue.PeekCompleted> ，并使用将其与事件委托相关联 <xref:System.Messaging.PeekCompletedEventHandler> 。</span><span class="sxs-lookup"><span data-stu-id="f2851-113">The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.PeekCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.PeekCompletedEventHandler>.</span></span> <span data-ttu-id="f2851-114">事件处理程序 `MyPeekCompleted` 查看消息并将其标签写入屏幕。</span><span class="sxs-lookup"><span data-stu-id="f2851-114">The event handler, `MyPeekCompleted`, peeks a message and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2851-115">获取或设置请求的异步操作结果。</span><span class="sxs-lookup"><span data-stu-id="f2851-115">Gets or sets the result of the asynchronous operation requested.</span></span></summary>
        <value><span data-ttu-id="f2851-116">包含与查看操作关联的数据的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="f2851-116">A <see cref="T:System.IAsyncResult" /> that contains the data associated with the peek operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2851-117"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> 标识正在进行的或已完成的异步操作。</span><span class="sxs-lookup"><span data-stu-id="f2851-117"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifies ongoing or completed asynchronous operations.</span></span> <span data-ttu-id="f2851-118">属性包含的数据可帮助确定要完成的几个可能的异步操作中的哪一个，以及何时传递到事件处理程序，使 <xref:System.Messaging.MessageQueue.EndPeek%2A> 能够访问与已完成操作关联的消息。</span><span class="sxs-lookup"><span data-stu-id="f2851-118">The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndPeek%2A> to access the message associated with the completed operation.</span></span>  
  
 <span data-ttu-id="f2851-119">当你调用时， <xref:System.Messaging.MessageQueue.BeginPeek%2A> <xref:System.IAsyncResult> 将立即返回，即使存在消息（如果存在），因为操作未完成。</span><span class="sxs-lookup"><span data-stu-id="f2851-119">When you call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</span></span> <span data-ttu-id="f2851-120"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A>指示异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="f2851-120">The <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> indicates the state of the asynchronous operation.</span></span> <span data-ttu-id="f2851-121"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 创建一个对象，该对象在整个操作中被修改，直到 <xref:System.Messaging.MessageQueue.EndPeek%2A> 完成。</span><span class="sxs-lookup"><span data-stu-id="f2851-121"><xref:System.Messaging.MessageQueue.BeginPeek%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndPeek%2A> completes it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2851-122">获取同异步查看操作关联的消息。</span><span class="sxs-lookup"><span data-stu-id="f2851-122">Gets the message associated with the asynchronous peek operation.</span></span></summary>
        <value><span data-ttu-id="f2851-123">表示异步查看操作最终结果的 <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="f2851-123">A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous peek operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2851-124"><xref:System.Messaging.PeekCompletedEventArgs.Message%2A>属性提供了一种方法来检索启动异步查看操作结束的消息。</span><span class="sxs-lookup"><span data-stu-id="f2851-124">The <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> property provides a means for retrieving the message that initiated the end of the asynchronous peek operation.</span></span>  
  
 <span data-ttu-id="f2851-125"><xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> 第一次 <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> 读取属性时调用，因此在 <xref:System.Messaging.MessageQueue.EndPeek%2A> 获取此属性的值之前无需调用。</span><span class="sxs-lookup"><span data-stu-id="f2851-125"><xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> is called the first time the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndPeek%2A> prior to getting the value of this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="f2851-126">未能检索到 <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />。</span><span class="sxs-lookup"><span data-stu-id="f2851-126">The <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> could not be retrieved.</span></span> <span data-ttu-id="f2851-127">异步操作的超时可能已过期。</span><span class="sxs-lookup"><span data-stu-id="f2851-127">The time-out on the asynchronous operation might have expired.</span></span></exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>
