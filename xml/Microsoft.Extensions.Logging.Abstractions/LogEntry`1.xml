<Type Name="LogEntry&lt;TState&gt;" FullName="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;TState&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e105f3d81255c4c9ccc8342569b032da437b6e26" /><Meta Name="ms.sourcegitcommit" Value="0bd9d099f2522ef14c6f48a8ea5f2c0650df0f6f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/15/2020" /><Meta Name="ms.locfileid" Value="92085451" /></Metadata><TypeSignature Language="C#" Value="public struct LogEntry&lt;TState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LogEntry`1&lt;TState&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.Abstractions.LogEntry`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure LogEntry(Of TState)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TState&gt;&#xA;public value class LogEntry" />
  <TypeSignature Language="F#" Value="type LogEntry&lt;'State&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TState">To be added.</typeparam>
    <summary><span data-ttu-id="0a33b-101">保存单个日志条目的信息。</span><span class="sxs-lookup"><span data-stu-id="0a33b-101">Holds the information for a single log entry.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogEntry (Microsoft.Extensions.Logging.LogLevel logLevel, string category, Microsoft.Extensions.Logging.EventId eventId, TState state, Exception exception, Func&lt;TState,Exception,string&gt; formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, string category, valuetype Microsoft.Extensions.Logging.EventId eventId, !TState state, class System.Exception exception, class System.Func`3&lt;!TState, class System.Exception, string&gt; formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.#ctor(Microsoft.Extensions.Logging.LogLevel,System.String,Microsoft.Extensions.Logging.EventId,`0,System.Exception,System.Func{`0,System.Exception,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logLevel As LogLevel, category As String, eventId As EventId, state As TState, exception As Exception, formatter As Func(Of TState, Exception, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogEntry(Microsoft::Extensions::Logging::LogLevel logLevel, System::String ^ category, Microsoft::Extensions::Logging::EventId eventId, TState state, Exception ^ exception, Func&lt;TState, Exception ^, System::String ^&gt; ^ formatter);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt; : Microsoft.Extensions.Logging.LogLevel * string * Microsoft.Extensions.Logging.EventId * 'State * Exception * Func&lt;'State, Exception, string&gt; -&gt; Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;" Usage="new Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt; (logLevel, category, eventId, state, exception, formatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="formatter" Type="System.Func&lt;TState,System.Exception,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="logLevel"><span data-ttu-id="0a33b-102">日志级别。</span><span class="sxs-lookup"><span data-stu-id="0a33b-102">The log level.</span></span></param>
        <param name="category"><span data-ttu-id="0a33b-103">日志的类别名称。</span><span class="sxs-lookup"><span data-stu-id="0a33b-103">The category name for the log.</span></span></param>
        <param name="eventId"><span data-ttu-id="0a33b-104">日志事件 ID。</span><span class="sxs-lookup"><span data-stu-id="0a33b-104">The log event Id.</span></span></param>
        <param name="state"><span data-ttu-id="0a33b-105">写入日志的状态。</span><span class="sxs-lookup"><span data-stu-id="0a33b-105">The state for which log is being written.</span></span></param>
        <param name="exception"><span data-ttu-id="0a33b-106">日志异常。</span><span class="sxs-lookup"><span data-stu-id="0a33b-106">The log exception.</span></span></param>
        <param name="formatter"><span data-ttu-id="0a33b-107">格式化程序。</span><span class="sxs-lookup"><span data-stu-id="0a33b-107">The formatter.</span></span></param>
        <summary><span data-ttu-id="0a33b-108">使用指定的日志级别、类别、事件 ID、状态、异常和格式化程序参数创建新 <see cref="T:Microsoft.Extensions.Logging.Abstractions.LogEntry`1" />。</span><span class="sxs-lookup"><span data-stu-id="0a33b-108">Creates a new <see cref="T:Microsoft.Extensions.Logging.Abstractions.LogEntry`1" /> using the specified log level, category, event Id, state, exception and formatter parameters.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a33b-109">获取日志类别。</span><span class="sxs-lookup"><span data-stu-id="0a33b-109">Gets the log category.</span></span></summary>
        <value><span data-ttu-id="0a33b-110">表示日志类别的字符串。</span><span class="sxs-lookup"><span data-stu-id="0a33b-110">A string that represents the log category.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.EventId EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.EventId EventId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As EventId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::EventId EventId { Microsoft::Extensions::Logging::EventId get(); };" />
      <MemberSignature Language="F#" Value="member this.EventId : Microsoft.Extensions.Logging.EventId" Usage="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;.EventId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.EventId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a33b-111">获取日志事件 ID。</span><span class="sxs-lookup"><span data-stu-id="0a33b-111">Gets the log event Id.</span></span></summary>
        <value><span data-ttu-id="0a33b-112">一个 <see cref="T:Microsoft.Extensions.Logging.EventId" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="0a33b-112">An <see cref="T:Microsoft.Extensions.Logging.EventId" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a33b-113">获取日志异常。</span><span class="sxs-lookup"><span data-stu-id="0a33b-113">Gets the log exception.</span></span></summary>
        <value><span data-ttu-id="0a33b-114">一个 <see cref="T:System.Exception" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="0a33b-114">An <see cref="T:System.Exception" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public Func&lt;TState,Exception,string&gt; Formatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;!TState, class System.Exception, string&gt; Formatter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formatter As Func(Of TState, Exception, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;TState, Exception ^, System::String ^&gt; ^ Formatter { Func&lt;TState, Exception ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : Func&lt;'State, Exception, string&gt;" Usage="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TState,System.Exception,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a33b-115">获取格式化程序。</span><span class="sxs-lookup"><span data-stu-id="0a33b-115">Gets the formatter.</span></span></summary>
        <value><span data-ttu-id="0a33b-116">封装的方法，它表示格式化程序，后者采用 <typeparamref name="TState" /> 和 <see cref="T:System.Exception" /> ，并返回一个字符串。</span><span class="sxs-lookup"><span data-stu-id="0a33b-116">The encapsulated method that represents a formatter, which takes a <typeparamref name="TState" /> and a <see cref="T:System.Exception" />, and returns a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.LogLevel LogLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Logging.LogLevel LogLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.LogLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogLevel As LogLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::LogLevel LogLevel { Microsoft::Extensions::Logging::LogLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.LogLevel : Microsoft.Extensions.Logging.LogLevel" Usage="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;.LogLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LogLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a33b-117">获取日志级别。</span><span class="sxs-lookup"><span data-stu-id="0a33b-117">Gets the log level.</span></span></summary>
        <value><span data-ttu-id="0a33b-118">一个 <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="0a33b-118">A <see cref="T:Microsoft.Extensions.Logging.LogLevel" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public TState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.Abstractions.LogEntry`1.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TState State { TState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : 'State" Usage="Microsoft.Extensions.Logging.Abstractions.LogEntry&lt;'State&gt;.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a33b-119">获取 <typeparamref name="TState" />。</span><span class="sxs-lookup"><span data-stu-id="0a33b-119">Gets the <typeparamref name="TState" />.</span></span></summary>
        <value><span data-ttu-id="0a33b-120">一个 <typeparamref name="TState" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="0a33b-120">An object of type <typeparamref name="TState" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
