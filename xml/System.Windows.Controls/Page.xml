<Type Name="Page" FullName="System.Windows.Controls.Page">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e786ef6dd0548135f419ef04f64dea389f777d09" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102080836" /></Metadata><TypeSignature Language="C#" Value="public class Page : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Page extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Page = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Content")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Content")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5159c-101">封装一页可由 Windows Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" /> 和 <see cref="T:System.Windows.Controls.Frame" /> 导航到和承载的内容。</span><span class="sxs-lookup"><span data-stu-id="5159c-101">Encapsulates a page of content that can be navigated to and hosted by Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow" />, and <see cref="T:System.Windows.Controls.Frame" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-102"><xref:System.Windows.Controls.Page> 封装可导航的内容页，其中包含以下关键成员：</span><span class="sxs-lookup"><span data-stu-id="5159c-102"><xref:System.Windows.Controls.Page> encapsulates a page of content that can be navigated, and has the following key members:</span></span>  
  
-   <span data-ttu-id="5159c-103">**生存期管理**： <xref:System.Windows.Controls.Page.KeepAlive%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-103">**Lifetime Management**: <xref:System.Windows.Controls.Page.KeepAlive%2A>.</span></span>  
  
-   <span data-ttu-id="5159c-104">**导航**： <xref:System.Windows.Controls.Page.NavigationService%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-104">**Navigation**: <xref:System.Windows.Controls.Page.NavigationService%2A>.</span></span>  
  
-   <span data-ttu-id="5159c-105">**外观**： <xref:System.Windows.Controls.Page.Background%2A> 、 <xref:System.Windows.Controls.Page.Content%2A> 、 <xref:System.Windows.Controls.Page.FontFamily%2A> 、 <xref:System.Windows.Controls.Page.FontSize%2A> 、 <xref:System.Windows.Controls.Page.Foreground%2A> 、 <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> 、 <xref:System.Windows.Controls.Page.Template%2A> 和 <xref:System.Windows.Controls.Page.Title%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-105">**Appearance**: <xref:System.Windows.Controls.Page.Background%2A>, <xref:System.Windows.Controls.Page.Content%2A>, <xref:System.Windows.Controls.Page.FontFamily%2A>, <xref:System.Windows.Controls.Page.FontSize%2A>, <xref:System.Windows.Controls.Page.Foreground%2A>, <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>, <xref:System.Windows.Controls.Page.Template%2A>, <xref:System.Windows.Controls.Page.Title%2A>.</span></span>  
  
-   <span data-ttu-id="5159c-106">**宿主窗口外观**： <xref:System.Windows.Controls.Page.WindowHeight%2A> 、 <xref:System.Windows.Controls.Page.WindowWidth%2A> 、 <xref:System.Windows.Controls.Page.WindowTitle%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-106">**Host Window Appearance**: <xref:System.Windows.Controls.Page.WindowHeight%2A>, <xref:System.Windows.Controls.Page.WindowWidth%2A>, <xref:System.Windows.Controls.Page.WindowTitle%2A>.</span></span>  
  
 <span data-ttu-id="5159c-107">可以通过使用标记、标记和代码隐藏或代码来定义页。</span><span class="sxs-lookup"><span data-stu-id="5159c-107">A page can be defined by using markup, markup and code-behind, or code.</span></span> <span data-ttu-id="5159c-108">页面是出于导航目的打包内容的首选方法，原因如下：</span><span class="sxs-lookup"><span data-stu-id="5159c-108">A page is the preferred way to package content for navigation, for the following reasons:</span></span>  
  
-   <span data-ttu-id="5159c-109">它易于定义、重复使用和管理。</span><span class="sxs-lookup"><span data-stu-id="5159c-109">It is easy to define, reuse, and manage.</span></span>  
  
-   <span data-ttu-id="5159c-110">它可以访问和使用 <xref:System.Windows.Navigation.NavigationService> 导航到它的。</span><span class="sxs-lookup"><span data-stu-id="5159c-110">It can access and use the <xref:System.Windows.Navigation.NavigationService> that navigated to it.</span></span>  
  
-   <span data-ttu-id="5159c-111">它可以更改其主机窗口的标题、宽度、高度和导航 UI (<xref:System.Windows.Controls.Page.WindowTitle%2A> 、 <xref:System.Windows.Controls.Page.WindowWidth%2A> 、 <xref:System.Windows.Controls.Page.WindowHeight%2A> <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>) 。</span><span class="sxs-lookup"><span data-stu-id="5159c-111">It can alter the title, width, height, and navigation UI of its host window (<xref:System.Windows.Controls.Page.WindowTitle%2A>, <xref:System.Windows.Controls.Page.WindowWidth%2A>, <xref:System.Windows.Controls.Page.WindowHeight%2A>, <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>).</span></span>  
  
-   <span data-ttu-id="5159c-112">它在 Microsoft Visual Studio 中提供了设计器支持。</span><span class="sxs-lookup"><span data-stu-id="5159c-112">It has designer support in Microsoft Visual Studio.</span></span>  
  
 <span data-ttu-id="5159c-113">可以从 <xref:System.Windows.Window> 、、 <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame> 或从浏览器承载页面。</span><span class="sxs-lookup"><span data-stu-id="5159c-113">A page can be hosted from <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, or from a browser.</span></span> <span data-ttu-id="5159c-114">若要承载，页可以是：</span><span class="sxs-lookup"><span data-stu-id="5159c-114">To be hosted, a page can be:</span></span>  
  
-   <span data-ttu-id="5159c-115"><xref:System.Windows.Window> <xref:System.Windows.Navigation.NavigationWindow> XAML 中的、或元素的直接子级 <xref:System.Windows.Controls.Frame> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-115">The direct child of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or <xref:System.Windows.Controls.Frame> element in XAML.</span></span>  
  
-   <span data-ttu-id="5159c-116">实例化并设置为 `Content` 、和的属性的 <xref:System.Windows.Window> 值 <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-116">Instantiated and set as the value of the `Content` property of <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, and <xref:System.Windows.Controls.Frame>.</span></span>  
  
-   <span data-ttu-id="5159c-117">设置为或的属性 (URI) 源的统一资源标识符 `Source` <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-117">Set as the uniform resource identifier (URI) source of the `Source` property of either <xref:System.Windows.Navigation.NavigationWindow> or <xref:System.Windows.Controls.Frame>.</span></span>  
  
-   <span data-ttu-id="5159c-118"><xref:System.Windows.Application.StartupUri%2A>在独立的应用程序中设置为。</span><span class="sxs-lookup"><span data-stu-id="5159c-118">Set as the <xref:System.Windows.Application.StartupUri%2A> in a standalone application.</span></span>  
  
-   <span data-ttu-id="5159c-119"><xref:System.Windows.Application.StartupUri%2A>在 XBAP 中设置为。</span><span class="sxs-lookup"><span data-stu-id="5159c-119">Set as the <xref:System.Windows.Application.StartupUri%2A> in an XBAP.</span></span>  
  
 <span data-ttu-id="5159c-120">应用程序通常有两个或多个页面，可以使用以下机制在这些页面之间导航：</span><span class="sxs-lookup"><span data-stu-id="5159c-120">An application typically has two or more pages, which can be navigated between using the following mechanisms:</span></span>  
  
-   <span data-ttu-id="5159c-121">使用以声明方式 <xref:System.Windows.Documents.Hyperlink> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-121">Declaratively by using <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
-   <span data-ttu-id="5159c-122">使用以编程方式 <xref:System.Windows.Navigation.NavigationService> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-122">Programmatically by using <xref:System.Windows.Navigation.NavigationService>.</span></span>  
  
-   <span data-ttu-id="5159c-123">使用宿主的导航 UI，包括 Windows Internet Explorer、和，以可视化方式呈现 <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-123">Visually by using the navigation UI of the host, including Windows Internet Explorer, <xref:System.Windows.Navigation.NavigationWindow>, and <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="5159c-124">有关使用 page 函数的结构化导航 (<xref:System.Windows.Navigation.PageFunction%601>) ，请参阅 [结构化导航概述](/dotnet/framework/wpf/app-development/structured-navigation-overview) 和 [导航拓扑概述](/dotnet/framework/wpf/app-development/navigation-topologies-overview)。</span><span class="sxs-lookup"><span data-stu-id="5159c-124">For structured navigation using page functions (<xref:System.Windows.Navigation.PageFunction%601>), see [Structured Navigation Overview](/dotnet/framework/wpf/app-development/structured-navigation-overview) and [Navigation Topologies Overview](/dotnet/framework/wpf/app-development/navigation-topologies-overview).</span></span>  
  
 <span data-ttu-id="5159c-125">此控件的依赖属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="5159c-125">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="5159c-126">如果按默认样式设置属性，则当控件出现在应用程序中时，属性可能会更改为默认值。</span><span class="sxs-lookup"><span data-stu-id="5159c-126">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="5159c-127">默认样式取决于应用程序运行时使用的桌面主题。</span><span class="sxs-lookup"><span data-stu-id="5159c-127">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="5159c-128">有关详细信息，请参阅 [默认的 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="5159c-128">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-129">下面的示例演示如何使用仅标记定义标准页：</span><span class="sxs-lookup"><span data-stu-id="5159c-129">The following example shows how a standard page is defined using only markup:</span></span>  
  
 [!code-xaml[PageSnippets#MarkupPageMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupPage.xaml#markuppagemarkup)]  
  
 <span data-ttu-id="5159c-130">下面的示例演示如何使用代码仅定义标准页：</span><span class="sxs-lookup"><span data-stu-id="5159c-130">The following example shows how a standard page is defined using only code:</span></span>  
  
 [!code-csharp[PageSnippets#CodePageCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/CodePage.cs#codepagecodebehind)]
 [!code-vb[PageSnippets#CodePageCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageSnippets/visualbasic/codepage.vb#codepagecodebehind)]  
  
 <span data-ttu-id="5159c-131">下面的示例演示如何使用标记和代码隐藏的组合定义标准页。</span><span class="sxs-lookup"><span data-stu-id="5159c-131">The following example shows how a standard page is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[PageSnippets#MarkupAndCodeBehindPageMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupAndCodeBehindPage.xaml#markupandcodebehindpagemarkup)]  
  
 [!code-csharp[PageSnippets#MarkupAndCodeBehindPageCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupAndCodeBehindPage.xaml.cs#markupandcodebehindpagecodebehind)]
 [!code-vb[PageSnippets#MarkupAndCodeBehindPageCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageSnippets/visualbasic/markupandcodebehindpage.xaml.vb#markupandcodebehindpagecodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.PageFunction`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5159c-132">初始化 <see cref="T:System.Windows.Controls.Page" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-132">Initializes a new instance of the <see cref="T:System.Windows.Controls.Page" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-133">如果 <xref:System.Windows.Controls.Page> 未保持活动状态 (请参阅 <xref:System.Windows.Controls.Page.KeepAlive%2A>) ，它需要实现一个无参数的构造函数，以允许 WPF 在后退或前进导航历史记录中导航到时创建它的新实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-133">If a <xref:System.Windows.Controls.Page> is not being kept alive (see <xref:System.Windows.Controls.Page.KeepAlive%2A>), it needs to implement a parameterless constructor to allow WPF to create a new instance of it when navigated to in back or forward navigation history.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="page.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="5159c-134">用来排列子元素的大小。</span><span class="sxs-lookup"><span data-stu-id="5159c-134">The size to use to arrange the child elements.</span></span></param>
        <summary><span data-ttu-id="5159c-135">排列 <see cref="T:System.Windows.Controls.Page" /> 的内容（子元素）。</span><span class="sxs-lookup"><span data-stu-id="5159c-135">Arranges the content (child elements) of the <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <returns><span data-ttu-id="5159c-136">一个 <see cref="T:System.Windows.Size" />，表示页的已排列大小。</span><span class="sxs-lookup"><span data-stu-id="5159c-136">A <see cref="T:System.Windows.Size" /> that represents the arranged size of the page.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Page.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-137">获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的背景。</span><span class="sxs-lookup"><span data-stu-id="5159c-137">Gets or sets the background for a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-138"><see cref="T:System.Windows.Media.Brush" /> 用来绘制其背景的 <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-138">The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its background.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageBackground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-139">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-140">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-140">Identifier field</span></span>|<xref:System.Windows.Controls.Page.BackgroundProperty>|  
|<span data-ttu-id="5159c-141">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-142"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="5159c-142"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-143">标识 <see cref="P:System.Windows.Controls.Page.Background" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-143">Identifies the <see cref="P:System.Windows.Controls.Page.Background" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Controls.Page.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-144">获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="5159c-144">Gets or sets the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-145">一个对象，其中包含 <see cref="T:System.Windows.Controls.Page" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="5159c-145">An object that contains the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span> <span data-ttu-id="5159c-146">默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-146">The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-147">只能 <xref:System.Windows.Controls.Page> 有一个子元素。</span><span class="sxs-lookup"><span data-stu-id="5159c-147">A <xref:System.Windows.Controls.Page> can have only a single child element.</span></span> <span data-ttu-id="5159c-148">上的所有其他元素 <xref:System.Windows.Controls.Page> 必须是该元素的子代。</span><span class="sxs-lookup"><span data-stu-id="5159c-148">All other elements on a <xref:System.Windows.Controls.Page> must be descendents of that element.</span></span> <span data-ttu-id="5159c-149">通常，的内容 <xref:System.Windows.Controls.Page> 承载一个布局元素（例如 <xref:System.Windows.Controls.Grid> 、和）， <xref:System.Windows.Controls.StackPanel> 这些元素 <xref:System.Windows.Controls.DockPanel> 承载的内容 <xref:System.Windows.Controls.Page> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-149">Typically, the content of a <xref:System.Windows.Controls.Page> hosts a layout element - such as <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, and <xref:System.Windows.Controls.DockPanel> - that hosts the content of the <xref:System.Windows.Controls.Page>.</span></span>  
  
<a name="dependencyPropertyInfo_PageContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-150">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-150">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-151">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-151">Identifier field</span></span>|<xref:System.Windows.Controls.Page.ContentProperty>|  
|<span data-ttu-id="5159c-152">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-152">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-153">无</span><span class="sxs-lookup"><span data-stu-id="5159c-153">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.ContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-154">标识 <see cref="P:System.Windows.Controls.Page.Content" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-154">Identifies the <see cref="P:System.Windows.Controls.Page.Content" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ FontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FontFamily : System.Windows.Media.FontFamily with get, set" Usage="System.Windows.Controls.Page.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.Font, Modifiability=System.Windows.Modifiability.Unmodifiable)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.Font, Modifiability=System.Windows.Modifiability.Unmodifiable)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-155">获取或设置指定字体系列的名称。</span><span class="sxs-lookup"><span data-stu-id="5159c-155">Gets or sets the name of the specified font family.</span></span></summary>
        <value><span data-ttu-id="5159c-156">一个 <see cref="T:System.Windows.Media.FontFamily" />，它是用于 <see cref="T:System.Windows.Controls.Page" /> 的内容的字体系列。</span><span class="sxs-lookup"><span data-stu-id="5159c-156">A <see cref="T:System.Windows.Media.FontFamily" /> that is the font family for the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span> <span data-ttu-id="5159c-157">默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-157">The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageFontFamily"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-158">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-159">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-159">Identifier field</span></span>|<xref:System.Windows.Controls.Page.FontFamilyProperty>|  
|<span data-ttu-id="5159c-160">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-160">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-161"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="5159c-161"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.FontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontFamilyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontFamilyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.FontFamilyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-162">标识 <see cref="P:System.Windows.Controls.Page.FontFamily" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-162">Identifies the <see cref="P:System.Windows.Controls.Page.FontFamily" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-163"><xref:System.Windows.Controls.Page.FontFamily%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-163">The identifier for the <xref:System.Windows.Controls.Page.FontFamily%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="5159c-164">依赖项属性概述</span><span class="sxs-lookup"><span data-stu-id="5159c-164">Dependency Properties Overview</span></span>](/dotnet/framework/wpf/advanced/dependency-properties-overview)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public double FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontSize : double with get, set" Usage="System.Windows.Controls.Page.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-165">获取或设置字号。</span><span class="sxs-lookup"><span data-stu-id="5159c-165">Gets or sets the font size.</span></span></summary>
        <value><span data-ttu-id="5159c-166"><see cref="T:System.Windows.Controls.Page" /> 的内容的字号。</span><span class="sxs-lookup"><span data-stu-id="5159c-166">The font size for the content of a <see cref="T:System.Windows.Controls.Page" />.</span></span> <span data-ttu-id="5159c-167">默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-167">The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-168">字号和的范围必须是正数 <xref:System.Windows.SystemFonts.MessageFontSize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-168">The font size must be a positive number and in the range of the <xref:System.Windows.SystemFonts.MessageFontSize%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_PageFontSize"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-169">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-170">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-170">Identifier field</span></span>|<xref:System.Windows.Controls.Page.FontSizeProperty>|  
|<span data-ttu-id="5159c-171">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-171">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-172"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="5159c-172"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.FontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.FontSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-173">标识 <see cref="P:System.Windows.Controls.Page.FontSize" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-173">Identifies the <see cref="P:System.Windows.Controls.Page.FontSize" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-174"><xref:System.Windows.Controls.Page.FontSize%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-174">The identifier for the <xref:System.Windows.Controls.Page.FontSize%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="5159c-175">依赖项属性概述</span><span class="sxs-lookup"><span data-stu-id="5159c-175">Dependency Properties Overview</span></span>](/dotnet/framework/wpf/advanced/dependency-properties-overview)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Foreground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Foreground" />
      <MemberSignature Language="VB.NET" Value="Public Property Foreground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Foreground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Foreground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Page.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-176">获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的前景。</span><span class="sxs-lookup"><span data-stu-id="5159c-176">Gets or sets the foreground for a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-177"><see cref="T:System.Windows.Media.Brush" /> 用来绘制其前景的 <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-177">The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its foreground.</span></span> <span data-ttu-id="5159c-178">默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-178">The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageForeground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-179">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-179">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-180">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-180">Identifier field</span></span>|<xref:System.Windows.Controls.Page.ForegroundProperty>|  
|<span data-ttu-id="5159c-181">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-181">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-182"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="5159c-182"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForegroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForegroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.ForegroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForegroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForegroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForegroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.ForegroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-183">标识 <see cref="P:System.Windows.Controls.Page.Foreground" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-183">Identifies the <see cref="P:System.Windows.Controls.Page.Foreground" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-184"><xref:System.Windows.Controls.Page.Foreground%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-184">The identifier for the <xref:System.Windows.Controls.Page.Foreground%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="5159c-185">依赖项属性概述</span><span class="sxs-lookup"><span data-stu-id="5159c-185">Dependency Properties Overview</span></span>](/dotnet/framework/wpf/advanced/dependency-properties-overview)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Windows.Controls.Page.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-186">获取或设置一个值，该值指示是否在导航历史记录中保留 <see cref="T:System.Windows.Controls.Page" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history.</span></span></summary>
        <value><span data-ttu-id="5159c-187">如果在导航历史记录中保留 <see cref="T:System.Windows.Controls.Page" /> 实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-187"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5159c-188">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-189">第一次导航到页面时， <xref:System.Windows.Controls.Page> 会创建类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-189">When a page is first navigated to, a new instance of the <xref:System.Windows.Controls.Page> class is created.</span></span> <span data-ttu-id="5159c-190">当从 (向后或向后) 导航离开某个页面时，将向导航历史记录中添加该页面的条目。</span><span class="sxs-lookup"><span data-stu-id="5159c-190">When a page is navigated away from (either back or forward), an entry for the page is added to navigation history.</span></span> <span data-ttu-id="5159c-191">默认情况下，该条目不引用 page 对象。</span><span class="sxs-lookup"><span data-stu-id="5159c-191">By default, the entry does not reference the page object.</span></span> <span data-ttu-id="5159c-192">相反，该项包含页 (URI) 的包统一资源标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-192">Instead, the entry contains a pack uniform resource identifier (URI) for the page.</span></span> <span data-ttu-id="5159c-193">使用导航历史记录导航页面的条目时，会使用 pack URI 来创建页面的新实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-193">When the entry for the page is navigated to using navigation history, the pack URI is used to create a new instance of the page.</span></span> <span data-ttu-id="5159c-194">此行为是默认行为，以避免内存使用量过高：保留页实例可以快速消耗内存，尤其是那些具有重要内容的内容。</span><span class="sxs-lookup"><span data-stu-id="5159c-194">This behavior is the default, to avoid excessive memory use: retaining page instances can quickly consume memory, particularly those with a nontrivial amount of content.</span></span> <span data-ttu-id="5159c-195">此问题的原因在于，导航历史记录的后退和前进堆栈中可以存储的条目数没有限制。</span><span class="sxs-lookup"><span data-stu-id="5159c-195">This problem is augmented by the fact that there is no limit to the number of entries that can be stored in the back and forward stacks of navigation history.</span></span> <span data-ttu-id="5159c-196">与此相反，存储页面的包 Uri 几乎不会对内存消耗产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="5159c-196">In contrast, storing pack URIs for pages has virtually no impact on memory consumption.</span></span>  
  
 <span data-ttu-id="5159c-197">创建页面的新实例的主要副作用是，页面状态不会从页面的一个实例记录到另一个实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-197">The main side effect of creating new instances of a page is that page state is not remembered from one instance of a page to another.</span></span> <span data-ttu-id="5159c-198">在这些情况下，Windows Presentation Foundation 提供多种方法来记住状态。</span><span class="sxs-lookup"><span data-stu-id="5159c-198">In these cases, Windows Presentation Foundation offers several techniques for remembering state.</span></span>  
  
 <span data-ttu-id="5159c-199">若要使页面保持活动状态，请将 <xref:System.Windows.Controls.Page.KeepAlive%2A> 属性设置为 `true` " (默认值为" `false`) "。</span><span class="sxs-lookup"><span data-stu-id="5159c-199">To keep a page alive, you set the <xref:System.Windows.Controls.Page.KeepAlive%2A> property to `true` (the default is `false`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5159c-200">仅使用代码 (实例化并导航到的页面（例如调用 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>) ）会自动保持活动状态。</span><span class="sxs-lookup"><span data-stu-id="5159c-200">Pages that are instantiated and navigated to using only code (for example, calling <xref:System.Windows.Navigation.NavigationService.Navigate%2A>), are automatically kept alive.</span></span>  
  
 <span data-ttu-id="5159c-201">除非需要，否则应避免将设置 <xref:System.Windows.Controls.Page.KeepAlive%2A> 为 `true` ：</span><span class="sxs-lookup"><span data-stu-id="5159c-201">You should avoid setting <xref:System.Windows.Controls.Page.KeepAlive%2A> to `true` unless you need to:</span></span>  
  
-   <span data-ttu-id="5159c-202">当页面包含大量内容时，可能需要很长时间来实例化。</span><span class="sxs-lookup"><span data-stu-id="5159c-202">When a page has a lot of content, it may take a long time to instantiate.</span></span> <span data-ttu-id="5159c-203">如果页面未保持活动状态，并且经常导航到页面，则持续实例化页面的成本可能会对用户体验产生负面影响。</span><span class="sxs-lookup"><span data-stu-id="5159c-203">If the page is not kept alive, and the page is frequently navigated to, the cost of constantly instantiating the page may have a negative impact on the user experience.</span></span> <span data-ttu-id="5159c-204">但是，从性能角度来看，应依赖于默认设置并分析应用程序的性能;如果测试标识的页面的加载时间低于应用程序所需的范围，则将页面配置为保持活动状态可能是解决问题的一种方法。</span><span class="sxs-lookup"><span data-stu-id="5159c-204">However, from a performance perspective, you should rely on the default settings and profile your application's performance; if testing identifies pages with load times that fall below the range required for your application, configuring the pages to be kept alive may be one way to solve the problem.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5159c-205">处于活动状态的页的条目不会保留在 XAML 浏览器应用程序的导航历史记录中 (XBAP) 如果用户离开并返回到 XAML 浏览器应用程序 (XBAP) 。</span><span class="sxs-lookup"><span data-stu-id="5159c-205">Entries for pages that are kept alive are not retained in navigation history of an XAML browser application (XBAP) if a user navigates away from and back to the XAML browser application (XBAP).</span></span> <span data-ttu-id="5159c-206">导航历史记录中只保留未保持活动状态的页的日记条目。</span><span class="sxs-lookup"><span data-stu-id="5159c-206">Only journal entries for pages that are not kept alive are retained in navigation history.</span></span>  
  
<a name="dependencyPropertyInfo_PageKeepAlive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-207">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-207">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-208">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-208">Identifier field</span></span>|<xref:System.Windows.Controls.Page.KeepAliveProperty>|  
|<span data-ttu-id="5159c-209">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-209">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-210">无</span><span class="sxs-lookup"><span data-stu-id="5159c-210">None</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="5159c-211">此依赖项属性的元数据类型为 <xref:System.Windows.PropertyMetadata> ，而不是 <xref:System.Windows.FrameworkPropertyMetadata> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-211">The metadata type on this dependency property is <xref:System.Windows.PropertyMetadata>, not <xref:System.Windows.FrameworkPropertyMetadata>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-212">下面的示例演示如何使用 XAML <xref:System.Windows.Controls.Page> 跨多个导航保留类的实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-212">The following example shows how to use XAML to retain an instance of the <xref:System.Windows.Controls.Page> class across multiple navigations.</span></span>  
  
 [!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAML1](~/samples/snippets/xaml/VS_Snippets_Wpf/PageKeepAliveSnippets/XAML/HomePage.xaml#setpagekeepalivexaml1)]  
[!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAML2](~/samples/snippets/xaml/VS_Snippets_Wpf/PageKeepAliveSnippets/XAML/HomePage.xaml#setpagekeepalivexaml2)]  
  
 [!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAMLForLang1](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml#setpagekeepalivexamlforlang1)]  
[!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAMLForLang2](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml#setpagekeepalivexamlforlang2)]  
  
 [!code-csharp[PageKeepAliveSnippets#SetPageKeepAliveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml.cs#setpagekeepalivecodebehind)]
 [!code-vb[PageKeepAliveSnippets#SetPageKeepAliveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageKeepAliveSnippets/visualbasic/homepage.xaml.vb#setpagekeepalivecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="KeepAliveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeepAliveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeepAliveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.KeepAliveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeepAliveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeepAliveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeepAliveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.KeepAliveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-213">标识 <see cref="P:System.Windows.Controls.Page.KeepAlive" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-213">Identifies the <see cref="P:System.Windows.Controls.Page.KeepAlive" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-214"><xref:System.Windows.Controls.Page.KeepAlive%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-214">The identifier for the <xref:System.Windows.Controls.Page.KeepAlive%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="5159c-215">依赖项属性概述</span><span class="sxs-lookup"><span data-stu-id="5159c-215">Dependency Properties Overview</span></span>](/dotnet/framework/wpf/advanced/dependency-properties-overview)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Page.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-216">返回 <see cref="T:System.Windows.Controls.Page" /> 的逻辑子元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="5159c-216">Returns an enumerator for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-217"><see cref="T:System.Collections.IEnumerator" /> 的逻辑子元素的 <see cref="T:System.Windows.Controls.Page" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-217">The <see cref="T:System.Collections.IEnumerator" /> for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="page.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="5159c-218">窗口可为其子项提供的可用区域。</span><span class="sxs-lookup"><span data-stu-id="5159c-218">The available area that the window can give to its children.</span></span></param>
        <summary><span data-ttu-id="5159c-219">测量 <see cref="T:System.Windows.Controls.Page" /> 的子元素。</span><span class="sxs-lookup"><span data-stu-id="5159c-219">Measures the child elements of the <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <returns><span data-ttu-id="5159c-220">一个 <see cref="T:System.Windows.Size" />，表示窗口的实际大小。</span><span class="sxs-lookup"><span data-stu-id="5159c-220">A <see cref="T:System.Windows.Size" /> that is the actual size of the window.</span></span> <span data-ttu-id="5159c-221">该方法可能会返回一个较大的值，在这种情况下，父项可能需要添加滚动条。</span><span class="sxs-lookup"><span data-stu-id="5159c-221">The method may return a larger value, in which case the parent may need to add scroll bars.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.NavigationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationService As NavigationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::NavigationService ^ NavigationService { System::Windows::Navigation::NavigationService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigationService : System.Windows.Navigation.NavigationService" Usage="System.Windows.Controls.Page.NavigationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-222">获取页的宿主用来管理导航的导航服务。</span><span class="sxs-lookup"><span data-stu-id="5159c-222">Gets the navigation service that the host of the page is using to manage navigation.</span></span></summary>
        <value><span data-ttu-id="5159c-223">页的宿主用来管理导航的 <see cref="T:System.Windows.Navigation.NavigationService" /> 对象；或者，如果宿主不支持导航，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-223">The <see cref="T:System.Windows.Navigation.NavigationService" /> object that the host of the page is using to manage navigation, or <see langword="null" /> if the host does not support navigation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-224">页面可由多种类型的主机（包括、、 <xref:System.Windows.Window> <xref:System.Windows.Navigation.NavigationWindow> <xref:System.Windows.Controls.Frame> 和浏览器）承载。</span><span class="sxs-lookup"><span data-stu-id="5159c-224">Pages can be hosted by multiple types of hosts, including <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, and a browser.</span></span>  
  
 <span data-ttu-id="5159c-225">页面通常需要与宿主的导航相集成，以提供页面内导航支持。</span><span class="sxs-lookup"><span data-stu-id="5159c-225">Pages often need to integrate with their host's navigation to provide in-page navigation support.</span></span> <span data-ttu-id="5159c-226">但是，因为页可能不知道其在运行时的宿主，所以它不能与宿主的导航成员直接集成以实现此目的。</span><span class="sxs-lookup"><span data-stu-id="5159c-226">However, because a page may not know what its host will be at run time, it cannot integrate directly with its host's navigation members to do so.</span></span>  
  
 <span data-ttu-id="5159c-227">相反，它可以尝试使用导航服务，该服务是一项支持浏览器样式导航并由类封装的服务 <xref:System.Windows.Navigation.NavigationService> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-227">Instead, it can attempt to use a navigation service, which is a service that supports browser-style navigation and is encapsulated by the <xref:System.Windows.Navigation.NavigationService> class.</span></span> <span data-ttu-id="5159c-228">不过，您不能创建自己的 <xref:System.Windows.Navigation.NavigationService> 实例。</span><span class="sxs-lookup"><span data-stu-id="5159c-228">You cannot create your own <xref:System.Windows.Navigation.NavigationService> instance, though.</span></span> <span data-ttu-id="5159c-229">相反，主机类型（如 <xref:System.Windows.Navigation.NavigationWindow> 、 <xref:System.Windows.Controls.Frame> 或）会创建自己的 <xref:System.Windows.Navigation.NavigationService> 实例，您可以从属性访问该实例 <xref:System.Windows.Controls.Page.NavigationService%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-229">Instead, host types such as <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, or a browser create their own <xref:System.Windows.Navigation.NavigationService> instance that you can access from the <xref:System.Windows.Controls.Page.NavigationService%2A> property.</span></span>  
  
 <span data-ttu-id="5159c-230">从属性返回的导航服务 <xref:System.Windows.Controls.Page.NavigationService%2A> 是 <xref:System.Windows.Navigation.NavigationService> 类的实例，该实例由可视化树中的第一个导航器管理。</span><span class="sxs-lookup"><span data-stu-id="5159c-230">The navigation service that is returned from the <xref:System.Windows.Controls.Page.NavigationService%2A> property is the instance of the <xref:System.Windows.Navigation.NavigationService> class that is managed by the first navigator up the visual tree.</span></span> <span data-ttu-id="5159c-231">如果未找到， `null` 则返回，指示页的主机不支持导航。</span><span class="sxs-lookup"><span data-stu-id="5159c-231">If one is not found, `null` is returned, indicating a page's host does not support navigation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5159c-232"><xref:System.Windows.Window>类不支持导航，也不提供导航服务。</span><span class="sxs-lookup"><span data-stu-id="5159c-232">The <xref:System.Windows.Window> class does not support navigation and does not provide a navigation service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-233">下面的示例演示了页面如何检查导航服务是否可用，如果是，则使用它来导航回上一页。</span><span class="sxs-lookup"><span data-stu-id="5159c-233">The following example shows how a page can check if a navigation service is available and, if so, use it to navigate back to the previous page.</span></span>  
  
 [!code-csharp[PageNavigationServiceSnippets#GetPageNavigationServiceCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageNavigationServiceSnippets/CSharp/HomePage.xaml.cs#getpagenavigationservicecodebehind)]
 [!code-vb[PageNavigationServiceSnippets#GetPageNavigationServiceCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageNavigationServiceSnippets/visualbasic/homepage.xaml.vb#getpagenavigationservicecodebehind)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="page.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="5159c-234">旧模板。</span><span class="sxs-lookup"><span data-stu-id="5159c-234">The old template.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="5159c-235">新模板。</span><span class="sxs-lookup"><span data-stu-id="5159c-235">The new template.</span></span></param>
        <summary><span data-ttu-id="5159c-236">当 <see cref="T:System.Windows.Controls.Page" /> 的模板更改时调用。</span><span class="sxs-lookup"><span data-stu-id="5159c-236">Called when the template for a <see cref="T:System.Windows.Controls.Page" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-237">请参阅 <xref:System.Windows.Controls.Control.OnTemplateChanged%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5159c-237">See <xref:System.Windows.Controls.Control.OnTemplateChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Page.Template" />
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="page.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="5159c-238">先前的父项。</span><span class="sxs-lookup"><span data-stu-id="5159c-238">The previous parent.</span></span> <span data-ttu-id="5159c-239">如果 <see cref="T:System.Windows.DependencyObject" /> 没有先前的父项，则设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-239">Set to <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span></span></param>
        <summary><span data-ttu-id="5159c-240">当 <see cref="T:System.Windows.Controls.Page" /> 的父项更改时调用。</span><span class="sxs-lookup"><span data-stu-id="5159c-240">Called when the parent of the <see cref="T:System.Windows.Controls.Page" /> is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.UIElement.OnVisualParentChanged%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5159c-241">新父项既不是 <see cref="T:System.Windows.Window" />，也不是 <see cref="T:System.Windows.Controls.Frame" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-241">The new parent is neither a <see cref="T:System.Windows.Window" /> nor a <see cref="T:System.Windows.Controls.Frame" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeShowsNavigationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeShowsNavigationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeShowsNavigationUI () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeShowsNavigationUI();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeShowsNavigationUI : unit -&gt; bool" Usage="page.ShouldSerializeShowsNavigationUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5159c-242">允许派生类确定 <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> 属性的序列化行为。</span><span class="sxs-lookup"><span data-stu-id="5159c-242">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property.</span></span></summary>
        <returns><span data-ttu-id="5159c-243">如果内容应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-243"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTitle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTitle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeTitle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTitle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTitle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTitle : unit -&gt; bool" Usage="page.ShouldSerializeTitle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5159c-244">允许派生类确定 <see cref="P:System.Windows.Controls.Page.Title" /> 属性的序列化行为。</span><span class="sxs-lookup"><span data-stu-id="5159c-244">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.Title" /> property.</span></span></summary>
        <returns><span data-ttu-id="5159c-245">如果内容应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-245"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowHeight">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowHeight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowHeight();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowHeight : unit -&gt; bool" Usage="page.ShouldSerializeWindowHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5159c-246">允许派生类确定 <see cref="P:System.Windows.Controls.Page.WindowHeight" /> 属性的序列化行为。</span><span class="sxs-lookup"><span data-stu-id="5159c-246">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowHeight" /> property.</span></span></summary>
        <returns><span data-ttu-id="5159c-247">如果内容应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-247"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowTitle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowTitle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowTitle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowTitle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowTitle : unit -&gt; bool" Usage="page.ShouldSerializeWindowTitle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5159c-248">允许派生类确定 <see cref="P:System.Windows.Controls.Page.WindowTitle" /> 属性的序列化行为。</span><span class="sxs-lookup"><span data-stu-id="5159c-248">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowTitle" /> property.</span></span></summary>
        <returns><span data-ttu-id="5159c-249">如果内容应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-249"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowWidth">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowWidth ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowWidth() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowWidth () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowWidth();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowWidth : unit -&gt; bool" Usage="page.ShouldSerializeWindowWidth " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5159c-250">允许派生类确定 <see cref="P:System.Windows.Controls.Page.WindowWidth" /> 属性的序列化行为。</span><span class="sxs-lookup"><span data-stu-id="5159c-250">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowWidth" /> property.</span></span></summary>
        <returns><span data-ttu-id="5159c-251">如果内容应序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-251"><see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShowsNavigationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsNavigationUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.ShowsNavigationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowsNavigationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowsNavigationUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowsNavigationUI : bool with get, set" Usage="System.Windows.Controls.Page.ShowsNavigationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-252">获取或设置一个值，该值指示 <see cref="T:System.Windows.Navigation.NavigationWindow" /> Microsoft Internet Explorer 6 上的导航 UI 是否可见。</span><span class="sxs-lookup"><span data-stu-id="5159c-252">Gets or sets a value that indicates whether the navigation UI of a <see cref="T:System.Windows.Navigation.NavigationWindow" /> on Microsoft Internet Explorer 6 is visible.</span></span></summary>
        <value><span data-ttu-id="5159c-253"><see langword="true" /> 如果主机的导航 UI <see cref="T:System.Windows.Navigation.NavigationWindow" /> 可见，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-253"><see langword="true" /> if the navigation UI of a host <see cref="T:System.Windows.Navigation.NavigationWindow" /> is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-254"><xref:System.Windows.Navigation.NavigationWindow> 默认情况下，显示导航 UI，以启用浏览器样式向前和向后导航。</span><span class="sxs-lookup"><span data-stu-id="5159c-254"><xref:System.Windows.Navigation.NavigationWindow> displays navigation UI by default to enable browser-style forwards and backwards navigation.</span></span> <span data-ttu-id="5159c-255">如果页面设置为 <xref:System.Windows.Application.StartupUri%2A> ，则 <xref:System.Windows.Application> 会自动打开 <xref:System.Windows.Navigation.NavigationWindow> 以承载中的页面。</span><span class="sxs-lookup"><span data-stu-id="5159c-255">If a page is set as the <xref:System.Windows.Application.StartupUri%2A>, <xref:System.Windows.Application> automatically opens a <xref:System.Windows.Navigation.NavigationWindow> to host the page in.</span></span> <span data-ttu-id="5159c-256">如果该页不想使用默认 <xref:System.Windows.Navigation.NavigationWindow> 导航用户界面，则可以将设置 <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> 为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="5159c-256">If the page does not want to use the default <xref:System.Windows.Navigation.NavigationWindow> navigation UI, it can set <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5159c-257">因为 WPF 不与 Microsoft Internet Explorer 6 的导航 UI 集成，所以它提供自己的导航 UI，可通过设置来显示或隐藏该 UI <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-257">Because WPF does not integrate with the navigation UI for Microsoft Internet Explorer 6, it provides its own navigation UI, which can be shown or hidden by setting <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>.</span></span> <span data-ttu-id="5159c-258">WPF 确实与 Windows Internet Explorer 7 导航 UI 集成，因此 <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> Windows Internet explorer 7 中的页面设置不起作用。</span><span class="sxs-lookup"><span data-stu-id="5159c-258">WPF does integrate with the Windows Internet Explorer 7 navigation UI, so setting <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> on pages in Windows Internet Explorer 7 has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-259">下面的示例演示如何使用 XAML 隐藏的导航 UI <xref:System.Windows.Navigation.NavigationWindow> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-259">The following example shows how to use XAML to hide the navigation UI of a <xref:System.Windows.Navigation.NavigationWindow>.</span></span>  
  
 [!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAML1](~/samples/snippets/xaml/VS_Snippets_Wpf/PageShowsNavigationUISnippets/XAML/HomePage.xaml#setpageshowsnavigationuixaml1)]  
[!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAML2](~/samples/snippets/xaml/VS_Snippets_Wpf/PageShowsNavigationUISnippets/XAML/HomePage.xaml#setpageshowsnavigationuixaml2)]  
  
 [!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAMLLang1](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml#setpageshowsnavigationuixamllang1)]  
[!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAMLLang2](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml#setpageshowsnavigationuixamllang2)]  
  
 [!code-csharp[PageShowsNavigationUISnippets#SetPageShowsNavigationUICODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml.cs#setpageshowsnavigationuicodebehind)]
 [!code-vb[PageShowsNavigationUISnippets#SetPageShowsNavigationUICODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageShowsNavigationUISnippets/visualbasic/homepage.xaml.vb#setpageshowsnavigationuicodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5159c-260">在并非由 <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" />、<see cref="T:System.Windows.Controls.Page" /> 或浏览器承载的 <see cref="T:System.Windows.Window" /> 实例上，将检查 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-260">The <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property is inspected on a <see cref="T:System.Windows.Controls.Page" /> instance that is not hosted by a <see cref="T:System.Windows.Window" />, <see cref="T:System.Windows.Navigation.NavigationWindow" />, or a browser.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (obj As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ obj) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="page.System.Windows.Markup.IAddChild.AddChild obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5159c-261">要添加的子对象。</span><span class="sxs-lookup"><span data-stu-id="5159c-261">The child object to add.</span></span></param>
        <summary><span data-ttu-id="5159c-262">有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-262">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-263">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="5159c-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5159c-264">它只能在 <xref:System.Windows.Controls.Page> 实例被强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5159c-264">It can be used only when the <xref:System.Windows.Controls.Page> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string str);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (str As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ str) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="page.System.Windows.Markup.IAddChild.AddText str" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="5159c-265">要添加到对象的文本。</span><span class="sxs-lookup"><span data-stu-id="5159c-265">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="5159c-266">有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-266">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-267">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="5159c-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5159c-268">它只能在 <xref:System.Windows.Controls.Page> 实例被强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5159c-268">It can be used only when the <xref:System.Windows.Controls.Page> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ControlTemplate Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ControlTemplate Template" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Template" />
      <MemberSignature Language="VB.NET" Value="Public Property Template As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ControlTemplate ^ Template { System::Windows::Controls::ControlTemplate ^ get(); void set(System::Windows::Controls::ControlTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Template : System.Windows.Controls.ControlTemplate with get, set" Usage="System.Windows.Controls.Page.Template" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-269">获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的控件模板。</span><span class="sxs-lookup"><span data-stu-id="5159c-269">Gets or sets the control template for a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-270"><see cref="T:System.Windows.Controls.Page" /> 的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</span><span class="sxs-lookup"><span data-stu-id="5159c-270">The <see cref="T:System.Windows.Controls.ControlTemplate" /> for a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ContentTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5159c-271">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="5159c-271">XAML Attribute Usage</span></span>  
  
```  
<object Template="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_ContentTemplate"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5159c-272">XAML 值</span><span class="sxs-lookup"><span data-stu-id="5159c-272">XAML Values</span></span>  
 <span data-ttu-id="5159c-273">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="5159c-273">*resourceExtension*</span></span>  
 <span data-ttu-id="5159c-274">标识如何引用模板资源（或）的标记扩展 `StaticResource` `DynamicResource` 。</span><span class="sxs-lookup"><span data-stu-id="5159c-274">A markup extension that identifies how to reference the template resource, either `StaticResource` or `DynamicResource`.</span></span> <span data-ttu-id="5159c-275">请参阅 [XAML 资源](/dotnet/framework/wpf/advanced/xaml-resources)。</span><span class="sxs-lookup"><span data-stu-id="5159c-275">See [XAML Resources](/dotnet/framework/wpf/advanced/xaml-resources).</span></span>  
  
 <span data-ttu-id="5159c-276">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="5159c-276">*styleResourceKey*</span></span>  
 <span data-ttu-id="5159c-277">标识所请求模板选择器的键。</span><span class="sxs-lookup"><span data-stu-id="5159c-277">The key that identifies the requested template selector.</span></span> <span data-ttu-id="5159c-278">键引用中的现有资源 <xref:System.Windows.ResourceDictionary> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-278">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5159c-279">属性元素语法在技术上是可行的，但不建议这样做。</span><span class="sxs-lookup"><span data-stu-id="5159c-279">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="5159c-280">有关详细信息，请参阅 [内联样式和模板](/dotnet/framework/wpf/advanced/inline-styles-and-templates)。</span><span class="sxs-lookup"><span data-stu-id="5159c-280">For more information, see [Inline Styles and Templates](/dotnet/framework/wpf/advanced/inline-styles-and-templates).</span></span>  
  
<a name="dependencyPropertyInfo_PageTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-281">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-281">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-282">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-282">Identifier field</span></span>|<xref:System.Windows.Controls.Page.TemplateProperty>|  
|<span data-ttu-id="5159c-283">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-283">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.TemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.TemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-284">标识 <see cref="P:System.Windows.Controls.Page.Template" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-284">Identifies the <see cref="P:System.Windows.Controls.Page.Template" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Controls.Page.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-285">获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-285">Gets or sets the title of the <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-286"><see cref="T:System.Windows.Controls.Page" /> 的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-286">The title of the <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-287">属性的值 <xref:System.Windows.Controls.Page.Title%2A> 不是由显示的 <xref:System.Windows.Controls.Page> ，它也不会显示在承载的窗口的标题栏中 <xref:System.Windows.Controls.Page> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-287">The value of the <xref:System.Windows.Controls.Page.Title%2A> property is not displayed by <xref:System.Windows.Controls.Page>, nor is it displayed from the title bar of the window that is hosting a <xref:System.Windows.Controls.Page>.</span></span> <span data-ttu-id="5159c-288">相反，您可以将设置 <xref:System.Windows.Controls.Page.WindowTitle%2A> 为更改主机窗口的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-288">Instead, you set <xref:System.Windows.Controls.Page.WindowTitle%2A> to change the title of a host window.</span></span>  
  
 <span data-ttu-id="5159c-289"><xref:System.Windows.Controls.Page.Title%2A> 还可用于为一段导航内容生成导航历史记录项的名称。</span><span class="sxs-lookup"><span data-stu-id="5159c-289"><xref:System.Windows.Controls.Page.Title%2A> can also be used to generate the name of the navigation history entry for a piece of navigated content.</span></span> <span data-ttu-id="5159c-290">以下数据片段用于按优先级顺序自动构造导航历史记录项名称：</span><span class="sxs-lookup"><span data-stu-id="5159c-290">The following pieces of data are used to automatically construct a navigation history entry name, in order of precedence:</span></span>  
  
-   <span data-ttu-id="5159c-291">附加 <xref:System.Windows.Navigation.JournalEntry.Name%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-291">The attached <xref:System.Windows.Navigation.JournalEntry.Name%2A> attribute.</span></span>  
  
-   <span data-ttu-id="5159c-292"><xref:System.Windows.Controls.Page.Title%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-292">The <xref:System.Windows.Controls.Page.Title%2A> property.</span></span>  
  
-   <span data-ttu-id="5159c-293"><xref:System.Windows.Controls.Page.WindowTitle%2A>当前页的属性和统一资源标识符 (URI) </span><span class="sxs-lookup"><span data-stu-id="5159c-293">The <xref:System.Windows.Controls.Page.WindowTitle%2A> property and the uniform resource identifier (URI) for the current page</span></span>  
  
-   <span data-ttu-id="5159c-294">当前页 (URI) 的统一资源标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-294">The uniform resource identifier (URI) for the current page.</span></span>  
  
 <span data-ttu-id="5159c-295">如果已将 <xref:System.Windows.Navigation.CustomContentState> 对象与导航历史记录中的一段内容相关联，则可以通过重写来指定导航历史记录项中显示的名称 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-295">If you have associated a <xref:System.Windows.Navigation.CustomContentState> object with a piece of content in navigation history, you can specify the name that appears in the navigation history entry by overriding <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_PageTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5159c-296">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="5159c-296">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5159c-297">标识符字段</span><span class="sxs-lookup"><span data-stu-id="5159c-297">Identifier field</span></span>|<xref:System.Windows.Controls.Page.TitleProperty>|  
|<span data-ttu-id="5159c-298">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="5159c-298">Metadata properties set to `true`</span></span>|<span data-ttu-id="5159c-299">无</span><span class="sxs-lookup"><span data-stu-id="5159c-299">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-300">标识 <see cref="P:System.Windows.Controls.Page.Title" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-300">Identifies the <see cref="P:System.Windows.Controls.Page.Title" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-301"><xref:System.Windows.Controls.Page.Title%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-301">The identifier for the <xref:System.Windows.Controls.Page.Title%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="5159c-302">依赖项属性概述</span><span class="sxs-lookup"><span data-stu-id="5159c-302">Dependency Properties Overview</span></span>](/dotnet/framework/wpf/advanced/dependency-properties-overview)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public double WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WindowHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : double with get, set" Usage="System.Windows.Controls.Page.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-303">获取或设置 <see cref="T:System.Windows.Window" /> 的宿主 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 或 <see cref="T:System.Windows.Controls.Page" /> 的高度。</span><span class="sxs-lookup"><span data-stu-id="5159c-303">Gets or sets the height of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-304">直接承载 <see cref="T:System.Windows.Controls.Page" /> 的窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="5159c-304">The height of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-305"><xref:System.Windows.Controls.Page.WindowHeight%2A> 仅当 <xref:System.Windows.Controls.Page> 由窗口直接承载时才应用，其中包括：</span><span class="sxs-lookup"><span data-stu-id="5159c-305"><xref:System.Windows.Controls.Page.WindowHeight%2A> is only applied when a <xref:System.Windows.Controls.Page> is hosted directly by a window, which includes:</span></span>  
  
-   <xref:System.Windows.Window>  
  
-   <xref:System.Windows.Navigation.NavigationWindow>  
  
-   <span data-ttu-id="5159c-306">Windows Internet Explorer</span><span class="sxs-lookup"><span data-stu-id="5159c-306">Windows Internet Explorer</span></span>  
  
 <span data-ttu-id="5159c-307">如果 <xref:System.Windows.Controls.Page> 由承载 <xref:System.Windows.Controls.Frame> ，则设置 <xref:System.Windows.Controls.Page.WindowHeight%2A> 不起作用，但仍可获取的值 <xref:System.Windows.Controls.Page.WindowHeight%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-307">If a <xref:System.Windows.Controls.Page> is hosted by a <xref:System.Windows.Controls.Frame>, setting <xref:System.Windows.Controls.Page.WindowHeight%2A> has no effect, but you can still get the value of <xref:System.Windows.Controls.Page.WindowHeight%2A>.</span></span>  
  
 <span data-ttu-id="5159c-308"><xref:System.Windows.Controls.Page>XAML 浏览器应用程序中 (XBAP) 只能使用 <xref:System.Windows.Controls.Page.WindowHeight%2A> 更改 Windows Internet Explorer 的高度; 不能通过设置 <xref:System.Windows.FrameworkElement.Height%2A> 、或更改高度 <xref:System.Windows.FrameworkElement.MinHeight%2A> <xref:System.Windows.FrameworkElement.MaxHeight%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-308">A <xref:System.Windows.Controls.Page> in an XAML browser application (XBAP) can only use <xref:System.Windows.Controls.Page.WindowHeight%2A> to change the height of Windows Internet Explorer; the height cannot be changed by setting <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.MinHeight%2A>, or <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span>  
  
 <span data-ttu-id="5159c-309">Windows Internet Explorer 窗口的最小高度为150像素。</span><span class="sxs-lookup"><span data-stu-id="5159c-309">The minimum height of the Windows Internet Explorer window is 150 pixels.</span></span> <span data-ttu-id="5159c-310">对于浏览器承载的页，这意味着， <xref:System.Windows.Controls.Page.WindowHeight%2A> 如果它会导致 Windows Internet Explorer 窗口的总高度小于150像素，则不能应用该值。</span><span class="sxs-lookup"><span data-stu-id="5159c-310">For browser-hosted pages, this means that the value of <xref:System.Windows.Controls.Page.WindowHeight%2A> may not be applied if it would cause the total height of the Windows Internet Explorer window to be less than 150 pixels.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-311">下面的示例演示如何从页面设置窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="5159c-311">The following example shows how to set the height of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowHeightPage.xaml#setpagewindowheightxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowTitle">
      <MemberSignature Language="C#" Value="public string WindowTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTitle : string with get, set" Usage="System.Windows.Controls.Page.WindowTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.Title)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.Title)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-312">获取或设置 <see cref="T:System.Windows.Window" /> 的宿主 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 或 <see cref="T:System.Windows.Controls.Page" /> 的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-312">Gets or sets the title of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-313">直接承载 <see cref="T:System.Windows.Controls.Page" /> 的窗口的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-313">The title of a window that directly hosts the <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-314">默认情况下，承载页面的窗口的标题（包括 <xref:System.Windows.Navigation.NavigationWindow> 和 Windows Internet Explorer）是当前寄宿 (的文件的名称（如果页面 Extensible Application Markup Language (xaml) ，则为 .xaml 扩展名; 如果该页是 xaml 浏览器应用程序的一部分，则为 xbap (。</span><span class="sxs-lookup"><span data-stu-id="5159c-314">By default, the title of a window that hosts a page, including <xref:System.Windows.Navigation.NavigationWindow> and Windows Internet Explorer, is the name of the file that is currently being hosted (with an .xaml extension if the page is loose Extensible Application Markup Language (XAML), or an .xbap extension if the page is part of an XAML browser application (XBAP)).</span></span>  
  
 <span data-ttu-id="5159c-315">页面可以通过设置其属性来更改默认值 <xref:System.Windows.Controls.Page.WindowTitle%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-315">A page can change the default by setting its <xref:System.Windows.Controls.Page.WindowTitle%2A> property.</span></span>  
  
 <span data-ttu-id="5159c-316">一旦页面以这种方式设置了窗口的标题，窗口的标题就不会更改，直到另一个页面集 <xref:System.Windows.Controls.Page.WindowTitle%2A> 具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="5159c-316">Once a page sets the title of a window in this way, the window's title does not change until another page sets <xref:System.Windows.Controls.Page.WindowTitle%2A> with a different value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5159c-317"><xref:System.Windows.Controls.Page>必须是窗口中的最顶部内容段 <xref:System.Windows.Controls.Page.WindowTitle%2A> ，才能产生效果; 如果在中 <xref:System.Windows.Controls.Page> 承载 <xref:System.Windows.Controls.Frame> ，则设置 <xref:System.Windows.Controls.Page.WindowTitle%2A> 不会更改主机窗口的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-317">The <xref:System.Windows.Controls.Page> must be the topmost piece of content in a window for <xref:System.Windows.Controls.Page.WindowTitle%2A> to have an effect; if a <xref:System.Windows.Controls.Page> is hosted within a <xref:System.Windows.Controls.Frame>, for example, setting <xref:System.Windows.Controls.Page.WindowTitle%2A> does not change the title of the host window.</span></span>  
  
 <span data-ttu-id="5159c-318"><xref:System.Windows.Controls.Page.WindowTitle%2A> 还可用于为一段导航内容生成导航历史记录项的名称。</span><span class="sxs-lookup"><span data-stu-id="5159c-318"><xref:System.Windows.Controls.Page.WindowTitle%2A> can also be used to generate the name of the navigation history entry for a piece of navigated content.</span></span> <span data-ttu-id="5159c-319">以下数据片段用于按优先级顺序自动构造导航历史记录项名称：</span><span class="sxs-lookup"><span data-stu-id="5159c-319">The following pieces of data are used to automatically construct a navigation history entry name, in order of precedence:</span></span>  
  
-   <span data-ttu-id="5159c-320">附加 <xref:System.Windows.Navigation.JournalEntry.Name%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-320">The attached <xref:System.Windows.Navigation.JournalEntry.Name%2A> attribute.</span></span>  
  
-   <span data-ttu-id="5159c-321"><xref:System.Windows.Controls.Page.Title%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="5159c-321">The <xref:System.Windows.Controls.Page.Title%2A> property.</span></span>  
  
-   <span data-ttu-id="5159c-322"><xref:System.Windows.Controls.Page.WindowTitle%2A>当前页的属性和统一资源标识符 (URI) </span><span class="sxs-lookup"><span data-stu-id="5159c-322">The <xref:System.Windows.Controls.Page.WindowTitle%2A> property and the uniform resource identifier (URI) for the current page</span></span>  
  
-   <span data-ttu-id="5159c-323">当前页 (URI) 的统一资源标识符。</span><span class="sxs-lookup"><span data-stu-id="5159c-323">The uniform resource identifier (URI) for the current page.</span></span>  
  
 <span data-ttu-id="5159c-324">如果已将 <xref:System.Windows.Navigation.CustomContentState> 对象与导航历史记录中的一段内容相关联，则可以通过重写来指定导航历史记录元素的名称值 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-324">If you have associated a <xref:System.Windows.Navigation.CustomContentState> object with a piece of content in navigation history, you can specify the name value of a navigation history element by overriding <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-325">下面的示例演示如何从页面设置窗口的标题。</span><span class="sxs-lookup"><span data-stu-id="5159c-325">The following example shows how to set the title of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowTitleXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowTitlePage.xaml#setpagewindowtitlexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public double WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WindowWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : double with get, set" Usage="System.Windows.Controls.Page.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5159c-326">获取或设置 <see cref="T:System.Windows.Window" /> 的宿主 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 或 <see cref="T:System.Windows.Controls.Page" /> 的宽度。</span><span class="sxs-lookup"><span data-stu-id="5159c-326">Gets or sets the width of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span></span></summary>
        <value><span data-ttu-id="5159c-327">直接承载 <see cref="T:System.Windows.Controls.Page" /> 的窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="5159c-327">The width of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5159c-328"><xref:System.Windows.Controls.Page.WindowWidth%2A> 仅当 <xref:System.Windows.Controls.Page> 由窗口直接承载时才应用，其中包括：</span><span class="sxs-lookup"><span data-stu-id="5159c-328"><xref:System.Windows.Controls.Page.WindowWidth%2A> is only applied when a <xref:System.Windows.Controls.Page> is hosted directly by a window, which includes:</span></span>  
  
-   <xref:System.Windows.Window>  
  
-   <xref:System.Windows.Navigation.NavigationWindow>  
  
-   <span data-ttu-id="5159c-329">Windows Internet Explorer</span><span class="sxs-lookup"><span data-stu-id="5159c-329">Windows Internet Explorer</span></span>  
  
 <span data-ttu-id="5159c-330">如果 <xref:System.Windows.Controls.Page> 由承载 <xref:System.Windows.Controls.Frame> ，则设置 <xref:System.Windows.Controls.Page.WindowWidth%2A> 不起作用，但仍可获取的值 <xref:System.Windows.Controls.Page.WindowWidth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-330">If a <xref:System.Windows.Controls.Page> is hosted by a <xref:System.Windows.Controls.Frame>, setting <xref:System.Windows.Controls.Page.WindowWidth%2A> has no effect, but you can still get the value of <xref:System.Windows.Controls.Page.WindowWidth%2A>.</span></span>  
  
 <span data-ttu-id="5159c-331"><xref:System.Windows.Controls.Page>XAML 浏览器应用程序中 (XBAP) 只能使用 <xref:System.Windows.Controls.Page.WindowWidth%2A> 更改 Windows Internet Explorer 的宽度; 不能通过设置 <xref:System.Windows.FrameworkElement.Width%2A> 、或更改宽度 <xref:System.Windows.FrameworkElement.MinWidth%2A> <xref:System.Windows.FrameworkElement.MaxWidth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="5159c-331">A <xref:System.Windows.Controls.Page> in an XAML browser application (XBAP) can only use <xref:System.Windows.Controls.Page.WindowWidth%2A> to change the width of Windows Internet Explorer; the width cannot be changed by setting <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.MinWidth%2A>, or <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  
  
 <span data-ttu-id="5159c-332">Windows Internet Explorer 窗口的最小宽度为250像素。</span><span class="sxs-lookup"><span data-stu-id="5159c-332">The minimum width of the Windows Internet Explorer window is 250 pixels.</span></span> <span data-ttu-id="5159c-333">对于浏览器承载的页，这意味着， <xref:System.Windows.Controls.Page.WindowWidth%2A> 如果其值会导致 Windows Internet Explorer 窗口的总宽度小于250像素，则不会应用此值。</span><span class="sxs-lookup"><span data-stu-id="5159c-333">For browser-hosted pages, this means that the value of <xref:System.Windows.Controls.Page.WindowWidth%2A> may not be applied if it would cause the total width of the Windows Internet Explorer window to be less than 250 pixels.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5159c-334">下面的示例演示如何从页面设置窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="5159c-334">The following example shows how to set the width of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowWidthXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowWidthPage.xaml#setpagewindowwidthxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
