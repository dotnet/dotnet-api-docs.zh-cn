<Type Name="VirtualizationCacheLength" FullName="System.Windows.Controls.VirtualizationCacheLength">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5df325c2c799d21ed08a7a564297e0a90fcc72c" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102069720" /></Metadata><TypeSignature Language="C#" Value="public struct VirtualizationCacheLength : IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit VirtualizationCacheLength extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.VirtualizationCacheLength" />
  <TypeSignature Language="VB.NET" Value="Public Structure VirtualizationCacheLength&#xA;Implements IEquatable(Of VirtualizationCacheLength)" />
  <TypeSignature Language="C++ CLI" Value="public value class VirtualizationCacheLength : IEquatable&lt;System::Windows::Controls::VirtualizationCacheLength&gt;" />
  <TypeSignature Language="F#" Value="type VirtualizationCacheLength = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="10ba6-101">表示 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性的度量值。</span><span class="sxs-lookup"><span data-stu-id="10ba6-101">Represents the measurements for the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-102"><xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType>附加属性指定在 <xref:System.Windows.Controls.VirtualizingPanel> 视图端口之前或之后虚拟化项的空间量 (项在其中可见) 的区域。</span><span class="sxs-lookup"><span data-stu-id="10ba6-102">The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible).</span></span>  <span data-ttu-id="10ba6-103">你可以 <xref:System.Windows.Controls.VirtualizationCacheLength> 使用采用单个参数的构造函数来指定要创建的统一缓存长度。</span><span class="sxs-lookup"><span data-stu-id="10ba6-103">You can specify uniform cache length my creating a <xref:System.Windows.Controls.VirtualizationCacheLength> by using the constructor that takes a single parameter.</span></span>  <span data-ttu-id="10ba6-104">可以使用构造函数，该构造函数采用两个参数为和属性指定不同的值 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> 。</span><span class="sxs-lookup"><span data-stu-id="10ba6-104">You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10ba6-105">创建 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="10ba6-105">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeAndAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeAndAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeAndAfterViewport);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.VirtualizationCacheLength : double -&gt; System.Windows.Controls.VirtualizationCacheLength" Usage="new System.Windows.Controls.VirtualizationCacheLength cacheBeforeAndAfterViewport" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeAndAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeAndAfterViewport"><span data-ttu-id="10ba6-106">视区前后的缓存区的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-106">The size of the cache before and after the viewport.</span></span></param>
        <summary><span data-ttu-id="10ba6-107">创建视点每边的统一缓存长度的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="10ba6-107">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with a uniform cache length for each side of the viewport.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeViewport, float64 cacheAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeViewport As Double, cacheAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.VirtualizationCacheLength : double * double -&gt; System.Windows.Controls.VirtualizationCacheLength" Usage="new System.Windows.Controls.VirtualizationCacheLength (cacheBeforeViewport, cacheAfterViewport)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeViewport" Type="System.Double" />
        <Parameter Name="cacheAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeViewport"><span data-ttu-id="10ba6-108">视口前的缓存区的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-108">The size of the cache before the viewport.</span></span></param>
        <param name="cacheAfterViewport"><span data-ttu-id="10ba6-109">视口后的缓存区的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-109">The size of the cache after the viewport.</span></span></param>
        <summary><span data-ttu-id="10ba6-110">创建视点每边指定缓存长度的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="10ba6-110">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with the specified cache lengths for each side of the viewport.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheAfterViewport">
      <MemberSignature Language="C#" Value="public double CacheAfterViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheAfterViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheAfterViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheAfterViewport { double get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheAfterViewport : double" Usage="System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10ba6-111">当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化时，在视区前获取该缓存的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-111">Gets the size of the cache before the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></summary>
        <value><span data-ttu-id="10ba6-112">当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效时在视口之后的缓存的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-112">The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-113">在此上下文中，"虚拟化" 指的是一种技术，通过该技术，用户界面 (UI) 元素根据屏幕上可见的项在更多数据项中生成。</span><span class="sxs-lookup"><span data-stu-id="10ba6-113">In this context, "virtualize" refers to a technique by which a subset of user interface (UI) elements are generated from a larger number of data items based on which items are visible on the screen.</span></span> <span data-ttu-id="10ba6-114">使用缓存来避免在 UI 元素滚动到查看时生成它们。</span><span class="sxs-lookup"><span data-stu-id="10ba6-114">Use a cache to avoid generating UI elements as they're scrolled into view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheBeforeViewport">
      <MemberSignature Language="C#" Value="public double CacheBeforeViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheBeforeViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheBeforeViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheBeforeViewport { double get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheBeforeViewport : double" Usage="System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10ba6-115">当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化时，在视区后获取该缓存的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-115">Gets the size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></summary>
        <value><span data-ttu-id="10ba6-116">当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效时在视口之后的缓存的大小。</span><span class="sxs-lookup"><span data-stu-id="10ba6-116">The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-117">在此上下文中，"虚拟化" 指的是一种技术，通过该技术，用户界面 (UI) 元素根据屏幕上可见的项在更多数据项中生成。</span><span class="sxs-lookup"><span data-stu-id="10ba6-117">In this context, "virtualize" refers to a technique by which a subset of user interface (UI) elements are generated from a larger number of data items based on which items are visible on the screen.</span></span> <span data-ttu-id="10ba6-118">使用缓存来避免在 UI 元素滚动到查看时生成它们。</span><span class="sxs-lookup"><span data-stu-id="10ba6-118">Use a cache to avoid generating UI elements as they're scrolled into view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="10ba6-119">确定两个对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-119">Determines whether two objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object oCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object oCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (oCompare As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ oCompare);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="virtualizationCacheLength.Equals oCompare" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oCompare" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oCompare"><span data-ttu-id="10ba6-120">将与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="10ba6-120">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></param>
        <summary><span data-ttu-id="10ba6-121">确定指定的对象是否等于当前的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</span><span class="sxs-lookup"><span data-stu-id="10ba6-121">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns><span data-ttu-id="10ba6-122">如果指定的对象等于当前的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="10ba6-122"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-123"><xref:System.Windows.Controls.VirtualizationCacheLength>检查值是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-123">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="10ba6-124">也就是说，如果两个对象的 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> 属性值相等并且其属性值相等，则这两个对象相等 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> 。</span><span class="sxs-lookup"><span data-stu-id="10ba6-124">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Controls.VirtualizationCacheLength cacheLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (cacheLength As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Controls::VirtualizationCacheLength cacheLength);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Controls.VirtualizationCacheLength -&gt; bool" Usage="virtualizationCacheLength.Equals cacheLength" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheLength" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cacheLength"><span data-ttu-id="10ba6-125">将与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="10ba6-125">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></param>
        <summary><span data-ttu-id="10ba6-126">确定指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 是否等同于当前的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</span><span class="sxs-lookup"><span data-stu-id="10ba6-126">Determines whether the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns><span data-ttu-id="10ba6-127">如果指定的对象等于当前的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="10ba6-127"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-128"><xref:System.Windows.Controls.VirtualizationCacheLength>检查值是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-128">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="10ba6-129">也就是说，如果两个对象的 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> 属性值相等并且其属性值相等，则这两个对象相等 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> 。</span><span class="sxs-lookup"><span data-stu-id="10ba6-129">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="virtualizationCacheLength.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10ba6-130">获取当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="10ba6-130">Gets a hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns><span data-ttu-id="10ba6-131">当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="10ba6-131">A hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.VirtualizationCacheLength * System.Windows.Controls.VirtualizationCacheLength -&gt; bool" Usage="cl1 = cl2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1"><span data-ttu-id="10ba6-132">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="10ba6-132">The first object to compare.</span></span></param>
        <param name="cl2"><span data-ttu-id="10ba6-133">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="10ba6-133">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="10ba6-134">确定两个指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-134">Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="10ba6-135">如果指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="10ba6-135"><see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-136"><xref:System.Windows.Controls.VirtualizationCacheLength>检查值是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-136">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="10ba6-137">也就是说，如果两个对象的 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> 属性值相等并且其属性值相等，则这两个对象相等 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> 。</span><span class="sxs-lookup"><span data-stu-id="10ba6-137">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.VirtualizationCacheLength * System.Windows.Controls.VirtualizationCacheLength -&gt; bool" Usage="System.Windows.Controls.VirtualizationCacheLength.op_Inequality (cl1, cl2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1"><span data-ttu-id="10ba6-138">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="10ba6-138">The first object to compare.</span></span></param>
        <param name="cl2"><span data-ttu-id="10ba6-139">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="10ba6-139">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="10ba6-140">确定两个指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-140">Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="10ba6-141">如果指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="10ba6-141"><see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-142"><xref:System.Windows.Controls.VirtualizationCacheLength>检查值是否相等。</span><span class="sxs-lookup"><span data-stu-id="10ba6-142">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="10ba6-143">也就是说，如果两个对象的 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> 属性值相等并且其属性值相等，则这两个对象相等 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> 。</span><span class="sxs-lookup"><span data-stu-id="10ba6-143">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="virtualizationCacheLength.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="10ba6-144">返回表示当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="10ba6-144">Returns a string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></summary>
        <returns><span data-ttu-id="10ba6-145">表示当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="10ba6-145">A string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10ba6-146"><xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A>方法返回一个字符串，该字符串显示 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> 和属性的值 <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> 。</span><span class="sxs-lookup"><span data-stu-id="10ba6-146">The <xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A> method returns a string that displays the values of the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
