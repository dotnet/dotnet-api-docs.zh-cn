<Type Name="SelectionChangedEventArgs" FullName="System.Windows.Controls.SelectionChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca46811bb79f4db38ac2348b60a1cba6ca16bc18" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89797404" /></Metadata><TypeSignature Language="C#" Value="public class SelectionChangedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectionChangedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.SelectionChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SelectionChangedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SelectionChangedEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type SelectionChangedEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建 <xref:System.Windows.Controls.ListBox> 并订阅该 <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> 事件。 它使用在 <xref:System.Windows.Controls.SelectionChangedEventArgs> 中查找选定的项 <xref:System.Windows.Controls.ListBox> 。  
  
 [!code-xaml[ListBoxEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[ListBoxEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml.cs#9)]
 [!code-vb[ListBoxEvent#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxEvent/VisualBasic/Pane1.xaml.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RoutedEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectionChangedEventArgs (System.Windows.RoutedEvent id, System.Collections.IList removedItems, System.Collections.IList addedItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, class System.Collections.IList removedItems, class System.Collections.IList addedItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, removedItems As IList, addedItems As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SelectionChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Collections::IList ^ removedItems, System::Collections::IList ^ addedItems);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.SelectionChangedEventArgs : System.Windows.RoutedEvent * System.Collections.IList * System.Collections.IList -&gt; System.Windows.Controls.SelectionChangedEventArgs" Usage="new System.Windows.Controls.SelectionChangedEventArgs (id, removedItems, addedItems)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="removedItems" Type="System.Collections.IList" />
        <Parameter Name="addedItems" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="id">事件[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]。</param>
        <param name="removedItems">在发生此事件期间，未选定的项。</param>
        <param name="addedItems">在发生此事件期间，选定的项。</param>
        <summary>初始化 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建 <xref:System.Windows.Controls.ListBox> 并订阅该 <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> 事件。 它使用在 <xref:System.Windows.Controls.SelectionChangedEventArgs> 中查找选定的项 <xref:System.Windows.Controls.ListBox> 。  
  
 [!code-xaml[ListBoxEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[ListBoxEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml.cs#9)]
 [!code-vb[ListBoxEvent#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxEvent/VisualBasic/Pane1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList AddedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList AddedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddedItems As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ AddedItems { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddedItems : System.Collections.IList" Usage="System.Windows.Controls.SelectionChangedEventArgs.AddedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含选定项的列表。</summary>
        <value>上次发生 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件以来选定的项。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="selectionChangedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">要调用的处理程序。</param>
        <param name="genericTarget">事件路由上的当前对象。</param>
        <summary>执行适当类型的强制转换，以为 <see cref="T:System.Windows.Controls.SelectionChangedEventHandler" /> 事件调用类型安全的 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 委托。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建 <xref:System.Windows.Controls.ListBox> 并订阅该 <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> 事件。 它使用在 <xref:System.Windows.Controls.SelectionChangedEventArgs> 中查找选定的项 <xref:System.Windows.Controls.ListBox> 。  
  
 [!code-xaml[ListBoxEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[ListBoxEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml.cs#9)]
 [!code-vb[ListBoxEvent#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxEvent/VisualBasic/Pane1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.SelectionChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="RemovedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList RemovedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList RemovedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemovedItems As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ RemovedItems { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemovedItems : System.Collections.IList" Usage="System.Windows.Controls.SelectionChangedEventArgs.RemovedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含未选定项的列表。</summary>
        <value>上次发生 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件以来未选定的项。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
