<Type Name="PageRange" FullName="System.Windows.Controls.PageRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c6dc67a30dd9e0964c999c6b494fe8d97879a51" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86823126" /></Metadata><TypeSignature Language="C#" Value="public struct PageRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PageRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PageRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure PageRange" />
  <TypeSignature Language="C++ CLI" Value="public value class PageRange" />
  <TypeSignature Language="F#" Value="type PageRange = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07852-101">指定页范围。</span><span class="sxs-lookup"><span data-stu-id="07852-101">Specifies a range of pages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07852-102"><xref:System.Windows.Controls.PageRange> 定义应该在操作（如打印）中处理的一系列页面。</span><span class="sxs-lookup"><span data-stu-id="07852-102"><xref:System.Windows.Controls.PageRange> defines a range of pages that should be processed in an operation such as  printing.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07852-103">初始化 <see cref="T:System.Windows.Controls.PageRange" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="07852-103">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRange (int page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (page As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRange(int page);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.PageRange : int -&gt; System.Windows.Controls.PageRange" Usage="new System.Windows.Controls.PageRange page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="page" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="07852-104">打印或处理的页。</span><span class="sxs-lookup"><span data-stu-id="07852-104">The page that is printed or processed.</span></span></param>
        <summary><span data-ttu-id="07852-105">初始化只包括单个指定页的 <see cref="T:System.Windows.Controls.PageRange" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="07852-105">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class that includes only the single specified page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07852-106">`page`参数值是从1开始的; 页码1是第一页。</span><span class="sxs-lookup"><span data-stu-id="07852-106">The `page` parameter value is 1-based; page number 1 is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageFrom" />
        <altmember cref="P:System.Windows.Controls.PageRange.PageTo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRange (int pageFrom, int pageTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 pageFrom, int32 pageTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pageFrom As Integer, pageTo As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRange(int pageFrom, int pageTo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.PageRange : int * int -&gt; System.Windows.Controls.PageRange" Usage="new System.Windows.Controls.PageRange (pageFrom, pageTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pageFrom" Type="System.Int32" />
        <Parameter Name="pageTo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageFrom"><span data-ttu-id="07852-107">范围的第一页。</span><span class="sxs-lookup"><span data-stu-id="07852-107">The first page of the range.</span></span></param>
        <param name="pageTo"><span data-ttu-id="07852-108">范围的最后一页。</span><span class="sxs-lookup"><span data-stu-id="07852-108">The last page of the range.</span></span></param>
        <summary><span data-ttu-id="07852-109">用指定的第一页和最后一页初始化 <see cref="T:System.Windows.Controls.PageRange" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="07852-109">Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange" /> class with the specified first and last pages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07852-110">`pageFrom`和 `PageTo` 参数值从1开始; 页码1是第一页。</span><span class="sxs-lookup"><span data-stu-id="07852-110">The `pageFrom` and `PageTo` parameter values are 1-based; page number 1 is the first page.</span></span>  
  
 <span data-ttu-id="07852-111">由于范围包括 "from" 和 "to" 页，因此总页数为 " <xref:System.Windows.Controls.PageRange.PageTo%2A>  -  <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1"。</span><span class="sxs-lookup"><span data-stu-id="07852-111">Since the range includes both the "from" and "to" pages, the total number of pages is "<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageFrom" />
        <altmember cref="P:System.Windows.Controls.PageRange.PageTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07852-112">测试是否与 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等。</span><span class="sxs-lookup"><span data-stu-id="07852-112">Tests for equality with a <see cref="T:System.Windows.Controls.PageRange" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="pageRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="07852-113">已测试的对象。</span><span class="sxs-lookup"><span data-stu-id="07852-113">The object tested.</span></span></param>
        <summary><span data-ttu-id="07852-114">测试未知类型的对象是否与此 <see cref="T:System.Windows.Controls.PageRange" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="07852-114">Tests whether an object of unknown type is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</span></span></summary>
        <returns><span data-ttu-id="07852-115">如果对象的类型为 <see cref="T:System.Windows.Controls.PageRange" />，并且与此 <see cref="T:System.Windows.Controls.PageRange" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07852-115"><see langword="true" /> if the object is of type <see cref="T:System.Windows.Controls.PageRange" /> and is equal to this <see cref="T:System.Windows.Controls.PageRange" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Controls.PageRange pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (pageRange As PageRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Controls::PageRange pageRange);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Controls.PageRange -&gt; bool" Usage="pageRange.Equals pageRange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" />
      </Parameters>
      <Docs>
        <param name="pageRange"><span data-ttu-id="07852-116">已测试的 <see cref="T:System.Windows.Controls.PageRange" />。</span><span class="sxs-lookup"><span data-stu-id="07852-116">The <see cref="T:System.Windows.Controls.PageRange" /> tested.</span></span></param>
        <summary><span data-ttu-id="07852-117">测试 <see cref="T:System.Windows.Controls.PageRange" /> 是否与此 <see cref="T:System.Windows.Controls.PageRange" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="07852-117">Tests whether a <see cref="T:System.Windows.Controls.PageRange" /> is equal to this <see cref="T:System.Windows.Controls.PageRange" />.</span></span></summary>
        <returns><span data-ttu-id="07852-118">如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07852-118"><see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="pageRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07852-119">获取 <see cref="T:System.Windows.Controls.PageRange" />的哈希代码值。</span><span class="sxs-lookup"><span data-stu-id="07852-119">Gets the hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</span></span></summary>
        <returns><span data-ttu-id="07852-120"><see cref="T:System.Windows.Controls.PageRange" /> 的哈希代码值。</span><span class="sxs-lookup"><span data-stu-id="07852-120">The hash code value for the <see cref="T:System.Windows.Controls.PageRange" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.PageRange pr1, valuetype System.Windows.Controls.PageRange pr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (pr1 As PageRange, pr2 As PageRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::PageRange pr1, System::Windows::Controls::PageRange pr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.PageRange * System.Windows.Controls.PageRange -&gt; bool" Usage="pr1 = pr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pr1" Type="System.Windows.Controls.PageRange" />
        <Parameter Name="pr2" Type="System.Windows.Controls.PageRange" />
      </Parameters>
      <Docs>
        <param name="pr1"><span data-ttu-id="07852-121">第一个 <see cref="T:System.Windows.Controls.PageRange" />。</span><span class="sxs-lookup"><span data-stu-id="07852-121">The first <see cref="T:System.Windows.Controls.PageRange" />.</span></span></param>
        <param name="pr2"><span data-ttu-id="07852-122">第二个 <see cref="T:System.Windows.Controls.PageRange" />。</span><span class="sxs-lookup"><span data-stu-id="07852-122">The second <see cref="T:System.Windows.Controls.PageRange" />.</span></span></param>
        <summary><span data-ttu-id="07852-123">定义“==”运算符以测试两个指定的 <see cref="T:System.Windows.Controls.PageRange" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="07852-123">Defines the "==" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="07852-124">如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07852-124"><see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="07852-125">此运算符的等效方法是 <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="07852-125">The equivalent method for this operator is <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
        <altmember cref="Overload:System.Windows.Controls.PageRange.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.PageRange pr1, valuetype System.Windows.Controls.PageRange pr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (pr1 As PageRange, pr2 As PageRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::PageRange pr1, System::Windows::Controls::PageRange pr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.PageRange * System.Windows.Controls.PageRange -&gt; bool" Usage="System.Windows.Controls.PageRange.op_Inequality (pr1, pr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pr1" Type="System.Windows.Controls.PageRange" />
        <Parameter Name="pr2" Type="System.Windows.Controls.PageRange" />
      </Parameters>
      <Docs>
        <param name="pr1"><span data-ttu-id="07852-126">第一个 <see cref="T:System.Windows.Controls.PageRange" />。</span><span class="sxs-lookup"><span data-stu-id="07852-126">The first <see cref="T:System.Windows.Controls.PageRange" />.</span></span></param>
        <param name="pr2"><span data-ttu-id="07852-127">第二个 <see cref="T:System.Windows.Controls.PageRange" />。</span><span class="sxs-lookup"><span data-stu-id="07852-127">The second <see cref="T:System.Windows.Controls.PageRange" />.</span></span></param>
        <summary><span data-ttu-id="07852-128">定义“!=”运算符以测试两个指定的 <see cref="T:System.Windows.Controls.PageRange" /> 对象是否不相等\*\*。</span><span class="sxs-lookup"><span data-stu-id="07852-128">Defines the "!=" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange" /> objects are *not* equal.</span></span></summary>
        <returns><span data-ttu-id="07852-129"><see langword="true" /> 如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象 *不* 相等，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="07852-129"><see langword="true" /> if the two <see cref="T:System.Windows.Controls.PageRange" /> objects are *not* equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="07852-130">此运算符的等效方法是 <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="07852-130">The equivalent method for this operator is the negation of <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)" />
        <altmember cref="Overload:System.Windows.Controls.PageRange.Equals" />
      </Docs>
    </Member>
    <Member MemberName="PageFrom">
      <MemberSignature Language="C#" Value="public int PageFrom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageFrom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PageRange.PageFrom" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFrom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageFrom { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageFrom : int with get, set" Usage="System.Windows.Controls.PageRange.PageFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07852-131">获取或设置范围内第一页的页码。</span><span class="sxs-lookup"><span data-stu-id="07852-131">Gets or sets the page number of the first page in the range.</span></span></summary>
        <value><span data-ttu-id="07852-132">范围内第一页的从 1 开始的页码。</span><span class="sxs-lookup"><span data-stu-id="07852-132">The 1-based page number of the first page in the range.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07852-133"><xref:System.Windows.Controls.PageRange.PageFrom%2A>属性从1开始; 页码1是第一页。</span><span class="sxs-lookup"><span data-stu-id="07852-133">The <xref:System.Windows.Controls.PageRange.PageFrom%2A> property is 1-based; page number 1 is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageTo" />
      </Docs>
    </Member>
    <Member MemberName="PageTo">
      <MemberSignature Language="C#" Value="public int PageTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageTo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PageRange.PageTo" />
      <MemberSignature Language="VB.NET" Value="Public Property PageTo As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageTo { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageTo : int with get, set" Usage="System.Windows.Controls.PageRange.PageTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07852-134">获取或设置范围内最后一页的页码。</span><span class="sxs-lookup"><span data-stu-id="07852-134">Gets or sets the page number of the last page in the range.</span></span></summary>
        <value><span data-ttu-id="07852-135">范围内最后一页的从 1 开始的页码。</span><span class="sxs-lookup"><span data-stu-id="07852-135">The 1-based page number of the last page in the range.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07852-136"><xref:System.Windows.Controls.PageRange.PageTo%2A>属性从1开始; 页码1是第一页。</span><span class="sxs-lookup"><span data-stu-id="07852-136">The <xref:System.Windows.Controls.PageRange.PageTo%2A> property is 1-based; page number 1 is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.PageRange.PageFrom" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PageRange.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pageRange.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07852-137">获取范围的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="07852-137">Gets a string representation of the range.</span></span></summary>
        <returns><span data-ttu-id="07852-138">一个字符串，表示格式为 "" 的页范围 <see cref="P:System.Windows.Controls.PageRange.PageFrom" /> <c>-</c> <see cref="P:System.Windows.Controls.PageRange.PageTo" /> 。</span><span class="sxs-lookup"><span data-stu-id="07852-138">A string that represents the range of pages in the format "<see cref="P:System.Windows.Controls.PageRange.PageFrom" /><c>-</c><see cref="P:System.Windows.Controls.PageRange.PageTo" />".</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
