<Type Name="Validation" FullName="System.Windows.Controls.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="035f8bfaa92884c6b5e9e7953a93618d5dc0ccce" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86786662" /></Metadata><TypeSignature Language="C#" Value="public static class Validation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Class Validation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validation abstract sealed" />
  <TypeSignature Language="F#" Value="type Validation = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供支持数据验证的方法和附加属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关验证过程的详细讨论，请参阅 [数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证"。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.Binding.ValidationRules" />
    <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
  </Docs>
  <Members>
    <Member MemberName="AddErrorHandler">
      <MemberSignature Language="C#" Value="public static void AddErrorHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddErrorHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Controls.ValidationErrorEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddErrorHandler (element As DependencyObject, handler As EventHandler(Of ValidationErrorEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddErrorHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Controls::ValidationErrorEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddErrorHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; -&gt; unit" Usage="System.Windows.Controls.Validation.AddErrorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">要向其中添加 <paramref name="handler" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
        <param name="handler">要添加的处理程序。</param>
        <summary>向指定对象添加 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件的事件处理程序。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearInvalid">
      <MemberSignature Language="C#" Value="public static void ClearInvalid (System.Windows.Data.BindingExpressionBase bindingExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearInvalid(class System.Windows.Data.BindingExpressionBase bindingExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearInvalid (bindingExpression As BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearInvalid(System::Windows::Data::BindingExpressionBase ^ bindingExpression);" />
      <MemberSignature Language="F#" Value="static member ClearInvalid : System.Windows.Data.BindingExpressionBase -&gt; unit" Usage="System.Windows.Controls.Validation.ClearInvalid bindingExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingExpression" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="bindingExpression">要使之变为有效的对象。</param>
        <summary>从指定的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象中移除所有 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `bindingExpression`对象可能在调用中无效， <xref:System.Windows.Controls.Validation.MarkInvalid%2A> 或以前未通过验证。 对象在此调用后有效。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">如果 <paramref name="bindingExpression" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Validation.Error" />
      <MemberSignature Language="VB.NET" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="F#" Value="see AddErrorHandler, and RemoveErrorHandler" Usage="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在绑定元素遇到验证错误时发生，但仅针对 <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> 值设置为 <see langword="true" /> 的绑定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]数据绑定模型使您能够将 <xref:System.Windows.Data.Binding.ValidationRules%2A> 与您的 <xref:System.Windows.Data.Binding> 对象相关联。 在绑定目标到绑定的源值传输过程中，将在调用转换器之前发生验证。 下面描述了验证过程：  
  
1.  当值从目标属性传输到源属性时，数据绑定引擎首先 <xref:System.Windows.Controls.ValidationError> 会删除可能已添加到 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 绑定元素的附加属性的任何。 然后，它会检查是否定义了任何自定义 <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Data.Binding> ，在这种情况下，它会 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 在每个上调用方法， <xref:System.Windows.Controls.ValidationRule> 直到其中一个发生错误或直到全部通过为止。  
  
2.  如果有一个没有通过的自定义规则，则绑定引擎将创建一个 <xref:System.Windows.Controls.ValidationError> 对象并将其添加到 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 绑定元素的集合中。 如果 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 不为空，则元素的 <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> 附加属性设置为 `true`。 此外，如果 <xref:System.Windows.Data.Binding> 的 <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> 属性设置为 `true`，则绑定引擎将在元素上引发 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 附加事件。  
  
3.  如果所有规则都通过，则绑定引擎会调用转换器（如果存在）。  
  
4.  如果转换器通过，则绑定引擎将调用源属性的 setter。  
  
5.  如果绑定具有 <xref:System.Windows.Controls.ExceptionValidationRule> 与之关联的，并且在步骤4期间引发了异常，则绑定引擎会检查是否存在 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 。 可以选择使用 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 回叫来提供用于处理异常的自定义处理程序。 如果未在 <xref:System.Windows.Data.Binding> 上指定 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>，则绑定引擎会创建具有异常的 <xref:System.Windows.Controls.ValidationError> 并将其添加到绑定元素的 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 集合中。  
  
 另请注意， (目标到源或源到目标) 方向的有效值传输会清除 <xref:System.Windows.Controls.Validation> 。 <xref:System.Windows.Controls.Validation.Errors%2A>附加属性。  
  
 有关详细信息，请参阅 [数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证"。  
  
<a name="routedEventInfo_Error"></a>   
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Validation.ErrorEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.EventHandler%601>，受 <xref:System.Windows.Controls.ValidationErrorEventArgs>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ErrorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ErrorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ErrorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Validation.ErrorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="see GetErrors" />
      <MemberSignature Language="ILAsm" Value="see GetErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.Errors" />
      <MemberSignature Language="VB.NET" Value="see GetErrors" />
      <MemberSignature Language="F#" Value="see GetErrors" Usage="see GetErrors" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取绑定元素上所有活动 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks  
 应用程序无法修改此集合的内容。 有关如何使用此附加属性的示例，请参阅 "示例" 部分。  
  
 利用 WPF 数据绑定模型，您可以将 <xref:System.Windows.Data.Binding.ValidationRules%2A> 与您的对象相关联 <xref:System.Windows.Data.Binding> 。 在绑定目标到绑定的源值传输过程中，将在调用转换器之前发生验证。 下面描述了验证过程：  
  
1.  当值从目标属性传输到源属性时，数据绑定引擎首先 <xref:System.Windows.Controls.ValidationError> 会删除可能已添加到 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 绑定元素的附加属性的任何。 然后，它会检查是否定义了任何自定义 <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Data.Binding> ，在这种情况下，它会 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 在每个上调用方法， <xref:System.Windows.Controls.ValidationRule> 直到其中一个发生错误或直到全部通过为止。  
  
2.  如果有一个没有通过的自定义规则，则绑定引擎将创建一个 <xref:System.Windows.Controls.ValidationError> 对象并将其添加到 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 绑定元素的集合中。 如果 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 不为空，则元素的 <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> 附加属性设置为 `true`。 此外，如果 <xref:System.Windows.Data.Binding> 的 <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> 属性设置为 `true`，则绑定引擎将在元素上引发 <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> 附加事件。  
  
3.  如果所有规则都通过，则绑定引擎会调用转换器（如果存在）。  
  
4.  如果转换器通过，则绑定引擎将调用源属性的 setter。  
  
5.  如果绑定具有 <xref:System.Windows.Controls.ExceptionValidationRule> 与之关联的，并且在步骤4期间引发了异常，则绑定引擎会检查是否存在 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 。 可以选择使用 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> 回叫来提供用于处理异常的自定义处理程序。 如果未在 <xref:System.Windows.Data.Binding> 上指定 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>，则绑定引擎会创建具有异常的 <xref:System.Windows.Controls.ValidationError> 并将其添加到绑定元素的 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 集合中。  
  
 另请注意， (目标到源或源到目标) 方向的有效值传输会清除 <xref:System.Windows.Controls.Validation> 。 <xref:System.Windows.Controls.Validation.Errors%2A>附加属性。  
  
 有关此属性在方案中的行为的信息 <xref:System.Windows.Data.MultiBinding> ，请参阅 <xref:System.Windows.Data.MultiBindingExpression.ValidationError%2A> 。  
  
 有关详细信息，请参阅 [数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证"。  
  
<a name="xamlTextUsage_Errors"></a>   
## <a name="xaml-text-usage"></a>XAML 文本用法  
 请参阅“备注”。 <xref:System.Windows.Controls.Validation.Errors%2A>集合本身不是用户可设置的，但可以在 XAML 的控件模板定义中使用它。  
  
<a name="dependencyPropertyInfo_Errors"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Validation.ErrorsProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ErrorsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ErrorsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ErrorsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ErrorsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTemplate">
      <MemberSignature Language="C#" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="ILAsm" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ErrorTemplate" />
      <MemberSignature Language="VB.NET" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="F#" Value="see GetErrorTemplate, and SetErrorTemplate" Usage="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置用于在装饰器层上生成验证错误反馈的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]数据绑定模型允许您将 <xref:System.Windows.Data.Binding.ValidationRules%2A> 与您的对象相关联 <xref:System.Windows.Data.Binding> 。 如果用户输入的值无效，你可能希望在应用程序 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 上提供一些有关错误的反馈。 提供此类反馈的一种方法是设置 <xref:System.Windows.Controls.Validation> 。<xref:System.Windows.Controls.Validation.ErrorTemplate%2A> 附加到自定义的属性 <xref:System.Windows.Controls.ControlTemplate> 。  
  
 有关验证的详细讨论，请参阅 [数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证" 一节。  
  
<a name="dependencyPropertyInfo_ErrorTemplate"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Validation.ErrorTemplateProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.AdornedElementPlaceholder" />
      </Docs>
    </Member>
    <Member MemberName="ErrorTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ErrorTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ErrorTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ErrorTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ErrorTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt; GetErrors (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;class System.Windows.Controls.ValidationError&gt; GetErrors(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetErrors (element As DependencyObject) As ReadOnlyObservableCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ GetErrors(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetErrors : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Controls.Validation.GetErrors element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
        <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性的值。</summary>
        <returns>一个由 <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> 对象构成的 <see cref="T:System.Windows.Controls.ValidationError" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetErrorTemplate">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ControlTemplate GetErrorTemplate (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ControlTemplate GetErrorTemplate(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetErrorTemplate (element As DependencyObject) As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Controls::ControlTemplate ^ GetErrorTemplate(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetErrorTemplate : System.Windows.DependencyObject -&gt; System.Windows.Controls.ControlTemplate" Usage="System.Windows.Controls.Validation.GetErrorTemplate element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
        <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性的值。</summary>
        <returns>用于在装饰器层上生成验证错误反馈的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHasError">
      <MemberSignature Language="C#" Value="public static bool GetHasError (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHasError(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHasError (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetHasError(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetHasError : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Controls.Validation.GetHasError element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从中读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
        <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性的值。</summary>
        <returns>指定元素的 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性的值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValidationAdornerSite">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetValidationAdornerSite (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetValidationAdornerSite(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationAdornerSite (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetValidationAdornerSite(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetValidationAdornerSite : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.Validation.GetValidationAdornerSite element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从其中获取 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 的元素。</param>
        <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性值。</summary>
        <returns><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetValidationAdornerSiteFor (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetValidationAdornerSiteFor(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationAdornerSiteFor (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetValidationAdornerSiteFor(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetValidationAdornerSiteFor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.Validation.GetValidationAdornerSiteFor element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要从其中获取 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 的元素。</param>
        <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性值。</summary>
        <returns><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasError">
      <MemberSignature Language="C#" Value="see GetHasError" />
      <MemberSignature Language="ILAsm" Value="see GetHasError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.HasError" />
      <MemberSignature Language="VB.NET" Value="see GetHasError" />
      <MemberSignature Language="F#" Value="see GetHasError" Usage="see GetHasError" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取一个值，该值指示绑定目标元素上的任一绑定是否具有 <see cref="T:System.Windows.Controls.ValidationError" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks  
 有关此属性在方案中的行为的信息 <xref:System.Windows.Data.MultiBinding> ，请参阅 <xref:System.Windows.Data.MultiBindingExpression.HasError%2A> 。  
  
 有关验证的详细讨论，请参阅 [数据绑定概述](/dotnet/framework/wpf/data/data-binding-overview)中的 "数据验证" 一节。  
  
<a name="dependencyPropertyInfo_HasError"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Validation.HasErrorProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidationRules" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="HasErrorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasErrorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasErrorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.HasErrorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasErrorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasErrorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasErrorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.HasErrorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkInvalid">
      <MemberSignature Language="C#" Value="public static void MarkInvalid (System.Windows.Data.BindingExpressionBase bindingExpression, System.Windows.Controls.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkInvalid(class System.Windows.Data.BindingExpressionBase bindingExpression, class System.Windows.Controls.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MarkInvalid (bindingExpression As BindingExpressionBase, validationError As ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkInvalid(System::Windows::Data::BindingExpressionBase ^ bindingExpression, System::Windows::Controls::ValidationError ^ validationError);" />
      <MemberSignature Language="F#" Value="static member MarkInvalid : System.Windows.Data.BindingExpressionBase * System.Windows.Controls.ValidationError -&gt; unit" Usage="System.Windows.Controls.Validation.MarkInvalid (bindingExpression, validationError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingExpression" Type="System.Windows.Data.BindingExpressionBase" />
        <Parameter Name="validationError" Type="System.Windows.Controls.ValidationError" />
      </Parameters>
      <Docs>
        <param name="bindingExpression">要标记为无效的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。</param>
        <param name="validationError">要使用的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</param>
        <summary>使用指定 <see cref="T:System.Windows.Controls.ValidationError" /> 对象将指定 <see cref="T:System.Windows.Data.BindingExpression" /> 对象标记为无效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingExpression>对象在调用之前始终无效， <xref:System.Windows.Controls.Validation.ClearInvalid%2A> 或者到绑定源的另一次传输成功验证。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">如果 <paramref name="validationError" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveErrorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveErrorHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveErrorHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Controls.ValidationErrorEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveErrorHandler (element As DependencyObject, handler As EventHandler(Of ValidationErrorEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveErrorHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Controls::ValidationErrorEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveErrorHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; -&gt; unit" Usage="System.Windows.Controls.Validation.RemoveErrorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">要从中删除 <paramref name="handler" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
        <param name="handler">要删除的处理程序。</param>
        <summary>从指定对象添加 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件的事件处理程序。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorTemplate">
      <MemberSignature Language="C#" Value="public static void SetErrorTemplate (System.Windows.DependencyObject element, System.Windows.Controls.ControlTemplate value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetErrorTemplate(class System.Windows.DependencyObject element, class System.Windows.Controls.ControlTemplate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetErrorTemplate (element As DependencyObject, value As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetErrorTemplate(System::Windows::DependencyObject ^ element, System::Windows::Controls::ControlTemplate ^ value);" />
      <MemberSignature Language="F#" Value="static member SetErrorTemplate : System.Windows.DependencyObject * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="System.Windows.Controls.Validation.SetErrorTemplate (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="element">要对其设置 <paramref name="value" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
        <param name="value">用于在装饰器层上生成验证错误反馈的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</param>
        <summary>将 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性的值设置为指定的元素。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValidationAdornerSite">
      <MemberSignature Language="C#" Value="public static void SetValidationAdornerSite (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValidationAdornerSite(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValidationAdornerSite (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValidationAdornerSite(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValidationAdornerSite : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Controls.Validation.SetValidationAdornerSite (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要设置其 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 的元素。</param>
        <param name="value">指定元素的 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />。</param>
        <summary>将 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性设置为指定元素上的指定值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="public static void SetValidationAdornerSiteFor (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValidationAdornerSiteFor(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValidationAdornerSiteFor (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValidationAdornerSiteFor(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValidationAdornerSiteFor : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Controls.Validation.SetValidationAdornerSiteFor (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">要设置其 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 的元素。</param>
        <param name="value">指定元素的 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />。</param>
        <summary>将 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性设置为指定元素上的指定值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSite">
      <MemberSignature Language="C#" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="ILAsm" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ValidationAdornerSite" />
      <MemberSignature Language="VB.NET" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="F#" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" Usage="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置元素，该元素似乎可指示在设置此属性的绑定元素上出现了验证错误。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType>和 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> 附加属性彼此引用，你可以设置其中的一个属性。  例如，假设 <xref:System.Windows.Controls.Label> 显示了在数据绑定上发生的验证错误 <xref:System.Windows.Controls.TextBox> 。  可以执行以下操作之一来建立该关系：  
  
-   将设置 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> 为的 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.Label> 。  
  
-   将设置 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> 为的 <xref:System.Windows.Controls.Label> <xref:System.Windows.Controls.TextBox> 。  
  
-   设置其中一个属性后，另一个属性将设置为在其上设置附加属性的元素;无论你选择哪一个选项，的是，的是，的 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.Label> <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A> <xref:System.Windows.Controls.Label> 是 <xref:System.Windows.Controls.TextBox> 。  
  
<a name="dependencyPropertyInfo_ValidationAdornerSite"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Validation.ValidationAdornerSiteProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Windows.Controls.Label> 作为装饰器站点，用于对中的项发生的验证错误 <xref:System.Windows.Controls.ItemsControl> 。 此示例将 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> 中的每个项容器的设置为 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 标签。  该示例使用 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> 属性获取具有错误的项容器，并将的绑定到所 <xref:System.Windows.Controls.ContentControl.Content%2A> 报告的 <xref:System.Windows.Controls.Label> 第一个 <xref:System.Windows.Controls.ValidationError> 。  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="ILAsm" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />
      <MemberSignature Language="VB.NET" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="F#" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" Usage="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置元素，此元素似乎为其指示发生了错误。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType>和 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> 附加属性彼此引用，你可以设置其中的一个属性。  例如，假设 <xref:System.Windows.Controls.Label> 显示了在绑定数据时发生的验证错误 <xref:System.Windows.Controls.TextBox> 。  可以执行以下操作之一来建立该关系：  
  
-   将设置 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> 为的 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.Label> 。  
  
-   将设置 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> 为的 <xref:System.Windows.Controls.Label> <xref:System.Windows.Controls.TextBox> 。  
  
 设置其中一个属性后，另一个属性将设置为在其上设置附加属性的元素;无论你选择哪一个选项，的是，的是，的 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.Label> <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A> <xref:System.Windows.Controls.Label> 是 <xref:System.Windows.Controls.TextBox> 。  
  
<a name="dependencyPropertyInfo_ValidationAdornerSiteFor"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Windows.Controls.Label> 作为装饰器站点，用于对中的项发生的验证错误 <xref:System.Windows.Controls.ItemsControl> 。 此示例将 <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> 中的每个项容器的设置为 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> 标签。  该示例使用 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> 属性获取具有错误的项容器，并将的绑定到所 <xref:System.Windows.Controls.ContentControl.Content%2A> 报告的 <xref:System.Windows.Controls.Label> 第一个 <xref:System.Windows.Controls.ValidationError> 。  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteForProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ValidationAdornerSiteForProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ValidationAdornerSiteForProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValidationAdornerSiteForProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ValidationAdornerSiteForProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValidationAdornerSiteForProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ValidationAdornerSiteForProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ValidationAdornerSiteProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ValidationAdornerSiteProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValidationAdornerSiteProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ValidationAdornerSiteProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValidationAdornerSiteProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ValidationAdornerSiteProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
