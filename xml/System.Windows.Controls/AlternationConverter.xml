<Type Name="AlternationConverter" FullName="System.Windows.Controls.AlternationConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbcdb5cec2c05872f5c2830c359bd3c0a7a0bda4" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86824411" /></Metadata><TypeSignature Language="C#" Value="public class AlternationConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternationConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.AlternationConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class AlternationConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AlternationConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type AlternationConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Values")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Values")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76060-101">通过将整数作为索引应用于对象列表，进行整数和对象的相互转换。</span><span class="sxs-lookup"><span data-stu-id="76060-101">Converts an integer to and from an object by applying the integer as an index to a list of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76060-102">可以使用将 <xref:System.Windows.Controls.AlternationConverter> 属性绑定到交替值。</span><span class="sxs-lookup"><span data-stu-id="76060-102">You can use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values.</span></span> <span data-ttu-id="76060-103">例如，如果你希望中的项 <xref:System.Windows.Controls.ListBox> 具有交替的蓝色背景和蓝色背景，你可以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="76060-103">For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:</span></span>  
  
-   <span data-ttu-id="76060-104">创建 <xref:System.Windows.Controls.AlternationConverter> 并向 <xref:System.Windows.Media.SolidColorBrush> <xref:System.Windows.Media.SolidColorBrush> 其属性中添加蓝色和浅蓝色 <xref:System.Windows.Controls.AlternationConverter.Values%2A> 。</span><span class="sxs-lookup"><span data-stu-id="76060-104">Create an <xref:System.Windows.Controls.AlternationConverter> and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property.</span></span>  
  
-   <span data-ttu-id="76060-105">在 <xref:System.Windows.Style> 的中 <xref:System.Windows.Controls.ListBoxItem> ，将 <xref:System.Windows.Controls.Control.Background%2A> 属性绑定到， <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 并将创建的转换器分配给 <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="76060-105">In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76060-106">下面的示例创建一个 <xref:System.Windows.Controls.ListBox> 并使用两个 <xref:System.Windows.Controls.AlternationConverter> 对象来替换 <xref:System.Windows.Controls.Control.Background%2A> 项的和 <xref:System.Windows.Controls.Control.FontStyle%2A> 。</span><span class="sxs-lookup"><span data-stu-id="76060-106">The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AlternationConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76060-107">初始化 <see cref="T:System.Windows.Controls.AlternationConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="76060-107">Initializes a new instance of the <see cref="T:System.Windows.Controls.AlternationConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.Convert (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="76060-108">用于在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 属性中查找对象的整数。</span><span class="sxs-lookup"><span data-stu-id="76060-108">The integer to use to find an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> property.</span></span></param>
        <param name="targetType"><span data-ttu-id="76060-109">绑定目标属性的类型。</span><span class="sxs-lookup"><span data-stu-id="76060-109">The type of the binding target property.</span></span></param>
        <param name="parameter"><span data-ttu-id="76060-110">要使用的转换器参数。</span><span class="sxs-lookup"><span data-stu-id="76060-110">The converter parameter to use.</span></span></param>
        <param name="culture"><span data-ttu-id="76060-111">要用在转换器中的区域性。</span><span class="sxs-lookup"><span data-stu-id="76060-111">The culture to use in the converter.</span></span></param>
        <summary><span data-ttu-id="76060-112">将整数转换为 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="76060-112">Converts an integer to an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> list.</span></span></summary>
        <returns><span data-ttu-id="76060-113">位于 <paramref name="o" /> 处的对象对 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 中的项数取模。</span><span class="sxs-lookup"><span data-stu-id="76060-113">The object that is in the position of <paramref name="o" /> modulo the number of items in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.ConvertBack (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="76060-114">要在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 属性中查找的对象。</span><span class="sxs-lookup"><span data-stu-id="76060-114">The object to find in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> property.</span></span></param>
        <param name="targetType"><span data-ttu-id="76060-115">绑定目标属性的类型。</span><span class="sxs-lookup"><span data-stu-id="76060-115">The type of the binding target property.</span></span></param>
        <param name="parameter"><span data-ttu-id="76060-116">要使用的转换器参数。</span><span class="sxs-lookup"><span data-stu-id="76060-116">The converter parameter to use.</span></span></param>
        <param name="culture"><span data-ttu-id="76060-117">要用在转换器中的区域性。</span><span class="sxs-lookup"><span data-stu-id="76060-117">The culture to use in the converter.</span></span></param>
        <summary><span data-ttu-id="76060-118">将 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 列表中的对象转换为整数。</span><span class="sxs-lookup"><span data-stu-id="76060-118">Converts an object in the <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> list to an integer.</span></span></summary>
        <returns><span data-ttu-id="76060-119">如果 <paramref name="o" /> 在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 中，则为其索引，如果 o 不在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 中，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="76060-119">The index of <paramref name="o" /> if it is in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />, or -1 if o does not exist in <see cref="P:System.Windows.Controls.AlternationConverter.Values" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.IList Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.AlternationConverter.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Values { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.IList" Usage="System.Windows.Controls.AlternationConverter.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76060-120">获取在将整数传递给 <see cref="T:System.Windows.Controls.AlternationConverter" /> 方法时，<see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> 返回的对象的列表。</span><span class="sxs-lookup"><span data-stu-id="76060-120">Gets a list of objects that the <see cref="T:System.Windows.Controls.AlternationConverter" /> returns when an integer is passed to the <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <value><span data-ttu-id="76060-121">将整数传递给 <see cref="T:System.Windows.Controls.AlternationConverter" /> 方法时，<see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> 返回的对象的列表。</span><span class="sxs-lookup"><span data-stu-id="76060-121">A list of objects that the <see cref="T:System.Windows.Controls.AlternationConverter" /> returns when an integer is passed to the <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76060-122">当使用将 <xref:System.Windows.Controls.AlternationConverter> 属性绑定到交替值时， <xref:System.Windows.Controls.AlternationConverter.Values%2A> 属性将包含分配给该属性的对象。</span><span class="sxs-lookup"><span data-stu-id="76060-122">When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the <xref:System.Windows.Controls.AlternationConverter.Values%2A> property contains the objects that are assigned to the property.</span></span>  <span data-ttu-id="76060-123">例如，如果你希望中的项 <xref:System.Windows.Controls.ListBox> 具有交替的蓝色和浅蓝色背景，则向添加蓝色 <xref:System.Windows.Media.SolidColorBrush> 和浅蓝色 <xref:System.Windows.Media.SolidColorBrush> <xref:System.Windows.Controls.AlternationConverter.Values%2A> 。</span><span class="sxs-lookup"><span data-stu-id="76060-123">For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to <xref:System.Windows.Controls.AlternationConverter.Values%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76060-124">下面的示例创建一个 <xref:System.Windows.Controls.ListBox> 并使用两个 <xref:System.Windows.Controls.AlternationConverter> 对象来替换 <xref:System.Windows.Controls.Control.Background%2A> 项的和 <xref:System.Windows.Controls.Control.FontStyle%2A> 。</span><span class="sxs-lookup"><span data-stu-id="76060-124">The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.</span></span>  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
