<Type Name="StyleSelector" FullName="System.Windows.Controls.StyleSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2d5e957a331da31aea097c101a521d732c4da9b" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102064976" /></Metadata><TypeSignature Language="C#" Value="public class StyleSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StyleSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StyleSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class StyleSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class StyleSelector" />
  <TypeSignature Language="F#" Value="type StyleSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="98cef-101">提供根据自定义逻辑应用样式的方法。</span><span class="sxs-lookup"><span data-stu-id="98cef-101">Provides a way to apply styles based on custom logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98cef-102">若要创建 <xref:System.Windows.Controls.StyleSelector> 基于自定义逻辑应用样式的，请创建类的子类 <xref:System.Windows.Controls.StyleSelector> 并实现 <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="98cef-102">To create a <xref:System.Windows.Controls.StyleSelector> that applies a style based on custom logic, create a subclass of the <xref:System.Windows.Controls.StyleSelector> class and implement the <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98cef-103">下面的示例演示如何定义 <xref:System.Windows.Controls.StyleSelector> <xref:System.Windows.Style> 为行定义的。</span><span class="sxs-lookup"><span data-stu-id="98cef-103">The following example shows how to define a <xref:System.Windows.Controls.StyleSelector> that defines a <xref:System.Windows.Style> for a row.</span></span> <span data-ttu-id="98cef-104">此示例 <xref:System.Windows.Controls.Control.Background%2A> 根据行索引定义颜色。</span><span class="sxs-lookup"><span data-stu-id="98cef-104">This example defines the <xref:System.Windows.Controls.Control.Background%2A> color according to the row index.</span></span>  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 <span data-ttu-id="98cef-105">下面的示例演示如何为定义 <xref:System.Windows.ResourceKey> <xref:System.Windows.Controls.StyleSelector> 。</span><span class="sxs-lookup"><span data-stu-id="98cef-105">The following example shows how to define a <xref:System.Windows.ResourceKey> for the <xref:System.Windows.Controls.StyleSelector>.</span></span> <span data-ttu-id="98cef-106">`namespc`前缀映射到定义的 CLR 命名空间和相应的程序集 <xref:System.Windows.Controls.StyleSelector> 。</span><span class="sxs-lookup"><span data-stu-id="98cef-106">The `namespc` prefix maps to a CLR namespace and the corresponding assembly where the <xref:System.Windows.Controls.StyleSelector> is defined.</span></span> <span data-ttu-id="98cef-107">有关详细信息，请参阅 [WPF xaml 的 XAML 命名空间和命名空间映射](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml)。</span><span class="sxs-lookup"><span data-stu-id="98cef-107">For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml).</span></span>  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 <span data-ttu-id="98cef-108">下面的示例演示如何将的 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 属性设置 <xref:System.Windows.Controls.ListView> 为此 <xref:System.Windows.Controls.StyleSelector> 资源。</span><span class="sxs-lookup"><span data-stu-id="98cef-108">The following example shows how to set the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property of a <xref:System.Windows.Controls.ListView> to this <xref:System.Windows.Controls.StyleSelector> resource.</span></span>  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 <span data-ttu-id="98cef-109">有关如何创建选择器以选择定义的样式资源的示例，请参阅的实现 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType> ，该实现允许你 <xref:System.Windows.DataTemplate> 根据类似的概念使用自定义逻辑来选择。</span><span class="sxs-lookup"><span data-stu-id="98cef-109">For an example of how to create a selector to choose a defined style resource, see the implementation of <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, which allows you to use custom logic to select a <xref:System.Windows.DataTemplate>, based on a similar concept.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
    <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StyleSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98cef-110">初始化 <see cref="T:System.Windows.Controls.StyleSelector" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="98cef-110">Initializes a new instance of a <see cref="T:System.Windows.Controls.StyleSelector" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Style SelectStyle (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Style SelectStyle(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectStyle (item As Object, container As DependencyObject) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Style ^ SelectStyle(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style&#xA;override this.SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style" Usage="styleSelector.SelectStyle (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="98cef-111">内容。</span><span class="sxs-lookup"><span data-stu-id="98cef-111">The content.</span></span></param>
        <param name="container"><span data-ttu-id="98cef-112">将应用样式的元素。</span><span class="sxs-lookup"><span data-stu-id="98cef-112">The element to which the style will be applied.</span></span></param>
        <summary><span data-ttu-id="98cef-113">当在派生类中重写时，返回基于自定义逻辑的 <see cref="T:System.Windows.Style" />。</span><span class="sxs-lookup"><span data-stu-id="98cef-113">When overridden in a derived class, returns a <see cref="T:System.Windows.Style" /> based on custom logic.</span></span></summary>
        <returns><span data-ttu-id="98cef-114">返回要应用的应用程序特定样式；否则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98cef-114">Returns an application-specific style to apply; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98cef-115">若要创建 <xref:System.Windows.Controls.StyleSelector> 基于自定义逻辑应用样式的，请创建类的子类 <xref:System.Windows.Controls.StyleSelector> 并实现 <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="98cef-115">To create a <xref:System.Windows.Controls.StyleSelector> that applies a style based on custom logic, create a subclass of the <xref:System.Windows.Controls.StyleSelector> class and implement the <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98cef-116">下面的示例演示如何定义 <xref:System.Windows.Controls.StyleSelector> <xref:System.Windows.Style> 为行定义的。</span><span class="sxs-lookup"><span data-stu-id="98cef-116">The following example shows how to define a <xref:System.Windows.Controls.StyleSelector> that defines a <xref:System.Windows.Style> for a row.</span></span> <span data-ttu-id="98cef-117">此示例 <xref:System.Windows.Controls.Control.Background%2A> 根据行索引定义颜色。</span><span class="sxs-lookup"><span data-stu-id="98cef-117">This example defines the <xref:System.Windows.Controls.Control.Background%2A> color according to the row index.</span></span>  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 <span data-ttu-id="98cef-118">下面的示例演示如何为定义 <xref:System.Windows.ResourceKey> <xref:System.Windows.Controls.StyleSelector> 。</span><span class="sxs-lookup"><span data-stu-id="98cef-118">The following example shows how to define a <xref:System.Windows.ResourceKey> for the <xref:System.Windows.Controls.StyleSelector>.</span></span> <span data-ttu-id="98cef-119">`namespc`前缀映射到定义的 CLR 命名空间和相应的程序集 <xref:System.Windows.Controls.StyleSelector> 。</span><span class="sxs-lookup"><span data-stu-id="98cef-119">The `namespc` prefix maps to a CLR namespace and the corresponding assembly where the <xref:System.Windows.Controls.StyleSelector> is defined.</span></span> <span data-ttu-id="98cef-120">有关详细信息，请参阅 [WPF xaml 的 XAML 命名空间和命名空间映射](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml)。</span><span class="sxs-lookup"><span data-stu-id="98cef-120">For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](/dotnet/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml).</span></span>  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 <span data-ttu-id="98cef-121">下面的示例演示如何将的 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 属性设置 <xref:System.Windows.Controls.ListView> 为此 <xref:System.Windows.Controls.StyleSelector> 资源。</span><span class="sxs-lookup"><span data-stu-id="98cef-121">The following example shows how to set the <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> property of a <xref:System.Windows.Controls.ListView> to this <xref:System.Windows.Controls.StyleSelector> resource.</span></span>  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 <span data-ttu-id="98cef-122">有关如何创建选择器以选择定义的样式资源的示例，请参阅的实现 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType> ，该实现允许你 <xref:System.Windows.DataTemplate> 根据类似的概念使用自定义逻辑来选择。</span><span class="sxs-lookup"><span data-stu-id="98cef-122">For an example of how to create a selector to choose a defined style resource, see the implementation of <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, which allows you to use custom logic to select a <xref:System.Windows.DataTemplate>, based on a similar concept.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
  </Members>
</Type>
