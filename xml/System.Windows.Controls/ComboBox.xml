<Type Name="ComboBox" FullName="System.Windows.Controls.ComboBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25088e63cccdb27dc1bb0bc2ff422b6c33c800ed" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89969750" /></Metadata><TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComboBox extends System.Windows.Controls.Primitives.Selector" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type ComboBox = class&#xA;    inherit Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBox extends System.Windows.Controls.Primitives.Selector" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示带有下拉列表的选择控件，通过单击控件上的箭头可显示或隐藏下拉列表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ComboBox>允许用户从下拉列表中选择项，或根据需要在控件的文本框中输入新文本。 <xref:System.Windows.Controls.ComboBox> 为 <xref:System.Windows.Controls.ItemsControl> ，这意味着它可以包含任何类型的对象的集合 (例如字符串、图像或面板) 。 有关更多信息，请参见 <xref:System.Windows.Controls.ItemsControl> 类。  
  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A>和 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 用户执行以下操作之一时的行为方式：  
  
-   输入一个字符串以选择中的项 <xref:System.Windows.Controls.ComboBox> 。  
  
-   输入不与中的项对应的字符串 <xref:System.Windows.Controls.ComboBox> 。  
  
-   选择文本框中的字符串的一部分。  
  
-   将值复制或粘贴到文本框中。  
  
 下表描述了用户可以和不可以执行的操作，具体取决于和的 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 值 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 。  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `true`|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `false`|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `true`|-无法通过输入字符串选择中的项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。<br />-可以复制文本框中的字符串 <xref:System.Windows.Controls.ComboBox> ，但不能将字符串粘贴到文本框中 <xref:System.Windows.Controls.ComboBox> 。|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-可以输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。<br />-可以复制或粘贴文本框中的字符串 <xref:System.Windows.Controls.ComboBox> 。|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `false`|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。|  
  
 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>仅当为时，属性才有效果 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> `true` 。  
  
 <xref:System.Windows.Controls.ComboBox>是 <xref:System.Windows.Controls.ItemsControl> ，因此它可以显示简单字符串以外的内容。  例如，你可以创建一个 <xref:System.Windows.Controls.ComboBox> 包含映像列表的。 如果中的内容不是字符串，则在 <xref:System.Windows.Controls.ComboBox> <xref:System.Windows.Controls.ComboBox> 隐藏下拉列表时，过程字符串可能出现在中。 若要在 <xref:System.Windows.Controls.ComboBox> 包含非字符串项时显示中的字符串，请使用 <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> 或 <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> 附加属性。  
  
## <a name="customizing-the-combobox-control"></a>自定义 ComboBox 控件  
 若要对多个控件应用相同的属性设置 <xref:System.Windows.Controls.ComboBox> ，请使用 <xref:System.Windows.FrameworkElement.Style%2A> 属性。 您可以修改默认值 <xref:System.Windows.Controls.ControlTemplate> ，为控件指定独特的外观。 有关创建的详细信息 <xref:System.Windows.Controls.ControlTemplate> ，请参阅 [通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。  若要查看特定于的部分和状态 <xref:System.Windows.Controls.ComboBox> ，请参阅 [ComboBox 样式和模板](/dotnet/framework/wpf/controls/combobox-styles-and-templates)。  
  
 此控件的依赖属性可能由控件的默认样式设置。  如果按默认样式设置属性，则当控件出现在应用程序中时，属性可能会更改为默认值。 默认样式取决于应用程序运行时使用的桌面主题。  有关详细信息，请参阅 [默认的 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 下面的示例创建一个 <xref:System.Windows.Controls.ComboBox> 。 该示例 <xref:System.Windows.Controls.ComboBox> 通过 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 将属性绑定到类型的集合对象来填充 `VacationSpots` 。 该示例还创建了一个 <xref:System.Windows.Controls.TextBlock> ，它显示的选定项 <xref:System.Windows.Controls.ComboBox> 。  
  
 [!code-xaml[ComboBoxItems#ComboBoxClass](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#comboboxclass)]  
  
 下面的示例定义了 <xref:System.Windows.Controls.ComboBox> 前面的示例中的绑定到的集合对象。  
  
 [!code-csharp[ComboBoxItems#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml.cs#data)]
 [!code-vb[ComboBoxItems#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxItems/VIsualBasic/Window1.xaml.vb#data)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBoxItem" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053">WPF 控件库示例</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.ComboBox" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberSignature Language="F#" Value="member this.DropDownClosed : EventHandler " Usage="member this.DropDownClosed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当关闭组合框的下拉列表时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何分配事件处理程序以及如何处理 <xref:System.Windows.Controls.ComboBox.DropDownOpened> 和 <xref:System.Windows.Controls.ComboBox.DropDownClosed> 事件。  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownOpened">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownOpened;" />
      <MemberSignature Language="F#" Value="member this.DropDownOpened : EventHandler " Usage="member this.DropDownOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当打开组合框的下拉列表时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何分配事件处理程序以及如何处理 <xref:System.Windows.Controls.ComboBox.DropDownOpened> 和 <xref:System.Windows.Controls.ComboBox.DropDownClosed> 事件。  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="comboBox.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建或标识用于显示指定项的元素。</summary>
        <returns>用于显示指定项的元素。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示组合框是否支持滚动。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 支持滚动，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果控件 <xref:System.Windows.Controls.ScrollViewer> 在其样式中具有，并且具有自定义键盘滚动行为，则 <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> 应返回 `true` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ComboBox" /> 是否具有焦点。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownOpen : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示组合框的下拉部分当前是否打开。</summary>
        <value>如果下拉项已打开，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.IsDropDownOpenProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> 属性创建一个组合框，该组合框具有在启动组合框时打开的下拉控件。  
  
 [!code-xaml[ComboBoxStyles#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDropDownOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEditable : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示启用或禁用 <see cref="T:System.Windows.Controls.ComboBox" /> 的文本框中的文本编辑。</summary>
        <value>如果可以编辑 <see cref="T:System.Windows.Controls.ComboBox" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A>和 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 用户执行以下操作之一时的行为方式：  
  
-   输入一个字符串以选择中的项 <xref:System.Windows.Controls.ComboBox> 。  
  
-   输入不与中的项对应的字符串 <xref:System.Windows.Controls.ComboBox> 。  
  
-   选择文本框中的字符串的一部分。  
  
-   将值复制或粘贴到文本框中。  
  
 下表描述了用户可以和不可以执行的操作，具体取决于和的 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 值 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 。  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `true`|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `false`|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `true`|-无法通过输入字符串选择中的项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。<br />-可以复制文本框中的字符串 <xref:System.Windows.Controls.ComboBox> ，但不能将字符串粘贴到文本框中 <xref:System.Windows.Controls.ComboBox> 。|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-可以输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。<br />-可以复制或粘贴文本框中的字符串 <xref:System.Windows.Controls.ComboBox> 。|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `false`|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。|  
  
 当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 等于时 `false` ，将 <xref:System.Windows.Controls.ComboBox> 使用 <xref:System.Windows.Controls.ContentPresenter> 来显示当前选定的项; 当等于时 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> ，将改用作为 `true` <xref:System.Windows.Controls.TextBox> 此目的。 请注意， <xref:System.Windows.Controls.TextBox> 仅显示纯文本，并且 <xref:System.Windows.Controls.ComboBoxItem> 可能包括非纯文本内容（如图像）。  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.IsEditableProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例创建 <xref:System.Windows.Controls.ComboBox> 包含图像的控件，而不是文本。 如果将 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 属性设置为 `true` ，则将 <xref:System.Windows.Controls.TextBox> 显示图像的方法返回的值 <xref:System.Object.ToString%2A> 。 若要避免出现 <xref:System.Windows.Controls.TextBox> 意外文本，请使用 <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> 和 <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> 属性来分配要显示的文本。  
  
 [!code-xaml[ComboBoxProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#1)]  
  
 [!code-xaml[ComboBoxProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#2)]  
  
 另一种解决方案是使用 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> 属性。 的下拉控件 <xref:System.Windows.Controls.ComboBox> 不会显示图像，但会显示您分配的文本。  
  
 下面的示例说明如何使用 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>。  
  
 [!code-xaml[ComboBoxProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEditableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEditableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEditableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="comboBox.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">指定的项。</param>
        <summary>确定指定项是否是（或者是否可以作为）自己的 <c>ItemContainer</c>。</summary>
        <returns>如果该项是自己的 <c>ItemContainer</c>，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置启用仅限选择模式的值，在此模式中，可选择但不可编辑组合框中的内容。</summary>
        <value>如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Windows.Controls.ComboBox" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A>和 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 用户执行以下操作之一时的行为方式：  
  
-   输入一个字符串以选择中的项 <xref:System.Windows.Controls.ComboBox> 。  
  
-   输入不与中的项对应的字符串 <xref:System.Windows.Controls.ComboBox> 。  
  
-   选择文本框中的字符串的一部分。  
  
-   将值复制或粘贴到文本框中。  
  
 下表描述了用户可以和不可以执行的操作，具体取决于和的 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 值 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 。  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `true`|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `false`|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `true`|-无法通过输入字符串选择中的项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。<br />-可以复制文本框中的字符串 <xref:System.Windows.Controls.ComboBox> ，但不能将字符串粘贴到文本框中 <xref:System.Windows.Controls.ComboBox> 。|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-可以输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。<br />-可以复制或粘贴文本框中的字符串 <xref:System.Windows.Controls.ComboBox> 。|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `false`|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。|-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。<br />-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。<br />-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。|  
  
 当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 等于时 `false` ，将 <xref:System.Windows.Controls.ComboBox> 使用 <xref:System.Windows.Controls.ContentPresenter> 来显示当前选定的项; 当等于时 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> ，将改用作为 `true` <xref:System.Windows.Controls.TextBox> 此目的。 请注意， <xref:System.Windows.Controls.TextBox> 仅显示纯文本，并且 <xref:System.Windows.Controls.ComboBoxItem> 可能包括非纯文本内容（如图像）。  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.IsReadOnlyProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.Controls.ComboBox> 具有可编辑的 <xref:System.Windows.Controls.TextBox> 。 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>属性设置为 `true` ，因此用户无法在中输入文本 <xref:System.Windows.Controls.TextBox> 。  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionBoxHighlighted">
      <MemberSignature Language="C#" Value="public bool IsSelectionBoxHighlighted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionBoxHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionBoxHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionBoxHighlighted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionBoxHighlighted : bool" Usage="System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>确定是否突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />。</summary>
        <value>如果突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是一个依赖项属性。 但是，的依赖项属性标识符字段 <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> 不是公共的。 因此，不能对需要依赖属性标识符的属性系统操作（如对的调用）使用后备依赖属性 <xref:System.Windows.DependencyObject.GetValue%2A> 。 不过，您仍可以将 <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> 用作属性触发器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeight">
      <MemberSignature Language="C#" Value="public double MaxDropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxDropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxDropDownHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDropDownHeight : double with get, set" Usage="System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置组合框下拉部分的最大高度。</summary>
        <value>一个 double 值，该值表示检索到的高度或要设置的高度。 为属性系统定义的默认值是根据系统最大屏幕高度参数的三分之一计算得到的，但是此默认值可能会由各种控件模板重写。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自动调整大小不是默认值，将导致下拉大小可能超出父元素中的可用大小。 通常不需要这样做。  
  
<a name="dependencyPropertyInfo_MaxDropDownHeight"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty>|  
|元数据属性设置为 `true`|无|  
  
<a name="xamlAttributeUsage_MaxDropDownHeight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object MaxDropDownHeight="double"/>  
- or -  
<object MaxDropDownHeight ="qualifiedDouble"/>  
- or -  
<object MaxDropDownHeight ="Auto"/>  
```  
  
<a name="xamlValues_MaxDropDownHeight"></a>   
## <a name="xaml-values"></a>XAML 值  
 *double*  
 <xref:System.Double>  
  
 值的字符串表示形式 <xref:System.Double> 。 这会被解释为 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 度量值。 字符串不需要显式包含小数点。 例如，的值 `1` 是可接受的。  
  
 <xref:System.Double>与属性值部分中提到的范围限制相同。  
  
 *qualifiedDouble*  
 如上所述的 *双精度* 值，后跟以下单元声明字符串之一： `px` 、 `in` 、 `cm` 和 `pt` 。  
  
 `px` (默认) 为 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` 为英寸;1in = = 96px  
  
 `cm` 为厘米;1cm = = (96/2.54) px  
  
 `pt` 为点;1pt = = (96/72) px  
  
 `Auto`  
 启用自动调整行为。 请参阅“备注”。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 控件下拉控件的高度。  
  
 [!code-xaml[ComboBoxStyles#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxDropDownHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxDropDownHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDropDownHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxDropDownHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxDropDownHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="comboBox.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时进行调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="comboBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基础结构的一部分，为此控件提供相应的 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 实现。</summary>
        <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownClosed : EventArgs -&gt; unit&#xA;override this.OnDropDownClosed : EventArgs -&gt; unit" Usage="comboBox.OnDropDownClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> 事件的事件数据。</param>
        <summary>当组合框的弹出窗口关闭时报告。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownOpened(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownOpened : EventArgs -&gt; unit&#xA;override this.OnDropDownOpened : EventArgs -&gt; unit" Usage="comboBox.OnDropDownOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> 事件的事件数据。</param>
        <summary>当组合框的弹出窗口打开时报告。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="comboBox.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件的事件数据。</param>
        <summary>报告 <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> 属性已更改。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="comboBox.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> 事件的事件数据。</param>
        <summary>当 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性更改时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="comboBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>在发生 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBox.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件的事件数据。</param>
        <summary>调用此方法以报告已释放鼠标左键。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="comboBox.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>在发生 <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 附加路由事件时调用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectionChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="comboBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">为 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 提供数据。</param>
        <summary>通过引发 <see cref="T:System.Windows.Controls.ComboBox" /> 事件来对 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 选择更改进行响应。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="comboBox.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">用来显示指定的项的元素。</param>
        <param name="item">指定的项。</param>
        <summary>准备好指定的元素以显示指定的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 准备元素可能涉及应用样式、设置绑定等。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectionBoxItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItem : obj" Usage="System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在选择框中显示的项。</summary>
        <value>选定项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 的将 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ComboBox> 使用此属性在中显示选定的项 <xref:System.Windows.Controls.ComboBox> 。  若要获取外的选定项 <xref:System.Windows.Controls.ComboBox> <xref:System.Windows.Controls.ControlTemplate> ，请使用 <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType> 属性，而不是此属性。  
  
<a name="xamlAttributeUsage_SelectionBoxItem"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object property="{TemplateBinding SelectionBoxItem}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例将的 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 属性绑定 <xref:System.Windows.Controls.ContentPresenter> 到 <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> 属性。 是的的 <xref:System.Windows.Controls.ContentPresenter> 一部分 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ComboBox> 。 有关完整示例，请参阅[使用 ControlTemplates 设置样式示例](https://go.microsoft.com/fwlink/?LinkID=160041)。  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectionBoxItemStringFormat { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItemStringFormat : string" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个撰写字符串，该字符串指定如果选择框中的选定项显示为字符串，应如何设置该选定项的格式。</summary>
        <value>一个撰写字符串，指定如果选择框中的选定项显示为字符串，应如何设置该选定项的格式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ SelectionBoxItemTemplate { System::Windows::DataTemplate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItemTemplate : System.Windows.DataTemplate" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取选择框内容的项模板。</summary>
        <value>项模板。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionBoxItemTemplate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object property="{TemplateBinding SelectionBoxItemTemplate}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例将的 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 属性绑定 <xref:System.Windows.Controls.ContentPresenter> 到 <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> 属性。 是的的 <xref:System.Windows.Controls.ContentPresenter> 一部分 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ComboBox> 。 有关完整示例，请参阅[使用 ControlTemplates 设置样式示例](https://go.microsoft.com/fwlink/?LinkID=160041)。  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefix">
      <MemberSignature Language="C#" Value="public bool ShouldPreserveUserEnteredPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPreserveUserEnteredPrefix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPreserveUserEnteredPrefix { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPreserveUserEnteredPrefix : bool with get, set" Usage="System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示 <see cref="T:System.Windows.Controls.ComboBox" /> 是保留用户的输入还是将输入替换为匹配的项的值。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 保留用户的输入，则为 <see langword="true" />；如果 <see cref="T:System.Windows.Controls.ComboBox" /> 替换具有匹配项的输入。则为 <see langword="false" />。注册的默认值是 <see langword="false" />。 有关什么可以影响值的详细信息，请参阅 [Dependency Property Value Precedence（依赖项属性值优先级）](/dotnet/framework/wpf/advanced/dependency-property-value-precedence)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，当用户在中键入 <xref:System.Windows.Controls.ComboBox> 与某个项匹配的字符串时，将选择该项并替换用户键入的文本。  这可能导致用户输入的文本更改大小写。 如果将 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> 属性设置为 `true` ，则会 <xref:System.Windows.Controls.ComboBox> 选择匹配项，但会保留用户输入的文本。   例如，假设 a <xref:System.Windows.Controls.ComboBox> 包含字符串 "hello" (，并使用大写 h) 并且用户使用小写 h) 输入 "hello" (。  如果 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> 为 `false` ，则在 <xref:System.Windows.Controls.ComboBox> 其集合中选择匹配项 "Hello"，并在其文本框中填充该字符串。    如果 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> 为 `true` ，则从集合选择 "hello"，但文本框显示 "hello"。  
  
<a name="dependencyPropertyInfo_ShouldPreserveUserEnteredPrefix"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefixProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShouldPreserveUserEnteredPrefixProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShouldPreserveUserEnteredPrefixProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpenOnEdit : bool with get, set" Usage="System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置已打开并显示下拉控件的 <see cref="T:System.Windows.Controls.ComboBox" /> 在用户单击 <see cref="T:System.Windows.Controls.TextBox" /> 时是否将保持打开状态。</summary>
        <value>若要在用户单击文本区域以开始编辑时保持下拉控件处于打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 此示例演示如何使用 <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> 属性创建一个组合框，在用户将信息输入到文本框中时，其下拉控件将保持打开状态。  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnEditProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnEditProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenOnEditProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.ComboBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前选定项的文本。</summary>
        <value>当前选定项的字符串。 默认值为空字符串("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 属性为时 `true` ，设置此属性将放置在文本框中输入的初始文本。 当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为时 `false` ，设置此值不起作用。  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.ComboBox.TextProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## Examples  
 此示例演示如何 <xref:System.Windows.Controls.ComboBox.Text%2A> 使用属性在 <xref:System.Windows.Controls.TextBox> 用户进行选择之前将文本设置为。  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
