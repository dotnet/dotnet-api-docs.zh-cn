<Type Name="ComboBox" FullName="System.Windows.Controls.ComboBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7ae2e2103bd27a822b6804396c80b813967b0a4" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102057163" /></Metadata><TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComboBox extends System.Windows.Controls.Primitives.Selector" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type ComboBox = class&#xA;    inherit Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBox extends System.Windows.Controls.Primitives.Selector" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="843a3-101">表示带有下拉列表的选择控件，通过单击控件上的箭头可显示或隐藏下拉列表。</span><span class="sxs-lookup"><span data-stu-id="843a3-101">Represents a selection control with a drop-down list that can be shown or hidden by clicking the arrow on the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-102"><xref:System.Windows.Controls.ComboBox>允许用户从下拉列表中选择项，或根据需要在控件的文本框中输入新文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-102">The <xref:System.Windows.Controls.ComboBox> allows the user to select an item from a drop-down list or optionally to enter new text in the text box of the control.</span></span> <span data-ttu-id="843a3-103"><xref:System.Windows.Controls.ComboBox> 为 <xref:System.Windows.Controls.ItemsControl> ，这意味着它可以包含任何类型的对象的集合 (例如字符串、图像或面板) 。</span><span class="sxs-lookup"><span data-stu-id="843a3-103"><xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="843a3-104">有关更多信息，请参见 <xref:System.Windows.Controls.ItemsControl> 类。</span><span class="sxs-lookup"><span data-stu-id="843a3-104">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="843a3-105"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>和 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 用户执行以下操作之一时的行为方式：</span><span class="sxs-lookup"><span data-stu-id="843a3-105">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="843a3-106">输入一个字符串以选择中的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-106">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="843a3-107">输入不与中的项对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-107">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="843a3-108">选择文本框中的字符串的一部分。</span><span class="sxs-lookup"><span data-stu-id="843a3-108">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="843a3-109">将值复制或粘贴到文本框中。</span><span class="sxs-lookup"><span data-stu-id="843a3-109">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="843a3-110">下表描述了用户可以和不可以执行的操作，具体取决于和的 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 值 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-110">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="843a3-111"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-111"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="843a3-112"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `false`</span><span class="sxs-lookup"><span data-stu-id="843a3-112"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="843a3-113"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-113"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="843a3-114">-无法通过输入字符串选择中的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-114">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-115">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-115">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-116">-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-116">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="843a3-117">-可以复制文本框中的字符串 <xref:System.Windows.Controls.ComboBox> ，但不能将字符串粘贴到文本框中 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-117">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="843a3-118">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-118">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-119">-可以输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-119">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-120">-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-120">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="843a3-121">-可以复制或粘贴文本框中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-121">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="843a3-122"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `false`</span><span class="sxs-lookup"><span data-stu-id="843a3-122"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="843a3-123">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-123">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-124">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-124">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-125">-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-125">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-126">-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-126">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="843a3-127">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-127">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-128">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-128">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-129">-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-129">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-130">-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-130">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="843a3-131"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>仅当为时，属性才有效果 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> `true` 。</span><span class="sxs-lookup"><span data-stu-id="843a3-131">The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property has an effect only if <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`.</span></span>  
  
 <span data-ttu-id="843a3-132"><xref:System.Windows.Controls.ComboBox>是 <xref:System.Windows.Controls.ItemsControl> ，因此它可以显示简单字符串以外的内容。</span><span class="sxs-lookup"><span data-stu-id="843a3-132">The <xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, so it can display content other than simple strings.</span></span>  <span data-ttu-id="843a3-133">例如，你可以创建一个 <xref:System.Windows.Controls.ComboBox> 包含映像列表的。</span><span class="sxs-lookup"><span data-stu-id="843a3-133">For example, you can create a <xref:System.Windows.Controls.ComboBox> that contains a list of images.</span></span> <span data-ttu-id="843a3-134">如果中的内容不是字符串，则在 <xref:System.Windows.Controls.ComboBox> <xref:System.Windows.Controls.ComboBox> 隐藏下拉列表时，过程字符串可能出现在中。</span><span class="sxs-lookup"><span data-stu-id="843a3-134">When you have content other than strings in the <xref:System.Windows.Controls.ComboBox>, a nonsensical string might appear in the <xref:System.Windows.Controls.ComboBox> when the drop-down list is hidden.</span></span> <span data-ttu-id="843a3-135">若要在 <xref:System.Windows.Controls.ComboBox> 包含非字符串项时显示中的字符串，请使用 <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> 或 <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-135">To display a string in the <xref:System.Windows.Controls.ComboBox> when it contains non-string items, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> or <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> attached property.</span></span>  
  
## <a name="customizing-the-combobox-control"></a><span data-ttu-id="843a3-136">自定义 ComboBox 控件</span><span class="sxs-lookup"><span data-stu-id="843a3-136">Customizing the ComboBox Control</span></span>  
 <span data-ttu-id="843a3-137">若要对多个控件应用相同的属性设置 <xref:System.Windows.Controls.ComboBox> ，请使用 <xref:System.Windows.FrameworkElement.Style%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-137">To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="843a3-138">您可以修改默认值 <xref:System.Windows.Controls.ControlTemplate> ，为控件指定独特的外观。</span><span class="sxs-lookup"><span data-stu-id="843a3-138">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="843a3-139">有关创建的详细信息 <xref:System.Windows.Controls.ControlTemplate> ，请参阅 [通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="843a3-139">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  <span data-ttu-id="843a3-140">若要查看特定于的部分和状态 <xref:System.Windows.Controls.ComboBox> ，请参阅 [ComboBox 样式和模板](/dotnet/framework/wpf/controls/combobox-styles-and-templates)。</span><span class="sxs-lookup"><span data-stu-id="843a3-140">To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBox>, see [ComboBox Styles and Templates](/dotnet/framework/wpf/controls/combobox-styles-and-templates).</span></span>  
  
 <span data-ttu-id="843a3-141">此控件的依赖属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="843a3-141">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="843a3-142">如果按默认样式设置属性，则当控件出现在应用程序中时，属性可能会更改为默认值。</span><span class="sxs-lookup"><span data-stu-id="843a3-142">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="843a3-143">默认样式取决于应用程序运行时使用的桌面主题。</span><span class="sxs-lookup"><span data-stu-id="843a3-143">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="843a3-144">有关详细信息，请参阅 [默认的 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="843a3-144">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="843a3-145">下面的示例创建一个 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-145">The following example creates a <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="843a3-146">该示例 <xref:System.Windows.Controls.ComboBox> 通过 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 将属性绑定到类型的集合对象来填充 `VacationSpots` 。</span><span class="sxs-lookup"><span data-stu-id="843a3-146">The example populates the <xref:System.Windows.Controls.ComboBox> by binding the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to a collection object of type `VacationSpots`.</span></span> <span data-ttu-id="843a3-147">该示例还创建了一个 <xref:System.Windows.Controls.TextBlock> ，它显示的选定项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-147">The example also creates a <xref:System.Windows.Controls.TextBlock> that displays the selected item of the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 [!code-xaml[ComboBoxItems#ComboBoxClass](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#comboboxclass)]  
  
 <span data-ttu-id="843a3-148">下面的示例定义了 <xref:System.Windows.Controls.ComboBox> 前面的示例中的绑定到的集合对象。</span><span class="sxs-lookup"><span data-stu-id="843a3-148">The following example defines the collection object that the <xref:System.Windows.Controls.ComboBox> in the preceding example binds to.</span></span>  
  
 [!code-csharp[ComboBoxItems#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml.cs#data)]
 [!code-vb[ComboBoxItems#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxItems/VIsualBasic/Window1.xaml.vb#data)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBoxItem" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="843a3-149">WPF 控件库示例</span><span class="sxs-lookup"><span data-stu-id="843a3-149">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="843a3-150">初始化 <see cref="T:System.Windows.Controls.ComboBox" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="843a3-150">Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberSignature Language="F#" Value="member this.DropDownClosed : EventHandler " Usage="member this.DropDownClosed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-151">当关闭组合框的下拉列表时发生。</span><span class="sxs-lookup"><span data-stu-id="843a3-151">Occurs when the drop-down list of the combo box closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="843a3-152">下面的示例演示如何分配事件处理程序以及如何处理 <xref:System.Windows.Controls.ComboBox.DropDownOpened> 和 <xref:System.Windows.Controls.ComboBox.DropDownClosed> 事件。</span><span class="sxs-lookup"><span data-stu-id="843a3-152">The following example shows how to assign event handlers and how to handle the <xref:System.Windows.Controls.ComboBox.DropDownOpened> and <xref:System.Windows.Controls.ComboBox.DropDownClosed> events.</span></span>  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownOpened">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownOpened;" />
      <MemberSignature Language="F#" Value="member this.DropDownOpened : EventHandler " Usage="member this.DropDownOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-153">当打开组合框的下拉列表时发生。</span><span class="sxs-lookup"><span data-stu-id="843a3-153">Occurs when the drop-down list of the combo box opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="843a3-154">下面的示例演示如何分配事件处理程序以及如何处理 <xref:System.Windows.Controls.ComboBox.DropDownOpened> 和 <xref:System.Windows.Controls.ComboBox.DropDownClosed> 事件。</span><span class="sxs-lookup"><span data-stu-id="843a3-154">The following example shows how to assign event handlers and handle the <xref:System.Windows.Controls.ComboBox.DropDownOpened> and <xref:System.Windows.Controls.ComboBox.DropDownClosed> events.</span></span>  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="comboBox.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="843a3-155">创建或标识用于显示指定项的元素。</span><span class="sxs-lookup"><span data-stu-id="843a3-155">Creates or identifies the element used to display the specified item.</span></span></summary>
        <returns><span data-ttu-id="843a3-156">用于显示指定项的元素。</span><span class="sxs-lookup"><span data-stu-id="843a3-156">The element used to display the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-157">获取一个值，该值指示组合框是否支持滚动。</span><span class="sxs-lookup"><span data-stu-id="843a3-157">Gets a value that indicates whether a combo box supports scrolling.</span></span></summary>
        <value><span data-ttu-id="843a3-158">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 支持滚动，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-158"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> supports scrolling; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="843a3-159">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-159">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-160">如果控件 <xref:System.Windows.Controls.ScrollViewer> 在其样式中具有，并且具有自定义键盘滚动行为，则 <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> 应返回 `true` 。</span><span class="sxs-lookup"><span data-stu-id="843a3-160">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-161">获取一个值，该值指示 <see cref="T:System.Windows.Controls.ComboBox" /> 是否具有焦点。</span><span class="sxs-lookup"><span data-stu-id="843a3-161">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> has focus.</span></span></summary>
        <value><span data-ttu-id="843a3-162">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-162"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownOpen : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-163">获取或设置一个值，该值指示组合框的下拉部分当前是否打开。</span><span class="sxs-lookup"><span data-stu-id="843a3-163">Gets or sets a value that indicates whether the drop-down for a combo box is currently open.</span></span></summary>
        <value><span data-ttu-id="843a3-164">如果下拉项已打开，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-164"><see langword="true" /> if the drop-down is open; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="843a3-165">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-166">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-166">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-167">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-167">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsDropDownOpenProperty>|  
|<span data-ttu-id="843a3-168">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-168">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-169">下面的示例演示如何使用 <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> 属性创建一个组合框，该组合框具有在启动组合框时打开的下拉控件。</span><span class="sxs-lookup"><span data-stu-id="843a3-169">The following example shows how to use the <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to create a combo box with the drop down control opened when the combo box is initiated.</span></span>  
  
 [!code-xaml[ComboBoxStyles#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDropDownOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-170">标识 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-170">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEditable : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-171">获取或设置一个值，该值指示启用或禁用 <see cref="T:System.Windows.Controls.ComboBox" /> 的文本框中的文本编辑。</span><span class="sxs-lookup"><span data-stu-id="843a3-171">Gets or sets a value that enables or disables editing of the text in text box of the <see cref="T:System.Windows.Controls.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="843a3-172">如果可以编辑 <see cref="T:System.Windows.Controls.ComboBox" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-172"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> can be edited; otherwise <see langword="false" />.</span></span> <span data-ttu-id="843a3-173">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-173">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-174"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>和 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 用户执行以下操作之一时的行为方式：</span><span class="sxs-lookup"><span data-stu-id="843a3-174">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="843a3-175">输入一个字符串以选择中的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-175">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="843a3-176">输入不与中的项对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-176">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="843a3-177">选择文本框中的字符串的一部分。</span><span class="sxs-lookup"><span data-stu-id="843a3-177">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="843a3-178">将值复制或粘贴到文本框中。</span><span class="sxs-lookup"><span data-stu-id="843a3-178">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="843a3-179">下表描述了用户可以和不可以执行的操作，具体取决于和的 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 值 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-179">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="843a3-180"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-180"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="843a3-181"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `false`</span><span class="sxs-lookup"><span data-stu-id="843a3-181"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="843a3-182"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-182"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="843a3-183">-无法通过输入字符串选择中的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-183">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-184">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-184">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-185">-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-185">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="843a3-186">-可以复制文本框中的字符串 <xref:System.Windows.Controls.ComboBox> ，但不能将字符串粘贴到文本框中 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-186">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="843a3-187">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-187">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-188">-可以输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-188">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-189">-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-189">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="843a3-190">-可以复制或粘贴文本框中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-190">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="843a3-191"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `false`</span><span class="sxs-lookup"><span data-stu-id="843a3-191"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="843a3-192">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-192">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-193">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-193">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-194">-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-194">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-195">-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-195">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="843a3-196">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-196">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-197">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-197">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-198">-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-198">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-199">-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-199">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="843a3-200">当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 等于时 `false` ，将 <xref:System.Windows.Controls.ComboBox> 使用 <xref:System.Windows.Controls.ContentPresenter> 来显示当前选定的项; 当等于时 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> ，将改用作为 `true` <xref:System.Windows.Controls.TextBox> 此目的。</span><span class="sxs-lookup"><span data-stu-id="843a3-200">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `false`, the <xref:System.Windows.Controls.ComboBox> uses a <xref:System.Windows.Controls.ContentPresenter> to display the currently selected item; when <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `true`, a <xref:System.Windows.Controls.TextBox> is used for this purpose instead.</span></span> <span data-ttu-id="843a3-201">请注意， <xref:System.Windows.Controls.TextBox> 仅显示纯文本，并且 <xref:System.Windows.Controls.ComboBoxItem> 可能包括非纯文本内容（如图像）。</span><span class="sxs-lookup"><span data-stu-id="843a3-201">Note that a <xref:System.Windows.Controls.TextBox> only displays plain text, and that a <xref:System.Windows.Controls.ComboBoxItem> may include non-plain text content, such as images.</span></span>  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-202">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-202">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-203">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-203">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsEditableProperty>|  
|<span data-ttu-id="843a3-204">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-204">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-205">无</span><span class="sxs-lookup"><span data-stu-id="843a3-205">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-206">下面的示例创建 <xref:System.Windows.Controls.ComboBox> 包含图像的控件，而不是文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-206">The following examples create <xref:System.Windows.Controls.ComboBox> controls that contain images as items instead of text.</span></span> <span data-ttu-id="843a3-207">如果将 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 属性设置为 `true` ，则将 <xref:System.Windows.Controls.TextBox> 显示图像的方法返回的值 <xref:System.Object.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-207">If the <xref:System.Windows.Controls.ComboBox.IsEditable%2A> property is set to `true`, the <xref:System.Windows.Controls.TextBox> displays the value returned by the image's <xref:System.Object.ToString%2A> method.</span></span> <span data-ttu-id="843a3-208">若要避免出现 <xref:System.Windows.Controls.TextBox> 意外文本，请使用 <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> 和 <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> 属性来分配要显示的文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-208">To avoid a <xref:System.Windows.Controls.TextBox> with unexpected text, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> properties to assign text to be displayed.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#1)]  
  
 [!code-xaml[ComboBoxProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#2)]  
  
 <span data-ttu-id="843a3-209">另一种解决方案是使用 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-209">Another solution is to use the <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> property.</span></span> <span data-ttu-id="843a3-210">的下拉控件 <xref:System.Windows.Controls.ComboBox> 不会显示图像，但会显示您分配的文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-210">The drop-down control of the <xref:System.Windows.Controls.ComboBox> will not display the images but will display the text you assigned.</span></span>  
  
 <span data-ttu-id="843a3-211">下面的示例说明如何使用 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="843a3-211">The following example shows how to use <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEditableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEditableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEditableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-212">标识 <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-212">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="comboBox.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="843a3-213">指定的项。</span><span class="sxs-lookup"><span data-stu-id="843a3-213">Specified item.</span></span></param>
        <summary><span data-ttu-id="843a3-214">确定指定项是否是（或者是否可以作为）自己的 <c>ItemContainer</c>。</span><span class="sxs-lookup"><span data-stu-id="843a3-214">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span></span></summary>
        <returns><span data-ttu-id="843a3-215">如果该项是自己的 <c>ItemContainer</c>，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-215"><see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-216">获取或设置启用仅限选择模式的值，在此模式中，可选择但不可编辑组合框中的内容。</span><span class="sxs-lookup"><span data-stu-id="843a3-216">Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable.</span></span></summary>
        <value><span data-ttu-id="843a3-217">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Windows.Controls.ComboBox" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-217"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="843a3-218">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-218">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-219"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>和 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 用户执行以下操作之一时的行为方式：</span><span class="sxs-lookup"><span data-stu-id="843a3-219">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="843a3-220">输入一个字符串以选择中的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-220">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="843a3-221">输入不与中的项对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-221">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="843a3-222">选择文本框中的字符串的一部分。</span><span class="sxs-lookup"><span data-stu-id="843a3-222">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="843a3-223">将值复制或粘贴到文本框中。</span><span class="sxs-lookup"><span data-stu-id="843a3-223">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="843a3-224">下表描述了用户可以和不可以执行的操作，具体取决于和的 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 值 <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-224">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="843a3-225"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-225"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="843a3-226"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 为 `false`</span><span class="sxs-lookup"><span data-stu-id="843a3-226"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="843a3-227"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-227"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="843a3-228">-无法通过输入字符串选择中的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-228">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-229">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-229">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-230">-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-230">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="843a3-231">-可以复制文本框中的字符串 <xref:System.Windows.Controls.ComboBox> ，但不能将字符串粘贴到文本框中 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-231">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="843a3-232">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-232">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-233">-可以输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-233">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-234">-可以在文本框中选择字符串的一部分 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-234">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="843a3-235">-可以复制或粘贴文本框中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-235">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="843a3-236"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为 `false`</span><span class="sxs-lookup"><span data-stu-id="843a3-236"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="843a3-237">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-237">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-238">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-238">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-239">-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-239">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-240">-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-240">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="843a3-241">-可通过输入字符串在中选择一个项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-241">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="843a3-242">-无法输入与中的项不对应的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-242">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-243">-无法选择中的部分字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-243">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="843a3-244">-无法复制或粘贴中的字符串 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-244">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="843a3-245">当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 等于时 `false` ，将 <xref:System.Windows.Controls.ComboBox> 使用 <xref:System.Windows.Controls.ContentPresenter> 来显示当前选定的项; 当等于时 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> ，将改用作为 `true` <xref:System.Windows.Controls.TextBox> 此目的。</span><span class="sxs-lookup"><span data-stu-id="843a3-245">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `false`, the <xref:System.Windows.Controls.ComboBox> uses a <xref:System.Windows.Controls.ContentPresenter> to display the currently selected item; when <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `true`, a <xref:System.Windows.Controls.TextBox> is used for this purpose instead.</span></span> <span data-ttu-id="843a3-246">请注意， <xref:System.Windows.Controls.TextBox> 仅显示纯文本，并且 <xref:System.Windows.Controls.ComboBoxItem> 可能包括非纯文本内容（如图像）。</span><span class="sxs-lookup"><span data-stu-id="843a3-246">Note that a <xref:System.Windows.Controls.TextBox> only displays plain text, and that a <xref:System.Windows.Controls.ComboBoxItem> may include non-plain text content, such as images.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-247">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-247">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-248">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-248">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsReadOnlyProperty>|  
|<span data-ttu-id="843a3-249">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-249">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-250">下面的示例演示 <xref:System.Windows.Controls.ComboBox> 具有可编辑的 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-250">The following example shows a <xref:System.Windows.Controls.ComboBox> with an editable <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="843a3-251"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>属性设置为 `true` ，因此用户无法在中输入文本 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-251">The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property is set to `true`, so the user cannot enter text into the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-252">标识 <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-252">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionBoxHighlighted">
      <MemberSignature Language="C#" Value="public bool IsSelectionBoxHighlighted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionBoxHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionBoxHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionBoxHighlighted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionBoxHighlighted : bool" Usage="System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-253">确定是否突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-253">Gets whether the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted.</span></span></summary>
        <value><span data-ttu-id="843a3-254">如果突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-254"><see langword="true" /> if the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-255">此属性是一个依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-255">This property is a dependency property.</span></span> <span data-ttu-id="843a3-256">但是，的依赖项属性标识符字段 <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> 不是公共的。</span><span class="sxs-lookup"><span data-stu-id="843a3-256">However, the dependency property identifier field for <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> is not public.</span></span> <span data-ttu-id="843a3-257">因此，不能对需要依赖属性标识符的属性系统操作（如对的调用）使用后备依赖属性 <xref:System.Windows.DependencyObject.GetValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-257">Therefore, you cannot use the backing dependency property for property system operations that require the dependency property identifier, such as calls to <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span> <span data-ttu-id="843a3-258">不过，您仍可以将 <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> 用作属性触发器。</span><span class="sxs-lookup"><span data-stu-id="843a3-258">However, you can still use <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> as a property trigger.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeight">
      <MemberSignature Language="C#" Value="public double MaxDropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxDropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxDropDownHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDropDownHeight : double with get, set" Usage="System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-259">获取或设置组合框下拉部分的最大高度。</span><span class="sxs-lookup"><span data-stu-id="843a3-259">Gets or sets the maximum height for a combo box drop-down.</span></span></summary>
        <value><span data-ttu-id="843a3-260">一个 double 值，该值表示检索到的高度或要设置的高度。</span><span class="sxs-lookup"><span data-stu-id="843a3-260">A double that represents the height that is retrieved or the height to set.</span></span> <span data-ttu-id="843a3-261">为属性系统定义的默认值是根据系统最大屏幕高度参数的三分之一计算得到的，但是此默认值可能会由各种控件模板重写。</span><span class="sxs-lookup"><span data-stu-id="843a3-261">The default value as defined to the property system is a calculated value based on taking a one-third fraction of the system max screen height parameters, but this default is potentially overridden by various control templates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-262">自动调整大小不是默认值，将导致下拉大小可能超出父元素中的可用大小。</span><span class="sxs-lookup"><span data-stu-id="843a3-262">Auto sizing is not the default, and will result in the drop down size potentially exceeding the available size in the parent element.</span></span> <span data-ttu-id="843a3-263">通常不需要这样做。</span><span class="sxs-lookup"><span data-stu-id="843a3-263">This is not typically desirable.</span></span>  
  
<a name="dependencyPropertyInfo_MaxDropDownHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-264">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-264">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-265">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-265">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty>|  
|<span data-ttu-id="843a3-266">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-266">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-267">无</span><span class="sxs-lookup"><span data-stu-id="843a3-267">None</span></span>|  
  
<a name="xamlAttributeUsage_MaxDropDownHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="843a3-268">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="843a3-268">XAML Attribute Usage</span></span>  
  
```  
<object MaxDropDownHeight="double"/>  
- or -  
<object MaxDropDownHeight ="qualifiedDouble"/>  
- or -  
<object MaxDropDownHeight ="Auto"/>  
```  
  
<a name="xamlValues_MaxDropDownHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="843a3-269">XAML 值</span><span class="sxs-lookup"><span data-stu-id="843a3-269">XAML Values</span></span>  
 <span data-ttu-id="843a3-270">*double*</span><span class="sxs-lookup"><span data-stu-id="843a3-270">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="843a3-271">值的字符串表示形式 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-271">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="843a3-272">这被解释为与设备无关的单位， (1/96th 每英寸) 度量。</span><span class="sxs-lookup"><span data-stu-id="843a3-272">This is interpreted as a device-independent unit (1/96th inch) measurement.</span></span> <span data-ttu-id="843a3-273">字符串不需要显式包含小数点。</span><span class="sxs-lookup"><span data-stu-id="843a3-273">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="843a3-274">例如，的值 `1` 是可接受的。</span><span class="sxs-lookup"><span data-stu-id="843a3-274">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="843a3-275"><xref:System.Double>与属性值部分中提到的范围限制相同。</span><span class="sxs-lookup"><span data-stu-id="843a3-275">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="843a3-276">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="843a3-276">*qualifiedDouble*</span></span>  
 <span data-ttu-id="843a3-277">如上所述的 *双精度* 值，后跟以下单元声明字符串之一： `px` 、 `in` 、 `cm` 和 `pt` 。</span><span class="sxs-lookup"><span data-stu-id="843a3-277">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="843a3-278">`px` (默认) 是与设备无关的单位， (每个单位 1/96th 每英寸) </span><span class="sxs-lookup"><span data-stu-id="843a3-278">`px` (default) is device-independent units (1/96th inch per unit)</span></span>  
  
 <span data-ttu-id="843a3-279">`in` 为英寸;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="843a3-279">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="843a3-280">`cm` 为厘米;1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="843a3-280">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="843a3-281">`pt` 为点;1pt = = (96/72) px</span><span class="sxs-lookup"><span data-stu-id="843a3-281">`pt` is points; 1pt==(96/72) px</span></span>  
  
 `Auto`  
 <span data-ttu-id="843a3-282">启用自动调整行为。</span><span class="sxs-lookup"><span data-stu-id="843a3-282">Enables autosizing behavior.</span></span> <span data-ttu-id="843a3-283">请参阅“备注”。</span><span class="sxs-lookup"><span data-stu-id="843a3-283">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="843a3-284">下面的示例演示如何使用 <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> 属性指定 <xref:System.Windows.Controls.ComboBox> 控件下拉控件的高度。</span><span class="sxs-lookup"><span data-stu-id="843a3-284">The following example shows how to use the <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> property to specify the height of the <xref:System.Windows.Controls.ComboBox> control's drop-down.</span></span>  
  
 [!code-xaml[ComboBoxStyles#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxDropDownHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxDropDownHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDropDownHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxDropDownHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxDropDownHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-285">标识 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-285">Identifies the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="comboBox.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="843a3-286">调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时进行调用。</span><span class="sxs-lookup"><span data-stu-id="843a3-286">Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="comboBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="843a3-287">提供 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 此控件的适当实现，作为 WPF 基础结构的一部分。</span><span class="sxs-lookup"><span data-stu-id="843a3-287">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> implementation for this control, as part of the WPF infrastructure.</span></span></summary>
        <returns><span data-ttu-id="843a3-288">特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="843a3-288">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownClosed : EventArgs -&gt; unit&#xA;override this.OnDropDownClosed : EventArgs -&gt; unit" Usage="comboBox.OnDropDownClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-289"><see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> 事件的事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-289">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> event.</span></span></param>
        <summary><span data-ttu-id="843a3-290">当组合框的弹出窗口关闭时报告。</span><span class="sxs-lookup"><span data-stu-id="843a3-290">Reports when a combo box's popup closes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownOpened(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownOpened : EventArgs -&gt; unit&#xA;override this.OnDropDownOpened : EventArgs -&gt; unit" Usage="comboBox.OnDropDownOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-291"><see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> 事件的事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-291">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> event.</span></span></param>
        <summary><span data-ttu-id="843a3-292">当组合框的弹出窗口打开时报告。</span><span class="sxs-lookup"><span data-stu-id="843a3-292">Reports when a combo box's popup opens.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="comboBox.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-293"><see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件的事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-293">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="843a3-294">报告 <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> 属性已更改。</span><span class="sxs-lookup"><span data-stu-id="843a3-294">Reports that the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="comboBox.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-295"><see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> 事件的事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-295">The event data for the <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="843a3-296">当 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性更改时调用。</span><span class="sxs-lookup"><span data-stu-id="843a3-296">Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="comboBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-297">事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-297">Event data.</span></span></param>
        <summary><span data-ttu-id="843a3-298">在发生 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件时调用。</span><span class="sxs-lookup"><span data-stu-id="843a3-298">Invoked when a <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBox.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-299"><see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件的事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-299">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span></span></param>
        <summary><span data-ttu-id="843a3-300">调用此方法以报告已释放鼠标左键。</span><span class="sxs-lookup"><span data-stu-id="843a3-300">Called to report that the left mouse button was released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="comboBox.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-301">事件数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-301">Event data.</span></span></param>
        <summary><span data-ttu-id="843a3-302">在发生 <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 附加路由事件时调用。</span><span class="sxs-lookup"><span data-stu-id="843a3-302">Invoked when a <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached routed event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectionChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="comboBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="843a3-303">为 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 提供数据。</span><span class="sxs-lookup"><span data-stu-id="843a3-303">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="843a3-304">通过引发 <see cref="T:System.Windows.Controls.ComboBox" /> 事件来对 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 选择更改进行响应。</span><span class="sxs-lookup"><span data-stu-id="843a3-304">Responds to a <see cref="T:System.Windows.Controls.ComboBox" /> selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="comboBox.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="843a3-305">用来显示指定的项的元素。</span><span class="sxs-lookup"><span data-stu-id="843a3-305">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="843a3-306">指定的项。</span><span class="sxs-lookup"><span data-stu-id="843a3-306">Specified item.</span></span></param>
        <summary><span data-ttu-id="843a3-307">准备好指定的元素以显示指定的项。</span><span class="sxs-lookup"><span data-stu-id="843a3-307">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-308">准备元素可能涉及应用样式、设置绑定等。</span><span class="sxs-lookup"><span data-stu-id="843a3-308">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectionBoxItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItem : obj" Usage="System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-309">获取在选择框中显示的项。</span><span class="sxs-lookup"><span data-stu-id="843a3-309">Gets the item that is displayed in the selection box.</span></span></summary>
        <value><span data-ttu-id="843a3-310">选定项。</span><span class="sxs-lookup"><span data-stu-id="843a3-310">The selected item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-311">的将 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ComboBox> 使用此属性在中显示选定的项 <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-311">The <xref:System.Windows.Controls.ControlTemplate> of the <xref:System.Windows.Controls.ComboBox> uses this property to show the selected item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  <span data-ttu-id="843a3-312">若要获取外的选定项 <xref:System.Windows.Controls.ComboBox> <xref:System.Windows.Controls.ControlTemplate> ，请使用 <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType> 属性，而不是此属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-312">To get the selected item of the <xref:System.Windows.Controls.ComboBox> outside of the <xref:System.Windows.Controls.ControlTemplate>, use the <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType> property instead of this property.</span></span>  
  
<a name="xamlAttributeUsage_SelectionBoxItem"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="843a3-313">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="843a3-313">XAML Attribute Usage</span></span>  
  
```  
<object property="{TemplateBinding SelectionBoxItem}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-314">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-314">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-315">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-315">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemProperty>|  
|<span data-ttu-id="843a3-316">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-316">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-317">无</span><span class="sxs-lookup"><span data-stu-id="843a3-317">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-318">下面的示例将的 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 属性绑定 <xref:System.Windows.Controls.ContentPresenter> 到 <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-318">The following example binds the <xref:System.Windows.Controls.ContentPresenter.Content%2A> property of a <xref:System.Windows.Controls.ContentPresenter> to the <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> property.</span></span> <span data-ttu-id="843a3-319">是的的 <xref:System.Windows.Controls.ContentPresenter> 一部分 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-319">The <xref:System.Windows.Controls.ContentPresenter> is part of the <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="843a3-320">有关完整示例，请参阅[使用 ControlTemplates 设置样式示例](https://go.microsoft.com/fwlink/?LinkID=160041)。</span><span class="sxs-lookup"><span data-stu-id="843a3-320">For the complete sample, see [Styling with ControlTemplates Sample](https://go.microsoft.com/fwlink/?LinkID=160041).</span></span>  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-321">标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-321">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectionBoxItemStringFormat { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItemStringFormat : string" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-322">获取一个撰写字符串，该字符串指定如果选择框中的选定项显示为字符串，应如何设置该选定项的格式。</span><span class="sxs-lookup"><span data-stu-id="843a3-322">Gets a composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span></span></summary>
        <value><span data-ttu-id="843a3-323">一个撰写字符串，指定如果选择框中的选定项显示为字符串，应如何设置该选定项的格式。</span><span class="sxs-lookup"><span data-stu-id="843a3-323">A composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-324">标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-324">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ SelectionBoxItemTemplate { System::Windows::DataTemplate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItemTemplate : System.Windows.DataTemplate" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-325">获取选择框内容的项模板。</span><span class="sxs-lookup"><span data-stu-id="843a3-325">Gets the item template of the selection box content.</span></span></summary>
        <value><span data-ttu-id="843a3-326">项模板。</span><span class="sxs-lookup"><span data-stu-id="843a3-326">An item template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionBoxItemTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="843a3-327">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="843a3-327">XAML Attribute Usage</span></span>  
  
```  
<object property="{TemplateBinding SelectionBoxItemTemplate}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-328">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-328">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-329">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-329">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty>|  
|<span data-ttu-id="843a3-330">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-330">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-331">无</span><span class="sxs-lookup"><span data-stu-id="843a3-331">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-332">下面的示例将的 <xref:System.Windows.Controls.ContentPresenter.Content%2A> 属性绑定 <xref:System.Windows.Controls.ContentPresenter> 到 <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-332">The following example binds the <xref:System.Windows.Controls.ContentPresenter.Content%2A> property of a <xref:System.Windows.Controls.ContentPresenter> to the <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> property.</span></span> <span data-ttu-id="843a3-333">是的的 <xref:System.Windows.Controls.ContentPresenter> 一部分 <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.Controls.ComboBox> 。</span><span class="sxs-lookup"><span data-stu-id="843a3-333">The <xref:System.Windows.Controls.ContentPresenter> is part of the <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="843a3-334">有关完整示例，请参阅[使用 ControlTemplates 设置样式示例](https://go.microsoft.com/fwlink/?LinkID=160041)。</span><span class="sxs-lookup"><span data-stu-id="843a3-334">For the complete sample, see [Styling with ControlTemplates Sample](https://go.microsoft.com/fwlink/?LinkID=160041).</span></span>  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-335">标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-335">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefix">
      <MemberSignature Language="C#" Value="public bool ShouldPreserveUserEnteredPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPreserveUserEnteredPrefix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPreserveUserEnteredPrefix { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPreserveUserEnteredPrefix : bool with get, set" Usage="System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-336">获取或设置指示 <see cref="T:System.Windows.Controls.ComboBox" /> 是保留用户的输入还是将输入替换为匹配的项的值。</span><span class="sxs-lookup"><span data-stu-id="843a3-336">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input or replaces the input with a matching item.</span></span></summary>
        <value><span data-ttu-id="843a3-337">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 保留用户的输入，则为 <see langword="true" />；如果 <see cref="T:System.Windows.Controls.ComboBox" /> 替换具有匹配项的输入。则为 <see langword="false" />。注册的默认值是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-337"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input; <see langword="false" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> replaces the input with a matching item The registered default is <see langword="false" />.</span></span> <span data-ttu-id="843a3-338">有关什么可以影响值的详细信息，请参阅 [Dependency Property Value Precedence（依赖项属性值优先级）](/dotnet/framework/wpf/advanced/dependency-property-value-precedence)。</span><span class="sxs-lookup"><span data-stu-id="843a3-338">For more information about what can influence the value, see [Dependency Property Value Precedence](/dotnet/framework/wpf/advanced/dependency-property-value-precedence).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-339">默认情况下，当用户在中键入 <xref:System.Windows.Controls.ComboBox> 与某个项匹配的字符串时，将选择该项并替换用户键入的文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-339">By default, when the user types a string into the <xref:System.Windows.Controls.ComboBox> that matches one of its items, the item is selected and the text that the user typed is replaced.</span></span>  <span data-ttu-id="843a3-340">这可能导致用户输入的文本更改大小写。</span><span class="sxs-lookup"><span data-stu-id="843a3-340">This can cause the text that the user entered to change case.</span></span> <span data-ttu-id="843a3-341">如果将 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> 属性设置为 `true` ，则会 <xref:System.Windows.Controls.ComboBox> 选择匹配项，但会保留用户输入的文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-341">If the <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> property is set to `true`, the <xref:System.Windows.Controls.ComboBox> selects the matching item, but preserves the text that the user entered.</span></span>   <span data-ttu-id="843a3-342">例如，假设 a <xref:System.Windows.Controls.ComboBox> 包含字符串 "hello" (，并使用大写 h) 并且用户使用小写 h) 输入 "hello" (。</span><span class="sxs-lookup"><span data-stu-id="843a3-342">For example, suppose that a <xref:System.Windows.Controls.ComboBox> contains the string, "Hello" (with a capital H) and the user enters "hello" (with a lowercase h).</span></span>  <span data-ttu-id="843a3-343">如果 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> 为 `false` ，则在 <xref:System.Windows.Controls.ComboBox> 其集合中选择匹配项 "Hello"，并在其文本框中填充该字符串。</span><span class="sxs-lookup"><span data-stu-id="843a3-343">If <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> is `false`, the <xref:System.Windows.Controls.ComboBox> selects the matching item, "Hello," in its collection and populates its text box with that string.</span></span>    <span data-ttu-id="843a3-344">如果 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> 为 `true` ，则从集合选择 "hello"，但文本框显示 "hello"。</span><span class="sxs-lookup"><span data-stu-id="843a3-344">If <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> is `true`, "Hello" is selected from the collection, but the text box says "hello."</span></span>  
  
<a name="dependencyPropertyInfo_ShouldPreserveUserEnteredPrefix"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-345">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-345">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-346">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-346">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty>|  
|<span data-ttu-id="843a3-347">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-347">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-348">无</span><span class="sxs-lookup"><span data-stu-id="843a3-348">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefixProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShouldPreserveUserEnteredPrefixProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShouldPreserveUserEnteredPrefixProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-349">标识 <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-349">Identifies the <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpenOnEdit : bool with get, set" Usage="System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-350">获取或设置已打开并显示下拉控件的 <see cref="T:System.Windows.Controls.ComboBox" /> 在用户单击 <see cref="T:System.Windows.Controls.TextBox" /> 时是否将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="843a3-350">Gets or sets whether a <see cref="T:System.Windows.Controls.ComboBox" /> that is open and displays a drop-down control will remain open when a user clicks the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="843a3-351">若要在用户单击文本区域以开始编辑时保持下拉控件处于打开状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-351"><see langword="true" /> to keep the drop-down control open when the user clicks on the text area to start editing; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="843a3-352">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="843a3-352">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-353">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-353">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-354">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-354">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty>|  
|<span data-ttu-id="843a3-355">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-355">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-356">无</span><span class="sxs-lookup"><span data-stu-id="843a3-356">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-357">此示例演示如何使用 <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> 属性创建一个组合框，在用户将信息输入到文本框中时，其下拉控件将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="843a3-357">This example shows how to use the <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> property to create a combo box whose drop-down control stays open while the user enters information into the text box.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnEditProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnEditProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenOnEditProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-358">标识 <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-358">Identifies the <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.ComboBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-359">获取或设置当前选定项的文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-359">Gets or sets the text of the currently selected item.</span></span></summary>
        <value><span data-ttu-id="843a3-360">当前选定项的字符串。</span><span class="sxs-lookup"><span data-stu-id="843a3-360">The string of the currently selected item.</span></span> <span data-ttu-id="843a3-361">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="843a3-361">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="843a3-362">当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 属性为时 `true` ，设置此属性将放置在文本框中输入的初始文本。</span><span class="sxs-lookup"><span data-stu-id="843a3-362">When the <xref:System.Windows.Controls.ComboBox.IsEditable%2A> property is `true`, setting this property places initial text entered in the text box.</span></span> <span data-ttu-id="843a3-363">当 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> 为时 `false` ，设置此值不起作用。</span><span class="sxs-lookup"><span data-stu-id="843a3-363">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`, setting this value has no effect.</span></span>  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="843a3-364">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="843a3-364">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="843a3-365">标识符字段</span><span class="sxs-lookup"><span data-stu-id="843a3-365">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.TextProperty>|  
|<span data-ttu-id="843a3-366">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="843a3-366">Metadata properties set to `true`</span></span>|<span data-ttu-id="843a3-367"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="843a3-367"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="843a3-368">此示例演示如何 <xref:System.Windows.Controls.ComboBox.Text%2A> 使用属性在 <xref:System.Windows.Controls.TextBox> 用户进行选择之前将文本设置为。</span><span class="sxs-lookup"><span data-stu-id="843a3-368">This example shows how the <xref:System.Windows.Controls.ComboBox.Text%2A> property can be used to set text into the <xref:System.Windows.Controls.TextBox> before the user makes a selection.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="843a3-369">标识 <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="843a3-369">Identifies the <see cref="P:System.Windows.Controls.ComboBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
