<Type Name="Label" FullName="System.Windows.Controls.Label">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f5463c9649c209d4e946450d4083076bfc4b148" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83957231" /></Metadata><TypeSignature Language="C#" Value="public class Label : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Label extends System.Windows.Controls.ContentControl" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Label = class&#xA;    inherit ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Label extends System.Windows.Controls.ContentControl" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Label)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f624-101">表示控件的文本标签，并提供访问密钥支持。</span><span class="sxs-lookup"><span data-stu-id="9f624-101">Represents the text label for a control and provides support for access keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f624-102">此类提供访问密钥（也称为助记键）的功能和视觉支持。</span><span class="sxs-lookup"><span data-stu-id="9f624-102">This class provides both functional and visual support for access keys (also known as mnemonics).</span></span> <span data-ttu-id="9f624-103">它经常用于启用对控件（如 <xref:System.Windows.Controls.TextBox>）的快速键盘访问。</span><span class="sxs-lookup"><span data-stu-id="9f624-103">It is frequently used to enable quick keyboard access to controls such as a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="9f624-104">若要将 <xref:System.Windows.Controls.Label> 分配到 <xref:System.Windows.Controls.Control>，请将 <xref:System.Windows.Controls.Label.Target%2A> 属性设置为当用户按下访问键时应获得焦点的控件。</span><span class="sxs-lookup"><span data-stu-id="9f624-104">To assign a <xref:System.Windows.Controls.Label> to a <xref:System.Windows.Controls.Control>, set the <xref:System.Windows.Controls.Label.Target%2A> property to the control that should get focus when the user presses the access key.</span></span> <span data-ttu-id="9f624-105">设置目标还会导致 [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] 将标签文本用作目标控件的名称。</span><span class="sxs-lookup"><span data-stu-id="9f624-105">Setting the target also causes [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] to use the text of the label as the name of the targeted control.</span></span> <span data-ttu-id="9f624-106">有关详细信息，请参阅[辅助功能](/dotnet/framework/ui-automation/)。</span><span class="sxs-lookup"><span data-stu-id="9f624-106">For more information, see [Accessibility](/dotnet/framework/ui-automation/).</span></span>  
  
 <span data-ttu-id="9f624-107">若要设置访问密钥，请在应为访问键的字符前添加一个下划线。</span><span class="sxs-lookup"><span data-stu-id="9f624-107">To set the access key, add an underscore before the character that should be the access key.</span></span> <span data-ttu-id="9f624-108">如果内容有多个下划线字符，则只会将第一个下划线字符转换为访问密钥;其他下划线显示为普通文本。</span><span class="sxs-lookup"><span data-stu-id="9f624-108">If your content has multiple underscore characters, only the first one is converted into an access key; the other underscores appear as normal text.</span></span> <span data-ttu-id="9f624-109">如果要转换为访问键的下划线不是第一个下划线，请在要转换的下划线前面使用两个连续的下划线。</span><span class="sxs-lookup"><span data-stu-id="9f624-109">If the underscore that you want converted to the access key is not the first underscore, use two consecutive underscores for any underscores that precede the one that you want to convert.</span></span> <span data-ttu-id="9f624-110">例如，以下代码包含一个访问键，并显示为 _Hello**W**orld：</span><span class="sxs-lookup"><span data-stu-id="9f624-110">For example, the following code contains an access key and displays as _Hello**W**orld:</span></span>  
  
```  
<Label>__Hello_World</Label>   
```  
  
 <span data-ttu-id="9f624-111">由于 H 前面的下划线为 double，因此 W key 注册为访问键。</span><span class="sxs-lookup"><span data-stu-id="9f624-111">Because the underscore that precedes H is a double, the W key registers as the access key.</span></span>  
  
 <span data-ttu-id="9f624-112">标签不可设定焦点，并且不是制表位。</span><span class="sxs-lookup"><span data-stu-id="9f624-112">A label is not focusable, and it is not a tab stop.</span></span> <span data-ttu-id="9f624-113">有关详细信息，请参阅[焦点概述](/dotnet/framework/wpf/advanced/focus-overview)。</span><span class="sxs-lookup"><span data-stu-id="9f624-113">For details, see [Focus Overview](/dotnet/framework/wpf/advanced/focus-overview).</span></span>  
  
 <span data-ttu-id="9f624-114"><xref:System.Windows.Controls.Label> 是 <xref:System.Windows.Controls.ContentControl>，这意味着它可以包含任何类型的单个对象（例如字符串、图像或面板）。</span><span class="sxs-lookup"><span data-stu-id="9f624-114">A <xref:System.Windows.Controls.Label> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="9f624-115">有关详细信息，请参阅 <xref:System.Windows.Controls.ContentControl> 类。</span><span class="sxs-lookup"><span data-stu-id="9f624-115">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-label-control"></a><span data-ttu-id="9f624-116">自定义标签控件</span><span class="sxs-lookup"><span data-stu-id="9f624-116">Customizing the Label Control</span></span>  
 <span data-ttu-id="9f624-117">若要对多个 <xref:System.Windows.Controls.Label> 控件应用相同的属性设置，请使用 <xref:System.Windows.FrameworkElement.Style%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9f624-117">To apply the same property settings to multiple <xref:System.Windows.Controls.Label> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="9f624-118">您可以修改默认 <xref:System.Windows.Controls.ControlTemplate> 以使控件具有独特的外观。</span><span class="sxs-lookup"><span data-stu-id="9f624-118">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="9f624-119">有关创建 <xref:System.Windows.Controls.ControlTemplate>的详细信息，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="9f624-119">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  <span data-ttu-id="9f624-120">若要查看特定于 <xref:System.Windows.Controls.Label>的部分和状态，请参阅[标签样式和模板](/dotnet/framework/wpf/controls/label-styles-and-templates)。</span><span class="sxs-lookup"><span data-stu-id="9f624-120">To see the parts and states that are specific to the <xref:System.Windows.Controls.Label>, see [Label Styles and Templates](/dotnet/framework/wpf/controls/label-styles-and-templates).</span></span>  
  
 <span data-ttu-id="9f624-121">此控件的依赖属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="9f624-121">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="9f624-122">如果按默认样式设置属性，则当控件出现在应用程序中时，属性可能会更改为默认值。</span><span class="sxs-lookup"><span data-stu-id="9f624-122">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="9f624-123">默认样式取决于应用程序运行时使用的桌面主题。</span><span class="sxs-lookup"><span data-stu-id="9f624-123">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="9f624-124">有关详细信息，请参阅[默认的 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="9f624-124">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="9f624-125">下面的示例演示如何创建使用绑定设置目标的 <xref:System.Windows.Controls.Label>。</span><span class="sxs-lookup"><span data-stu-id="9f624-125">The following example shows how to create a <xref:System.Windows.Controls.Label> that uses a binding to set the target.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 <span data-ttu-id="9f624-126">下面的示例演示如何创建一个具有访问键且支持文本换行的 <xref:System.Windows.Controls.Label>。</span><span class="sxs-lookup"><span data-stu-id="9f624-126">The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping.</span></span>  
  
 [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]   
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)"><span data-ttu-id="9f624-127">如何：设置标签的目标属性</span><span class="sxs-lookup"><span data-stu-id="9f624-127">How to: Set a Label's Target Property</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f624-128">初始化 <see cref="T:System.Windows.Controls.Label" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9f624-128">Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="label.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9f624-129">作为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基础结构的一部分，为此控件提供相应的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f624-129">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="9f624-130">特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="9f624-130">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Label.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Label.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.NameReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f624-131">获取或设置当用户按下标签的访问键时获得焦点的元素。</span><span class="sxs-lookup"><span data-stu-id="9f624-131">Gets or sets the element that receives focus when the user presses the label's access key.</span></span></summary>
        <value><span data-ttu-id="9f624-132">当用户按下访问键时获得焦点的 <see cref="T:System.Windows.UIElement" />。</span><span class="sxs-lookup"><span data-stu-id="9f624-132">The <see cref="T:System.Windows.UIElement" /> that receives focus when the user presses the access key.</span></span> <span data-ttu-id="9f624-133">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9f624-133">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f624-134">通过提供 <xref:System.Windows.Controls.Label> 访问密钥并设置此属性，可以为不支持访问密钥的元素提供键盘快捷方式。</span><span class="sxs-lookup"><span data-stu-id="9f624-134">You can provide keyboard shortcuts to elements that don't support access keys by giving a <xref:System.Windows.Controls.Label> an access key and setting this property.</span></span> <span data-ttu-id="9f624-135">向标签分配一个访问键，方法是在用作访问键的字符的紧前面放置一个下划线。</span><span class="sxs-lookup"><span data-stu-id="9f624-135">Assign an access key to a label by placing an underscore immediately before the character that acts as the access key.</span></span> <span data-ttu-id="9f624-136">可以在 <xref:System.Windows.Controls.ContentControl.Content%2A> 属性中指定访问密钥，也可以通过将 <xref:System.Windows.Controls.ContentControl.Content%2A> 设置为 <xref:System.Windows.Controls.AccessText> 对象来指定访问密钥。</span><span class="sxs-lookup"><span data-stu-id="9f624-136">An access key can be specified in the <xref:System.Windows.Controls.ContentControl.Content%2A> property or by setting <xref:System.Windows.Controls.ContentControl.Content%2A> to an <xref:System.Windows.Controls.AccessText> object.</span></span>  
  
 <span data-ttu-id="9f624-137">不能使用此属性来定义 <xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="9f624-137">You cannot use this property to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="9f624-138">例如，下面的编译但不起作用： `<object.Target><UIElement../></object.Target>`。</span><span class="sxs-lookup"><span data-stu-id="9f624-138">For example, the following compiles but is not functional: `<object.Target><UIElement../></object.Target>`.</span></span> <span data-ttu-id="9f624-139">此属性提供对已在应用程序中定义的元素的引用。</span><span class="sxs-lookup"><span data-stu-id="9f624-139">This property provides a reference to an element that is already defined in your application.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9f624-140">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="9f624-140">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9f624-141">标识符字段</span><span class="sxs-lookup"><span data-stu-id="9f624-141">Identifier field</span></span>|<xref:System.Windows.Controls.Label.TargetProperty>|  
|<span data-ttu-id="9f624-142">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="9f624-142">Metadata properties set to `true`</span></span>|<span data-ttu-id="9f624-143">无</span><span class="sxs-lookup"><span data-stu-id="9f624-143">None</span></span>|  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9f624-144">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="9f624-144">XAML Attribute Usage</span></span>  
  
```  
<Label Target=" nameOfExistingElement"/>  
  
```  
  
<a name="xamlPropertyElementUsage_Target"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9f624-145">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="9f624-145">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_Target"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9f624-146">XAML 值</span><span class="sxs-lookup"><span data-stu-id="9f624-146">XAML Values</span></span>  
 `nameOfExistingElement`  
 <span data-ttu-id="9f624-147">按下访问键时获得焦点的 <xref:System.Windows.UIElement> 的名称。</span><span class="sxs-lookup"><span data-stu-id="9f624-147">The name of <xref:System.Windows.UIElement> that receives focus when the access key is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f624-148">以下示例演示如何设置 <xref:System.Windows.Controls.Label.Target%2A> 的 <xref:System.Windows.Controls.Label> 属性。</span><span class="sxs-lookup"><span data-stu-id="9f624-148">The following example shows how to set the <xref:System.Windows.Controls.Label.Target%2A> property of a <xref:System.Windows.Controls.Label>.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)"><span data-ttu-id="9f624-149">如何：设置标签的目标属性</span><span class="sxs-lookup"><span data-stu-id="9f624-149">How to: Set a Label's Target Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Label.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Label.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f624-150">标识 <see cref="P:System.Windows.Controls.Label.Target" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="9f624-150">Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
