<Type Name="Expander" FullName="System.Windows.Controls.Expander">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4efe658c8968ba58d81bd7a4fa0ad10706970ca" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86597972" /></Metadata><TypeSignature Language="C#" Value="public class Expander : System.Windows.Controls.HeaderedContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Expander extends System.Windows.Controls.HeaderedContentControl" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Expander" />
  <TypeSignature Language="VB.NET" Value="Public Class Expander&#xA;Inherits HeaderedContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Expander : System::Windows::Controls::HeaderedContentControl" />
  <TypeSignature Language="F#" Value="type Expander = class&#xA;    inherit HeaderedContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Expander extends System.Windows.Controls.HeaderedContentControl" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示一种控件，该控件显示具有可折叠内容显示窗口的标题。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Expander>为 <xref:System.Windows.Controls.HeaderedContentControl> ，这意味着其 <xref:System.Windows.Controls.ContentControl.Content%2A> 和 <xref:System.Windows.Controls.HeaderedContentControl.Header%2A> 属性可以是任何类型 (例如字符串、图像或面板) 。  有关更多信息，请参见 <xref:System.Windows.Controls.HeaderedContentControl> 类。  
  
 下图显示了一个 <xref:System.Windows.Controls.Expander> 控件。  
  
 ![Expander 示例](~/add/media/expanderexample.JPG "Expander 示例")  
  
 如果展开的窗口的内容对窗口而言太大，则可以将控件中的内容换行 <xref:System.Windows.Controls.Expander> <xref:System.Windows.Controls.ScrollViewer> 以提供可滚动的内容。 控件不自动提供滚动功能 <xref:System.Windows.Controls.Expander> 。  
  
 <xref:System.Windows.Controls.Expander>若要使正常工作，请在将 <xref:System.Windows.FrameworkElement.Height%2A> <xref:System.Windows.Controls.Expander> <xref:System.Windows.Controls.Expander.ExpandDirection%2A> 属性设置为或时，不要在控件上 <xref:System.Windows.Controls.ExpandDirection.Down> 指定 <xref:System.Windows.Controls.ExpandDirection.Up> 。 同样， <xref:System.Windows.FrameworkElement.Width%2A> <xref:System.Windows.Controls.Expander> 如果将 <xref:System.Windows.Controls.Expander.ExpandDirection%2A> 属性设置为或，则不要在控件上指定 <xref:System.Windows.Controls.ExpandDirection.Left> <xref:System.Windows.Controls.ExpandDirection.Right> 。 当您 <xref:System.Windows.Controls.Expander> 在控件上设置扩展内容的方向时，将显示由 size 参数定义的区域，其中包含边框。 即使窗口处于折叠状态，也会显示此区域。 若要设置展开窗口的大小，请设置 <xref:System.Windows.Controls.Expander> 控件内容或包含内容的的大小尺寸 <xref:System.Windows.Controls.ScrollViewer> 。  
  
 如果 <xref:System.Windows.Controls.Expander> 控件是中的最后一个元素 <xref:System.Windows.Controls.DockPanel> ， <xref:System.Windows.Controls.Expander> 则将调整大小以填充的剩余区域 <xref:System.Windows.Controls.DockPanel> 。 若要防止出现这种情况，请将 <xref:System.Windows.Controls.DockPanel.LastChildFill%2A> 的属性设置 <xref:System.Windows.Controls.DockPanel> 为 `false` ，或确保 <xref:System.Windows.Controls.Expander> 不是中的最后一个元素 <xref:System.Windows.Controls.DockPanel> 。  
  
 <xref:System.Windows.Controls.Expander>可以通过设置控件的和属性来定义内容的对齐方式 <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> 。 这些属性将应用于标头和展开窗口的内容。  
  
## <a name="customizing-the-expander-control"></a>自定义扩展器控件  
 若要对多个控件应用相同的属性设置 <xref:System.Windows.Controls.Expander> ，请使用 <xref:System.Windows.FrameworkElement.Style%2A> 属性。 您可以修改默认值 <xref:System.Windows.Controls.ControlTemplate> ，为控件指定独特的外观。 有关创建的详细信息 <xref:System.Windows.Controls.ControlTemplate> ，请参阅[通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。  若要查看特定于的部分和状态 <xref:System.Windows.Controls.Expander> ，请参阅[扩展器样式和模板](/dotnet/framework/wpf/controls/expander-styles-and-templates)。  
  
 此控件的依赖属性可能由控件的默认样式设置。  如果按默认样式设置属性，则当控件出现在应用程序中时，属性可能会更改为默认值。 默认样式取决于应用程序运行时使用的桌面主题。  有关详细信息，请参阅[默认的 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 下面的示例演示如何创建一个简单的 <xref:System.Windows.Controls.Expander> 控件。  
  
 [!code-xaml[ExpanderExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderExample/CSharp/Page1.xaml#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ExpandDirection" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053">WPF 控件库示例</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Expander ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Expander.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Expander();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.Expander" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Collapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Collapsed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Expander.Collapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapsed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Collapsed;" />
      <MemberSignature Language="F#" Value="member this.Collapsed : System.Windows.RoutedEventHandler " Usage="member this.Collapsed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Controls.Expander" /> 控件的内容窗口关闭且只有 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 可见时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Expander.Collapsed>当 <xref:System.Windows.Controls.Expander.IsExpanded%2A> 属性从更改为时发生此事件 `true` `false` 。  
  
<a name="routedEventInfo_Collapsed"></a>   
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Expander.CollapsedEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 下面的示例演示如何为事件指定事件处理程序 <xref:System.Windows.Controls.Expander.Collapsed> 。  
  
 [!code-csharp[ExpanderSnips#Collapsed](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml.cs#collapsed)]
 [!code-vb[ExpanderSnips#Collapsed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpanderSnips/visualbasic/window1.xaml.vb#collapsed)]
 [!code-xaml[ExpanderSnips#Collapsed](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml#collapsed)]  
  
 下面的示例演示如何定义事件处理程序。  
  
 [!code-csharp[ExpanderSnips#CollapsedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml.cs#collapsedhandler)]
 [!code-vb[ExpanderSnips#CollapsedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpanderSnips/visualbasic/window1.xaml.vb#collapsedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Expander.Expanded" />
      </Docs>
    </Member>
    <Member MemberName="CollapsedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CollapsedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CollapsedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Expander.CollapsedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CollapsedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CollapsedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CollapsedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Expander.CollapsedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ExpandDirection ExpandDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ExpandDirection ExpandDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Expander.ExpandDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDirection As ExpandDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ExpandDirection ExpandDirection { System::Windows::Controls::ExpandDirection get(); void set(System::Windows::Controls::ExpandDirection value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDirection : System.Windows.Controls.ExpandDirection with get, set" Usage="System.Windows.Controls.Expander.ExpandDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ExpandDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Expander" /> 内容窗口的打开方向。</summary>
        <value><see cref="T:System.Windows.Controls.ExpandDirection" /> 值之一，定义内容窗口的打开方向。 默认值为 <see cref="F:System.Windows.Controls.ExpandDirection.Down" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ExpandDirection"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Expander.ExpandDirectionProperty>|  
|元数据属性设置为`true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Expander.ExpandDirection%2A> 属性。  
  
 [!code-csharp[ExpanderSnips#ExpandDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml.cs#expanddirection)]
 [!code-vb[ExpanderSnips#ExpandDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpanderSnips/visualbasic/window1.xaml.vb#expanddirection)]
 [!code-xaml[ExpanderSnips#ExpandDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml#expanddirection)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ExpandDirection" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpandDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpandDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Expander.ExpandDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpandDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Expander.ExpandDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Expander.ExpandDirection" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Expanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Expanded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Expander.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Expanded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Expanded;" />
      <MemberSignature Language="F#" Value="member this.Expanded : System.Windows.RoutedEventHandler " Usage="member this.Expanded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Controls.Expander" /> 控件的内容窗口打开时发生，以便同时显示其标题和内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Expander.Expanded>当 <xref:System.Windows.Controls.Expander.IsExpanded%2A> 属性从更改为时发生此事件 `false` `true` 。  
  
<a name="routedEventInfo_Expanded"></a>   
## <a name="routed-event-information"></a>路由事件信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Expander.ExpandedEvent>|  
|路由策略|冒泡|  
|委托|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 下面的示例演示如何为事件指定事件处理程序 <xref:System.Windows.Controls.Expander.Expanded> 。  
  
 [!code-csharp[ExpanderSnips#Expanded](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml.cs#expanded)]
 [!code-vb[ExpanderSnips#Expanded](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpanderSnips/visualbasic/window1.xaml.vb#expanded)]
 [!code-xaml[ExpanderSnips#Expanded](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml#expanded)]  
  
 下面的示例演示如何定义事件处理程序。  
  
 [!code-csharp[ExpanderSnips#ExpandedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml.cs#expandedhandler)]
 [!code-vb[ExpanderSnips#ExpandedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpanderSnips/visualbasic/window1.xaml.vb#expandedhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Expander.Collapsed" />
      </Docs>
    </Member>
    <Member MemberName="ExpandedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ExpandedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ExpandedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Expander.ExpandedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ExpandedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Expander.ExpandedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="E:System.Windows.Controls.Expander.Expanded" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Expander.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool with get, set" Usage="System.Windows.Controls.Expander.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Expander" /> 内容窗口是否可见。</summary>
        <value>如果内容窗口是展开的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsExpanded"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Expander.IsExpandedProperty>|  
|元数据属性设置为`true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Expander.IsExpanded%2A> 属性。  
  
 [!code-csharp[ExpanderSnips#IsExpanded](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml.cs#isexpanded)]
 [!code-vb[ExpanderSnips#IsExpanded](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ExpanderSnips/visualbasic/window1.xaml.vb#isexpanded)]
 [!code-xaml[ExpanderSnips#IsExpanded](~/samples/snippets/csharp/VS_Snippets_Wpf/ExpanderSnips/CSharp/Window1.xaml#isexpanded)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Expander.IsExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsExpandedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsExpandedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Expander.IsExpandedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Expander.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="expander.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>每当应用程序代码或内部进程调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时，进行调用。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ApplyTemplate" />
      </Docs>
    </Member>
    <Member MemberName="OnCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnCollapsed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollapsed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Expander.OnCollapsed" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollapsed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollapsed();" />
      <MemberSignature Language="F#" Value="abstract member OnCollapsed : unit -&gt; unit&#xA;override this.OnCollapsed : unit -&gt; unit" Usage="expander.OnCollapsed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当 <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 属性从 <see langword="true" /> 更改为 <see langword="false" /> 时引发 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Expander.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="expander.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 控件的 <see cref="T:System.Windows.Controls.Expander" /> 实现。</summary>
        <returns>此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 控件的新 <see cref="T:System.Windows.Controls.Expander" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnExpanded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExpanded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Expander.OnExpanded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExpanded ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExpanded();" />
      <MemberSignature Language="F#" Value="abstract member OnExpanded : unit -&gt; unit&#xA;override this.OnExpanded : unit -&gt; unit" Usage="expander.OnExpanded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当 <see cref="E:System.Windows.Controls.Expander.Expanded" /> 属性从 <see langword="false" /> 更改为 <see langword="true" /> 时引发 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
