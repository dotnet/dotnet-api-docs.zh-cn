<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="461a047423d59c3fa59362b18a82db6244fe5c46" /><Meta Name="ms.sourcegitcommit" Value="a40c6a601bd45917c35e255d860c96b8b3853a79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/05/2021" /><Meta Name="ms.locfileid" Value="97890603" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.Text)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.Text)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Text")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f231e-101">表示一个控件，该控件可用于显示或编辑无格式文本。</span><span class="sxs-lookup"><span data-stu-id="f231e-101">Represents a control that can be used to display or edit unformatted text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-102"><xref:System.Windows.Controls.TextBox>控件在其属性中只能包含无格式文本 <xref:System.Windows.Controls.TextBox.Text%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="f231e-103">下图显示了一个示例 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="f231e-104">![TextBox 屏幕快照](~/add/media/ss-ctl-textbox.gif "TextBox 屏幕快照")</span><span class="sxs-lookup"><span data-stu-id="f231e-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="f231e-105">TextBox 示例</span><span class="sxs-lookup"><span data-stu-id="f231e-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="f231e-106"><xref:System.Windows.Controls.TextBox> 是由多个封装的组件组成的复合控件。</span><span class="sxs-lookup"><span data-stu-id="f231e-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="f231e-107">因此，某些事件不会向上冒泡到包含控件，因为它们由封装的子元素处理。</span><span class="sxs-lookup"><span data-stu-id="f231e-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="f231e-108">因此，应用程序开发人员应侦听由前缀 "Preview" ) 表示 (事件的隧道版本。</span><span class="sxs-lookup"><span data-stu-id="f231e-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="f231e-109"><xref:System.Windows.Controls.TextBox> 仅支持未格式化文本。</span><span class="sxs-lookup"><span data-stu-id="f231e-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="f231e-110">有关需要支持更丰富内容的应用程序，请参阅 <xref:System.Windows.Controls.RichTextBox> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="f231e-111">对于需要接受密码或其他敏感输入的应用程序，请参阅 <xref:System.Windows.Controls.PasswordBox> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="f231e-112"><xref:System.Windows.Controls.TextBox>使用和属性在中水平和垂直对齐文本 <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="f231e-113"><xref:System.Windows.Controls.TextBox>通过和属性在页面布局中对齐 <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="f231e-114">隐藏周围边框的最佳方式 <xref:System.Windows.Controls.TextBox> 是将 <xref:System.Windows.Controls.Control.BorderThickness%2A> 的属性设置 <xref:System.Windows.Controls.TextBox> 为 `0` 。</span><span class="sxs-lookup"><span data-stu-id="f231e-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f231e-115"><xref:System.Windows.Controls.TextBox> 为冒泡和事件提供内置处理  <xref:System.Windows.UIElement.MouseUp> <xref:System.Windows.UIElement.MouseDown> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="f231e-116">因此， <xref:System.Windows.UIElement.MouseUp> <xref:System.Windows.UIElement.MouseDown> 不会调用在中侦听或事件的自定义事件处理程序 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="f231e-117">如果需要响应这些事件，请改为侦听隧道 <xref:System.Windows.UIElement.PreviewMouseUp> 和 <xref:System.Windows.UIElement.PreviewMouseDown> 事件，或使用参数注册处理程序 <xref:System.Windows.EventSetter.HandledEventsToo%2A> (此后一选项仅可通过代码) 使用。</span><span class="sxs-lookup"><span data-stu-id="f231e-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="f231e-118">不要将事件标记为 "已处理"，除非你有意要禁用 <xref:System.Windows.Controls.TextBox> 这些事件的本机处理，并注意这会对控件的产生显著影响 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="f231e-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="f231e-119">默认情况下，滚动条在上不可见 <xref:System.Windows.Controls.TextBox> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="f231e-120">若要使滚动条可见，请将 <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> 和 <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> 属性设置为 <xref:System.Windows.Controls.ScrollBarVisibility.Visible> 或 <xref:System.Windows.Controls.ScrollBarVisibility.Auto> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="f231e-121">通常， <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> 事件应该用于在或更改中的文本时进行检测， <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.RichTextBox> 而不是像预期那样进行检测 <xref:System.Windows.UIElement.KeyDown> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="f231e-122">有关示例，请参阅 [如何：在文本框中的文本发生更改时进行检测](/dotnet/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed) 。</span><span class="sxs-lookup"><span data-stu-id="f231e-122">See [How to: Detect When Text in a TextBox Has Changed](/dotnet/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="f231e-123">自定义 TextBox 控件</span><span class="sxs-lookup"><span data-stu-id="f231e-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="f231e-124">若要对多个控件应用相同的属性设置 <xref:System.Windows.Controls.TextBox> ，请使用 <xref:System.Windows.FrameworkElement.Style%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="f231e-125">您可以修改默认值 <xref:System.Windows.Controls.ControlTemplate> ，为控件指定独特的外观。</span><span class="sxs-lookup"><span data-stu-id="f231e-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="f231e-126">有关创建的详细信息 <xref:System.Windows.Controls.ControlTemplate> ，请参阅 [通过创建 System.windows.controls.controltemplate> 自定义现有控件的外观](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control)。</span><span class="sxs-lookup"><span data-stu-id="f231e-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span>  <span data-ttu-id="f231e-127">若要查看特定于的部分和状态 <xref:System.Windows.Controls.TextBox> ，请参阅 [TextBox 样式和模板](/dotnet/framework/wpf/controls/textbox-styles-and-templates)。</span><span class="sxs-lookup"><span data-stu-id="f231e-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](/dotnet/framework/wpf/controls/textbox-styles-and-templates).</span></span>  
  
 <span data-ttu-id="f231e-128">此控件的依赖属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="f231e-128">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="f231e-129">如果按默认样式设置属性，则当控件出现在应用程序中时，属性可能会更改为默认值。</span><span class="sxs-lookup"><span data-stu-id="f231e-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="f231e-130">默认样式取决于应用程序运行时使用的桌面主题。</span><span class="sxs-lookup"><span data-stu-id="f231e-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="f231e-131">有关详细信息，请参阅 [默认的 WPF 主题](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="f231e-131">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="f231e-132">此示例演示如何使用 Text 属性设置 TextBox 控件的初始文本内容。</span><span class="sxs-lookup"><span data-stu-id="f231e-132">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f231e-133">尽管 Extensible Application Markup Language (XAML) 版本的示例可以在 \<TextBox.Text> 每个按钮的 TextBox 内容的文本周围使用标记，但这并不是必需的，因为 TextBox 将 ContentPropertyAttribute 属性应用于 text 属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-133">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
    <related type="ExternalDocumentation" href="/dotnet/framework/wpf/controls/textbox-overview"><span data-ttu-id="f231e-134">TextBox 概述</span><span class="sxs-lookup"><span data-stu-id="f231e-134">TextBox Overview</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="f231e-135">WPF 控件库示例</span><span class="sxs-lookup"><span data-stu-id="f231e-135">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f231e-136">初始化 <see cref="T:System.Windows.Controls.TextBox" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f231e-136">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CaretIndex : int with get, set" Usage="System.Windows.Controls.TextBox.CaretIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-137">获取或设置插入符号的插入位置索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-137">Gets or sets the insertion position index of the caret.</span></span></summary>
        <value><span data-ttu-id="f231e-138">插入符号的从零开始的插入位置索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-138">The zero-based insertion position index of the caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-139">获取此属性将返回插入符号的当前插入位置索引 (参阅 <xref:System.Windows.Documents.TextPointer> 以获取有关 "插入位置" ) 的术语的信息。</span><span class="sxs-lookup"><span data-stu-id="f231e-139">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="f231e-140">设置此属性会将插入符号移动到指定的插入位置。</span><span class="sxs-lookup"><span data-stu-id="f231e-140">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="f231e-141">插入位置介于字符或元素标记之间。</span><span class="sxs-lookup"><span data-stu-id="f231e-141">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Controls.CharacterCasing with get, set" Usage="System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-142">获取或设置向文本框中手动输入字符时如何确定字符的大小写格式。</span><span class="sxs-lookup"><span data-stu-id="f231e-142">Gets or sets how characters are cased when they are manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-143"><see cref="T:System.Windows.Controls.CharacterCasing" /> 值之一，指定如何确定手动输入字符的大小写格式。</span><span class="sxs-lookup"><span data-stu-id="f231e-143">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span></span> <span data-ttu-id="f231e-144">默认值为 <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-144">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-145">此属性不会影响以编程方式添加的字符。</span><span class="sxs-lookup"><span data-stu-id="f231e-145">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-146">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-146">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-147">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-147">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="f231e-148">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-148">Metadata properties set to `true`</span></span>|<span data-ttu-id="f231e-149">无</span><span class="sxs-lookup"><span data-stu-id="f231e-149">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-150">下面的示例演示如何使用 <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> 属性在文本框中将所有手动输入的字符转换为大写。</span><span class="sxs-lookup"><span data-stu-id="f231e-150">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterCasingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-151">标识 <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-151">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBox.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f231e-152">清除文本框中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="f231e-152">Clears all the content from the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromLineIndex : int -&gt; int" Usage="textBox.GetCharacterIndexFromLineIndex lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="f231e-153">要为其检索初始字符索引的行的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-153">The zero-based index of the line to retrieve the initial character index for.</span></span></param>
        <summary><span data-ttu-id="f231e-154">返回指定行中第一个字符的从零开始的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-154">Returns the zero-based character index for the first character in the specified line.</span></span></summary>
        <returns><span data-ttu-id="f231e-155">指定行中第一个字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-155">The zero-based index for the first character in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromPoint (point As Point, snapToText As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromPoint : System.Windows.Point * bool -&gt; int" Usage="textBox.GetCharacterIndexFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f231e-156"><see cref="T:System.Windows.Controls.TextBox" /> 坐标空间中一个要为其返回索引的点。</span><span class="sxs-lookup"><span data-stu-id="f231e-156">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span></span></param>
        <param name="snapToText"><span data-ttu-id="f231e-157">如果指定点处没有字符，则 <see langword="true" /> 将返回最近的索引，<see langword="false" /> 将返回 -1。</span><span class="sxs-lookup"><span data-stu-id="f231e-157"><see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return -1 if there is no character at the specified point.</span></span></param>
        <summary><span data-ttu-id="f231e-158">返回最接近指定点的字符的索引，该索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="f231e-158">Returns the zero-based index of the character that is closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="f231e-159">最接近指定点的字符的索引；如果找不到有效的索引，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="f231e-159">The index of the character that is closest to the specified point, or -1 if no valid index can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetFirstVisibleLineIndex : unit -&gt; int" Usage="textBox.GetFirstVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f231e-160">返回文本框中当前可见的第一行的行索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-160">Returns the line index for the first line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="f231e-161">文本框中第一个可见行的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-161">The zero-based index for the first visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetLastVisibleLineIndex : unit -&gt; int" Usage="textBox.GetLastVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f231e-162">返回文本框中当前可见的最后一行的行索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-162">Returns the line index for the last line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="f231e-163">文本框中最后一个可见行的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-163">The zero-based index for the last visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineIndexFromCharacterIndex : int -&gt; int" Usage="textBox.GetLineIndexFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-164">要为其检索关联的行索引的从零开始的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-164">The zero-based character index for which to retrieve the associated line index.</span></span></param>
        <summary><span data-ttu-id="f231e-165">返回包含指定字符索引的行的从零开始的行索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-165">Returns the zero-based line index for the line that contains the specified character index.</span></span></summary>
        <returns><span data-ttu-id="f231e-166">包含指定字符索引的行的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-166">The zero-based index for the line that contains the specified character index.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineLength : int -&gt; int" Usage="textBox.GetLineLength lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="f231e-167">要为其返回字符计数的从零开始的行索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-167">The zero-based line index for which to return a character count.</span></span></param>
        <summary><span data-ttu-id="f231e-168">返回指定行中的字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-168">Returns the number of characters in the specified line.</span></span></summary>
        <returns><span data-ttu-id="f231e-169">指定行中的字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-169">The number of characters in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineText : int -&gt; string" Usage="textBox.GetLineText lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="f231e-170">要为其检索当前显示的文本的行的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-170">The zero-based line index for which to retrieve the currently displayed text.</span></span></param>
        <summary><span data-ttu-id="f231e-171">返回当前显示在指定的行的文本。</span><span class="sxs-lookup"><span data-stu-id="f231e-171">Returns the text that is currently displayed on the specified line.</span></span></summary>
        <returns><span data-ttu-id="f231e-172">一个字符串，包含当前在指定行上显示的文本的副本。</span><span class="sxs-lookup"><span data-stu-id="f231e-172">A string containing a copy of the text currently visible on the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorCharacterIndex : int * System.Windows.Documents.LogicalDirection -&gt; int" Usage="textBox.GetNextSpellingErrorCharacterIndex (charIndex, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-173">从零开始的字符索引，指示要从其开始搜索下一个拼写错误的位置。</span><span class="sxs-lookup"><span data-stu-id="f231e-173">The zero-based character index indicating a position from which to search for the next spelling error.</span></span></param>
        <param name="direction"><span data-ttu-id="f231e-174"><see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，该值指定从指定 <paramref name="charIndex" /> 开始搜索下一个拼写错误的方向。</span><span class="sxs-lookup"><span data-stu-id="f231e-174">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <paramref name="charIndex" />.</span></span></param>
        <summary><span data-ttu-id="f231e-175">返回文本框的内容中下一个拼写错误的起始字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-175">Returns the beginning character index for the next spelling error in the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="f231e-176">文本框的内容中下一个拼写错误的起始位置的字符索引；或者，如果不存在下一个拼写错误，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="f231e-176">The character index for the beginning of the next spelling error in the contents of the text box, or -1 if no next spelling error exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f231e-177">返回指定索引处字符的某个边缘的边框。</span><span class="sxs-lookup"><span data-stu-id="f231e-177">Returns the rectangle for an edge of the character at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-178">要检索其边框的字符的字符索引，该索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="f231e-178">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <summary><span data-ttu-id="f231e-179">返回指定索引处字符的前边缘的边框。</span><span class="sxs-lookup"><span data-stu-id="f231e-179">Returns the rectangle for the leading edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="f231e-180">指定字符索引处字符的前边缘的边框；如果无法确定边框，则为 <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-180">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-181">因为此方法返回一个表示字符边缘的矩形，所以矩形的宽度为0。</span><span class="sxs-lookup"><span data-stu-id="f231e-181">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int * bool -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex (charIndex, trailingEdge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-182">要检索其边框的字符的字符索引，该索引从零开始。</span><span class="sxs-lookup"><span data-stu-id="f231e-182">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <param name="trailingEdge"><span data-ttu-id="f231e-183">如果获取字符的后边缘，则为 <see langword="true" />；如果获取字符的前边缘，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-183"><see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span></span></param>
        <summary><span data-ttu-id="f231e-184">返回指定索引处字符的前边缘或后边缘的边框。</span><span class="sxs-lookup"><span data-stu-id="f231e-184">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="f231e-185">指定字符索引处字符某个边缘的边框；如果无法确定边框，则为 <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-185">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-186">因为此方法返回一个表示字符边缘的矩形，所以矩形的宽度为0。</span><span class="sxs-lookup"><span data-stu-id="f231e-186">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f231e-187"><paramref name="charIndex" /> 为负，或大于内容的长度。</span><span class="sxs-lookup"><span data-stu-id="f231e-187"><paramref name="charIndex" /> is negative or is greater than the length of the content.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : int -&gt; System.Windows.Controls.SpellingError" Usage="textBox.GetSpellingError charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-188">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-188">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="f231e-189">返回与指定字符索引处的任何拼写错误关联的 <see cref="T:System.Windows.Controls.SpellingError" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f231e-189">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="f231e-190">一个 <see cref="T:System.Windows.Controls.SpellingError" /> 对象，包含在 <paramref name="charIndex" /> 指定的字符处所发现的拼写错误的详细信息，或如果在指定字符处没有拼写错误，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-190">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorLength : int -&gt; int" Usage="textBox.GetSpellingErrorLength charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-191">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-191">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="f231e-192">返回包括指定字符的任何拼写错误的长度。</span><span class="sxs-lookup"><span data-stu-id="f231e-192">Returns the length of any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="f231e-193">包括由 charIndex 所指定字符的任何拼写错误的长度；或者，如果指定字符不属于某个拼写错误，则为 0。</span><span class="sxs-lookup"><span data-stu-id="f231e-193">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorStart : int -&gt; int" Usage="textBox.GetSpellingErrorStart charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="f231e-194">内容中要检查是否存在拼写错误的位置的从零开始的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-194">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="f231e-195">返回包括指定字符的任何拼写错误的起始字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-195">Returns the beginning character index for any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="f231e-196">包括由 <paramref name="charIndex" /> 所指定字符的任何拼写错误的起始字符索引；或者，如果指定字符不是某个拼写错误的一部分，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="f231e-196">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or -1 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="System.Windows.Controls.TextBox.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-197">获取文本框中的总行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-197">Gets the total number of lines in the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-198">文本框中的总行数; 如果布局信息不可用，则为-1。</span><span class="sxs-lookup"><span data-stu-id="f231e-198">The total number of lines in the text box, or -1 if layout information is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-199">如果启用了文本换行，则更改文本框的宽度可能会更改此值。</span><span class="sxs-lookup"><span data-stu-id="f231e-199">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="f231e-200">返回的值是文本框中的总行数，而不考虑当前显示的行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-200">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-201">获取 <see cref="T:System.Windows.Controls.TextBox" /> 的逻辑子元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="f231e-201">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="f231e-202"><see cref="T:System.Windows.Controls.TextBox" /> 的逻辑子元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="f231e-202">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-203"><xref:System.Windows.Controls.TextBox.LogicalChildren%2A>属性为包含等于属性的的集合返回一个枚举数 <xref:System.String> <xref:System.Windows.Controls.TextBox.Text%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-203">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-204">获取或设置可在文本框中手动输入的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-204">Gets or sets the maximum number of characters that can be manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-205">可在文本框中手动输入的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-205">The maximum number of characters that can be manually entered into the text box.</span></span> <span data-ttu-id="f231e-206">默认值为 0，指示没有限制。</span><span class="sxs-lookup"><span data-stu-id="f231e-206">The default is 0, which indicates no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-207">您可以使用此属性来限制控件中输入的文本长度，以获取邮政编码和电话号码之类的值。</span><span class="sxs-lookup"><span data-stu-id="f231e-207">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="f231e-208">当数据存储在数据库中时，还可以使用此属性来限制输入的文本长度，以便在控件中输入的文本不会超过数据库中对应字段的最大长度。</span><span class="sxs-lookup"><span data-stu-id="f231e-208">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="f231e-209">此属性不会影响以编程方式添加的字符。</span><span class="sxs-lookup"><span data-stu-id="f231e-209">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="f231e-210">当此属性设置为0时，可在控件中输入的文本的最大长度仅受可用内存的限制。</span><span class="sxs-lookup"><span data-stu-id="f231e-210">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-211">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-212">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-212">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="f231e-213">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-213">Metadata properties set to `true`</span></span>|<span data-ttu-id="f231e-214">无</span><span class="sxs-lookup"><span data-stu-id="f231e-214">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-215">下面的示例演示如何 <xref:System.Windows.Controls.TextBox> 使用 <xref:System.Windows.Controls.TextBox.MaxLength%2A> 500 个字符创建一个。</span><span class="sxs-lookup"><span data-stu-id="f231e-215">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-216">标识 <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-216">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(2147483647)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(2147483647)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-217">获取或设置最大可见行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-217">Gets or sets the maximum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="f231e-218">最大可见行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-218">The maximum number of visible lines.</span></span> <span data-ttu-id="f231e-219">默认值为 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-219">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-220">获取此属性将返回的当前值 <xref:System.Windows.Controls.TextBox.MaxLines%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-220">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="f231e-221">设置此属性将导致文本框在可见行数超出指定的限制时调整大小 <xref:System.Windows.Controls.TextBox.MaxLines%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-221">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="f231e-222">此属性仅适用于可见行，不约束实际的行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-222">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="f231e-223">根据其配置，文本框可能包含可通过滚动访问的其他不可见的行。</span><span class="sxs-lookup"><span data-stu-id="f231e-223">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="f231e-224">如果在 <xref:System.Windows.FrameworkElement.Height%2A> 上显式设置了属性 <xref:System.Windows.Controls.TextBox> ，则 <xref:System.Windows.Controls.TextBox.MaxLines%2A> 和 <xref:System.Windows.Controls.TextBox.MinLines%2A> 属性值将被忽略。</span><span class="sxs-lookup"><span data-stu-id="f231e-224">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-225">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-225">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-226">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-226">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="f231e-227">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-227">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-228">下面的示例演示如何创建 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MaxLines%2A> 值为5的。</span><span class="sxs-lookup"><span data-stu-id="f231e-228">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="f231e-229"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 小于 <see cref="P:System.Windows.Controls.TextBox.MinLines" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-229"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-230">标识 <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-230">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="textBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="f231e-231">一个 <see cref="T:System.Windows.Size" /> 结构，该结构指定针对文本框大小的约束。</span><span class="sxs-lookup"><span data-stu-id="f231e-231">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span></span></param>
        <summary><span data-ttu-id="f231e-232">按其内容设置文本框的大小。</span><span class="sxs-lookup"><span data-stu-id="f231e-232">Sizes the text box to its content.</span></span></summary>
        <returns><span data-ttu-id="f231e-233">一个 <see cref="T:System.Windows.Size" /> 结构，指示文本框的新大小。</span><span class="sxs-lookup"><span data-stu-id="f231e-233">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-234">重写此方法以实现自定义大小调整行为。</span><span class="sxs-lookup"><span data-stu-id="f231e-234">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Windows.Controls.TextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-235">获取或设置最小可见行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-235">Gets or sets the minimum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="f231e-236">最小可见行数。</span><span class="sxs-lookup"><span data-stu-id="f231e-236">The minimum number of visible lines.</span></span> <span data-ttu-id="f231e-237">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="f231e-237">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-238">获取此属性将返回的当前值 <xref:System.Windows.Controls.TextBox.MinLines%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-238">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="f231e-239">设置此属性将导致文本框在可见行数小于指定的值时调整大小 <xref:System.Windows.Controls.TextBox.MinLines%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-239">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="f231e-240">如果在 <xref:System.Windows.FrameworkElement.Height%2A> 上显式设置了属性 <xref:System.Windows.Controls.TextBox> ，则 <xref:System.Windows.Controls.TextBox.MaxLines%2A> 和 <xref:System.Windows.Controls.TextBox.MinLines%2A> 属性值将被忽略。</span><span class="sxs-lookup"><span data-stu-id="f231e-240">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-241">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-242">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-242">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="f231e-243">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-243">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-244">下面的示例演示如何创建值为 <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MinLines%2A> 1 的。</span><span class="sxs-lookup"><span data-stu-id="f231e-244">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="f231e-245"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> 大于 <see cref="P:System.Windows.Controls.TextBox.MaxLines" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-245"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-246">标识 <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-246">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="textBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f231e-247">为文本框创建并返回一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f231e-247">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></summary>
        <returns><span data-ttu-id="f231e-248">文本框的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f231e-248">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-249">此方法重写 <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f231e-249">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="textBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="f231e-250">关联事件的自变量。</span><span class="sxs-lookup"><span data-stu-id="f231e-250">Arguments for the associated event.</span></span></param>
        <summary><span data-ttu-id="f231e-251">当存在于元素上的一个或多个依赖属性的有效值更改时被调用。</span><span class="sxs-lookup"><span data-stu-id="f231e-251">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-252">此方法重写 <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f231e-252">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.ScrollToLine : int -&gt; unit" Usage="textBox.ScrollToLine lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="f231e-253">要滚动到视图中的行的从零开始的行索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-253">The zero-based line index of the line to scroll into view.</span></span></param>
        <summary><span data-ttu-id="f231e-254">将指定行索引处的行滚动到视图中。</span><span class="sxs-lookup"><span data-stu-id="f231e-254">Scrolls the line at the specified line index into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-255">此方法导致文本框滚动到最小数量，使指定的行进入完整视图。</span><span class="sxs-lookup"><span data-stu-id="f231e-255">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Select : int * int -&gt; unit" Usage="textBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="f231e-256">所做选择中第一个字符的从零开始的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-256">The zero-based character index of the first character in the selection.</span></span></param>
        <param name="length"><span data-ttu-id="f231e-257">选定内容的长度（以字符为单位）。</span><span class="sxs-lookup"><span data-stu-id="f231e-257">The length of the selection, in characters.</span></span></param>
        <summary><span data-ttu-id="f231e-258">选择文本框中的文本范围。</span><span class="sxs-lookup"><span data-stu-id="f231e-258">Selects a range of text in the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f231e-259"><paramref name="start" /> 或 <paramref name="length" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="f231e-259"><paramref name="start" /> or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Controls.TextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-260">获取或设置文本框中当前选择的内容。</span><span class="sxs-lookup"><span data-stu-id="f231e-260">Gets or sets the content of the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-261">文本框中当前选定的文本。</span><span class="sxs-lookup"><span data-stu-id="f231e-261">The currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-262">获取此属性将返回当前选定文本的字符串副本。</span><span class="sxs-lookup"><span data-stu-id="f231e-262">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="f231e-263">设置此属性会将当前所选内容替换为指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="f231e-263">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-264">获取或设置一个值，该值指示文本框中当前选择的字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-264">Gets or sets a value indicating the number of characters in the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-265">文本框中当前选择的字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-265">The number of characters in the current selection in the text box.</span></span> <span data-ttu-id="f231e-266">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="f231e-266">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-267">获取此属性将返回当前选定内容中的字符数。</span><span class="sxs-lookup"><span data-stu-id="f231e-267">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="f231e-268">设置此属性会将当前所选内容的长度调整为指定的值，并保持选择范围的开头。</span><span class="sxs-lookup"><span data-stu-id="f231e-268">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="f231e-269">通常，当指定的选择长度导致所选内容在无效位置结束时 (例如，在回车符和换行字符之间，或在标记) 中，选择长度会自动调整，以便所生成的选择在有效位置开始和结束。</span><span class="sxs-lookup"><span data-stu-id="f231e-269">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f231e-270"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> 设置为一个负值。</span><span class="sxs-lookup"><span data-stu-id="f231e-270"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(0)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-271">获取或设置当前选择的起始位置的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-271">Gets or sets a character index for the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="f231e-272">当前选择的起始位置的字符索引。</span><span class="sxs-lookup"><span data-stu-id="f231e-272">The character index for the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-273">如果指定的选择长度将导致选定内容在回车符和换行字符之间结束，则选择长度会自动增加1，使所得到的选择跨越整个行尾标记。</span><span class="sxs-lookup"><span data-stu-id="f231e-273">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f231e-274"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> 设置为一个负值。</span><span class="sxs-lookup"><span data-stu-id="f231e-274"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeText : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="textBox.ShouldSerializeText manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="f231e-275">此对象的序列化服务管理器对象。</span><span class="sxs-lookup"><span data-stu-id="f231e-275">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="f231e-276">返回一个值，该值指示在序列化 <see cref="P:System.Windows.Controls.TextBox.Text" /> 对象期间，是否应对 <see cref="T:System.Windows.Controls.TextBox" /> 属性的有效值进行序列化。</span><span class="sxs-lookup"><span data-stu-id="f231e-276">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span></span></summary>
        <returns><span data-ttu-id="f231e-277">如果 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性应被序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-277"><see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="f231e-278"><paramref name="manager" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-278"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="textBox.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f231e-279">要作为子级添加的对象。</span><span class="sxs-lookup"><span data-stu-id="f231e-279">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="f231e-280">在所有情况下均引发异常。</span><span class="sxs-lookup"><span data-stu-id="f231e-280">Throws an exception in all cases.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-281"><xref:System.Windows.Controls.TextBox> 仅通过接口接受文本 <xref:System.Windows.Markup.IAddChild> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-281"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f231e-282"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-282"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f231e-283">在所有其他情况下。</span><span class="sxs-lookup"><span data-stu-id="f231e-283">In all other cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="textBox.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f231e-284">要添加到该对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="f231e-284">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="f231e-285">将节点的文本内容添加到对象。</span><span class="sxs-lookup"><span data-stu-id="f231e-285">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-286">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="f231e-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f231e-287">它只能在 <xref:System.Windows.Controls.TextBox> 实例被强制转换为 <xref:System.Windows.Markup.IAddChild> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f231e-287">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.Text)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.Text)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-288">获取或设置文本框的文本内容。</span><span class="sxs-lookup"><span data-stu-id="f231e-288">Gets or sets the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-289">包含此文本框的文本内容的字符串。</span><span class="sxs-lookup"><span data-stu-id="f231e-289">A string containing the text contents of the text box.</span></span> <span data-ttu-id="f231e-290">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="f231e-290">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-291">获取此属性将返回文本框内容的字符串副本。</span><span class="sxs-lookup"><span data-stu-id="f231e-291">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="f231e-292">设置此属性会将文本框的内容替换为指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="f231e-292">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="f231e-293">此属性不支持动画。</span><span class="sxs-lookup"><span data-stu-id="f231e-293">This property does not support animation.</span></span>  
  
 <span data-ttu-id="f231e-294">在数据绑定方案中使用时，此属性使用的默认更新行为 <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-294">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="f231e-295">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="f231e-295">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-296">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-296">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-297">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-297">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="f231e-298">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-298">Metadata properties set to `true`</span></span>|<span data-ttu-id="f231e-299"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="f231e-299"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Controls.TextBox.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-300">获取或设置文本框内容的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="f231e-300">Gets or sets the horizontal alignment of the contents of the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-301"><see cref="T:System.Windows.TextAlignment" /> 值之一，该值指定文本框内容的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="f231e-301">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span></span> <span data-ttu-id="f231e-302">默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-302">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-303">获取此属性将返回当前对齐方式。</span><span class="sxs-lookup"><span data-stu-id="f231e-303">Getting this property returns the current alignment.</span></span> <span data-ttu-id="f231e-304">设置此属性将调整文本框的内容以反映指定的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="f231e-304">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="f231e-305">此属性的优先级高于 <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-305">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-306">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-306">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-307">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-307">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="f231e-308">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-308">Metadata properties set to `true`</span></span>|<span data-ttu-id="f231e-309"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="f231e-309"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-310">下面的示例演示如何 <xref:System.Windows.Controls.TextBox> 使用的来创建 <xref:System.Windows.Controls.TextBox.TextAlignment%2A> <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f231e-310">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-311">标识 <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-311">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextDecorations : System.Windows.TextDecorationCollection with get, set" Usage="System.Windows.Controls.TextBox.TextDecorations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-312">获取要应用到文本框的文本修饰。</span><span class="sxs-lookup"><span data-stu-id="f231e-312">Gets the text decorations to apply to the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-313">一个 <see cref="T:System.Windows.TextDecorationCollection" /> 集合，它包含应用于文本框的文本修饰。</span><span class="sxs-lookup"><span data-stu-id="f231e-313">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span></span> <span data-ttu-id="f231e-314">默认值为 <see langword="null" />（不应用任何文本修饰）。</span><span class="sxs-lookup"><span data-stu-id="f231e-314">The default is <see langword="null" /> (no text decorations applied).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-315"><xref:System.Windows.TextDecoration>对象是可添加到文本的视觉对象装饰。</span><span class="sxs-lookup"><span data-stu-id="f231e-315">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="f231e-316">有四种类型的文本修饰：下划线、基线、删除线和上划线。</span><span class="sxs-lookup"><span data-stu-id="f231e-316">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="f231e-317">有关文本修饰的详细信息，请参阅 [如何：创建文本修饰](/dotnet/framework/wpf/advanced/how-to-create-a-text-decoration)。</span><span class="sxs-lookup"><span data-stu-id="f231e-317">For more information about text decorations, see [How to: Create a Text Decoration](/dotnet/framework/wpf/advanced/how-to-create-a-text-decoration).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-318">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-318">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-319">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-319">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="f231e-320">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-320">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-321">下面的示例演示如何 <xref:System.Windows.Documents.Inline.TextDecorations%2A> 使用 <xref:System.Windows.Documents.Run> 作为示例元素来设置特性。</span><span class="sxs-lookup"><span data-stu-id="f231e-321">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="f231e-322">下图显示了此示例的呈现效果。</span><span class="sxs-lookup"><span data-stu-id="f231e-322">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="f231e-323">![屏幕快照：具有默认删除线效果的文本](~/add/media/inline-textdec-strike.png "屏幕快照：具有默认删除线效果的文本")</span><span class="sxs-lookup"><span data-stu-id="f231e-323">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="f231e-324">下图显示了 <xref:System.Windows.TextDecorations.OverLine%2A> 、 <xref:System.Windows.TextDecorations.Baseline%2A> 和 <xref:System.Windows.TextDecorations.Underline%2A> 修饰的分别呈现方式。</span><span class="sxs-lookup"><span data-stu-id="f231e-324">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="f231e-325">![屏幕快照：上划线 TextDecorator](~/add/media/inline-textdec-over.png "屏幕快照：上划线 TextDecorator")</span><span class="sxs-lookup"><span data-stu-id="f231e-325">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="f231e-326">![屏幕快照：文本上的默认基线效果](~/add/media/inline-textdec-base.png "屏幕快照：文本上的默认基线效果")</span><span class="sxs-lookup"><span data-stu-id="f231e-326">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="f231e-327">![屏幕快照：具有默认下划线效果的文本](~/add/media/inline-textdec-under.png "屏幕快照：具有默认下划线效果的文本")</span><span class="sxs-lookup"><span data-stu-id="f231e-327">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="f231e-328">下面的示例演示如何以 <xref:System.Windows.Documents.Inline.TextDecorations%2A> 编程方式设置属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-328">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextDecorationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-329">标识 <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-329">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-330"><xref:System.Windows.Controls.TextBox.TextDecorations%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="f231e-330">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-331">标识 <see cref="P:System.Windows.Controls.TextBox.Text" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-331">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapping : System.Windows.TextWrapping with get, set" Usage="System.Windows.Controls.TextBox.TextWrapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-332">获取或设置文本框中文本的换行方式。</span><span class="sxs-lookup"><span data-stu-id="f231e-332">Gets or sets how the text box should wrap text.</span></span></summary>
        <value><span data-ttu-id="f231e-333">指定文本框中文本换行方式的其中一个 <see cref="T:System.Windows.TextWrapping" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f231e-333">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span></span> <span data-ttu-id="f231e-334">默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-334">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-335">如果将 <xref:System.Windows.Controls.TextBox.TextWrapping%2A> 属性设置为 <xref:System.Windows.TextWrapping.Wrap> ，则在到达控件边缘时将输入的文本换行到新行 <xref:System.Windows.Controls.TextBox> ，如有必要，将自动扩展控件的高度 <xref:System.Windows.Controls.TextBox> 以包含新行的空间。</span><span class="sxs-lookup"><span data-stu-id="f231e-335">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f231e-336">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f231e-336">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f231e-337">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f231e-337">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="f231e-338">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f231e-338">Metadata properties set to `true`</span></span>|<span data-ttu-id="f231e-339"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="f231e-339"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f231e-340">下面的示例演示如何设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f231e-340">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextWrappingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-341">标识 <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-341">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-342"><xref:System.Windows.Controls.TextBox.TextWrapping%2A> 依赖项属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="f231e-342">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Controls.TextBox.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f231e-343">获取文本框的文本内容的当前有效版式变体。</span><span class="sxs-lookup"><span data-stu-id="f231e-343">Gets the currently effective typography variations for the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="f231e-344">一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。</span><span class="sxs-lookup"><span data-stu-id="f231e-344">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span></span> <span data-ttu-id="f231e-345">有关默认版式值的列表，请参见 <see cref="T:System.Windows.Documents.Typography" />。</span><span class="sxs-lookup"><span data-stu-id="f231e-345">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f231e-346"><xref:System.Windows.Documents.FlowDocument.Typography%2A>属性仅适用于 [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] 字体。</span><span class="sxs-lookup"><span data-stu-id="f231e-346">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="f231e-347">版式变体对不支持变体的字体不起作用。</span><span class="sxs-lookup"><span data-stu-id="f231e-347">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="f231e-348">有关此主题的详细信息，请参阅 [WPF 中的版式](/dotnet/framework/wpf/advanced/typography-in-wpf)。</span><span class="sxs-lookup"><span data-stu-id="f231e-348">For more information about this topic, see [Typography in WPF](/dotnet/framework/wpf/advanced/typography-in-wpf).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f231e-349">下面的示例演示如何 <xref:System.Windows.Documents.TextElement.Typography%2A> 使用 <xref:System.Windows.Documents.Paragraph> 作为示例元素来设置特性。</span><span class="sxs-lookup"><span data-stu-id="f231e-349">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="f231e-350">下图显示了此示例的呈现效果。</span><span class="sxs-lookup"><span data-stu-id="f231e-350">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="f231e-351">![屏幕快照：改变版式的文本](~/add/media/textelement-typog.png "屏幕快照：改变版式的文本")</span><span class="sxs-lookup"><span data-stu-id="f231e-351">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="f231e-352">与此相反，下图显示了一个具有默认版式属性的类似示例的呈现效果。</span><span class="sxs-lookup"><span data-stu-id="f231e-352">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="f231e-353">![屏幕快照：改变版式的文本](~/add/media/textelement-typog-default.png "屏幕快照：改变版式的文本")</span><span class="sxs-lookup"><span data-stu-id="f231e-353">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="f231e-354">下面的示例演示如何以 <xref:System.Windows.Controls.TextBox.Typography%2A> 编程方式设置属性。</span><span class="sxs-lookup"><span data-stu-id="f231e-354">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
