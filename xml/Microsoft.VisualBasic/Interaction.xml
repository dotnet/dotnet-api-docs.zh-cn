<Type Name="Interaction" FullName="Microsoft.VisualBasic.Interaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="673702fc1dfa03cb06596d4ccc1057a7499a93e3" /><Meta Name="ms.sourcegitcommit" Value="afd93d6172540031bfd49f3aec5e061f1704f0c4" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/12/2020" /><Meta Name="ms.locfileid" Value="91952810" /></Metadata><TypeSignature Language="C#" Value="public sealed class Interaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Interaction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Interaction" />
  <TypeSignature Language="VB.NET" Value="Public Module Interaction" />
  <TypeSignature Language="C++ CLI" Value="public ref class Interaction sealed" />
  <TypeSignature Language="F#" Value="type Interaction = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.VisualBasic.CompilerServices.StandardModule]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.VisualBasic.CompilerServices.StandardModule&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5a42f-101"><see langword="Interaction" /> 模块包含用于与对象、应用程序和系统交互的过程。</span><span class="sxs-lookup"><span data-stu-id="5a42f-101">The <see langword="Interaction" /> module contains procedures used to interact with objects, applications, and systems.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-102">此模块支持运行其他程序、调用方法或属性、从计算机发出嘟嘟声的 Visual Basic 语言关键字和运行时库成员、提供命令行字符串、操作 COM 对象和控制对话框。</span><span class="sxs-lookup"><span data-stu-id="5a42f-102">This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</span></span>  
  
## Examples  
 <span data-ttu-id="5a42f-103">下面的示例使用 `Shell` 函数来运行用户指定的应用程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-103">The following example uses the `Shell` function to run an application specified by the user.</span></span> <span data-ttu-id="5a42f-104">指定 <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> 为第二个参数将以正常大小打开应用程序，并为其提供焦点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-104">Specifying <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> as the second argument opens the application in normal size and gives it the focus.</span></span>  
  
```vb  
Dim procID As Integer  
' Run calculator.  
procID = Shell("C:\Windows\system32\calc.exe", AppWinStyle.NormalFocus)  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/information-and-interaction-summary"><span data-ttu-id="5a42f-105">信息和交互摘要</span><span class="sxs-lookup"><span data-stu-id="5a42f-105">Information and Interaction Summary</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/"><span data-ttu-id="5a42f-106">关键字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-106">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="5a42f-107">Visual Basic Run-Time 库成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-107">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AppActivate">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5a42f-108">激活已经正在运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-108">Activates an application that is already running.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppActivate">
      <MemberSignature Language="C#" Value="public static void AppActivate (int ProcessId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AppActivate(int32 ProcessId) cil managed" FrameworkAlternate="net-5.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppActivate (ProcessId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AppActivate(int ProcessId);" />
      <MemberSignature Language="F#" Value="static member AppActivate : int -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.AppActivate ProcessId" />
      <MemberSignature Language="ILAsm" Value=".method public static void AppActivate(int32 ProcessId) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProcessId" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="ProcessId"><span data-ttu-id="5a42f-109"><see langword="Integer" />，指定分配给该进程的 Win32 进程 ID 号。</span><span class="sxs-lookup"><span data-stu-id="5a42f-109"><see langword="Integer" /> specifying the Win32 process ID number assigned to this process.</span></span> <span data-ttu-id="5a42f-110">可以使用 <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" /> 返回的 ID，前提是该 ID 不为零。</span><span class="sxs-lookup"><span data-stu-id="5a42f-110">You can use the ID returned by the <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, provided it is not zero.</span></span></param>
        <summary><span data-ttu-id="5a42f-111">激活已经正在运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-111">Activates an application that is already running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-112">使用将 `AppActivate` 应用程序的活动窗口集中在一起。</span><span class="sxs-lookup"><span data-stu-id="5a42f-112">You use `AppActivate` to bring an application's active window into focus.</span></span> <span data-ttu-id="5a42f-113">您可能没有活动窗口的句柄或引用，甚至知道哪个窗口在给定时刻处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="5a42f-113">You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</span></span> <span data-ttu-id="5a42f-114">在这种情况下，不能使用 <xref:System.Windows.Forms.Control.Focus%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-114">In such a case, you cannot use the <xref:System.Windows.Forms.Control.Focus%2A> method.</span></span>  
  
 <span data-ttu-id="5a42f-115">函数会将 `AppActivate` 焦点更改为命名应用程序或窗口，但不会影响它是最大化还是最小化。</span><span class="sxs-lookup"><span data-stu-id="5a42f-115">The `AppActivate` function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</span></span> <span data-ttu-id="5a42f-116">当用户执行某个操作来更改焦点或关闭窗口时，焦点将离开激活的应用程序窗口。</span><span class="sxs-lookup"><span data-stu-id="5a42f-116">Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</span></span> <span data-ttu-id="5a42f-117">您可以使用 `Shell` 函数启动应用程序并设置窗口样式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-117">You can use the `Shell` function to start an application and set the window style.</span></span>  
  
 <span data-ttu-id="5a42f-118">如果使用 `Title` 参数，则 `AppActivate` 使用不区分大小写的比较，否则需要与标题栏的内容完全匹配。</span><span class="sxs-lookup"><span data-stu-id="5a42f-118">If you use the `Title` parameter, `AppActivate` uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</span></span> <span data-ttu-id="5a42f-119">它首先查找顶级窗口，然后遍历子窗口。</span><span class="sxs-lookup"><span data-stu-id="5a42f-119">It first looks through the top-level windows and then through the child windows.</span></span> <span data-ttu-id="5a42f-120">如果找不到匹配项，它将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-120">If it cannot find a match, it throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="5a42f-121">只能将用于 `AppActivate` 拥有 windows 的进程使用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-121">You can use `AppActivate` only with processes that own windows.</span></span> <span data-ttu-id="5a42f-122">大多数控制台应用程序不拥有窗口，这意味着它们不会出现在搜索的进程列表中 `AppActivate` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-122">Most console applications do not own windows, which means that they do not appear in the list of processes that `AppActivate` searches.</span></span> <span data-ttu-id="5a42f-123">在控制台应用程序中运行时，系统会创建一个单独的进程来运行应用程序，并将输出返回到控制台进程。</span><span class="sxs-lookup"><span data-stu-id="5a42f-123">When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</span></span> <span data-ttu-id="5a42f-124">因此，当你请求当前进程 ID 时，将获取此单独进程的进程 ID，而不是控制台应用程序的进程 ID。</span><span class="sxs-lookup"><span data-stu-id="5a42f-124">Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</span></span>  
  
 <span data-ttu-id="5a42f-125">在运行时，该 `AppActivate` 函数会激活标题与匹配 `Title` 或与进程 ID 匹配的任何正在运行的应用程序 `ProcessId` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-125">At run time, the `AppActivate` function activates any running application with a title that matches `Title` or with a process ID that matches `ProcessId`.</span></span> <span data-ttu-id="5a42f-126">如果没有完全匹配项，则会激活其标题字符串以结尾的任何应用程序 `Title` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-126">If there is no exact match, it activates any application whose title string ends with `Title`.</span></span> <span data-ttu-id="5a42f-127">如果有多个名为的应用程序 `Title` ，该 `AppActivate` 函数将随意选择一个应用程序来激活。</span><span class="sxs-lookup"><span data-stu-id="5a42f-127">If there is more than one application named `Title`, the `AppActivate` function arbitrarily chooses one to activate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-128">`AppActivate`函数要求在 `UIPermission` <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 级别，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-128">The `AppActivate` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-129">有关更多信息，请参见<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="5a42f-129">For more information, see <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-130">此示例演示了 `AppActivate` 用于激活应用程序窗口的函数的各种用法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-130">This example illustrates various uses of the `AppActivate` function to activate an application window.</span></span> <span data-ttu-id="5a42f-131">如果记事本进程未运行，则该示例引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-131">If a Notepad process is not running, the example throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="5a42f-132">此 `Shell` 过程假定应用程序位于指定的路径中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-132">The `Shell` procedure assumes the applications are in the paths specified.</span></span>  
  
 [!code-vb[VbVbalrCatRef#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AppActivate">
      <MemberSignature Language="C#" Value="public static void AppActivate (string Title);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AppActivate(string Title) cil managed" FrameworkAlternate="net-5.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppActivate (Title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AppActivate(System::String ^ Title);" />
      <MemberSignature Language="F#" Value="static member AppActivate : string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.AppActivate Title" />
      <MemberSignature Language="ILAsm" Value=".method public static void AppActivate(string Title) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Title" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Title"><span data-ttu-id="5a42f-133"><see langword="String" /> 表达式，用于指定要激活的应用程序的标题栏中的标题。</span><span class="sxs-lookup"><span data-stu-id="5a42f-133"><see langword="String" /> expression specifying the title in the title bar of the application you want to activate.</span></span> <span data-ttu-id="5a42f-134">可以使用启动应用程序后分配给该应用程序的标题。</span><span class="sxs-lookup"><span data-stu-id="5a42f-134">You can use the title assigned to the application when it was launched.</span></span></param>
        <summary><span data-ttu-id="5a42f-135">激活已经正在运行的应用程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-135">Activates an application that is already running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-136">使用将 `AppActivate` 应用程序的活动窗口集中在一起。</span><span class="sxs-lookup"><span data-stu-id="5a42f-136">You use `AppActivate` to bring an application's active window into focus.</span></span> <span data-ttu-id="5a42f-137">您可能没有活动窗口的句柄或引用，甚至知道哪个窗口在给定时刻处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="5a42f-137">You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</span></span> <span data-ttu-id="5a42f-138">在这种情况下，不能使用 <xref:System.Windows.Forms.Control.Focus%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-138">In such a case, you cannot use the <xref:System.Windows.Forms.Control.Focus%2A> method.</span></span>  
  
 <span data-ttu-id="5a42f-139">函数会将 `AppActivate` 焦点更改为命名应用程序或窗口，但不会影响它是最大化还是最小化。</span><span class="sxs-lookup"><span data-stu-id="5a42f-139">The `AppActivate` function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</span></span> <span data-ttu-id="5a42f-140">当用户执行某个操作来更改焦点或关闭窗口时，焦点将离开激活的应用程序窗口。</span><span class="sxs-lookup"><span data-stu-id="5a42f-140">Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</span></span> <span data-ttu-id="5a42f-141">您可以使用 `Shell` 函数启动应用程序并设置窗口样式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-141">You can use the `Shell` function to start an application and set the window style.</span></span>  
  
 <span data-ttu-id="5a42f-142">如果使用 `Title` 参数，则 `AppActivate` 使用不区分大小写的比较，否则需要与标题栏的内容完全匹配。</span><span class="sxs-lookup"><span data-stu-id="5a42f-142">If you use the `Title` parameter, `AppActivate` uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</span></span> <span data-ttu-id="5a42f-143">它首先查找顶级窗口，然后遍历子窗口。</span><span class="sxs-lookup"><span data-stu-id="5a42f-143">It first looks through the top-level windows and then through the child windows.</span></span> <span data-ttu-id="5a42f-144">如果找不到匹配项，它将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-144">If it cannot find a match, it throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="5a42f-145">只能将用于 `AppActivate` 拥有 windows 的进程使用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-145">You can use `AppActivate` only with processes that own windows.</span></span> <span data-ttu-id="5a42f-146">大多数控制台应用程序不拥有窗口，这意味着它们不会出现在搜索的进程列表中 `AppActivate` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-146">Most console applications do not own windows, which means that they do not appear in the list of processes that `AppActivate` searches.</span></span> <span data-ttu-id="5a42f-147">在控制台应用程序中运行时，系统会创建一个单独的进程来运行应用程序，并将输出返回到控制台进程。</span><span class="sxs-lookup"><span data-stu-id="5a42f-147">When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</span></span> <span data-ttu-id="5a42f-148">因此，当你请求当前进程 ID 时，将获取此单独进程的进程 ID，而不是控制台应用程序的进程 ID。</span><span class="sxs-lookup"><span data-stu-id="5a42f-148">Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</span></span>  
  
 <span data-ttu-id="5a42f-149">在运行时，该 `AppActivate` 函数会激活标题与匹配 `Title` 或与进程 ID 匹配的任何正在运行的应用程序 `ProcessId` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-149">At run time, the `AppActivate` function activates any running application with a title that matches `Title` or with a process ID that matches `ProcessId`.</span></span> <span data-ttu-id="5a42f-150">如果没有完全匹配项，则会激活其标题字符串以结尾的任何应用程序 `Title` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-150">If there is no exact match, it activates any application whose title string ends with `Title`.</span></span> <span data-ttu-id="5a42f-151">如果有多个名为的应用程序 `Title` ，该 `AppActivate` 函数将随意选择一个应用程序来激活。</span><span class="sxs-lookup"><span data-stu-id="5a42f-151">If there is more than one application named `Title`, the `AppActivate` function arbitrarily chooses one to activate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-152">`AppActivate`函数要求在 `UIPermission` <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 级别，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-152">The `AppActivate` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-153">有关更多信息，请参见<xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="5a42f-153">For more information, see <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-154">此示例演示了 `AppActivate` 用于激活应用程序窗口的函数的各种用法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-154">This example illustrates various uses of the `AppActivate` function to activate an application window.</span></span> <span data-ttu-id="5a42f-155">如果记事本进程未运行，则该示例引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-155">If a Notepad process is not running, the example throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="5a42f-156">此 `Shell` 过程假定应用程序位于指定的路径中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-156">The `Shell` procedure assumes the applications are in the paths specified.</span></span>  
  
 [!code-vb[VbVbalrCatRef#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.Beep " />
      <MemberSignature Language="ILAsm" Value=".method public static void Beep() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a42f-157">通过计算机扬声器提示音。</span><span class="sxs-lookup"><span data-stu-id="5a42f-157">Sounds a tone through the computer's speaker.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-158">嘟嘟声的音调和持续时间取决于您的硬件和系统软件，因此在不同的计算机之间有所不同。</span><span class="sxs-lookup"><span data-stu-id="5a42f-158">The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-159">`Beep`函数要求在 `UIPermission` <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 级别，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-159">The `Beep` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-160">有关详细信息，请参阅 <xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="5a42f-160">For more information, see <xref:System.Security.Permissions.UIPermission>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-161">此示例使用 `Beep` 函数通过计算机的扬声器发出音调。</span><span class="sxs-lookup"><span data-stu-id="5a42f-161">This example uses the `Beep` function to sound a tone through the computer's speaker.</span></span>  
  
 [!code-vb[VbVbalrCatRef#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="5a42f-162">Visual Basic Run-Time 库成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-162">Visual Basic Run-Time Library Members</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/playing-sounds"><span data-ttu-id="5a42f-163">播放声音</span><span class="sxs-lookup"><span data-stu-id="5a42f-163">Playing Sounds</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CallByName">
      <MemberSignature Language="C#" Value="public static object CallByName (object ObjectRef, string? ProcName, Microsoft.VisualBasic.CallType UseCallType, params object[]? Args);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CallByName(object ObjectRef, string ProcName, valuetype Microsoft.VisualBasic.CallType UseCallType, object[] Args) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CallByName (ObjectRef As Object, ProcName As String, UseCallType As CallType, ParamArray Args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CallByName(System::Object ^ ObjectRef, System::String ^ ProcName, Microsoft::VisualBasic::CallType UseCallType, ... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberSignature Language="F#" Value="static member CallByName : obj * string * Microsoft.VisualBasic.CallType * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.CallByName (ObjectRef, ProcName, UseCallType, Args)" />
      <MemberSignature Language="C#" Value="public static object CallByName (object ObjectRef, string ProcName, Microsoft.VisualBasic.CallType UseCallType, params object[] Args);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object CallByName(object ObjectRef, string ProcName, valuetype Microsoft.VisualBasic.CallType UseCallType, object[] Args) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ObjectRef" Type="System.Object" />
        <Parameter Name="ProcName" Type="System.String" />
        <Parameter Name="UseCallType" Type="Microsoft.VisualBasic.CallType" />
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ObjectRef"><span data-ttu-id="5a42f-164">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-164">Required.</span></span> <span data-ttu-id="5a42f-165"><see langword="Object" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-165"><see langword="Object" />.</span></span> <span data-ttu-id="5a42f-166">一个指向公开属性或方法的对象的指针。</span><span class="sxs-lookup"><span data-stu-id="5a42f-166">A pointer to the object exposing the property or method.</span></span></param>
        <param name="ProcName"><span data-ttu-id="5a42f-167">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-167">Required.</span></span> <span data-ttu-id="5a42f-168"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-168"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-169">一个字符串表达式，包含对象的属性或方法的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-169">A string expression containing the name of the property or method on the object.</span></span></param>
        <param name="UseCallType"><span data-ttu-id="5a42f-170">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-170">Required.</span></span> <span data-ttu-id="5a42f-171">类型 <see cref="T:Microsoft.VisualBasic.CallType" /> 的一个枚举成员，它表示正在被调用的过程的类型。</span><span class="sxs-lookup"><span data-stu-id="5a42f-171">An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called.</span></span> <span data-ttu-id="5a42f-172"><see langword="CallType" /> 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-172">The value of <see langword="CallType" /> can be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.</span></span></param>
        <param name="Args"><span data-ttu-id="5a42f-173">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-173">Optional.</span></span> <span data-ttu-id="5a42f-174"><see langword="ParamArray" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-174"><see langword="ParamArray" />.</span></span> <span data-ttu-id="5a42f-175">一个形参数组，包含要传递给正在调用的属性或方法的实参。</span><span class="sxs-lookup"><span data-stu-id="5a42f-175">A parameter array containing the arguments to be passed to the property or method being called.</span></span></param>
        <summary><span data-ttu-id="5a42f-176">执行对象的方法，或者设置或返回对象的属性。</span><span class="sxs-lookup"><span data-stu-id="5a42f-176">Executes a method on an object, or sets or returns a property on an object.</span></span></summary>
        <returns><span data-ttu-id="5a42f-177">执行对象的方法，或者设置或返回对象的属性。</span><span class="sxs-lookup"><span data-stu-id="5a42f-177">Executes a method on an object, or sets or returns a property on an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-178">`CallByName`函数在运行时用于获取属性、设置属性或调用方法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-178">The `CallByName` function is used at runtime to get a property, set a property, or invoke a method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-179">在下面的示例中，第一行使用 `CallByName` 设置文本框的 `Text` 属性，第二行检索属性的值 `Text` ，第三行调用 `Move` 方法来移动文本框。</span><span class="sxs-lookup"><span data-stu-id="5a42f-179">In the following example, the first line uses `CallByName` to set the `Text` property of a text box, the second line retrieves the value of the `Text` property, and the third line invokes the `Move` method to move the text box.</span></span>  
  
 [!code-vb[VbVbalrFunctions#99](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#99)]  
  
 [!code-vb[VbVbalrFunctions#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#20)]  
  
 <span data-ttu-id="5a42f-180">下一个示例使用 `CallByName` 函数调用 `Add` 集合对象的和 `Item` 方法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-180">The next example uses the `CallByName` function to invoke the `Add` and `Item` methods of a collection object.</span></span>  
  
 [!code-vb[VbVbalrFunctions#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-181">无效 <paramref name="UseCallType" /> 值；必须为 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-181">Invalid <paramref name="UseCallType" /> value; must be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/procedures/parameter-arrays"><span data-ttu-id="5a42f-182">参数数组</span><span class="sxs-lookup"><span data-stu-id="5a42f-182">Parameter Arrays</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/early-late-binding/calling-a-property-or-method-using-a-string-name"><span data-ttu-id="5a42f-183">使用字符串名调用属性或方法</span><span class="sxs-lookup"><span data-stu-id="5a42f-183">Calling a Property or Method Using a String Name</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Choose">
      <MemberSignature Language="C#" Value="public static object Choose (double Index, params object[]? Choice);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Choose(float64 Index, object[] Choice) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose (Index As Double, ParamArray Choice As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Choose(double Index, ... cli::array &lt;System::Object ^&gt; ^ Choice);" />
      <MemberSignature Language="F#" Value="static member Choose : double * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.Choose (Index, Choice)" />
      <MemberSignature Language="C#" Value="public static object Choose (double Index, params object[] Choice);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object Choose(float64 Index, object[] Choice) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Double" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Choice" Type="System.Object[]" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="5a42f-184">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-184">Required.</span></span> <span data-ttu-id="5a42f-185"><see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-185"><see cref="T:System.Double" />.</span></span> <span data-ttu-id="5a42f-186">数值表达式，它得出的值在 1 和 <paramref name="Choice" /> 参数中传递的元素数量之间。</span><span class="sxs-lookup"><span data-stu-id="5a42f-186">Numeric expression that results in a value between 1 and the number of elements passed in the <paramref name="Choice" /> argument.</span></span></param>
        <param name="Choice"><span data-ttu-id="5a42f-187">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-187">Required.</span></span> <span data-ttu-id="5a42f-188"><see langword="Object" /> 参数数组。</span><span class="sxs-lookup"><span data-stu-id="5a42f-188"><see langword="Object" /> parameter array.</span></span> <span data-ttu-id="5a42f-189">可以为以逗号分隔的 <see langword="Object" /> 变量或表达式列表或一维 <see langword="Object" /> 元素数组提供计算为 <see langword="Object" /> 数据类型的单个变量或表达式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-189">You can supply either a single variable or an expression that evaluates to the <see langword="Object" /> data type, to a list of <see langword="Object" /> variables or expressions separated by commas, or to a single-dimensional array of <see langword="Object" /> elements.</span></span></param>
        <summary><span data-ttu-id="5a42f-190">从参数列表中选择和返回一个值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-190">Selects and returns a value from a list of arguments.</span></span></summary>
        <returns><span data-ttu-id="5a42f-191">从参数列表中选择和返回一个值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-191">Selects and returns a value from a list of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-192">`Choose`函数根据的值返回传入的列表的成员 `Choice()` `Index` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-192">The `Choose` function returns a member of the list passed in `Choice()`, based on the value of `Index`.</span></span> <span data-ttu-id="5a42f-193">当为1时，将选择列表的第一个成员 `Index` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-193">The first member of the list is selected when `Index` is 1.</span></span> <span data-ttu-id="5a42f-194">当)  (时，将选择列表的最后一个成员 `Index` `UBound` `Choice()` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-194">The last member of the list is selected when `Index` is `UBound`(`Choice()`).</span></span> <span data-ttu-id="5a42f-195">如果超出 `Index` 这些限制，则 `Choose` 返回 `Nothing` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-195">If `Index` is outside these limits, `Choose` returns `Nothing`.</span></span>  
  
 <span data-ttu-id="5a42f-196">如果不是 `Index` 整数，则在计算之前舍入为最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-196">If `Index` is not a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
 <span data-ttu-id="5a42f-197">您可以使用 `Choose` 在可能的列表中查找值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-197">You can use `Choose` to look up a value in a list of possibilities.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-198">自变量列表中的表达式可以包含函数调用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-198">The expressions in the argument list can include function calls.</span></span> <span data-ttu-id="5a42f-199">作为对的调用的准备参数列表的一部分 `Choose` ，Visual Basic 编译器将调用每个表达式中的每个函数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-199">As part of preparing the argument list for the call to `Choose`, the Visual Basic compiler calls every function in every expression.</span></span> <span data-ttu-id="5a42f-200">这意味着，如果选择不同的表达式，则不能依赖于未调用的特定函数 `Index` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-200">This means that you cannot rely on a particular function not being called if a different expression is selected by `Index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-201">此示例使用 `Choose` 函数来显示名称，以响应传入参数中的过程的索引 `Ind` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-201">This example uses the `Choose` function to display a name in response to an index passed into the procedure in the `Ind` parameter.</span></span>  
  
 [!code-vb[VbVbalrFunctions#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/select-case-statement"><span data-ttu-id="5a42f-202">Select...Case 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-202">Select...Case Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public static string Command ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Command() cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Command" />
      <MemberSignature Language="VB.NET" Value="Public Function Command () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Command();" />
      <MemberSignature Language="F#" Value="static member Command : unit -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Command " />
      <MemberSignature Language="ILAsm" Value=".method public static string Command() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a42f-203">返回命令行的参数部分，该命令行用于启动 Visual Basic 或启动使用 Visual Basic 开发的可执行程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-203">Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</span></span> <span data-ttu-id="5a42f-204"><see langword="My" /> 功能可以提供比 <see langword="Command" /> 函数更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-204">The <see langword="My" /> feature provides greater productivity and performance than the <see langword="Command" /> function.</span></span> <span data-ttu-id="5a42f-205">有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-205">For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</span></span></summary>
        <returns><span data-ttu-id="5a42f-206">命令行的参数部分，该命令行用于启动 Visual Basic 或启动使用 Visual Basic 开发的可执行程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-206">The argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</span></span>  
  
<span data-ttu-id="5a42f-207"><see langword="My" /> 功能可以提供比 <see langword="Command" /> 函数更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-207">The <see langword="My" /> feature provides greater productivity and performance than the <see langword="Command" /> function.</span></span> <span data-ttu-id="5a42f-208">有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-208">For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-209">返回参数后，可以搜索常用分隔符（如空格、向后或正斜杠、连字符或引号），以拆分或搜索单独参数的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-209">After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.</span></span>  
  
 <span data-ttu-id="5a42f-210">对于使用 Visual Basic 开发并编译为 .exe 文件的应用程序，该 `Command` 函数返回在命令行上出现在应用程序名称之后的任何参数，格式如下： `MyApp(cmdlineargs)` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-210">For applications developed with Visual Basic and compiled to an .exe file, the `Command` function returns any arguments that appear after the name of the application on the command line, in this form: `MyApp(cmdlineargs)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-211">此示例使用 `Command` 函数返回包含数组的对象中的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-211">This example uses the `Command` function to return the command-line arguments in an object that contains an array.</span></span>  
  
 [!code-vb[VbVbalrCatRef#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Environment.GetCommandLineArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="5a42f-212">Visual Basic Run-Time 库成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-212">Visual Basic Run-Time Library Members</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/reference/command-line-compiler/"><span data-ttu-id="5a42f-213">Visual Basic 命令行编译器</span><span class="sxs-lookup"><span data-stu-id="5a42f-213">Visual Basic command-line compiler</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/program-structure/structure-of-a-visual-basic-program"><span data-ttu-id="5a42f-214">Visual Basic 程序的结构</span><span class="sxs-lookup"><span data-stu-id="5a42f-214">Structure of a Visual Basic Program</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public static object CreateObject (string ProgId, string? ServerName = &quot;&quot;);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateObject(string ProgId, string ServerName) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (ProgId As String, Optional ServerName As String = &quot;&quot;) As Object" />
      <MemberSignature Language="F#" Value="static member CreateObject : string * string -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.CreateObject (ProgId, ServerName)" />
      <MemberSignature Language="C#" Value="public static object CreateObject (string ProgId, string ServerName = &quot;&quot;);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object CreateObject(string ProgId, string ServerName) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="ServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="5a42f-215">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-215">Required.</span></span> <span data-ttu-id="5a42f-216"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-216"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-217">要创建的对象的程序 ID。</span><span class="sxs-lookup"><span data-stu-id="5a42f-217">The program ID of the object to create.</span></span></param>
        <param name="ServerName"><span data-ttu-id="5a42f-218">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-218">Optional.</span></span> <span data-ttu-id="5a42f-219"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-219"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-220">要在其上创建对象的网络服务器的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-220">The name of the network server where the object will be created.</span></span> <span data-ttu-id="5a42f-221">如果 <paramref name="ServerName" /> 是空字符串 ("")，则使用本地计算机。</span><span class="sxs-lookup"><span data-stu-id="5a42f-221">If <paramref name="ServerName" /> is an empty string (""), the local computer is used.</span></span></param>
        <summary><span data-ttu-id="5a42f-222">创建并返回对 COM 对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-222">Creates and returns a reference to a COM object.</span></span> <span data-ttu-id="5a42f-223">不能在 Visual Basic 中使用 <see langword="CreateObject" /> 创建这些类的实例，除非将类显式公开为 COM 组件。</span><span class="sxs-lookup"><span data-stu-id="5a42f-223"><see langword="CreateObject" /> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</span></span></summary>
        <returns><span data-ttu-id="5a42f-224">创建并返回对 COM 对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-224">Creates and returns a reference to a COM object.</span></span> <span data-ttu-id="5a42f-225">不能在 Visual Basic 中使用 <see langword="CreateObject" /> 创建这些类的实例，除非将类显式公开为 COM 组件。</span><span class="sxs-lookup"><span data-stu-id="5a42f-225"><see langword="CreateObject" /> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-226">若要创建 COM 组件的实例，请将返回的对象分配 `CreateObject` 给对象变量：</span><span class="sxs-lookup"><span data-stu-id="5a42f-226">To create an instance of a COM component, assign the object returned by `CreateObject` to an object variable:</span></span>  
  
```vb  
Sub CreateADODB()  
   Dim adoApp As Object  
   adoApp = CreateObject("ADODB.Connection")  
End Sub  
```  
  
 <span data-ttu-id="5a42f-227">用于存储返回对象的对象变量的类型可能会影响应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-227">The type of object variable you use to store the returned object can affect your application's performance.</span></span> <span data-ttu-id="5a42f-228">使用子句声明对象变量将 `As Object` 创建一个变量，该变量可包含对任何类型的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-228">Declaring an object variable with the `As Object` clause creates a variable that can contain a reference to any type of object.</span></span> <span data-ttu-id="5a42f-229">但是，通过该变量对对象的访问是 *后期绑定*的，也就是说，在程序运行时将进行绑定。</span><span class="sxs-lookup"><span data-stu-id="5a42f-229">However, access to the object through that variable is *late-bound*, that is, the binding occurs when your program runs.</span></span> <span data-ttu-id="5a42f-230">应避免后期绑定的原因有很多，包括应用程序性能下降。</span><span class="sxs-lookup"><span data-stu-id="5a42f-230">There are many reasons you should avoid late binding, including slower application performance.</span></span>  
  
 <span data-ttu-id="5a42f-231">你可以创建一个生成早期绑定的对象变量，即在编译程序时进行绑定。</span><span class="sxs-lookup"><span data-stu-id="5a42f-231">You can create an object variable that results in early binding - that is, binding when the program is compiled.</span></span> <span data-ttu-id="5a42f-232">为此，请从 "**项目**" 菜单上的 "**添加引用**" 对话框的 " **COM** " 选项卡中为你的对象添加对类型库的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-232">To do so, add a reference to the type library for your object from the **COM** tab of the **Add Reference** dialog box on the **Project** menu.</span></span> <span data-ttu-id="5a42f-233">然后声明对象的特定类型的对象变量。</span><span class="sxs-lookup"><span data-stu-id="5a42f-233">Then declare the object variable of the specific type of your object.</span></span> <span data-ttu-id="5a42f-234">在大多数情况下，使用 `Dim` 语句和主互操作程序集来创建对象比使用函数更有效 `CreateObject` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-234">In most cases, it is more efficient to use the `Dim` statement and a primary interop assembly to create objects than it is to use the `CreateObject` function.</span></span>  
  
## <a name="interacting-with-unmanaged-code"></a><span data-ttu-id="5a42f-235">与非托管代码交互</span><span class="sxs-lookup"><span data-stu-id="5a42f-235">Interacting with Unmanaged Code</span></span>  
 <span data-ttu-id="5a42f-236">另一个问题是，COM 对象使用非托管代码，而不是公共语言运行时的优点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-236">Another issue is that COM objects use unmanaged code - code without the benefit of the common language runtime.</span></span> <span data-ttu-id="5a42f-237">将 Visual Basic 的托管代码与 COM 中的非托管代码混合使用会产生相当大的复杂性。</span><span class="sxs-lookup"><span data-stu-id="5a42f-237">There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM.</span></span> <span data-ttu-id="5a42f-238">添加对 COM 对象的引用时，Visual Basic 会在该库 (PIA) 搜索主互操作程序集;如果找到一个，则使用它。</span><span class="sxs-lookup"><span data-stu-id="5a42f-238">When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it.</span></span> <span data-ttu-id="5a42f-239">如果未找到 PIA，则会创建一个互操作性程序集，该程序集包含 COM 库中每个类的本地互操作性类。</span><span class="sxs-lookup"><span data-stu-id="5a42f-239">If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library.</span></span> <span data-ttu-id="5a42f-240">有关详细信息，请参阅 [.NET Framework 应用程序中的 COM 互操作性](/dotnet/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications)。</span><span class="sxs-lookup"><span data-stu-id="5a42f-240">For more information, see [COM Interoperability in .NET Framework Applications](/dotnet/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications).</span></span>  
  
 <span data-ttu-id="5a42f-241">通常应尽可能使用强绑定对象和主互操作程序集。</span><span class="sxs-lookup"><span data-stu-id="5a42f-241">You should generally use strongly bound objects and primary interop assemblies whenever possible.</span></span> <span data-ttu-id="5a42f-242">下面的示例将 `CreateObject` 函数与 Microsoft Office 对象结合使用来仅用于演示目的。</span><span class="sxs-lookup"><span data-stu-id="5a42f-242">The examples below use the `CreateObject` function with Microsoft Office objects for demonstration purposes only.</span></span> <span data-ttu-id="5a42f-243">但是，在与相应的主互操作程序集一起使用时，这些对象更易于使用且更可靠。</span><span class="sxs-lookup"><span data-stu-id="5a42f-243">However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.</span></span>  
  
## <a name="creating-an-object-on-a-remote-computer"></a><span data-ttu-id="5a42f-244">在远程计算机上创建对象</span><span class="sxs-lookup"><span data-stu-id="5a42f-244">Creating an Object on a Remote Computer</span></span>  
 <span data-ttu-id="5a42f-245">可以通过将计算机名称传递给函数的参数，在远程网络计算机上创建对象 `ServerName` `CreateObject` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-245">You can create an object on a remote networked computer by passing the name of the computer to the `ServerName` argument of the `CreateObject` function.</span></span> <span data-ttu-id="5a42f-246">该名称与共享名称的计算机名称部分相同：对于名为 "\MyServer\Public" 的共享，为 " \\ `ServerName` MyServer"。</span><span class="sxs-lookup"><span data-stu-id="5a42f-246">That name is the same as the Machine Name portion of a share name: for a share named "\\\MyServer\Public," `ServerName` is "MyServer."</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-247">请参阅 COM 文档 (参阅 Microsoft 开发人员网络) ，了解有关使应用程序在远程联网计算机上可访问的其他信息。</span><span class="sxs-lookup"><span data-stu-id="5a42f-247">Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer.</span></span> <span data-ttu-id="5a42f-248">可能需要为应用程序添加注册表项。</span><span class="sxs-lookup"><span data-stu-id="5a42f-248">You may need to add a registry key for your application.</span></span>  
  
 <span data-ttu-id="5a42f-249">下面的代码返回在名为的远程计算机上运行的 Excel 实例的版本号 `MyServer` ：</span><span class="sxs-lookup"><span data-stu-id="5a42f-249">The following code returns the version number of an instance of Excel running on a remote computer named `MyServer`:</span></span>  
  
```vb  
Sub CreateRemoteExcelObj()  
    Dim xlApp As Object  
    ' Replace string "\\MyServer" with name of the remote computer.  
    xlApp = CreateObject("Excel.Application", "\\MyServer")  
    MsgBox(xlApp.Version)  
End Sub  
```  
  
 <span data-ttu-id="5a42f-250">如果远程服务器名称不正确或不可用，则会发生运行时错误。</span><span class="sxs-lookup"><span data-stu-id="5a42f-250">If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-251">`CreateObject`当没有对象的当前实例时使用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-251">Use `CreateObject` when there is no current instance of the object.</span></span> <span data-ttu-id="5a42f-252">如果对象实例已在运行，则将启动一个新实例，并创建一个指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-252">If an instance of the object is already running, a new instance is started, and an object of the specified type is created.</span></span> <span data-ttu-id="5a42f-253">若要使用当前实例，或要启动应用程序并将文件加载，请使用 `GetObject` 函数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-253">To use the current instance, or to start the application and have it load a file, use the `GetObject` function.</span></span> <span data-ttu-id="5a42f-254">如果对象已将自身注册为单实例对象，则无论执行多少次，都只会创建一个对象实例 `CreateObject` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-254">If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is executed.</span></span>  
  
## <a name="creating-framework-objects"></a><span data-ttu-id="5a42f-255">创建框架对象</span><span class="sxs-lookup"><span data-stu-id="5a42f-255">Creating Framework Objects</span></span>  
 <span data-ttu-id="5a42f-256">仅可使用 `CreateObject` 函数创建 COM 对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-256">You can use the `CreateObject` function only to create a COM object.</span></span> <span data-ttu-id="5a42f-257">虽然没有用于创建 .NET Framework 对象的完全等效机制，但 <xref:System.Activator> 命名空间中的 <xref:System> 包含创建本地或远程对象的方法。</span><span class="sxs-lookup"><span data-stu-id="5a42f-257">While there is no exact equivalent mechanism for creating a .NET Framework object, the <xref:System.Activator> in the <xref:System> namespace contains methods to create local or remote objects.</span></span> <span data-ttu-id="5a42f-258">特别 <xref:System.Activator.CreateInstance%2A> 是，方法或 <xref:System.Activator.CreateInstanceFrom%2A> 方法可能会很有用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-258">In particular, the <xref:System.Activator.CreateInstance%2A> method or the <xref:System.Activator.CreateInstanceFrom%2A> method might be useful.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5a42f-259">`CreateObject`函数需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-259">The `CreateObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-260">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="5a42f-260">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-261">下面的示例使用 `CreateObject` 函数创建 Microsoft Excel 工作表，并将该工作表保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-261">The following example uses the `CreateObject` function to create a Microsoft Excel worksheet and saves the worksheet to a file.</span></span> <span data-ttu-id="5a42f-262">若要使用此示例，必须将 Excel 安装在运行此程序的计算机上。</span><span class="sxs-lookup"><span data-stu-id="5a42f-262">To use this example, Excel must be installed on the computer where this program runs.</span></span> <span data-ttu-id="5a42f-263">此外，你必须从 "**项目**" 菜单上的 "**添加引用**" 对话框的 " **COM** " 选项卡中添加对类型库的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-263">Also, you must add a reference to the type library from the **COM** tab of the **Add Reference** dialog box on the **Project** menu.</span></span> <span data-ttu-id="5a42f-264">类型库的名称因计算机上安装的 Excel 的版本而异。</span><span class="sxs-lookup"><span data-stu-id="5a42f-264">The name of the type library varies depending on the version of Excel installed on your computer.</span></span> <span data-ttu-id="5a42f-265">例如，Microsoft Excel 2002 的类型库命名为 " **Microsoft excel 10.0 对象库**"。</span><span class="sxs-lookup"><span data-stu-id="5a42f-265">For example, the type library for Microsoft Excel 2002 is named **Microsoft Excel 10.0 Object Library**.</span></span>  
  
 [!code-vb[VbVbalrExcelObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5a42f-266">服务器不可用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-266">Server is unavailable</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="5a42f-267">不存在指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-267">No object of the specified type exists</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)" />
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.Activator" />
        <altmember cref="Overload:System.Activator.CreateInstance" />
        <altmember cref="Overload:System.Activator.CreateInstanceFrom" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/dim-statement"><span data-ttu-id="5a42f-268">Dim 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-268">Dim Statement (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/declare-statement"><span data-ttu-id="5a42f-269">Declare Statement</span><span class="sxs-lookup"><span data-stu-id="5a42f-269">Declare Statement</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications"><span data-ttu-id="5a42f-270">.NET Framework 应用程序中的 COM 互操作性</span><span class="sxs-lookup"><span data-stu-id="5a42f-270">COM Interoperability in .NET Framework Applications</span></span></related>
        <related type="Article" href="/dotnet/framework/interop/"><span data-ttu-id="5a42f-271">与非托管代码交互操作</span><span class="sxs-lookup"><span data-stu-id="5a42f-271">Interoperating with Unmanaged Code</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteSetting">
      <MemberSignature Language="C#" Value="public static void DeleteSetting (string? AppName, string Section = default, string Key = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteSetting(string AppName, string Section, string Key) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSetting (AppName As String, Optional Section As String = Nothing, Optional Key As String = Nothing)" />
      <MemberSignature Language="F#" Value="static member DeleteSetting : string * string * string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.DeleteSetting (AppName, Section, Key)" />
      <MemberSignature Language="C#" Value="public static void DeleteSetting (string AppName, string Section = default, string Key = default);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteSetting(string AppName, string Section, string Key) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Key" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="5a42f-272">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-272">Required.</span></span> <span data-ttu-id="5a42f-273"><see langword="String" /> 表达式，包含应用节或项设置的应用程序或项目的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-273"><see langword="String" /> expression containing the name of the application or project to which the section or key setting applies.</span></span></param>
        <param name="Section"><span data-ttu-id="5a42f-274">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-274">Required.</span></span> <span data-ttu-id="5a42f-275"><see langword="String" /> 表达式，包含要从中删除项设置的节的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-275"><see langword="String" /> expression containing the name of the section from which the key setting is being deleted.</span></span> <span data-ttu-id="5a42f-276">如果仅提供了 <paramref name="AppName" /> 和 <paramref name="Section" />，则将删除指定的节以及所有相关的项设置。</span><span class="sxs-lookup"><span data-stu-id="5a42f-276">If only <paramref name="AppName" /> and <paramref name="Section" /> are provided, the specified section is deleted along with all related key settings.</span></span></param>
        <param name="Key"><span data-ttu-id="5a42f-277">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-277">Optional.</span></span> <span data-ttu-id="5a42f-278"><see langword="String" /> 表达式，包含要删除的项设置的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-278"><see langword="String" /> expression containing the name of the key setting being deleted.</span></span></param>
        <summary><span data-ttu-id="5a42f-279">从 Windows 注册表中某个应用程序的项中删除一个节或一个项设置。</span><span class="sxs-lookup"><span data-stu-id="5a42f-279">Deletes a section or key setting from an application's entry in the Windows registry.</span></span> <span data-ttu-id="5a42f-280">与 <see langword="DeleteSetting" /> 函数相比，<see langword="My" /> 功能在注册表操作方面可为你提供更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-280">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than the <see langword="DeleteSetting" /> function.</span></span> <span data-ttu-id="5a42f-281">有关更多信息，请参见<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-281">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /> .</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-282">如果提供所有参数，则将删除指定的设置。</span><span class="sxs-lookup"><span data-stu-id="5a42f-282">If all arguments are provided, the specified setting is deleted.</span></span> <span data-ttu-id="5a42f-283">如果尝试对不 `DeleteSetting` 存在的节或键设置使用，则会发生运行时错误。</span><span class="sxs-lookup"><span data-stu-id="5a42f-283">A run-time error occurs if you attempt to use `DeleteSetting` on a nonexistent section or key setting.</span></span>  
  
 <span data-ttu-id="5a42f-284">`DeleteSetting` 要求用户登录，因为它在 `HKEY_LOCAL_USER` 用户以交互方式登录之前处于不活动状态的注册表项下运行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-284">`DeleteSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.</span></span>  
  
 <span data-ttu-id="5a42f-285">要从非交互式进程访问的注册表设置 (例如 Mtx.exe) 应存储在 `HKEY_LOCAL_MACHINE\Software\` 或 `HKEY_USER\DEFAULT\Software` 注册表项下。</span><span class="sxs-lookup"><span data-stu-id="5a42f-285">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-286">下面的示例首先使用 `SaveSetting` 过程在 Windows 注册表中为 `MyApp` 应用程序生成条目，然后使用函数将 `DeleteSetting` 其删除。</span><span class="sxs-lookup"><span data-stu-id="5a42f-286">The following example first uses the `SaveSetting` procedure to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.</span></span> <span data-ttu-id="5a42f-287">由于未 `Key` 指定任何参数，因此将 `Startup` 删除整个节，其中包括节名称及其所有键。</span><span class="sxs-lookup"><span data-stu-id="5a42f-287">Because no `Key` argument is specified, the whole `Startup` section is deleted, including the section name and all of its keys.</span></span>  
  
 [!code-vb[VbVbalrCatRef#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-288">用户没有登录。</span><span class="sxs-lookup"><span data-stu-id="5a42f-288">User is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Environ">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5a42f-289">返回与操作系统环境变量关联的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-289">Returns the string associated with an operating-system environment variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Environ">
      <MemberSignature Language="C#" Value="public static string Environ (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Environ(int32 Expression) cil managed" FrameworkAlternate="net-5.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Environ (Expression As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Environ(int Expression);" />
      <MemberSignature Language="F#" Value="static member Environ : int -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Environ Expression" />
      <MemberSignature Language="ILAsm" Value=".method public static string Environ(int32 Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="5a42f-290">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-290">Required.</span></span> <span data-ttu-id="5a42f-291">此表达式用于计算包含环境变量名称的字符串，或对应于环境字符串表中环境字符串的数字顺序的整数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-291">Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</span></span></param>
        <summary><span data-ttu-id="5a42f-292">返回与操作系统环境变量关联的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-292">Returns the string associated with an operating-system environment variable.</span></span></summary>
        <returns><span data-ttu-id="5a42f-293">与操作系统环境变量关联的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-293">The string associated with an operating-system environment variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-294">如果 `Expression` 包含一个字符串，则该 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 函数将返回分配给指定的环境字符串的文本-即，在该环境变量的环境字符串表中，等号 (=) 后面的文本。</span><span class="sxs-lookup"><span data-stu-id="5a42f-294">If `Expression` contains a string, the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function returns the text assigned to the specified environment string - that is, the text following the equal sign (=) in the environment-string table for that environment variable.</span></span> <span data-ttu-id="5a42f-295">如果在 `Expression` 环境字符串表中找不到中的字符串，则返回长度为零的字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-295">If the string in `Expression` cannot be found in the environment-string table, a zero-length string ("") is returned.</span></span>  
  
 <span data-ttu-id="5a42f-296">如果 `Expression` 包含一个整数，则返回占据环境字符串表中该数值位置的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-296">If `Expression` contains an integer, the string occupying that numeric position in the environment-string table is returned.</span></span> <span data-ttu-id="5a42f-297">在这种情况下， <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 将返回所有文本，包括环境变量的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-297">In this case, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns all of the text, including the name of the environment variable.</span></span> <span data-ttu-id="5a42f-298">如果指定位置没有环境字符串，则 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 返回一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-298">If there is no environment string in the specified position, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns a zero-length string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5a42f-299"><xref:Microsoft.VisualBasic.Interaction.Environ%2A>函数需要环境权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-299">The <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function requires environment permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-300">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="5a42f-300">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-301">此示例使用 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 函数提供 `PATH` 环境字符串表中语句的输入编号和长度。</span><span class="sxs-lookup"><span data-stu-id="5a42f-301">This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.</span></span>  
  
 [!code-vb[VbVbalrCatRef#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-302">缺少 <paramref name="Expression" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-302"><paramref name="Expression" /> is missing.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="5a42f-303">Visual Basic Run-Time 库成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-303">Visual Basic Run-Time Library Members</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Environ">
      <MemberSignature Language="C#" Value="public static string Environ (string? Expression);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Environ(string Expression) cil managed" FrameworkAlternate="net-5.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Environ(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Environ (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Environ(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Environ : string -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Environ Expression" />
      <MemberSignature Language="C#" Value="public static string Environ (string Expression);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static string Environ(string Expression) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="5a42f-304">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-304">Required.</span></span> <span data-ttu-id="5a42f-305">此表达式用于计算包含环境变量名称的字符串，或对应于环境字符串表中环境字符串的数字顺序的整数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-305">Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</span></span></param>
        <summary><span data-ttu-id="5a42f-306">返回与操作系统环境变量关联的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-306">Returns the string associated with an operating-system environment variable.</span></span></summary>
        <returns><span data-ttu-id="5a42f-307">与操作系统环境变量关联的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-307">The string associated with an operating-system environment variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-308">如果 `Expression` 包含一个字符串，则该 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 函数将返回分配给指定的环境字符串的文本-即，在该环境变量的环境字符串表中，等号 (=) 后面的文本。</span><span class="sxs-lookup"><span data-stu-id="5a42f-308">If `Expression` contains a string, the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function returns the text assigned to the specified environment string - that is, the text following the equal sign (=) in the environment-string table for that environment variable.</span></span> <span data-ttu-id="5a42f-309">如果在 `Expression` 环境字符串表中找不到中的字符串，则返回长度为零的字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-309">If the string in `Expression` cannot be found in the environment-string table, a zero-length string ("") is returned.</span></span>  
  
 <span data-ttu-id="5a42f-310">如果 `Expression` 包含一个整数，则返回占据环境字符串表中该数值位置的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-310">If `Expression` contains an integer, the string occupying that numeric position in the environment-string table is returned.</span></span> <span data-ttu-id="5a42f-311">在这种情况下， <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 将返回所有文本，包括环境变量的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-311">In this case, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns all of the text, including the name of the environment variable.</span></span> <span data-ttu-id="5a42f-312">如果指定位置没有环境字符串，则 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 返回一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-312">If there is no environment string in the specified position, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns a zero-length string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5a42f-313"><xref:Microsoft.VisualBasic.Interaction.Environ%2A>函数需要环境权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-313">The <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function requires environment permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-314">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="5a42f-314">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-315">此示例使用 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 函数提供 `PATH` 环境字符串表中语句的输入编号和长度。</span><span class="sxs-lookup"><span data-stu-id="5a42f-315">This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.</span></span>  
  
 [!code-vb[VbVbalrCatRef#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-316">缺少 <paramref name="Expression" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-316"><paramref name="Expression" /> is missing.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="5a42f-317">Visual Basic Run-Time 库成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-317">Visual Basic Run-Time Library Members</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAllSettings">
      <MemberSignature Language="C#" Value="public static string[,]? GetAllSettings (string AppName, string Section);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[,] GetAllSettings(string AppName, string Section) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllSettings (AppName As String, Section As String) As String(,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^, 2&gt; ^ GetAllSettings(System::String ^ AppName, System::String ^ Section);" />
      <MemberSignature Language="F#" Value="static member GetAllSettings : string * string -&gt; string[,]" Usage="Microsoft.VisualBasic.Interaction.GetAllSettings (AppName, Section)" />
      <MemberSignature Language="C#" Value="public static string[,] GetAllSettings (string AppName, string Section);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static string[,] GetAllSettings(string AppName, string Section) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[,]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="5a42f-318">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-318">Required.</span></span> <span data-ttu-id="5a42f-319"><see langword="String" /> 表达式，包含请求其项设置的应用程序或项目的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-319"><see langword="String" /> expression containing the name of the application or project whose key settings are requested.</span></span></param>
        <param name="Section"><span data-ttu-id="5a42f-320">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-320">Required.</span></span> <span data-ttu-id="5a42f-321">一个 <see langword="String" /> 表达式，其中包含请求其关键设置的节的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-321"><see langword="String" /> expression containing the name of the section whose key settings are requested.</span></span> <span data-ttu-id="5a42f-322"><see langword="GetAllSettings" /> 返回一个包含二维字符串数组的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-322"><see langword="GetAllSettings" /> returns an object that contains a two-dimensional array of strings.</span></span> <span data-ttu-id="5a42f-323">这些字符串包含指定节中的所有项设置及其相应的值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-323">The strings contain all the key settings in the specified section, plus their corresponding values.</span></span></param>
        <summary><span data-ttu-id="5a42f-324">从 Windows 注册表中某个应用程序的项返回项设置及其各自的值（最初通过 <see langword="SaveSetting" /> 创建）的列表。</span><span class="sxs-lookup"><span data-stu-id="5a42f-324">Returns a list of key settings and their respective values (originally created with <see langword="SaveSetting" />) from an application's entry in the Windows registry.</span></span> <span data-ttu-id="5a42f-325">与 <see langword="My" /> 相比，<see langword="GetAllSettings" /> 功能在注册表操作方面可为您提供更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-325">Using the <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span> <span data-ttu-id="5a42f-326">有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-326">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></summary>
        <returns><span data-ttu-id="5a42f-327">Windows 注册表中某个应用程序的项中的项设置及其各自的值（最初通过 <see langword="SaveSetting" /> 创建）的列表。</span><span class="sxs-lookup"><span data-stu-id="5a42f-327">A list of key settings and their respective values (originally created with <see langword="SaveSetting" />) from an application's entry in the Windows registry.</span></span>  
  
<span data-ttu-id="5a42f-328">与 <see langword="My" /> 相比，<see langword="GetAllSettings" /> 功能在注册表操作方面可为您提供更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-328">Using the <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span> <span data-ttu-id="5a42f-329">有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-329">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-330">`GetAllSettings``Object`如果 `AppName` 或不 `Section` 存在，则返回未初始化的。</span><span class="sxs-lookup"><span data-stu-id="5a42f-330">`GetAllSettings` returns an uninitialized `Object` if either `AppName` or `Section` does not exist.</span></span>  
  
 <span data-ttu-id="5a42f-331">由于它在 `HKEY_LOCAL_USER` 用户以交互方式登录之前处于不活动状态的注册表项下运行，因此 `GetAllSettings` 要求用户登录。</span><span class="sxs-lookup"><span data-stu-id="5a42f-331">Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetAllSettings` requires that a user be logged on.</span></span>  
  
 <span data-ttu-id="5a42f-332">要从非交互式进程访问的注册表设置 (例如 Mtx.exe) 应存储在 `HKEY_LOCAL_MACHINE\Software\` 或 `HKEY_USER\DEFAULT\Software` 注册表项下。</span><span class="sxs-lookup"><span data-stu-id="5a42f-332">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-333">此示例首先使用 `SaveSetting` 函数为指定为的应用程序在 Windows 注册表中生成条目 `AppName` ，然后使用 `GetAllSettings` 函数来显示设置。</span><span class="sxs-lookup"><span data-stu-id="5a42f-333">This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, then uses the `GetAllSettings` function to display the settings.</span></span> <span data-ttu-id="5a42f-334">请注意，应用程序名称和 `Section` 名称不能用来检索 `GetAllSettings` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-334">Note that application names and `Section` names cannot be retrieved with `GetAllSettings`.</span></span> <span data-ttu-id="5a42f-335">最后， `DeleteSetting` 函数将删除应用程序的条目。</span><span class="sxs-lookup"><span data-stu-id="5a42f-335">Finally, the `DeleteSetting` function removes the application's entries.</span></span>  
  
 [!code-vb[VbVbalrCatRef#68](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-336">用户没有登录。</span><span class="sxs-lookup"><span data-stu-id="5a42f-336">User is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry"><span data-ttu-id="5a42f-337">读取和写入注册表 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-337">Reading from and Writing to the Registry (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (string PathName = default, string Class = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(string PathName, string Class) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (Optional PathName As String = Nothing, Optional Class As String = Nothing) As Object" />
      <MemberSignature Language="F#" Value="static member GetObject : string * string -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.GetObject (PathName, Class)" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObject(string PathName, string Class) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Class" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="5a42f-338">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-338">Optional.</span></span> <span data-ttu-id="5a42f-339"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-339"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-340">包含要检索的对象的文件的完整路径和名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-340">The full path and name of the file containing the object to retrieve.</span></span> <span data-ttu-id="5a42f-341">如果省略了 <paramref name="PathName" />，则 <paramref name="Class" /> 为必选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-341">If <paramref name="PathName" /> is omitted, <paramref name="Class" /> is required.</span></span></param>
        <param name="Class"><span data-ttu-id="5a42f-342">如果未提供 <paramref name="PathName" />，则为必选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-342">Required if <paramref name="PathName" /> is not supplied.</span></span> <span data-ttu-id="5a42f-343"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-343"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-344">表示对象的类的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-344">A string representing the class of the object.</span></span> <span data-ttu-id="5a42f-345"><paramref name="Class" /> 参数具有以下语法和部分：</span><span class="sxs-lookup"><span data-stu-id="5a42f-345">The <paramref name="Class" /> argument has the following syntax and parts:</span></span> 
 <span data-ttu-id="5a42f-346"><c>appname</c><c>.</c><c>objecttype</c></span><span class="sxs-lookup"><span data-stu-id="5a42f-346"><c>appname</c><c>.</c><c>objecttype</c></span></span>  
  
<span data-ttu-id="5a42f-347">[1|1] 参数</span><span class="sxs-lookup"><span data-stu-id="5a42f-347">[1|1] Parameter</span></span> 
<span data-ttu-id="5a42f-348">[1|2]“描述”</span><span class="sxs-lookup"><span data-stu-id="5a42f-348">[1|2] Description</span></span> 
<span data-ttu-id="5a42f-349">[2|1] <c>appname</c></span><span class="sxs-lookup"><span data-stu-id="5a42f-349">[2|1] <c>appname</c></span></span>  
  
<span data-ttu-id="5a42f-350">[2|2]“所需的”。</span><span class="sxs-lookup"><span data-stu-id="5a42f-350">[2|2] Required.</span></span> <span data-ttu-id="5a42f-351"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-351"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-352">提供对象的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-352">The name of the application providing the object.</span></span>  
  
<span data-ttu-id="5a42f-353">[3|1] <c>objecttype</c></span><span class="sxs-lookup"><span data-stu-id="5a42f-353">[3|1] <c>objecttype</c></span></span>  
  
<span data-ttu-id="5a42f-354">[3|2]“所需的”。</span><span class="sxs-lookup"><span data-stu-id="5a42f-354">[3|2] Required.</span></span> <span data-ttu-id="5a42f-355"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-355"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-356">要创建的对象的类型或类。</span><span class="sxs-lookup"><span data-stu-id="5a42f-356">The type or class of object to create.</span></span></param>
        <summary><span data-ttu-id="5a42f-357">返回对 COM 组件提供的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-357">Returns a reference to an object provided by a COM component.</span></span></summary>
        <returns><span data-ttu-id="5a42f-358">对 COM 组件提供的对象的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-358">A reference to an object provided by a COM component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-359">使用 `GetObject` 函数从文件中加载 COM 组件的实例。</span><span class="sxs-lookup"><span data-stu-id="5a42f-359">Use the `GetObject` function to load an instance of a COM component from a file.</span></span> <span data-ttu-id="5a42f-360">下面的示例阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-360">The following example illustrates this.</span></span>  
  
```vb  
Dim CADObject As Object  
CADObject = GetObject("C:\CAD\schema.cad")  
```  
  
 <span data-ttu-id="5a42f-361">此代码运行时，将启动与指定的关联的应用程序， `PathName` 并激活指定文件中的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-361">When this code runs, the application associated with the specified `PathName` is started and the object in the specified file is activated.</span></span>  
  
## <a name="default-cases"></a><span data-ttu-id="5a42f-362">默认情况</span><span class="sxs-lookup"><span data-stu-id="5a42f-362">Default Cases</span></span>  
 <span data-ttu-id="5a42f-363">如果 `PathName` 是 () 长度为零的字符串 `""` ，则 `GetObject` 返回指定类类型的新对象实例。</span><span class="sxs-lookup"><span data-stu-id="5a42f-363">If `PathName` is a zero-length string (`""`), `GetObject` returns a new object instance of the specified class type.</span></span> <span data-ttu-id="5a42f-364">如果 `PathName` 省略该参数，则 `GetObject` 返回在中指定的类类型的当前活动对象 `Class` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-364">If the `PathName` argument is omitted, `GetObject` returns a currently active object of the class type specified in `Class`.</span></span> <span data-ttu-id="5a42f-365">如果不存在指定类型的对象，则会发生错误。</span><span class="sxs-lookup"><span data-stu-id="5a42f-365">If no object of the specified type exists, an error occurs.</span></span>  
  
## <a name="accessing-a-subobject"></a><span data-ttu-id="5a42f-366">访问子对象</span><span class="sxs-lookup"><span data-stu-id="5a42f-366">Accessing a Subobject</span></span>  
 <span data-ttu-id="5a42f-367">某些应用程序允许你激活与文件关联的子对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-367">Some applications allow you to activate a subobject associated with a file.</span></span> <span data-ttu-id="5a42f-368">为此，请将感叹号 () 添加 `!` 到文件名的末尾，并在文件名后跟一个字符串，该字符串标识要激活的文件部分。</span><span class="sxs-lookup"><span data-stu-id="5a42f-368">To do this, add an exclamation point (`!`) to the end of the file name and follow it with a string that identifies the part of the file you want to activate.</span></span> <span data-ttu-id="5a42f-369">有关如何创建此字符串的信息，请参阅创建对象的应用程序的文档。</span><span class="sxs-lookup"><span data-stu-id="5a42f-369">For information on how to create this string, see the documentation for the application that created the object.</span></span>  
  
 <span data-ttu-id="5a42f-370">例如，在绘图应用程序中，可能有多个层用于存储在文件中的绘图。</span><span class="sxs-lookup"><span data-stu-id="5a42f-370">For example, in a drawing application you might have multiple layers to a drawing stored in a file.</span></span> <span data-ttu-id="5a42f-371">你可以使用以下代码在名为的绘图中激活层 `schema.cad` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-371">You could use the following code to activate a layer within a drawing called `schema.cad`.</span></span>  
  
```vb  
layerObject = GetObject("C:\CAD\schema.cad!Layer3")  
```  
  
## <a name="specifying-a-class"></a><span data-ttu-id="5a42f-372">指定类</span><span class="sxs-lookup"><span data-stu-id="5a42f-372">Specifying a Class</span></span>  
 <span data-ttu-id="5a42f-373">如果未指定对象的 `Class` ，则自动化会根据你提供的文件名确定要启动的应用程序和要激活的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-373">If you do not specify the object's `Class`, Automation determines the application to start and the object to activate, based on the file name you provide.</span></span> <span data-ttu-id="5a42f-374">但是，某些文件可以支持多个对象类。</span><span class="sxs-lookup"><span data-stu-id="5a42f-374">Some files, however, can support more than one class of object.</span></span> <span data-ttu-id="5a42f-375">例如，绘制可能支持三种不同类型的对象： `Application` 对象、 `Drawing` 对象和 `Toolbar` 对象，这些对象都属于同一文件。</span><span class="sxs-lookup"><span data-stu-id="5a42f-375">For example, a drawing might support three different types of objects: an `Application` object, a `Drawing` object, and a `Toolbar` object, all of which are part of the same file.</span></span> <span data-ttu-id="5a42f-376">若要指定要激活的文件中的哪个对象，请使用可选的 `Class` 参数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-376">To specify which object in a file you want to activate, use the optional `Class` argument.</span></span> <span data-ttu-id="5a42f-377">下面的示例阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-377">The following example illustrates this.</span></span>  
  
```vb  
Dim drawObj As Object  
drawObj = GetObject("C:\Drawings\sample.drw", "Figment.Drawing")  
```  
  
 <span data-ttu-id="5a42f-378">在前面的示例中， `Figment` 是一个绘图应用程序的名称，并且 `Drawing` 是它支持的对象类型之一。</span><span class="sxs-lookup"><span data-stu-id="5a42f-378">In the preceding example, `Figment` is the name of a drawing application and `Drawing` is one of the object types it supports.</span></span>  
  
## <a name="using-the-object"></a><span data-ttu-id="5a42f-379">使用对象</span><span class="sxs-lookup"><span data-stu-id="5a42f-379">Using the Object</span></span>  
 <span data-ttu-id="5a42f-380">激活某个对象后，可以使用声明的对象变量在代码中引用该对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-380">Once an object is activated, you refer to it in code using the object variable you declared.</span></span> <span data-ttu-id="5a42f-381">在前面的示例中，使用对象变量访问新对象的属性和方法 `drawObj` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-381">In the preceding example, you access properties and methods of the new object using the object variable `drawObj`.</span></span> <span data-ttu-id="5a42f-382">下面的示例阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-382">The following example illustrates this.</span></span>  
  
```vb  
drawObj.Line(9, 90)  
drawObj.InsertText(9, 100, "Hello, world.")  
drawObj.SaveAs("C:\Drawings\sample.drw")  
```  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-383">`GetObject`如果存在对象的当前实例，或者如果要使用加载的文件创建对象，请使用函数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-383">Use the `GetObject` function when there is a current instance of the object or if you want to create the object with a file loaded.</span></span> <span data-ttu-id="5a42f-384">如果没有当前实例，并且你不希望在加载文件的情况下启动对象，请使用 <xref:Microsoft.VisualBasic.Interaction.CreateObject%2A> 函数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-384">If there is no current instance, and you do not want the object started with a file loaded, use the <xref:Microsoft.VisualBasic.Interaction.CreateObject%2A> function.</span></span>  
>   
>  <span data-ttu-id="5a42f-385">如果对象已将自身注册为 ActiveX 单实例对象，则无论调用多少次，都只会创建一个对象实例 `CreateObject` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-385">If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is called.</span></span> <span data-ttu-id="5a42f-386">对于单实例对象， `GetObject` 在使用零长度字符串调用时，始终返回相同的实例 (`""`) 语法，如果省略该参数，则会导致错误 `PathName` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-386">With a single-instance object, `GetObject` always returns the same instance when called with the zero-length string (`""`) syntax, and it causes an error if the `PathName` argument is omitted.</span></span> <span data-ttu-id="5a42f-387">不能使用 `GetObject` 来获取对使用 Visual Basic 创建的类的引用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-387">You cannot use `GetObject` to obtain a reference to a class created with Visual Basic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5a42f-388">`GetObject`函数需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-388">The `GetObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-389">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="5a42f-389">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h846e9b3(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-390">下面的示例使用 `GetObject` 函数获取对特定 Microsoft Excel 工作表的引用 (`excelObj`) 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-390">The following example uses the `GetObject` function to obtain a reference to a specific Microsoft Excel worksheet (`excelObj`).</span></span> <span data-ttu-id="5a42f-391">它使用工作表的 `Application` 属性使 Excel 可见，将其关闭，然后执行其他操作。</span><span class="sxs-lookup"><span data-stu-id="5a42f-391">It uses the worksheet's `Application` property to make Excel visible, to close it, and to perform other actions.</span></span> <span data-ttu-id="5a42f-392">使用两个 API 调用，该 `detectExcel` 过程将查找 Excel，如果正在运行，则将其输入到正在运行的对象表中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-392">Using two API calls, the `detectExcel` procedure looks for Excel, and if it is running, enters it in the Running Object table.</span></span> <span data-ttu-id="5a42f-393">`GetObject`如果 Excel 尚未运行，则第一次调用会导致错误，在此示例中，该 `excelWasNotRunning` 标志将设置为 `True` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-393">The first call to `GetObject` causes an error if Excel is not already running, which in this example causes the `excelWasNotRunning` flag to be set to `True`.</span></span> <span data-ttu-id="5a42f-394">第二次调用 `GetObject` 指定要打开的文件。</span><span class="sxs-lookup"><span data-stu-id="5a42f-394">The second call to `GetObject` specifies a file to open.</span></span> <span data-ttu-id="5a42f-395">如果 Excel 尚未运行，则第二次调用将启动它并返回对指定文件表示的工作表的引用 `test.xls` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-395">If Excel is not already running, the second call starts it and returns a reference to the worksheet represented by the specified file, `test.xls`.</span></span> <span data-ttu-id="5a42f-396">文件必须存在于指定的位置;否则，Visual Basic 引发 <xref:System.IO.FileNotFoundException> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-396">The file must exist in the specified location; otherwise, Visual Basic throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="5a42f-397">接下来，示例代码使 Excel 和包含指定工作表的窗口可见。</span><span class="sxs-lookup"><span data-stu-id="5a42f-397">Next, the example code makes both Excel and the window containing the specified worksheet visible.</span></span>  
  
 <span data-ttu-id="5a42f-398">此示例需要 `Option Strict Off` ，因为它使用后期绑定，其中对象被分配给类型的变量 `Object` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-398">This example requires `Option Strict Off` because it uses late binding, where objects are assigned to variables of type `Object`.</span></span> <span data-ttu-id="5a42f-399">`Option Strict On`如果从 Visual Studio 的 "**项目**" 菜单的 "**添加引用**" 对话框的 " **COM** " 选项卡中添加对 Excel 类型库的引用，则可以指定和声明特定对象类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-399">You can specify `Option Strict On` and declare objects of specific object types if you add a reference to the Excel type library from the **COM** tab of the **Add Reference** dialog box of the **Project** menu in Visual Studio.</span></span>  
  
 [!code-vb[VbVbalrExcelObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#2)]  
  
 [!code-vb[VbVbalrExcelObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#4)]  
  
 [!code-vb[VbVbalrExcelObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#5)]  
  
 <span data-ttu-id="5a42f-400">调用 `getExcel` 函数时，将进行检查以查看 Excel 是否已在运行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-400">When you call the `getExcel` function, a check is made to see if Excel is already running.</span></span> <span data-ttu-id="5a42f-401">如果不是，则创建实例。</span><span class="sxs-lookup"><span data-stu-id="5a42f-401">If it is not, then an instance is created.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5a42f-402">为简单起见，前面的示例假定名为的任何窗口都 `XLMAIN` 属于 Microsoft Excel 的实例。</span><span class="sxs-lookup"><span data-stu-id="5a42f-402">For simplicity, the preceding example assumes that any window called `XLMAIN` belongs to an instance of Microsoft Excel.</span></span> <span data-ttu-id="5a42f-403">如果另一个对象（可能由非法篡改来启动）使用该名称创建了一个窗口，则它将接收你打算用于 Excel 的所有消息。</span><span class="sxs-lookup"><span data-stu-id="5a42f-403">If another object, possibly launched by illicit tampering, created a window with that name, it would receive all the messages you intended for Excel.</span></span> <span data-ttu-id="5a42f-404">在要用于生产的应用程序中，应包括一些更严格的测试，以验证是否 `XLMAIN` 确实属于 Excel。</span><span class="sxs-lookup"><span data-stu-id="5a42f-404">In an application to be used for production, you should include some more rigorous testing to verify that `XLMAIN` really belongs to Excel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5a42f-405">不存在指定类类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-405">No object of the specified class type exists.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="5a42f-406">不存在具有指定路径和文件名的对象。</span><span class="sxs-lookup"><span data-stu-id="5a42f-406">No object with the specified path and file name exists.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)" />
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/declare-statement"><span data-ttu-id="5a42f-407">Declare Statement</span><span class="sxs-lookup"><span data-stu-id="5a42f-407">Declare Statement</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/option-strict-statement"><span data-ttu-id="5a42f-408">Option Strict Statement</span><span class="sxs-lookup"><span data-stu-id="5a42f-408">Option Strict Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSetting">
      <MemberSignature Language="C#" Value="public static string? GetSetting (string AppName, string Section, string Key, string? Default = &quot;&quot;);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSetting(string AppName, string Section, string Key, string Default) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetting (AppName As String, Section As String, Key As String, Optional Default As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member GetSetting : string * string * string * string -&gt; string" Usage="Microsoft.VisualBasic.Interaction.GetSetting (AppName, Section, Key, Default)" />
      <MemberSignature Language="C#" Value="public static string GetSetting (string AppName, string Section, string Key, string Default = &quot;&quot;);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetSetting(string AppName, string Section, string Key, string Default) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Key" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Default" Type="System.String" Index="3" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="5a42f-409">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-409">Required.</span></span> <span data-ttu-id="5a42f-410"><see langword="String" /> 表达式，包含请求其项设置的应用程序或项目的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-410"><see langword="String" /> expression containing the name of the application or project whose key setting is requested.</span></span></param>
        <param name="Section"><span data-ttu-id="5a42f-411">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-411">Required.</span></span> <span data-ttu-id="5a42f-412"><see langword="String" /> 表达式，包含在其中找到项设置的节的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-412"><see langword="String" /> expression containing the name of the section in which the key setting is found.</span></span></param>
        <param name="Key"><span data-ttu-id="5a42f-413">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-413">Required.</span></span> <span data-ttu-id="5a42f-414"><see langword="String" /> 表达式，包含要返回的项设置的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-414"><see langword="String" /> expression containing the name of the key setting to return.</span></span></param>
        <param name="Default"><span data-ttu-id="5a42f-415">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-415">Optional.</span></span> <span data-ttu-id="5a42f-416">包含要返回的值的表达式（如果没有在 <paramref name="Key" /> 设置中设置值）。</span><span class="sxs-lookup"><span data-stu-id="5a42f-416">Expression containing the value to return if no value is set in the <paramref name="Key" /> setting.</span></span> <span data-ttu-id="5a42f-417">如果省略，则假定 <paramref name="Default" /> 为零长度字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="5a42f-417">If omitted, <paramref name="Default" /> is assumed to be a zero-length string ("").</span></span></param>
        <summary><span data-ttu-id="5a42f-418">从 Windows 注册表中应用程序的项返回项设置值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-418">Returns a key setting value from an application's entry in the Windows registry.</span></span> <span data-ttu-id="5a42f-419">与 <see langword="My" /> 相比，<see langword="GetAllSettings" /> 功能在注册表操作方面可为您提供更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-419">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span> <span data-ttu-id="5a42f-420">有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-420">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></summary>
        <returns><span data-ttu-id="5a42f-421">Windows 注册表中某个应用程序的项中的项设置值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-421">A key setting value from an application's entry in the Windows registry.</span></span>  
  
<span data-ttu-id="5a42f-422">与 <see langword="My" /> 相比，<see langword="GetAllSettings" /> 功能在注册表操作方面可为您提供更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-422">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-423">如果在参数中指定的任何项 `GetSetting` 不存在，则 `GetSetting` 返回值 `Default` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-423">If any of the items named in the `GetSetting` arguments do not exist, `GetSetting` returns a value of `Default`.</span></span>  
  
 <span data-ttu-id="5a42f-424">由于它在 `HKEY_LOCAL_USER` 用户以交互方式登录之前处于不活动状态的注册表项下运行，因此 `GetSetting` 要求用户登录。</span><span class="sxs-lookup"><span data-stu-id="5a42f-424">Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetSetting` requires that a user be logged on.</span></span>  
  
 <span data-ttu-id="5a42f-425">要从非交互式进程访问的注册表设置 (例如 Mtx.exe) 应存储在 `HKEY_LOCAL_MACHINE\Software\` 或 `HKEY_USER\DEFAULT\Software` 注册表项下。</span><span class="sxs-lookup"><span data-stu-id="5a42f-425">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
 <span data-ttu-id="5a42f-426">`GetSetting`需要 `Read` <xref:System.Security.Permissions.RegistryPermission> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-426">`GetSetting` requires `Read`<xref:System.Security.Permissions.RegistryPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-427">此示例首先使用 `SaveSetting` 函数为指定为的应用程序在 Windows 注册表中生成项 `AppName` ，然后使用 `GetSetting` 函数显示其中一个设置。</span><span class="sxs-lookup"><span data-stu-id="5a42f-427">This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, and then uses the `GetSetting` function to display one of the settings.</span></span> <span data-ttu-id="5a42f-428">由于 `Default` 指定了参数，因此保证返回某些值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-428">Because the `Default` argument is specified, some value is guaranteed to be returned.</span></span> <span data-ttu-id="5a42f-429">请注意， `Section` 不能用检索到名称 `GetSetting` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-429">Notice that `Section` names cannot be retrieved with `GetSetting`.</span></span> <span data-ttu-id="5a42f-430">最后， `DeleteSetting` 函数将删除应用程序的所有条目。</span><span class="sxs-lookup"><span data-stu-id="5a42f-430">Finally, the `DeleteSetting` function removes all the application's entries.</span></span>  
  
 [!code-vb[VbVbalrCatRef#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-431">一个或多个参数不是 <see langword="String" /> 表达式，或用户没有登录。</span><span class="sxs-lookup"><span data-stu-id="5a42f-431">One or more arguments are not <see langword="String" /> expressions, or user is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Security.Permissions.RegistryPermission" />
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry"><span data-ttu-id="5a42f-432">读取和写入注册表 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-432">Reading from and Writing to the Registry (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IIf">
      <MemberSignature Language="C#" Value="public static object IIf (bool Expression, object TruePart, object FalsePart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object IIf(bool Expression, object TruePart, object FalsePart) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IIf (Expression As Boolean, TruePart As Object, FalsePart As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IIf(bool Expression, System::Object ^ TruePart, System::Object ^ FalsePart);" />
      <MemberSignature Language="F#" Value="static member IIf : bool * obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.IIf (Expression, TruePart, FalsePart)" />
      <MemberSignature Language="ILAsm" Value=".method public static object IIf(bool Expression, object TruePart, object FalsePart) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" />
        <Parameter Name="TruePart" Type="System.Object" />
        <Parameter Name="FalsePart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="5a42f-433">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-433">Required.</span></span> <span data-ttu-id="5a42f-434"><see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-434"><see langword="Boolean" />.</span></span> <span data-ttu-id="5a42f-435">要计算的表达式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-435">The expression you want to evaluate.</span></span></param>
        <param name="TruePart"><span data-ttu-id="5a42f-436">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-436">Required.</span></span> <span data-ttu-id="5a42f-437"><see langword="Object" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-437"><see langword="Object" />.</span></span> <span data-ttu-id="5a42f-438">当 <paramref name="Expression" /> 计算结果为 <see langword="True" /> 时返回。</span><span class="sxs-lookup"><span data-stu-id="5a42f-438">Returned if <paramref name="Expression" /> evaluates to <see langword="True" />.</span></span></param>
        <param name="FalsePart"><span data-ttu-id="5a42f-439">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-439">Required.</span></span> <span data-ttu-id="5a42f-440"><see langword="Object" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-440"><see langword="Object" />.</span></span> <span data-ttu-id="5a42f-441">当 <paramref name="Expression" /> 计算结果为 <see langword="False" /> 时返回。</span><span class="sxs-lookup"><span data-stu-id="5a42f-441">Returned if <paramref name="Expression" /> evaluates to <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5a42f-442">根据表达式的计算，返回两个对象中的一个。</span><span class="sxs-lookup"><span data-stu-id="5a42f-442">Returns one of two objects, depending on the evaluation of an expression.</span></span></summary>
        <returns><span data-ttu-id="5a42f-443">根据表达式的计算，返回两个对象中的一个。</span><span class="sxs-lookup"><span data-stu-id="5a42f-443">Returns one of two objects, depending on the evaluation of an expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-444">`IIf`函数为三元[条件运算符：？：](https://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271)在 Visual C++ 中提供对应项。</span><span class="sxs-lookup"><span data-stu-id="5a42f-444">The `IIf` function provides a counterpart for the ternary [Conditional Operator: ? :](https://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271) in Visual C++.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-445">此示例使用 `IIf` 函数来计算过程的 `testMe` 参数 `checkIt` ，如果数量大于1000，则返回单词 "大"; 否则返回 "Small" 一词。</span><span class="sxs-lookup"><span data-stu-id="5a42f-445">This example uses the `IIf` function to evaluate the `testMe` parameter of the `checkIt` procedure and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small".</span></span>  
  
 [!code-vb[VbVbalrFunctions#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#33)]  
  
 <span data-ttu-id="5a42f-446">请注意，如果 `Option Strict` 为 `On` ，则必须使用 `CStr` 关键字将从的返回显式转换 `Object` 为 `String` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-446">Note that if `Option Strict` is `On`, you must use the `CStr` keyword to explicitly convert the return from `Object` to `String`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/option-strict-statement"><span data-ttu-id="5a42f-447">Option Strict Statement</span><span class="sxs-lookup"><span data-stu-id="5a42f-447">Option Strict Statement</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/functions/type-conversion-functions"><span data-ttu-id="5a42f-448">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="5a42f-448">Type Conversion Functions</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/if-then-else-statement"><span data-ttu-id="5a42f-449">If...Then...Else 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-449">If...Then...Else Statement (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/select-case-statement"><span data-ttu-id="5a42f-450">Select...Case 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-450">Select...Case Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public static string InputBox (string Prompt, string Title = &quot;&quot;, string DefaultResponse = &quot;&quot;, int XPos = -1, int YPos = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InputBox(string Prompt, string Title, string DefaultResponse, int32 XPos, int32 YPos) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As String = &quot;&quot;, Optional DefaultResponse As String = &quot;&quot;, Optional XPos As Integer = -1, Optional YPos As Integer = -1) As String" />
      <MemberSignature Language="F#" Value="static member InputBox : string * string * string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Interaction.InputBox (Prompt, Title, DefaultResponse, XPos, YPos)" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputBox(string Prompt, string Title, string DefaultResponse, int32 XPos, int32 YPos) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Title" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DefaultResponse" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="XPos" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="YPos" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="5a42f-451">必选的 <see langword="String" /> 表达式，作为消息显示在对话框中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-451">Required <see langword="String" /> expression displayed as the message in the dialog box.</span></span> <span data-ttu-id="5a42f-452"><paramref name="Prompt" /> 的最大长度大约为 1024 个字符，具体取决于所用字符的宽度。</span><span class="sxs-lookup"><span data-stu-id="5a42f-452">The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used.</span></span> <span data-ttu-id="5a42f-453">如果 <paramref name="Prompt" /> 包含多行，可以使用回车符 (<see langword="Chr(" />13<see langword=")" />) 或换行符 (<see langword="Chr(" />10<see langword=")" />)，或组合使用回车符/换行符 (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) 来分隔每行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-453">If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (<see langword="Chr(" />13<see langword=")" />), a line feed character (<see langword="Chr(" />10<see langword=")" />), or a carriage return/line feed combination (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) between each line.</span></span></param>
        <param name="Title"><span data-ttu-id="5a42f-454">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-454">Optional.</span></span> <span data-ttu-id="5a42f-455">显示在对话框标题栏中的 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-455"><see langword="String" /> expression displayed in the title bar of the dialog box.</span></span> <span data-ttu-id="5a42f-456">如果省略 <paramref name="Title" />，则标题栏中显示应用程序名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-456">If you omit <paramref name="Title" />, the application name is placed in the title bar.</span></span></param>
        <param name="DefaultResponse"><span data-ttu-id="5a42f-457">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-457">Optional.</span></span> <span data-ttu-id="5a42f-458"><see langword="String" /> 表达式。如果未提供其他输入，则作为默认响应显示在文本框中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-458"><see langword="String" /> expression displayed in the text box as the default response if no other input is provided.</span></span> <span data-ttu-id="5a42f-459">如果省略 <paramref name="DefaultResponse" />，则显示的文本框为空。</span><span class="sxs-lookup"><span data-stu-id="5a42f-459">If you omit <paramref name="DefaultResponse" />, the displayed text box is empty.</span></span></param>
        <param name="XPos"><span data-ttu-id="5a42f-460">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-460">Optional.</span></span> <span data-ttu-id="5a42f-461">数值表达式，指定屏幕左边缘与对话框左边缘之间的距离（以缇为单位）。</span><span class="sxs-lookup"><span data-stu-id="5a42f-461">Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen.</span></span> <span data-ttu-id="5a42f-462">如果省略 <paramref name="XPos" />，则对话框水平居中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-462">If you omit <paramref name="XPos" />, the dialog box is centered horizontally.</span></span></param>
        <param name="YPos"><span data-ttu-id="5a42f-463">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-463">Optional.</span></span> <span data-ttu-id="5a42f-464">数值表达式，指定屏幕顶部与对话框上边缘之间的距离（以缇为单位）。</span><span class="sxs-lookup"><span data-stu-id="5a42f-464">Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen.</span></span> <span data-ttu-id="5a42f-465">如果省略 <paramref name="YPos" />，则对话框垂直定位在屏幕向下大约三分之一处。</span><span class="sxs-lookup"><span data-stu-id="5a42f-465">If you omit <paramref name="YPos" />, the dialog box is positioned vertically approximately one-third of the way down the screen.</span></span></param>
        <summary><span data-ttu-id="5a42f-466">在对话框中显示提示，等待用户输入文本或单击按钮，然后返回包含文本框内容的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-466">Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="5a42f-467">在对话框中显示提示，等待用户输入文本或单击按钮，然后返回包含文本框内容的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-467">Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-468">如果用户单击 " **取消**"，则返回一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-468">If the user clicks **Cancel**, a zero-length string is returned.</span></span>  
  
 <span data-ttu-id="5a42f-469">若要指定除第一个参数以外的其他参数，必须 `InputBox` 在表达式中使用函数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-469">To specify more than the first argument, you must use the `InputBox` function in an expression.</span></span> <span data-ttu-id="5a42f-470">如果省略任何位置参数，则必须保留相应的逗号分隔符。</span><span class="sxs-lookup"><span data-stu-id="5a42f-470">If you omit any positional arguments, you must retain the corresponding comma delimiter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5a42f-471">`InputBox`函数要求在 `UIPermission` <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 级别，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-471">The `InputBox` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-472">有关详细信息，请参阅 [请求权限](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/yd267cce(v%3dvs.100)) 和 <xref:System.Security.Permissions.UIPermission> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-472">For more information, see [Requesting Permissions](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/yd267cce(v%3dvs.100)) and <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a42f-473">此示例演示使用 `InputBox` 函数提示用户输入值的各种方式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-473">This example shows various ways to use the `InputBox` function to prompt the user to enter a value.</span></span> <span data-ttu-id="5a42f-474">如果省略 x 和 y 位置，则对话框将自动居中放置在各自的轴上。</span><span class="sxs-lookup"><span data-stu-id="5a42f-474">If the x and y positions are omitted, the dialog box is automatically centered for the respective axes.</span></span> <span data-ttu-id="5a42f-475">`MyValue`如果用户单击 "确定" 或按 ENTER 键，则该变量包含用户输入的值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-475">The variable `MyValue` contains the value entered by the user if the user clicks OK or presses the ENTER key.</span></span>  
  
 [!code-vb[VbVbalrCatRef#67](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MsgBox">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.MsgBoxResult MsgBox (object Prompt, Microsoft.VisualBasic.MsgBoxStyle Buttons = Microsoft.VisualBasic.MsgBoxStyle.OkOnly, object? Title = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.VisualBasic.MsgBoxResult MsgBox(object Prompt, valuetype Microsoft.VisualBasic.MsgBoxStyle Buttons, object Title) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MsgBox (Prompt As Object, Optional Buttons As MsgBoxStyle = Microsoft.VisualBasic.MsgBoxStyle.OkOnly, Optional Title As Object = Nothing) As MsgBoxResult" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="static member MsgBox : obj * Microsoft.VisualBasic.MsgBoxStyle * obj -&gt; Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Interaction.MsgBox (Prompt, Buttons, Title)" />
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.MsgBoxResult MsgBox (object Prompt, Microsoft.VisualBasic.MsgBoxStyle Buttons = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, object Title = default);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.MsgBoxResult MsgBox(object Prompt, valuetype Microsoft.VisualBasic.MsgBoxStyle Buttons, object Title) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function MsgBox (Prompt As Object, Optional Buttons As MsgBoxStyle = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, Optional Title As Object = Nothing) As MsgBoxResult" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Buttons" Type="Microsoft.VisualBasic.MsgBoxStyle" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Title" Type="System.Object" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Prompt"><span data-ttu-id="5a42f-476">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-476">Required.</span></span> <span data-ttu-id="5a42f-477">作为消息显示在对话框中的 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-477"><see langword="String" /> expression displayed as the message in the dialog box.</span></span> <span data-ttu-id="5a42f-478"><paramref name="Prompt" /> 的最大长度大约为 1024 个字符，具体取决于所用字符的宽度。</span><span class="sxs-lookup"><span data-stu-id="5a42f-478">The maximum length of <paramref name="Prompt" /> is approximately 1024 characters, depending on the width of the characters used.</span></span> <span data-ttu-id="5a42f-479">如果 <paramref name="Prompt" /> 包含多行，可以使用回车符 (<see langword="Chr(" />13<see langword=")" />) 或换行符 (<see langword="Chr(" />10<see langword=")" />)，或组合使用回车符/换行符 (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) 来分隔每行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-479">If <paramref name="Prompt" /> consists of more than one line, you can separate the lines using a carriage return character (<see langword="Chr(" />13<see langword=")" />), a line feed character (<see langword="Chr(" />10<see langword=")" />), or a carriage return/linefeed character combination (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) between each line.</span></span></param>
        <param name="Buttons"><span data-ttu-id="5a42f-480">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-480">Optional.</span></span> <span data-ttu-id="5a42f-481">数值表达式，它是值的总和，指定显示的按钮数目及按钮类型，使用的图标样式，默认按钮的标识以及消息框的样式等。</span><span class="sxs-lookup"><span data-stu-id="5a42f-481">Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box.</span></span> <span data-ttu-id="5a42f-482">如果省略 <paramref name="Buttons" />，则默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="5a42f-482">If you omit <paramref name="Buttons" />, the default value is zero.</span></span></param>
        <param name="Title"><span data-ttu-id="5a42f-483">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-483">Optional.</span></span> <span data-ttu-id="5a42f-484">显示在对话框标题栏中的 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-484"><see langword="String" /> expression displayed in the title bar of the dialog box.</span></span> <span data-ttu-id="5a42f-485">如果省略 <paramref name="Title" />，则标题栏中显示应用程序名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-485">If you omit <paramref name="Title" />, the application name is placed in the title bar.</span></span></param>
        <summary><span data-ttu-id="5a42f-486">在对话框中显示消息，等待用户单击按钮，然后返回一个整数，该整数指示用户单击的按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-486">Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</span></span></summary>
        <returns><span data-ttu-id="5a42f-487">以下值之一：</span><span class="sxs-lookup"><span data-stu-id="5a42f-487">One of the following values:</span></span> <list type="table"><listheader><term><span data-ttu-id="5a42f-488">返回的常量</span><span class="sxs-lookup"><span data-stu-id="5a42f-488">Constant</span></span></term><description><span data-ttu-id="5a42f-489">“值”</span><span class="sxs-lookup"><span data-stu-id="5a42f-489">Value</span></span></description></listheader><item><term><see langword="OK" /></term><description><span data-ttu-id="5a42f-490">1</span><span class="sxs-lookup"><span data-stu-id="5a42f-490">1</span></span></description></item><item><term><see langword="Cancel" /></term><description><span data-ttu-id="5a42f-491">2</span><span class="sxs-lookup"><span data-stu-id="5a42f-491">2</span></span></description></item><item><term><see langword="Abort" /></term><description><span data-ttu-id="5a42f-492">3</span><span class="sxs-lookup"><span data-stu-id="5a42f-492">3</span></span></description></item><item><term><see langword="Retry" /></term><description><span data-ttu-id="5a42f-493">4</span><span class="sxs-lookup"><span data-stu-id="5a42f-493">4</span></span></description></item><item><term><see langword="Ignore" /></term><description><span data-ttu-id="5a42f-494">5</span><span class="sxs-lookup"><span data-stu-id="5a42f-494">5</span></span></description></item><item><term><see langword="Yes" /></term><description><span data-ttu-id="5a42f-495">6</span><span class="sxs-lookup"><span data-stu-id="5a42f-495">6</span></span></description></item><item><term><see langword="No" /></term><description><span data-ttu-id="5a42f-496">7</span><span class="sxs-lookup"><span data-stu-id="5a42f-496">7</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-497">如果省略任何位置参数，则必须保留相应的逗号分隔符。</span><span class="sxs-lookup"><span data-stu-id="5a42f-497">If you omit any positional arguments, you must retain the corresponding comma delimiter.</span></span>  
  
 <span data-ttu-id="5a42f-498">如果对话框显示 "**取消**" 按钮，则按 ESC 键具有与单击 "**取消**" 相同的效果</span><span class="sxs-lookup"><span data-stu-id="5a42f-498">If the dialog box displays a **Cancel** button, pressing the ESC key has the same effect as clicking **Cancel**</span></span>  
  
 <span data-ttu-id="5a42f-499">如果对话框包含 " **帮助** " 按钮，则会为该对话框提供上下文相关帮助。</span><span class="sxs-lookup"><span data-stu-id="5a42f-499">If the dialog box contains a **Help** button, context-sensitive Help is provided for the dialog box.</span></span> <span data-ttu-id="5a42f-500">但是，在关闭其他任一按钮前，不会返回任何值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-500">However, no value is returned until one of the other buttons is chosen.</span></span> <span data-ttu-id="5a42f-501">在 Windows 窗体应用程序中，选择 " **帮助** " 按钮将执行 <xref:System.Windows.Forms.Control.HelpRequested> 窗体的事件。</span><span class="sxs-lookup"><span data-stu-id="5a42f-501">In Windows Form applications, choosing the **Help** button executes the <xref:System.Windows.Forms.Control.HelpRequested> event for the form.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="5a42f-502">`MsgBox`函数要求在 `UIPermission` <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 级别，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-502">The `MsgBox` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-503">有关详细信息，请参阅 <xref:System.Security.Permissions.UIPermission>。</span><span class="sxs-lookup"><span data-stu-id="5a42f-503">For more information, see <xref:System.Security.Permissions.UIPermission>.</span></span>  
  
 <span data-ttu-id="5a42f-504">`MsgBoxStyle`下表列出了枚举值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-504">The `MsgBoxStyle` enumeration values are listed in the following table.</span></span>  
  
|<span data-ttu-id="5a42f-505">成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-505">Member</span></span>|<span data-ttu-id="5a42f-506">“值”</span><span class="sxs-lookup"><span data-stu-id="5a42f-506">Value</span></span>|<span data-ttu-id="5a42f-507">描述</span><span class="sxs-lookup"><span data-stu-id="5a42f-507">Description</span></span>|  
|-|-|-|  
|<span data-ttu-id="5a42f-508">成员</span><span class="sxs-lookup"><span data-stu-id="5a42f-508">Member</span></span>|<span data-ttu-id="5a42f-509">“值”</span><span class="sxs-lookup"><span data-stu-id="5a42f-509">Value</span></span>|<span data-ttu-id="5a42f-510">描述</span><span class="sxs-lookup"><span data-stu-id="5a42f-510">Description</span></span>|  
|`OKOnly`|<span data-ttu-id="5a42f-511">0</span><span class="sxs-lookup"><span data-stu-id="5a42f-511">0</span></span>|<span data-ttu-id="5a42f-512">仅显示 "确定" 按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-512">Displays OK button only.</span></span>|  
|`OKCancel`|<span data-ttu-id="5a42f-513">1</span><span class="sxs-lookup"><span data-stu-id="5a42f-513">1</span></span>|<span data-ttu-id="5a42f-514">显示 "确定" 和 "取消" 按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-514">Displays OK and Cancel buttons.</span></span>|  
|`AbortRetryIgnore`|<span data-ttu-id="5a42f-515">2</span><span class="sxs-lookup"><span data-stu-id="5a42f-515">2</span></span>|<span data-ttu-id="5a42f-516">显示 "中止"、"重试" 和 "忽略" 按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-516">Displays Abort, Retry, and Ignore buttons.</span></span>|  
|`YesNoCancel`|<span data-ttu-id="5a42f-517">3</span><span class="sxs-lookup"><span data-stu-id="5a42f-517">3</span></span>|<span data-ttu-id="5a42f-518">显示 "是"、"否" 和 "取消" 按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-518">Displays Yes, No, and Cancel buttons.</span></span>|  
|`YesNo`|<span data-ttu-id="5a42f-519">4</span><span class="sxs-lookup"><span data-stu-id="5a42f-519">4</span></span>|<span data-ttu-id="5a42f-520">显示 "是" 和 "否" 按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-520">Displays Yes and No buttons.</span></span>|  
|`RetryCancel`|<span data-ttu-id="5a42f-521">5</span><span class="sxs-lookup"><span data-stu-id="5a42f-521">5</span></span>|<span data-ttu-id="5a42f-522">显示 "重试" 和 "取消" 按钮。</span><span class="sxs-lookup"><span data-stu-id="5a42f-522">Displays Retry and Cancel buttons.</span></span>|  
|`Critical`|<span data-ttu-id="5a42f-523">16</span><span class="sxs-lookup"><span data-stu-id="5a42f-523">16</span></span>|<span data-ttu-id="5a42f-524">显示关键消息图标。</span><span class="sxs-lookup"><span data-stu-id="5a42f-524">Displays Critical Message icon.</span></span>|  
|`Question`|<span data-ttu-id="5a42f-525">32</span><span class="sxs-lookup"><span data-stu-id="5a42f-525">32</span></span>|<span data-ttu-id="5a42f-526">显示警告查询图标。</span><span class="sxs-lookup"><span data-stu-id="5a42f-526">Displays Warning Query icon.</span></span>|  
|`Exclamation`|<span data-ttu-id="5a42f-527">48</span><span class="sxs-lookup"><span data-stu-id="5a42f-527">48</span></span>|<span data-ttu-id="5a42f-528">显示警告消息图标。</span><span class="sxs-lookup"><span data-stu-id="5a42f-528">Displays Warning Message icon.</span></span>|  
|`Information`|<span data-ttu-id="5a42f-529">64</span><span class="sxs-lookup"><span data-stu-id="5a42f-529">64</span></span>|<span data-ttu-id="5a42f-530">显示信息消息图标。</span><span class="sxs-lookup"><span data-stu-id="5a42f-530">Displays Information Message icon.</span></span>|  
|`DefaultButton1`|<span data-ttu-id="5a42f-531">0</span><span class="sxs-lookup"><span data-stu-id="5a42f-531">0</span></span>|<span data-ttu-id="5a42f-532">第一个按钮是默认值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-532">First button is default.</span></span>|  
|`DefaultButton2`|<span data-ttu-id="5a42f-533">256</span><span class="sxs-lookup"><span data-stu-id="5a42f-533">256</span></span>|<span data-ttu-id="5a42f-534">第二个按钮是默认值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-534">Second button is default.</span></span>|  
|`DefaultButton3`|<span data-ttu-id="5a42f-535">512</span><span class="sxs-lookup"><span data-stu-id="5a42f-535">512</span></span>|<span data-ttu-id="5a42f-536">第三个按钮是默认值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-536">Third button is default.</span></span>|  
|`ApplicationModal`|<span data-ttu-id="5a42f-537">0</span><span class="sxs-lookup"><span data-stu-id="5a42f-537">0</span></span>|<span data-ttu-id="5a42f-538">应用程序是模式的。</span><span class="sxs-lookup"><span data-stu-id="5a42f-538">Application is modal.</span></span> <span data-ttu-id="5a42f-539">在当前应用程序中继续工作之前，用户必须响应该消息框。</span><span class="sxs-lookup"><span data-stu-id="5a42f-539">The user must respond to the message box before continuing work in the current application.</span></span>|  
|`SystemModal`|<span data-ttu-id="5a42f-540">4096</span><span class="sxs-lookup"><span data-stu-id="5a42f-540">4096</span></span>|<span data-ttu-id="5a42f-541">系统是模式的。</span><span class="sxs-lookup"><span data-stu-id="5a42f-541">System is modal.</span></span> <span data-ttu-id="5a42f-542">所有应用程序都将挂起，直到用户响应消息框。</span><span class="sxs-lookup"><span data-stu-id="5a42f-542">All applications are suspended until the user responds to the message box.</span></span>|  
|`MsgBoxSetForeground`|<span data-ttu-id="5a42f-543">65536</span><span class="sxs-lookup"><span data-stu-id="5a42f-543">65536</span></span>|<span data-ttu-id="5a42f-544">指定消息框窗口作为前台窗口。</span><span class="sxs-lookup"><span data-stu-id="5a42f-544">Specifies the message box window as the foreground window.</span></span>|  
|`MsgBoxRight`|<span data-ttu-id="5a42f-545">524288</span><span class="sxs-lookup"><span data-stu-id="5a42f-545">524288</span></span>|<span data-ttu-id="5a42f-546">文本右对齐。</span><span class="sxs-lookup"><span data-stu-id="5a42f-546">Text is right-aligned.</span></span>|  
|`MsgBoxRtlReading`|<span data-ttu-id="5a42f-547">1048576</span><span class="sxs-lookup"><span data-stu-id="5a42f-547">1048576</span></span>|<span data-ttu-id="5a42f-548">指定文本在希伯来语和阿拉伯语系统中应显示为从右到左阅读。</span><span class="sxs-lookup"><span data-stu-id="5a42f-548">Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.</span></span>|  
  
 <span data-ttu-id="5a42f-549">第一组值 (0-5) 描述对话框中显示的按钮的数目和类型。</span><span class="sxs-lookup"><span data-stu-id="5a42f-549">The first group of values (0-5) describes the number and type of buttons displayed in the dialog box.</span></span> <span data-ttu-id="5a42f-550">第二组 (16，32，48，64) 描述图标样式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-550">The second group (16, 32, 48, 64) describes the icon style.</span></span> <span data-ttu-id="5a42f-551">第三组 (0，256，512) 确定哪个按钮是默认值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-551">The third group (0, 256, 512) determines which button is the default.</span></span> <span data-ttu-id="5a42f-552">第四组 (0，4096) 确定消息框的模态，第五组指定消息框窗口是否为前景窗口，以及文本的对齐方式和方向。</span><span class="sxs-lookup"><span data-stu-id="5a42f-552">The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text.</span></span> <span data-ttu-id="5a42f-553">在添加数字以创建自变量的最终值时 `Buttons` ，请使用每个组中的一个数字。</span><span class="sxs-lookup"><span data-stu-id="5a42f-553">When adding numbers to create a final value for the `Buttons` argument, use only one number from each group.</span></span>
  
## Examples  
 <span data-ttu-id="5a42f-554">此示例使用 `MsgBox` 函数在包含 "是" 和 "否" 按钮的对话框中显示严重错误消息。</span><span class="sxs-lookup"><span data-stu-id="5a42f-554">This example uses the `MsgBox` function to display a critical-error message in a dialog box with Yes and No buttons.</span></span> <span data-ttu-id="5a42f-555">"否" 按钮指定为默认响应。</span><span class="sxs-lookup"><span data-stu-id="5a42f-555">The No button is specified as the default response.</span></span> <span data-ttu-id="5a42f-556">这是通过将 `MsgBox` 常量值组合成一个数值表达式来完成的。</span><span class="sxs-lookup"><span data-stu-id="5a42f-556">This is done by combining the `MsgBox` constant values into one numeric expression.</span></span> <span data-ttu-id="5a42f-557">在这种情况下，将 "是/否" 按钮组合添加 4 () 和 16 (**关键消息** 窗口) 和 256 (第二个按钮作为默认按钮) 提供总计276。</span><span class="sxs-lookup"><span data-stu-id="5a42f-557">In this case, adding 4 (the Yes/No button combination) and 16 (the **Critical Message** window) and 256 (the second button as default button) gives a total of 276.</span></span> <span data-ttu-id="5a42f-558">函数返回的值 `MsgBox` 取决于用户选择的按钮： Yes 返回值 6;No 返回值7。</span><span class="sxs-lookup"><span data-stu-id="5a42f-558">The value returned by the `MsgBox` function depends on the button chosen by the user: Yes returns a value of 6; No returns a value of 7.</span></span>  
  
 [!code-vb[VbVbalrCatRef#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-559"><paramref name="Prompt" /> 不是一个 <see langword="String" /> 表达式，或者 <paramref name="Title" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="5a42f-559"><paramref name="Prompt" /> is not a <see langword="String" /> expression, or <paramref name="Title" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5a42f-560">进程不是以 User Interactive 模式运行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-560">Process is not running in User Interactive mode.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="5a42f-561">一个或多个参数，而不是 <see langword="MsgBoxResult" /> 或 <see langword="MsgBoxStyle" /> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="5a42f-561">One or more parameters not a member of <see langword="MsgBoxResult" /> or <see langword="MsgBoxStyle" /> enumeration.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Partition">
      <MemberSignature Language="C#" Value="public static string Partition (long Number, long Start, long Stop, long Interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Partition(int64 Number, int64 Start, int64 Stop, int64 Interval) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Partition (Number As Long, Start As Long, Stop As Long, Interval As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Partition(long Number, long Start, long Stop, long Interval);" />
      <MemberSignature Language="F#" Value="static member Partition : int64 * int64 * int64 * int64 -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Partition (Number, Start, Stop, Interval)" />
      <MemberSignature Language="ILAsm" Value=".method public static string Partition(int64 Number, int64 Start, int64 Stop, int64 Interval) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Start" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Stop" Type="System.Int64" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Interval" Type="System.Int64" Index="3" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="5a42f-562">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-562">Required.</span></span> <span data-ttu-id="5a42f-563"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-563"><see langword="Long" />.</span></span> <span data-ttu-id="5a42f-564">要在一个计算范围中找到的整数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-564">Whole number that you want to locate within one of the calculated ranges.</span></span></param>
        <param name="Start"><span data-ttu-id="5a42f-565">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-565">Required.</span></span> <span data-ttu-id="5a42f-566"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-566"><see langword="Long" />.</span></span> <span data-ttu-id="5a42f-567">一个整数，指示计算出的范围集的开始值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-567">Whole number that indicates the start of the set of calculated ranges.</span></span> <span data-ttu-id="5a42f-568"><paramref name="Start" /> 不能小于 0。</span><span class="sxs-lookup"><span data-stu-id="5a42f-568"><paramref name="Start" /> cannot be less than 0.</span></span></param>
        <param name="Stop"><span data-ttu-id="5a42f-569">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-569">Required.</span></span> <span data-ttu-id="5a42f-570"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-570"><see langword="Long" />.</span></span> <span data-ttu-id="5a42f-571">一个整数，指示计算出的范围集的结束值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-571">Whole number that indicates the end of the set of calculated ranges.</span></span> <span data-ttu-id="5a42f-572"><paramref name="Stop" /> 不能小于或等于 <paramref name="Start" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-572"><paramref name="Stop" /> cannot be less than or equal to <paramref name="Start" />.</span></span></param>
        <param name="Interval"><span data-ttu-id="5a42f-573">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-573">Required.</span></span> <span data-ttu-id="5a42f-574"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-574"><see langword="Long" />.</span></span> <span data-ttu-id="5a42f-575">一个整数，指示在 <paramref name="Start" /> 和 <paramref name="Stop" /> 之间计算的每个范围大小。</span><span class="sxs-lookup"><span data-stu-id="5a42f-575">Whole number that indicates the size of each range calculated between <paramref name="Start" /> and <paramref name="Stop" />.</span></span> <span data-ttu-id="5a42f-576"><paramref name="Interval" /> 不能小于 1。</span><span class="sxs-lookup"><span data-stu-id="5a42f-576"><paramref name="Interval" /> cannot be less than 1.</span></span></param>
        <summary><span data-ttu-id="5a42f-577">返回一个字符串，该字符串表示包含某个数字的计算范围。</span><span class="sxs-lookup"><span data-stu-id="5a42f-577">Returns a string representing the calculated range that contains a number.</span></span></summary>
        <returns><span data-ttu-id="5a42f-578">一个字符串，该字符串表示包含某个数字的计算范围。</span><span class="sxs-lookup"><span data-stu-id="5a42f-578">A string representing the calculated range that contains a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-579">`Partition`函数计算一组数值范围，每个数值范围包含指定的值的数目 `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-579">The `Partition` function calculates a set of numeric ranges, each containing the number of values specified by `Interval`.</span></span> <span data-ttu-id="5a42f-580">第一个范围从开始 `Start` ，最后一个范围结束于 `Stop` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-580">The first range begins at `Start`, and the last range ends at `Stop`.</span></span> <span data-ttu-id="5a42f-581">然后，该 `Partition` 函数标识包含的 `Number` 范围并返回描述该范围的字符串。</span><span class="sxs-lookup"><span data-stu-id="5a42f-581">The `Partition` function then identifies which range contains `Number` and returns a string describing that range.</span></span> <span data-ttu-id="5a42f-582">该范围以字符串形式表示为 "*lowervalue*：*uppervalue*"，其中范围 (*lowervalue*) 的低端 (*uppervalue*) 通过冒号 (： ) 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-582">The range is represented in the string as "*lowervalue*:*uppervalue*", where the low end of the range (*lowervalue*) is separated from the high end (*uppervalue*) by a colon (:).</span></span>  
  
 <span data-ttu-id="5a42f-583">如有必要，该函数将在 `Partition` *lowervalue* 和 *uppervalue* 之前插入前导空格，以便它们与值的字符串表示形式具有相同数量的字符 (`Stop` + 1) 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-583">If necessary, the `Partition` function inserts leading spaces before *lowervalue* and *uppervalue* so that they both have the same number of characters as the string representation of the value (`Stop` + 1).</span></span> <span data-ttu-id="5a42f-584">这可以确保如果使用 `Partition` 具有多个值的函数的输出 `Number` ，则在执行任何后续排序操作的过程中，将会正确处理生成的文本。</span><span class="sxs-lookup"><span data-stu-id="5a42f-584">This ensures that if you use the output of the `Partition` function with several values of `Number`, the resulting text will be handled properly during any subsequent sort operation.</span></span>  
  
 <span data-ttu-id="5a42f-585">下表显示了使用三组、和计算的范围的示例 `Start` 字符串 `Stop` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-585">The following table shows some sample strings for ranges calculated using three sets of `Start`, `Stop`, and `Interval`.</span></span> <span data-ttu-id="5a42f-586">如果和的值为，则 "第一个范围" 和 "最后一个范围" 列将显示可能的最小和最大范围 `Start` `Stop` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-586">The "First range" and "Last range" columns show the lowest and highest ranges possible given the values of `Start` and `Stop`.</span></span> <span data-ttu-id="5a42f-587">"第一个范围之前" 和 "最后一范围之后" 列显示为 `Number` 小于和大于的值返回的字符串 `Start` `Stop` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-587">The "Before first range" and "After last range" columns show the strings returned for values of `Number` less than `Start` and greater than `Stop`, respectively.</span></span>  
  
|`Start`|`Stop`|`Interval`|<span data-ttu-id="5a42f-588">在第一个范围之前</span><span class="sxs-lookup"><span data-stu-id="5a42f-588">Before first range</span></span>|<span data-ttu-id="5a42f-589">第一个范围</span><span class="sxs-lookup"><span data-stu-id="5a42f-589">First range</span></span>|<span data-ttu-id="5a42f-590">最后一个范围</span><span class="sxs-lookup"><span data-stu-id="5a42f-590">Last range</span></span>|<span data-ttu-id="5a42f-591">最后一个范围之后</span><span class="sxs-lookup"><span data-stu-id="5a42f-591">After last range</span></span>|  
|-|-|-|-|-|-|-|  
|<span data-ttu-id="5a42f-592">0</span><span class="sxs-lookup"><span data-stu-id="5a42f-592">0</span></span>|<span data-ttu-id="5a42f-593">99</span><span class="sxs-lookup"><span data-stu-id="5a42f-593">99</span></span>|<span data-ttu-id="5a42f-594">5</span><span class="sxs-lookup"><span data-stu-id="5a42f-594">5</span></span>|<span data-ttu-id="5a42f-595">"：-1"</span><span class="sxs-lookup"><span data-stu-id="5a42f-595">"   : -1"</span></span>|<span data-ttu-id="5a42f-596">"  0:  4"</span><span class="sxs-lookup"><span data-stu-id="5a42f-596">"  0:  4"</span></span>|<span data-ttu-id="5a42f-597">" 95: 99"</span><span class="sxs-lookup"><span data-stu-id="5a42f-597">" 95: 99"</span></span>|<span data-ttu-id="5a42f-598">"100："</span><span class="sxs-lookup"><span data-stu-id="5a42f-598">"100:   "</span></span>|  
|<span data-ttu-id="5a42f-599">20</span><span class="sxs-lookup"><span data-stu-id="5a42f-599">20</span></span>|<span data-ttu-id="5a42f-600">199</span><span class="sxs-lookup"><span data-stu-id="5a42f-600">199</span></span>|<span data-ttu-id="5a42f-601">10</span><span class="sxs-lookup"><span data-stu-id="5a42f-601">10</span></span>|<span data-ttu-id="5a42f-602">"   : 19"</span><span class="sxs-lookup"><span data-stu-id="5a42f-602">"   : 19"</span></span>|<span data-ttu-id="5a42f-603">" 20: 29"</span><span class="sxs-lookup"><span data-stu-id="5a42f-603">" 20: 29"</span></span>|<span data-ttu-id="5a42f-604">"190:199"</span><span class="sxs-lookup"><span data-stu-id="5a42f-604">"190:199"</span></span>|<span data-ttu-id="5a42f-605">"200:   "</span><span class="sxs-lookup"><span data-stu-id="5a42f-605">"200:   "</span></span>|  
|<span data-ttu-id="5a42f-606">100</span><span class="sxs-lookup"><span data-stu-id="5a42f-606">100</span></span>|<span data-ttu-id="5a42f-607">1010</span><span class="sxs-lookup"><span data-stu-id="5a42f-607">1010</span></span>|<span data-ttu-id="5a42f-608">20</span><span class="sxs-lookup"><span data-stu-id="5a42f-608">20</span></span>|<span data-ttu-id="5a42f-609">"    : 99"</span><span class="sxs-lookup"><span data-stu-id="5a42f-609">"    : 99"</span></span>|<span data-ttu-id="5a42f-610">" 100: 119"</span><span class="sxs-lookup"><span data-stu-id="5a42f-610">" 100: 119"</span></span>|<span data-ttu-id="5a42f-611">"1000:1010"</span><span class="sxs-lookup"><span data-stu-id="5a42f-611">"1000:1010"</span></span>|<span data-ttu-id="5a42f-612">"1011:    "</span><span class="sxs-lookup"><span data-stu-id="5a42f-612">"1011:    "</span></span>|  
  
 <span data-ttu-id="5a42f-613">在上表中，当 `Start` 和 `Stop` 定义一组不能平均除以的数字时，第三行显示结果 `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-613">In the preceding table, the third line shows the result when `Start` and `Stop` define a set of numbers that cannot be evenly divided by `Interval`.</span></span> <span data-ttu-id="5a42f-614">最后一个范围结束于 `Stop` ，它的长度仅为11个数字，即使 `Interval` 为20。</span><span class="sxs-lookup"><span data-stu-id="5a42f-614">The last range ends at `Stop`, making it only 11 numbers long, even though `Interval` is 20.</span></span>  
  
 <span data-ttu-id="5a42f-615">如果 `Interval` 为1，则范围为 " `Number` ： `Number` "，而不考虑 `Start` 和 `Stop` 参数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-615">If `Interval` is 1, the range is "`Number`:`Number`", regardless of the `Start` and `Stop` arguments.</span></span> <span data-ttu-id="5a42f-616">例如，如果 `Number` 为267， `Stop` 为1000，并且 `Interval` 为1，则 `Partition` 返回 "267： 267"。</span><span class="sxs-lookup"><span data-stu-id="5a42f-616">For example, if `Number` is 267, `Stop` is 1000, and `Interval` is 1, `Partition` returns " 267: 267".</span></span>  
  
 <span data-ttu-id="5a42f-617">`Partition` 构造数据库查询时，会很有用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-617">`Partition` can be useful when constructing database queries.</span></span> <span data-ttu-id="5a42f-618">您可以创建一个选择查询，用于显示在各种值范围内发生的订单数，例如，发票值介于1到1000、1001到2000等。</span><span class="sxs-lookup"><span data-stu-id="5a42f-618">You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</span></span>
  
## Examples  
 <span data-ttu-id="5a42f-619">下面的示例设置从1950到2049的数十系列范围。</span><span class="sxs-lookup"><span data-stu-id="5a42f-619">The following example sets up a series of ranges for decades from 1950 through 2049.</span></span> <span data-ttu-id="5a42f-620">它在 `year` 相应的范围内查找值，并返回 `String` 显示范围的值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-620">It locates the value of `year` within the appropriate range and returns a `String` value showing the range.</span></span> <span data-ttu-id="5a42f-621">`year`例如，如果的值为1984，则 `Partition` 返回 "1980:1989"。</span><span class="sxs-lookup"><span data-stu-id="5a42f-621">If `year` has a value of 1984, for example, `Partition` returns "1980:1989".</span></span>  
  
 [!code-vb[VbVbalrFunctions#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-622"><paramref name="Start" /> &lt; 0、<paramref name="Stop" /> &lt;= <paramref name="Start" />或 <paramref name="Interval" /> &lt; 1。</span><span class="sxs-lookup"><span data-stu-id="5a42f-622"><paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" />, or <paramref name="Interval" /> &lt; 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSetting">
      <MemberSignature Language="C#" Value="public static void SaveSetting (string AppName, string Section, string Key, string Setting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSetting(string AppName, string Section, string Key, string Setting) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSetting (AppName As String, Section As String, Key As String, Setting As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSetting(System::String ^ AppName, System::String ^ Section, System::String ^ Key, System::String ^ Setting);" />
      <MemberSignature Language="F#" Value="static member SaveSetting : string * string * string * string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.SaveSetting (AppName, Section, Key, Setting)" />
      <MemberSignature Language="ILAsm" Value=".method public static void SaveSetting(string AppName, string Section, string Key, string Setting) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("windows")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("windows")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Section" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Key" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Setting" Type="System.String" Index="3" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="AppName"><span data-ttu-id="5a42f-623">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-623">Required.</span></span> <span data-ttu-id="5a42f-624"><see langword="String" /> 表达式，包含应用该设置的应用程序或项目的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-624"><see langword="String" /> expression containing the name of the application or project to which the setting applies.</span></span></param>
        <param name="Section"><span data-ttu-id="5a42f-625">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-625">Required.</span></span> <span data-ttu-id="5a42f-626"><see langword="String" /> 表达式，包含在其中保存项设置的节的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-626"><see langword="String" /> expression containing the name of the section in which the key setting is being saved.</span></span></param>
        <param name="Key"><span data-ttu-id="5a42f-627">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-627">Required.</span></span> <span data-ttu-id="5a42f-628"><see langword="String" /> 表达式，包含将保存的项设置的名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-628"><see langword="String" /> expression containing the name of the key setting being saved.</span></span></param>
        <param name="Setting"><span data-ttu-id="5a42f-629">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-629">Required.</span></span> <span data-ttu-id="5a42f-630">包含值的表达式，<paramref name="Key" /> 将被设置为该值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-630">Expression containing the value to which <paramref name="Key" /> is being set.</span></span></param>
        <summary><span data-ttu-id="5a42f-631">在 Windows 注册表中保存或创建应用程序项。</span><span class="sxs-lookup"><span data-stu-id="5a42f-631">Saves or creates an application entry in the Windows registry.</span></span> <span data-ttu-id="5a42f-632">与 <see langword="My" /> 相比，<see langword="SaveSetting" /> 功能在注册表操作方面可为您提供更高的效率和更好的性能。</span><span class="sxs-lookup"><span data-stu-id="5a42f-632">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="SaveSetting" />.</span></span> <span data-ttu-id="5a42f-633">有关详细信息，请参阅 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-633">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-634">`SaveSetting`函数将项添加到 `HKEY_CURRENT_USER\Software\VB and VBA Program Settings` 中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-634">The `SaveSetting` function adds the key to `HKEY_CURRENT_USER\Software\VB and VBA Program Settings`.</span></span>  
  
 <span data-ttu-id="5a42f-635">如果由于任何原因而无法保存密钥设置，则会发生错误。</span><span class="sxs-lookup"><span data-stu-id="5a42f-635">If the key setting cannot be saved for any reason, an error occurs.</span></span>  
  
 <span data-ttu-id="5a42f-636">`SaveSetting` 要求用户登录，因为它在 `HKEY_LOCAL_USER` 用户以交互方式登录之前处于不活动状态的注册表项下运行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-636">`SaveSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.</span></span>  
  
 <span data-ttu-id="5a42f-637">要从非交互式进程访问的注册表设置 (例如 Mtx.exe) 应存储在 `HKEY_LOCAL_MACHINE\Software\` 或 `HKEY_USER\DEFAULT\Software` 注册表项下。</span><span class="sxs-lookup"><span data-stu-id="5a42f-637">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
 <span data-ttu-id="5a42f-638">`SaveSetting`需要 `Write` 和 `Create` <xref:System.Security.Permissions.RegistryPermission> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-638">`SaveSetting` requires `Write` and `Create`<xref:System.Security.Permissions.RegistryPermission> .</span></span>
  
## Examples  
 <span data-ttu-id="5a42f-639">下面的示例首先使用 `SaveSetting` 函数为应用程序的 Windows 注册表中的条目 `MyApp` ，然后使用 `DeleteSetting` 函数将其删除。</span><span class="sxs-lookup"><span data-stu-id="5a42f-639">The following example first uses the `SaveSetting` function to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.</span></span>  
  
 [!code-vb[VbVbalrCatRef#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-640">未能创建注册表项，或用户没有登录。</span><span class="sxs-lookup"><span data-stu-id="5a42f-640">Key registry could not be created, or user is not logged in.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.Security.Permissions.RegistryPermission" />
        <related type="Article" href="/dotnet/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry"><span data-ttu-id="5a42f-641">读取和写入注册表 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-641">Reading from and Writing to the Registry (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Shell">
      <MemberSignature Language="C#" Value="public static int Shell (string PathName, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);" FrameworkAlternate="net-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Shell(string PathName, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shell (PathName As String, Optional Style As AppWinStyle = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, Optional Wait As Boolean = false, Optional Timeout As Integer = -1) As Integer" FrameworkAlternate="net-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member Shell : string * Microsoft.VisualBasic.AppWinStyle * bool * int -&gt; int" Usage="Microsoft.VisualBasic.Interaction.Shell (PathName, Style, Wait, Timeout)" FrameworkAlternate="net-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static int Shell (string Pathname, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Shell(string Pathname, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function Shell (Pathname As String, Optional Style As AppWinStyle = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, Optional Wait As Boolean = false, Optional Timeout As Integer = -1) As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member Shell : string * Microsoft.VisualBasic.AppWinStyle * bool * int -&gt; int" Usage="Microsoft.VisualBasic.Interaction.Shell (Pathname, Style, Wait, Timeout)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Shell(string PathName, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="Style" Type="Microsoft.VisualBasic.AppWinStyle" Index="1" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Wait" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Timeout" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="PathName"><span data-ttu-id="5a42f-642">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-642">Required.</span></span> <span data-ttu-id="5a42f-643"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-643"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-644">要执行的程序的名称，以及所有必需的参数和命令行开关。</span><span class="sxs-lookup"><span data-stu-id="5a42f-644">Name of the program to execute, together with any required arguments and command-line switches.</span></span> <span data-ttu-id="5a42f-645"><paramref name="PathName" /> 也可以包含驱动器和目录路径或文件夹。</span><span class="sxs-lookup"><span data-stu-id="5a42f-645"><paramref name="PathName" /> can also include the drive and the directory path or folder.</span></span>  
 <span data-ttu-id="5a42f-646">如果不知道程序的路径，则可以使用 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> 进行定位。</span><span class="sxs-lookup"><span data-stu-id="5a42f-646">If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it.</span></span> <span data-ttu-id="5a42f-647">例如，你可以调用 <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>，这将返回驱动器 C:\\ 上任意位置每个名为 <c>testFile.txt</c> 的文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="5a42f-647">For example, you can call <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, which returns the full path of every file named <c>testFile.txt</c> anywhere on drive C:\\.</span></span></param>
        <param name="Pathname"><span data-ttu-id="5a42f-648">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-648">Required.</span></span> <span data-ttu-id="5a42f-649"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-649"><see langword="String" />.</span></span> <span data-ttu-id="5a42f-650">要执行的程序的名称，以及所有必需的参数和命令行开关。</span><span class="sxs-lookup"><span data-stu-id="5a42f-650">Name of the program to execute, together with any required arguments and command-line switches.</span></span> <span data-ttu-id="5a42f-651"><paramref name="PathName" /> 也可以包含驱动器和目录路径或文件夹。</span><span class="sxs-lookup"><span data-stu-id="5a42f-651"><paramref name="PathName" /> can also include the drive and the directory path or folder.</span></span>
<span data-ttu-id="5a42f-652">如果不知道程序的路径，则可以使用 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> 进行定位。</span><span class="sxs-lookup"><span data-stu-id="5a42f-652">If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it.</span></span> <span data-ttu-id="5a42f-653">例如，你可以调用 <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>，这将返回驱动器 C:\\ 上任意位置每个名为 <c>testFile.txt</c> 的文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="5a42f-653">For example, you can call <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, which returns the full path of every file named <c>testFile.txt</c> anywhere on drive C:\\.</span></span></param>
        <param name="Style"><span data-ttu-id="5a42f-654">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-654">Optional.</span></span> <span data-ttu-id="5a42f-655"><see langword="AppWinStyle" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-655"><see langword="AppWinStyle" />.</span></span> <span data-ttu-id="5a42f-656">从 <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> 中选择的一个值，该值指定将要在其中运行程序的窗口的样式。</span><span class="sxs-lookup"><span data-stu-id="5a42f-656">A value chosen from the <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> specifying the style of the window in which the program is to run.</span></span> <span data-ttu-id="5a42f-657">如果省略 <paramref name="Style" />，<see langword="Shell" /> 将使用 <see langword="AppWinStyle.MinimizedFocus" /> 以最小化方式启动该程序并获得焦点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-657">If <paramref name="Style" /> is omitted, <see langword="Shell" /> uses <see langword="AppWinStyle.MinimizedFocus" />, which starts the program minimized and with focus.</span></span></param>
        <param name="Wait"><span data-ttu-id="5a42f-658">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-658">Optional.</span></span> <span data-ttu-id="5a42f-659"><see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-659"><see langword="Boolean" />.</span></span> <span data-ttu-id="5a42f-660">一个指示 <see langword="Shell" /> 函数是否应等待程序完成的值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-660">A value indicating whether the <see langword="Shell" /> function should wait for completion of the program.</span></span> <span data-ttu-id="5a42f-661">如果省略 <paramref name="Wait" />，则 <see langword="Shell" /> 将使用 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-661">If <paramref name="Wait" /> is omitted, <see langword="Shell" /> uses <see langword="False" />.</span></span></param>
        <param name="Timeout"><span data-ttu-id="5a42f-662">可选。</span><span class="sxs-lookup"><span data-stu-id="5a42f-662">Optional.</span></span> <span data-ttu-id="5a42f-663"><see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-663"><see langword="Integer" />.</span></span> <span data-ttu-id="5a42f-664">如果 <paramref name="Wait" /> 为 <see langword="True" />，则为等待完成的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-664">The number of milliseconds to wait for completion if <paramref name="Wait" /> is <see langword="True" />.</span></span> <span data-ttu-id="5a42f-665">如果省略 <paramref name="Timeout" />，则 <see langword="Shell" /> 使用 -1，表示没有超时设置并且 <see langword="Shell" /> 到程序结束时才返回。</span><span class="sxs-lookup"><span data-stu-id="5a42f-665">If <paramref name="Timeout" /> is omitted, <see langword="Shell" /> uses -1, which means there is no timeout and <see langword="Shell" /> does not return until the program finishes.</span></span> <span data-ttu-id="5a42f-666">因此，如果省略 <paramref name="Timeout" /> 或将其设置为 -1，则 <see langword="Shell" /> 可能永远不会将控制返回给您的程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-666">Therefore, if you omit <paramref name="Timeout" /> or set it to -1, it is possible that <see langword="Shell" /> might never return control to your program.</span></span></param>
        <summary><span data-ttu-id="5a42f-667">运行一个可执行程序，并且如果该程序仍在运行则返回一个包含该程序的进程 ID 的整数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-667">Runs an executable program and returns an integer containing the program's process ID if it is still running.</span></span></summary>
        <returns><span data-ttu-id="5a42f-668">一个整数，包含该程序仍在运行时的进程 ID。</span><span class="sxs-lookup"><span data-stu-id="5a42f-668">An integer containing the program's process ID if it is still running.</span></span> <span data-ttu-id="5a42f-669">如果该程序已完成执行，则为 0。</span><span class="sxs-lookup"><span data-stu-id="5a42f-669">0 if the program already finished executing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-670">函数的返回值 `Shell` 取决于在返回时中名为的程序是否 `PathName` 仍在执行 `Shell` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-670">The return value of the `Shell` function depends on whether the program named in `PathName` is still executing when `Shell` returns.</span></span> <span data-ttu-id="5a42f-671">如果将设置 `Wait` 为 `True` ，并且在超时过期之前程序完成，则 `Shell` 返回零。</span><span class="sxs-lookup"><span data-stu-id="5a42f-671">If you set `Wait` to `True` and the program finishes before the timeout expires, `Shell` returns zero.</span></span> <span data-ttu-id="5a42f-672">如果超时时间已到，或者省略 `Wait` 或将其设置为 `False` ，则 `Shell` 返回程序的进程 ID。</span><span class="sxs-lookup"><span data-stu-id="5a42f-672">If the timeout expires, or if you omit `Wait` or set it to `False`, `Shell` returns the process ID of the program.</span></span> <span data-ttu-id="5a42f-673">进程 ID 是一个唯一的编号，用于标识正在运行的程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-673">The process ID is a unique number that identifies the running program.</span></span>  
  
## <a name="failure-to-start"></a><span data-ttu-id="5a42f-674">未能启动</span><span class="sxs-lookup"><span data-stu-id="5a42f-674">Failure to Start</span></span>  
 <span data-ttu-id="5a42f-675">如果 `Shell` 函数无法启动命名程序，则 <xref:System.IO.FileNotFoundException> 会发生错误。</span><span class="sxs-lookup"><span data-stu-id="5a42f-675">If the `Shell` function cannot start the named program, a <xref:System.IO.FileNotFoundException> error occurs.</span></span> <span data-ttu-id="5a42f-676">例如，当你尝试 `command.com` 使用从应用程序运行16位程序（例如）时，就会发生这种情况 <xref:System.Windows.Forms?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-676">This can happen, for example, when you attempt to run a 16-bit program, such as `command.com`, from an application using <xref:System.Windows.Forms?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5a42f-677">为解决此问题，你可以运行一个调用所需的16位程序的32位程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-677">For a workaround, you can run a 32-bit program that calls the desired 16-bit program.</span></span> <span data-ttu-id="5a42f-678">对于 `command.com` ，你可以作为替代项运行 `cmd.exe` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-678">In the case of `command.com`, you can run `cmd.exe` as an alternative.</span></span>  
  
## <a name="waiting-for-completion"></a><span data-ttu-id="5a42f-679">等待完成</span><span class="sxs-lookup"><span data-stu-id="5a42f-679">Waiting for Completion</span></span>  
 <span data-ttu-id="5a42f-680">默认情况下， `Shell` 函数以异步方式运行程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-680">By default, the `Shell` function runs the program asynchronously.</span></span> <span data-ttu-id="5a42f-681">这意味着在 `Shell` 执行函数后面的语句之前，使用函数启动的程序可能无法完成执行 `Shell` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-681">This means that a program started with the `Shell` function might not finish executing before the statements following the `Shell` function are executed.</span></span> <span data-ttu-id="5a42f-682">如果希望在继续操作之前等待程序完成，请将设置 `Wait` 为 `True` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-682">If you want to wait for the program to finish before you continue, set `Wait` to `True`.</span></span>  
  
## <a name="determining-the-exit-code"></a><span data-ttu-id="5a42f-683">确定退出代码</span><span class="sxs-lookup"><span data-stu-id="5a42f-683">Determining the Exit Code</span></span>  
 <span data-ttu-id="5a42f-684">进程在终止时可以返回 *退出代码* 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-684">A process can return an *exit code* when it terminates.</span></span> <span data-ttu-id="5a42f-685">但是，你不能使用 `Shell` 来检索此退出代码，因为 `Shell` 如果它等待终止，则返回零，同时还会因为进程在中的不同对象中运行 `Shell` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-685">However, you cannot use `Shell` to retrieve this exit code, because `Shell` returns zero if it waits for termination, and also because the process runs in a different object from `Shell`.</span></span>  
  
 <span data-ttu-id="5a42f-686">若要从进程中检索退出代码，你必须编写自己的代码来启动进程并等待终止。</span><span class="sxs-lookup"><span data-stu-id="5a42f-686">To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination.</span></span> <span data-ttu-id="5a42f-687">下面的示例演示如何启动进程，等待它终止，并检索其退出代码。</span><span class="sxs-lookup"><span data-stu-id="5a42f-687">The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.</span></span>  
  
```vb  
Dim procID As Integer  
Dim newProc As Diagnostics.Process  
newProc = Diagnostics.Process.Start("C:\WINDOWS\NOTEPAD.EXE")  
procID = newProc.Id  
newProc.WaitForExit()  
Dim procEC As Integer = -1  
If newProc.HasExited Then  
    procEC = newProc.ExitCode  
End If  
MsgBox("Process with ID " & CStr(ProcID) & _  
    " terminated with exit code " & CStr(procEC))  
```  
  
## <a name="protecting-the-file-specification"></a><span data-ttu-id="5a42f-688">保护文件规范</span><span class="sxs-lookup"><span data-stu-id="5a42f-688">Protecting the File Specification</span></span>  
 <span data-ttu-id="5a42f-689">应始终将整个路径和文件规范括在引号中，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="5a42f-689">You should always enclose the entire path and file specification in quotation marks, as the following example shows.</span></span>  
  
```vb  
ID = Shell("""C:\Program Files\display.exe"" -a -q", , True, 100000)  
```  
  
 <span data-ttu-id="5a42f-690">字符串文本中 () 的每对相邻 `" "` 的双引号被解释为字符串中的一个双引号字符。</span><span class="sxs-lookup"><span data-stu-id="5a42f-690">Each pair of adjacent double quotation marks (`" "`) within the string literal is interpreted as one double quotation character in the string.</span></span> <span data-ttu-id="5a42f-691">因此，前面的示例向函数提供以下字符串 `Shell` ：</span><span class="sxs-lookup"><span data-stu-id="5a42f-691">Therefore, the preceding example presents the following string to the `Shell` function:</span></span>  
  
```console  
"C:\Program Files\display.exe" -a -q  
```  
  
 <span data-ttu-id="5a42f-692">如果没有用引号引起来的路径，Windows 将 `Program.exe` 在 C：\ 中查找名为的文件目录中，而不是 `display.exe` 在 C:\Program Files 目录中。</span><span class="sxs-lookup"><span data-stu-id="5a42f-692">If you did not have the path enclosed in quotation marks, Windows would look for a file called `Program.exe` in the C:\ directory, instead of `display.exe` in the C:\Program Files directory.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5a42f-693">如果未将路径和文件规范括在引号中，则如果文件名或路径节点包含空格，则会产生安全风险。</span><span class="sxs-lookup"><span data-stu-id="5a42f-693">If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces.</span></span> <span data-ttu-id="5a42f-694">在前面的示例中，路径节点 `\Program Files` 包括空格。</span><span class="sxs-lookup"><span data-stu-id="5a42f-694">In the preceding example, the path node `\Program Files` includes a space.</span></span> <span data-ttu-id="5a42f-695">如果规范不在引号内并且已 `Program.exe` 在 C：中安装了名为的程序 \\ （例如，违法篡改），则 Windows 将执行它，而不是 `display.exe` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-695">If the specification were not inside quotation marks and a program named `Program.exe` had been installed in C:\\, for example by illicit tampering, Windows would execute it instead of `display.exe`.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="5a42f-696">`Shell`函数需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="5a42f-696">The `Shell` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="5a42f-697">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="5a42f-697">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>
  
## Examples  
 <span data-ttu-id="5a42f-698">下面的示例使用 `Shell` 函数来运行用户指定的应用程序。</span><span class="sxs-lookup"><span data-stu-id="5a42f-698">The following example uses the `Shell` function to run an application specified by the user.</span></span> <span data-ttu-id="5a42f-699">指定 <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> 为第二个参数将以正常大小打开应用程序，并为其提供焦点。</span><span class="sxs-lookup"><span data-stu-id="5a42f-699">Specifying <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> as the second argument opens the application in normal size and gives it the focus.</span></span>  
  
 [!code-vb[VbVbalrFunctions#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-700"><paramref name="Style" /> 不在 0 到 9（包含 0 和 9）范围内。</span><span class="sxs-lookup"><span data-stu-id="5a42f-700"><paramref name="Style" /> is not within range 0 through 9, inclusive.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="5a42f-701"><see langword="Shell" /> 找不到 <paramref name="PathName" /> 文件。</span><span class="sxs-lookup"><span data-stu-id="5a42f-701"><see langword="Shell" /> cannot find the <paramref name="PathName" /> file.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="5a42f-702"><paramref name="PathName" /> 为 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="5a42f-702"><paramref name="PathName" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.NullReferenceException" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />
        <altmember cref="Overload:Microsoft.VisualBasic.Interaction.AppActivate" />
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static object Switch (params object[] VarExpr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Switch(object[] VarExpr) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Switch (ParamArray VarExpr As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Switch(... cli::array &lt;System::Object ^&gt; ^ VarExpr);" />
      <MemberSignature Language="F#" Value="static member Switch : obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.Switch VarExpr" />
      <MemberSignature Language="ILAsm" Value=".method public static object Switch(object[] VarExpr) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarExpr" Type="System.Object[]" Index="0" FrameworkAlternate="net-5.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="VarExpr"><span data-ttu-id="5a42f-703">必需。</span><span class="sxs-lookup"><span data-stu-id="5a42f-703">Required.</span></span> <span data-ttu-id="5a42f-704"><see langword="Object" /> 参数数组。</span><span class="sxs-lookup"><span data-stu-id="5a42f-704"><see langword="Object" /> parameter array.</span></span> <span data-ttu-id="5a42f-705">必须具有偶数个元素。</span><span class="sxs-lookup"><span data-stu-id="5a42f-705">Must have an even number of elements.</span></span> <span data-ttu-id="5a42f-706">可以提供以逗号分隔的 <see langword="Object" /> 变量或表达式的列表，或一维 <see langword="Object" /> 元素数组。</span><span class="sxs-lookup"><span data-stu-id="5a42f-706">You can supply a list of <see langword="Object" /> variables or expressions separated by commas, or a single-dimensional array of <see langword="Object" /> elements.</span></span></param>
        <summary><span data-ttu-id="5a42f-707">计算表达式列表，并返回与列表中第一个为 <see langword="Object" /> 的表达式对应的 <see langword="True" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-707">Evaluates a list of expressions and returns an <see langword="Object" /> value corresponding to the first expression in the list that is <see langword="True" />.</span></span></summary>
        <returns><span data-ttu-id="5a42f-708">计算表达式列表，并返回与列表中第一个为 <see langword="Object" /> 的表达式对应的 <see langword="True" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5a42f-708">Evaluates a list of expressions and returns an <see langword="Object" /> value corresponding to the first expression in the list that is <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a42f-709">提供给的参数 `VarExpr` 由成对的表达式和值组成。</span><span class="sxs-lookup"><span data-stu-id="5a42f-709">The argument supplied to `VarExpr` consists of paired expressions and values.</span></span> <span data-ttu-id="5a42f-710">`Switch`函数从中的最低索引到最高索引计算奇数表达式 `VarExpr` ，并返回与计算结果为的第一个表达式关联的偶数值 `True` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-710">The `Switch` function evaluates the odd-numbered expressions from lowest to highest index in `VarExpr`, and returns the even-numbered value associated with the first expression that evaluates to `True`.</span></span> <span data-ttu-id="5a42f-711">例如，如果 `VarExpr(0)` 为 `True` ，则 `Switch` 返回 `VarExpr(1)` ; 如果为，则返回; 如果为，则 `VarExpr(0)` `False` `VarExpr(2)` `True` `Switch` 返回 `VarExpr(3)` ，依此类推。</span><span class="sxs-lookup"><span data-stu-id="5a42f-711">For example, if `VarExpr(0)` is `True`, `Switch` returns `VarExpr(1)`, and if `VarExpr(0)` is `False` but `VarExpr(2)` is `True`, `Switch` returns `VarExpr(3)`, and so on.</span></span>  
  
 <span data-ttu-id="5a42f-712">如果未提供 `VarExpr` 参数，则 `Switch` 返回 `Nothing` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-712">If you do not supply the `VarExpr` argument, `Switch` returns `Nothing`.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="5a42f-713">自变量列表中的表达式可以包含函数调用。</span><span class="sxs-lookup"><span data-stu-id="5a42f-713">The expressions in the argument list can include function calls.</span></span> <span data-ttu-id="5a42f-714">作为对的调用的准备参数列表的一部分 `Switch` ，Visual Basic 编译器将调用每个表达式中的每个函数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-714">As part of preparing the argument list for the call to `Switch`, the Visual Basic compiler calls every function in every expression.</span></span> <span data-ttu-id="5a42f-715">这意味着，如果参数列表中前面的表达式为，则不能依赖于未调用的特定函数 `True` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-715">This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is `True`.</span></span>
  
## Examples  
 <span data-ttu-id="5a42f-716">下面的示例使用 `Switch` 函数返回与 city 名称匹配的语言名称。</span><span class="sxs-lookup"><span data-stu-id="5a42f-716">The following example uses the `Switch` function to return the name of a language that matches the name of a city.</span></span> <span data-ttu-id="5a42f-717">它需要 `Option Strict` `Off` 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-717">It requires that `Option Strict` be `Off`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#48)]  
  
 <span data-ttu-id="5a42f-718">由于 <xref:System.Diagnostics> 命名空间还包含名为的类 <xref:System.Diagnostics.Switch> ，因此 `Switch` 必须使用命名空间限定对函数的调用 <xref:Microsoft.VisualBasic> 。</span><span class="sxs-lookup"><span data-stu-id="5a42f-718">Because the <xref:System.Diagnostics> namespace also contains a class called <xref:System.Diagnostics.Switch>, a call to the `Switch` function must be qualified with the <xref:Microsoft.VisualBasic> namespace.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5a42f-719">参数数目为奇数。</span><span class="sxs-lookup"><span data-stu-id="5a42f-719">Number of arguments is odd.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/statements/select-case-statement"><span data-ttu-id="5a42f-720">Select...Case 语句 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5a42f-720">Select...Case Statement (Visual Basic)</span></span></related>
        <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/procedures/parameter-arrays"><span data-ttu-id="5a42f-721">参数数组</span><span class="sxs-lookup"><span data-stu-id="5a42f-721">Parameter Arrays</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
