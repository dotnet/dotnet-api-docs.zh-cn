<Type Name="VBCodeProvider" FullName="Microsoft.VisualBasic.VBCodeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d03310012e8c874c6981cdaa2ffd2679ffa04e99" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86625090" /></Metadata><TypeSignature Language="C#" Value="public class VBCodeProvider : System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VBCodeProvider extends System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBCodeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class VBCodeProvider&#xA;Inherits CodeDomProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBCodeProvider : System::CodeDom::Compiler::CodeDomProvider" />
  <TypeSignature Language="F#" Value="type VBCodeProvider = class&#xA;    inherit CodeDomProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.Compiler.CodeDomProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="85ba3-101">提供对 Visual Basic 代码生成器和代码编译器的实例的访问权限。</span><span class="sxs-lookup"><span data-stu-id="85ba3-101">Provides access to instances of the Visual Basic code generator and code compiler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85ba3-102">此类提供可用于检索 Visual Basic 和实现的实例的方法 <xref:System.CodeDom.Compiler.ICodeGenerator> <xref:System.CodeDom.Compiler.ICodeCompiler> 。</span><span class="sxs-lookup"><span data-stu-id="85ba3-102">This class provides methods that can be used to retrieve instances of the Visual Basic <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> implementations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85ba3-103">此类包含应用于所有成员的类级别的链接要求和继承要求。</span><span class="sxs-lookup"><span data-stu-id="85ba3-103">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="85ba3-104"><xref:System.Security.SecurityException>当直接调用方或派生类不具有完全信任权限时，将引发。</span><span class="sxs-lookup"><span data-stu-id="85ba3-104">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85ba3-105">下面的示例使用 c # 或 Visual Basic 代码提供程序来编译源文件。</span><span class="sxs-lookup"><span data-stu-id="85ba3-105">The following example uses either the C# or Visual Basic code provider to compile a source file.</span></span> <span data-ttu-id="85ba3-106">该示例将检查输入文件扩展名，并使用相应的 <xref:Microsoft.CSharp.CSharpCodeProvider> 或 <xref:Microsoft.VisualBasic.VBCodeProvider> 进行编译。</span><span class="sxs-lookup"><span data-stu-id="85ba3-106">The example checks the input file extension and uses the corresponding <xref:Microsoft.CSharp.CSharpCodeProvider> or <xref:Microsoft.VisualBasic.VBCodeProvider> for compilation.</span></span>  <span data-ttu-id="85ba3-107">输入文件将编译为可执行文件，并且所有编译错误都将显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="85ba3-107">The input file is compiled into an executable file, and any compilation errors are displayed to the console.</span></span>  
  
 [!code-csharp[CodeDom_CodeProviders#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CodeProviders/CS/source.cs#2)]
 [!code-vb[CodeDom_CodeProviders#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CodeProviders/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
    <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
    <altmember cref="N:System.CodeDom" />
    <altmember cref="N:System.CodeDom.Compiler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85ba3-108">初始化 <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VBCodeProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85ba3-109">初始化 <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-109">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VBCodeProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerOptions As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VBCodeProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.VBCodeProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.VisualBasic.VBCodeProvider" Usage="new Microsoft.VisualBasic.VBCodeProvider providerOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerOptions"><span data-ttu-id="85ba3-110">包含配置文件中的提供程序选项的 <see cref="T:System.Collections.Generic.IDictionary`2" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="85ba3-110">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the provider options from the configuration file.</span></span></param>
        <summary><span data-ttu-id="85ba3-111">使用指定的提供程序选项初始化 <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-111">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> class by using the specified provider options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85ba3-112">的值 `providerOptions` 是从配置文件中的[ &lt; providerOption &gt; ](/dotnet/framework/configure-apps/file-schema/compiler/provideroption-element)元素获取的。</span><span class="sxs-lookup"><span data-stu-id="85ba3-112">The value for `providerOptions` is obtained from the [&lt;providerOption&gt;](/dotnet/framework/configure-apps/file-schema/compiler/provideroption-element) element in the configuration file.</span></span> <span data-ttu-id="85ba3-113">您可以 <xref:Microsoft.VisualBasic.VBCodeProvider> 通过指定元素来标识要使用的版本 `<providerOption>` ，将 "CompilerVersion" 作为选项名称提供，并提供版本号 (例如，使用 "v 3.5" ) 作为选项值。</span><span class="sxs-lookup"><span data-stu-id="85ba3-113">You can identify the version of the <xref:Microsoft.VisualBasic.VBCodeProvider> you want to use by specifying the `<providerOption>` element, supplying "CompilerVersion" as the option name, and supplying the version number (for example, "v3.5") as the option value.</span></span> <span data-ttu-id="85ba3-114">必须在版本号前面加上一个小写 "v"。</span><span class="sxs-lookup"><span data-stu-id="85ba3-114">You must precede the version number with a lower case "v".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85ba3-115">下面的配置文件示例演示如何指定应使用 Visual Basic 代码提供程序的3.5 版。</span><span class="sxs-lookup"><span data-stu-id="85ba3-115">The following configuration file example demonstrates how to specify that version 3.5 of the Visual Basic code provider should be used.</span></span>  
  
```xml  
<configuration>  
  <system.codedom>  
    <compilers>  
      <!-- zero or more compiler elements -->  
      <compiler  
          language="vb;VisualBasic"  
          extension=".vb"  
          type="Microsoft.VisualBasic.VBCodeProvider, System,   
          Version=2.0.3600.0, Culture=neutral,   
          PublicKeyToken=b77a5c561934e089"  
          compilerOptions="/optimize"  
          warningLevel="1" >  
          <providerOption  
            name="CompilerVersion"  
            value="v3.5" />  
        </compiler>  
    </compilers>  
  </system.codedom>  
</configuration>  
```  
  
 <span data-ttu-id="85ba3-116">下面的示例演示如何在创建类的新实例时指定编译器版本 <xref:Microsoft.VisualBasic.VBCodeProvider> 。</span><span class="sxs-lookup"><span data-stu-id="85ba3-116">The following example shows how to specify the compiler version when creating a new instance of the <xref:Microsoft.VisualBasic.VBCodeProvider> class.</span></span>  
  
 [!code-vb[VBProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/vbprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85ba3-117"><paramref name="providerOptions" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-117"><paramref name="providerOptions" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/"><span data-ttu-id="85ba3-118">.NET Framework 的配置文件架构</span><span class="sxs-lookup"><span data-stu-id="85ba3-118">Configuration file schema for the .NET Framework</span></span></related>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/compiler/compilers-element"><span data-ttu-id="85ba3-119">&lt;编译器 &gt; 元素</span><span class="sxs-lookup"><span data-stu-id="85ba3-119">&lt;compilers&gt; Element</span></span></related>
        <related type="Article" href="/dotnet/framework/reflection-and-codedom/specifying-fully-qualified-type-names"><span data-ttu-id="85ba3-120">指定完全限定的类型名称</span><span class="sxs-lookup"><span data-stu-id="85ba3-120">Specifying Fully Qualified Type Names</span></span></related>
        <related type="Article" href="/dotnet/framework/configure-apps/file-schema/compiler/provideroption-element"><span data-ttu-id="85ba3-121">&lt;provideroption &gt; 元素</span><span class="sxs-lookup"><span data-stu-id="85ba3-121">&lt;provideroption&gt; Element</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="override this.CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="vBCodeProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Use CodeDomProvider class")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use CodeDomProvider class")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85ba3-122">获取 Visual Basic 代码编译器的实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-122">Gets an instance of the Visual Basic code compiler.</span></span></summary>
        <returns><span data-ttu-id="85ba3-123">Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 实现的实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-123">An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeCompiler" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="override this.CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="vBCodeProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Use CodeDomProvider class")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use CodeDomProvider class")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85ba3-124">获取 Visual Basic 代码生成器的实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-124">Gets an instance of the Visual Basic code generator.</span></span></summary>
        <returns><span data-ttu-id="85ba3-125">Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 实现的实例。</span><span class="sxs-lookup"><span data-stu-id="85ba3-125">An instance of the Visual Basic <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public override string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.VBCodeProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="Microsoft.VisualBasic.VBCodeProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85ba3-126">获取要在创建源代码文件时使用的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="85ba3-126">Gets the file name extension to use when creating source code files.</span></span></summary>
        <value><span data-ttu-id="85ba3-127">用于生成的源代码文件的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="85ba3-127">The file name extension to use for generated source code files.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85ba3-128">此文件扩展名通常是语言的源代码文件使用的扩展。</span><span class="sxs-lookup"><span data-stu-id="85ba3-128">This file name extension is usually the extension used by the language's source code files.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public override void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="vBCodeProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="85ba3-129">要为其生成代码的 <see cref="T:System.CodeDom.CodeTypeMember" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-129">A <see cref="T:System.CodeDom.CodeTypeMember" /> to generate code for.</span></span></param>
        <param name="writer"><span data-ttu-id="85ba3-130">要向其中进行写入的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-130">The <see cref="T:System.IO.TextWriter" /> to write to.</span></span></param>
        <param name="options"><span data-ttu-id="85ba3-131">生成代码时要使用的 <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-131">The <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> to use when generating the code.</span></span></param>
        <summary><span data-ttu-id="85ba3-132">使用指定的文本编写器和代码生成器选项为指定的类成员生成代码。</span><span class="sxs-lookup"><span data-stu-id="85ba3-132">Generates code for the specified class member using the specified text writer and code generator options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85ba3-133">成员的生成方式有所不同，具体取决于其上下文。</span><span class="sxs-lookup"><span data-stu-id="85ba3-133">Members are generated differently depending on their context.</span></span> <span data-ttu-id="85ba3-134">例如，接口中的方法或枚举中的字段的生成方式不同于类中的方法或字段。</span><span class="sxs-lookup"><span data-stu-id="85ba3-134">For example, a method in an interface or a field in an enumeration is generated differently than a method or field on a class.</span></span>  <span data-ttu-id="85ba3-135">此实现为类上下文中的成员生成代码。</span><span class="sxs-lookup"><span data-stu-id="85ba3-135">This implementation generates code for a member in the class context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85ba3-136">下面的代码示例演示如何使用 <xref:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember%2A> 方法创建要在 CodeDOM 图中使用的代码片段。</span><span class="sxs-lookup"><span data-stu-id="85ba3-136">The following code example shows the use of the <xref:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember%2A> method to create a code fragment to be used in a CodeDOM graph.</span></span> <span data-ttu-id="85ba3-137">此代码示例是为类的方法提供的更大示例的一部分 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> <xref:System.CodeDom.Compiler.CodeDomProvider> 。</span><span class="sxs-lookup"><span data-stu-id="85ba3-137">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method of the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConverter (type As Type) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="vBCodeProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="85ba3-138">要为其检索类型转换器的对象类型。</span><span class="sxs-lookup"><span data-stu-id="85ba3-138">The type of object to retrieve a type converter for.</span></span></param>
        <summary><span data-ttu-id="85ba3-139">获取指定对象类型的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-139">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type of object.</span></span></summary>
        <returns><span data-ttu-id="85ba3-140">指定类型的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-140">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85ba3-141">派生类可以重写此方法，以便为特定的数据类型提供类型转换器的特定类型。</span><span class="sxs-lookup"><span data-stu-id="85ba3-141">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public override System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.VBCodeProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="Microsoft.VisualBasic.VBCodeProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85ba3-142">获取语言功能标识符。</span><span class="sxs-lookup"><span data-stu-id="85ba3-142">Gets a language features identifier.</span></span></summary>
        <value><span data-ttu-id="85ba3-143">指示语言的特殊功能的 <see cref="T:System.CodeDom.Compiler.LanguageOptions" />。</span><span class="sxs-lookup"><span data-stu-id="85ba3-143">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.Compiler.LanguageOptions" />
      </Docs>
    </Member>
  </Members>
</Type>
