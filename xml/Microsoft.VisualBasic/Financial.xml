<Type Name="Financial" FullName="Microsoft.VisualBasic.Financial">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0825b75790a03586803a50f1fea172096a1dbbc3" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86591696" /></Metadata><TypeSignature Language="C#" Value="public sealed class Financial" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Financial extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Financial" />
  <TypeSignature Language="VB.NET" Value="Public Module Financial" />
  <TypeSignature Language="C++ CLI" Value="public ref class Financial sealed" />
  <TypeSignature Language="F#" Value="type Financial = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Financial extends System.Object" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.VisualBasic.CompilerServices.StandardModule]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.VisualBasic.CompilerServices.StandardModule&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="80afe-101"><see langword="Financial" /> 模块包含用于执行财务运算的过程。</span><span class="sxs-lookup"><span data-stu-id="80afe-101">The <see langword="Financial" /> module contains procedures used to perform financial operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-102">此模块支持执行财务计算的 Visual Basic 运行时库成员，如折旧、现有和未来值、利率、回报率和付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-102">This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-103">此示例使用 `Rate` 函数来计算贷款的利率，给定的总付款次数 (`TotPmts`) ，贷款付款 () ，贷款的现值、 () `Payment` `PVal` 、贷款的未来值 (`FVal`) 、指示支付是在付款期的开始还是结束时到期的数字 ()  (`PayType` ，以及预计利率的近似值) `Guess` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-103">This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-104">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-104">Financial Summary</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/"><span data-ttu-id="80afe-105">关键字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="80afe-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="80afe-106">Visual Basic 运行时库成员</span><span class="sxs-lookup"><span data-stu-id="80afe-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="DDB">
      <MemberSignature Language="C#" Value="public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDB (Cost As Double, Salvage As Double, Life As Double, Period As Double, Optional Factor As Double = 2) As Double" />
      <MemberSignature Language="F#" Value="static member DDB : double * double * double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.DDB (Cost, Salvage, Life, Period, Factor)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
        <Parameter Name="Factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="80afe-107">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-107">Required.</span></span> <span data-ttu-id="80afe-108">资产的原始成本。</span><span class="sxs-lookup"><span data-stu-id="80afe-108">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="80afe-109">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-109">Required.</span></span> <span data-ttu-id="80afe-110">资产在使用年限结束时的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-110">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="80afe-111">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-111">Required.</span></span> <span data-ttu-id="80afe-112">资产的使用年限。</span><span class="sxs-lookup"><span data-stu-id="80afe-112">The length of useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="80afe-113">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-113">Required.</span></span> <span data-ttu-id="80afe-114">计算资产折旧所用的周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-114">The period for which asset depreciation is calculated.</span></span></param>
        <param name="Factor"><span data-ttu-id="80afe-115">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-115">Optional.</span></span> <span data-ttu-id="80afe-116">余额递减的速率。</span><span class="sxs-lookup"><span data-stu-id="80afe-116">The rate at which the balance declines.</span></span> <span data-ttu-id="80afe-117">如果省略，则假定为 2（双倍余额递减法）。</span><span class="sxs-lookup"><span data-stu-id="80afe-117">If omitted, 2 (double-declining method) is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-118">返回一个值，它使用双倍余额递减法或指定的其他方法来指定特定时间周期内的资产折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-118">Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns><span data-ttu-id="80afe-119">使用双倍余额递减法或指定的其他方法的特定时间周期内的资产折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-119">The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-120">双倍余额递减法按加速费率计算折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-120">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="80afe-121">在第一期内，折旧率最高，并在连续期间内缩短。</span><span class="sxs-lookup"><span data-stu-id="80afe-121">Depreciation is highest in the first period and decreases in successive periods.</span></span>  
  
 <span data-ttu-id="80afe-122">`Life`和 `Period` 参数必须以相同的单位表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-122">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="80afe-123">例如，如果 `Life` 以月为单位给出，则 `Period` 还必须以月为单位给出。</span><span class="sxs-lookup"><span data-stu-id="80afe-123">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="80afe-124">所有自变量都必须是正数。</span><span class="sxs-lookup"><span data-stu-id="80afe-124">All arguments must be positive numbers.</span></span>  
  
 <span data-ttu-id="80afe-125">该 `DDB` 函数使用以下公式来计算给定期间的折旧：</span><span class="sxs-lookup"><span data-stu-id="80afe-125">The `DDB` function uses the following formula to calculate depreciation for a given period:</span></span>  
  
 <span data-ttu-id="80afe-126">折旧率 = ( # B1 Cost) \* 因素) /生命周期</span><span class="sxs-lookup"><span data-stu-id="80afe-126">Depreciation / Period = ((Cost - Salvage) \* Factor) / Life</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-127">此示例使用 `DDB` 函数返回指定时间段内的资产在指定时间段内的折旧，给定初期成本 (`InitCost`) ，资产的使用年限结束时的残值 (`SalvageVal`) ，资产的总生活 `LifeTime` 时间 () ，以及以年计的计算折旧 () `Depr` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-127">This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-128"><paramref name="Factor" />&lt;= 0， <paramref name="Salvage" /> &lt;0、 <paramref name="Period" /> &lt; = 0 或 <paramref name="Period" /> &gt; <paramref name="Life" /> 。</span><span class="sxs-lookup"><span data-stu-id="80afe-128"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-129">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-129">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FV">
      <MemberSignature Language="C#" Value="public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function FV (Rate As Double, NPer As Double, Pmt As Double, Optional PV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member FV : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.FV (Rate, NPer, Pmt, PV, Due)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-130">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-130">Required.</span></span> <span data-ttu-id="80afe-131">每期的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-131">The interest rate per period.</span></span> <span data-ttu-id="80afe-132">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="80afe-132">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="80afe-133">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-133">Required.</span></span> <span data-ttu-id="80afe-134">年金付款总期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-134">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="80afe-135">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-135">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="80afe-136">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-136">Required.</span></span> <span data-ttu-id="80afe-137">每期应付金额。</span><span class="sxs-lookup"><span data-stu-id="80afe-137">The payment to be made each period.</span></span> <span data-ttu-id="80afe-138">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="80afe-138">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="80afe-139">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-139">Optional.</span></span> <span data-ttu-id="80afe-140">未来一系列付款金额（或一次付清款项）的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-140">The present value (or lump sum) of a series of future payments.</span></span> <span data-ttu-id="80afe-141">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-141">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span> <span data-ttu-id="80afe-142">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-142">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-143">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-143">Optional.</span></span> <span data-ttu-id="80afe-144"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-144">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-145">如果在付款期末付款，则此参数必须为 <see langword="DueDate.EndOfPeriod" />；如果在付款期初付款，则此参数必须为 <see langword="DueDate.BegOfPeriod" />。</span><span class="sxs-lookup"><span data-stu-id="80afe-145">This argument must be either <see langword="DueDate.EndOfPeriod" /> if payments are due at the end of the payment period, or <see langword="DueDate.BegOfPeriod" /> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-146">如果省略，则假定为 <see langword="DueDate.EndOfPeriod" />。</span><span class="sxs-lookup"><span data-stu-id="80afe-146">If omitted, <see langword="DueDate.EndOfPeriod" /> is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-147">返回一值，该值基于等额分期付款和固定利率指定年金的终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-147">Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-148">基于等额分期付款和固定利率的年金的终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-148">The future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-149">年金是一系列经过一段时间的固定现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-149">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="80afe-150">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-150">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-151">`Rate` `NPer` 必须使用以相同单位表示的付款期来计算和参数。</span><span class="sxs-lookup"><span data-stu-id="80afe-151">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="80afe-152">例如，如果 `Rate` 使用月份计算，则 `NPer` 还必须使用月份计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-152">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="80afe-153">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-153">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-154">此示例使用 `FV` 函数返回给定的投资值的未来值（给定百分比费率为每个周期)  (`APR / 12` ，支付 (`TotPmts`) 总数，付款 (`Payment`) ，投资 () 的当前值， `PVal` 以及指示支付是在付款期的开始还是结束 () 的数字 `PayType` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-154">This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="80afe-155">请注意，由于 `Payment` 表示现金支付，因此为负数。</span><span class="sxs-lookup"><span data-stu-id="80afe-155">Note that because `Payment` represents cash paid out, it is a negative number.</span></span>  
  
 [!code-vb[VbVbalrMath#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-156">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-156">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IPmt">
      <MemberSignature Language="C#" Value="public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member IPmt : double * double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.IPmt (Rate, Per, NPer, PV, FV, Due)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-157">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-157">Required.</span></span> <span data-ttu-id="80afe-158">每期的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-158">The interest rate per period.</span></span> <span data-ttu-id="80afe-159">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="80afe-159">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="80afe-160">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-160">Required.</span></span> <span data-ttu-id="80afe-161">1 到 <paramref name="NPer" />.范围内的支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-161">The payment period in the range 1 through <paramref name="NPer" />.</span></span></param>
        <param name="NPer"><span data-ttu-id="80afe-162">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-162">Required.</span></span> <span data-ttu-id="80afe-163">年金付款总期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-163">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="80afe-164">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-164">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="80afe-165">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-165">Required.</span></span> <span data-ttu-id="80afe-166">未来一系列支出或收入的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-166">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="80afe-167">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-167">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="80afe-168">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-168">Optional.</span></span> <span data-ttu-id="80afe-169">完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="80afe-169">The future value or cash balance you want after you've made the final payment.</span></span> <span data-ttu-id="80afe-170">例如，贷款的终值为 0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-170">For example, the future value of a loan is $0 because that's its value after the final payment.</span></span> <span data-ttu-id="80afe-171">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-171">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="80afe-172">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-172">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-173">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-173">Optional.</span></span> <span data-ttu-id="80afe-174"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-174">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-175">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-175">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-176">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-176">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-177">返回一个值，该值基于等额分期付款和固定利率指定年金在给定期间的支付利息。</span><span class="sxs-lookup"><span data-stu-id="80afe-177">Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-178">基于等额分期付款和固定利率的给定周期的支付利息。</span><span class="sxs-lookup"><span data-stu-id="80afe-178">The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-179">年金是一系列经过一段时间的固定现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-179">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="80afe-180">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-180">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-181">`Rate` `NPer` 必须使用以相同单位表示的付款期来计算和参数。</span><span class="sxs-lookup"><span data-stu-id="80afe-181">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="80afe-182">例如，如果 `Rate` 使用月份计算，则 `NPer` 还必须使用月份计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-182">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="80afe-183">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-183">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-184">此示例使用 `IPmt` 函数来计算所有付款值都相等时的付款量。</span><span class="sxs-lookup"><span data-stu-id="80afe-184">This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value.</span></span> <span data-ttu-id="80afe-185">给定的是每个周期的利率 (`APR / 12`) 、需要利息部分的支付周期 () 、的总付款期、 () 、贷款的终值 () 、 `Period` `TotPmts` `PVal` 贷款的未来值 () ， `FVal` 以及指示付款是否在支付期的开始或结束日期 (`PayType`) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-185">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-186"><paramref name="Per" />&lt;= 0 或 <paramref name="Per" /> &gt;<paramref name="NPer" /></span><span class="sxs-lookup"><span data-stu-id="80afe-186"><paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-187">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-187">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IRR">
      <MemberSignature Language="C#" Value="public static double IRR (ref double[] ValueArray, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IRR (ByRef ValueArray As Double(), Optional Guess As Double = 0.1) As Double" />
      <MemberSignature Language="F#" Value="static member IRR : Double[] * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.IRR (ValueArray, Guess)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="80afe-188">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-188">Required.</span></span> <span data-ttu-id="80afe-189">指定现金流值的 <see cref="T:System.Double" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="80afe-189">Array of <see cref="T:System.Double" /> specifying cash flow values.</span></span> <span data-ttu-id="80afe-190">该数组必须至少包含一个负值（支出）和一个正值（收入）。</span><span class="sxs-lookup"><span data-stu-id="80afe-190">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="Guess"><span data-ttu-id="80afe-191">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-191">Optional.</span></span> <span data-ttu-id="80afe-192">指定 <see langword="IRR" /> 将返回的估算值的对象。</span><span class="sxs-lookup"><span data-stu-id="80afe-192">Object specifying value you estimate will be returned by <see langword="IRR" />.</span></span> <span data-ttu-id="80afe-193">如果省略，<paramref name="Guess" /> 便为 0.1 (10%)。</span><span class="sxs-lookup"><span data-stu-id="80afe-193">If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="80afe-194">返回一个值，该值指定一系列定期现金流（支出和收入）的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-194">Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="80afe-195">一系列定期现金流（支出和收入）的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-195">The internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-196">内部报酬率是一项投资的利率，此利率由定期发生的付款和收入组成。</span><span class="sxs-lookup"><span data-stu-id="80afe-196">The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.</span></span>  
  
 <span data-ttu-id="80afe-197">`IRR`函数使用数组中值的顺序来解释付款和收入的顺序。</span><span class="sxs-lookup"><span data-stu-id="80afe-197">The `IRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="80afe-198">请确保按正确的顺序输入付款值和接收值。</span><span class="sxs-lookup"><span data-stu-id="80afe-198">Be sure to enter your payment and receipt values in the correct sequence.</span></span> <span data-ttu-id="80afe-199">每个期间的现金流不需要固定，因为它适用于年金。</span><span class="sxs-lookup"><span data-stu-id="80afe-199">The cash flow for each period does not need to be fixed, as it is for an annuity.</span></span>  
  
 <span data-ttu-id="80afe-200">`IRR` 由迭代计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-200">`IRR` is calculated by iteration.</span></span> <span data-ttu-id="80afe-201">从的值开始 `Guess` ， `IRR` 循环计算，直到结果精确到0.00001%。</span><span class="sxs-lookup"><span data-stu-id="80afe-201">Starting with the value of `Guess`, `IRR` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="80afe-202">如果 `IRR` 在20次尝试后找不到结果，则会失败。</span><span class="sxs-lookup"><span data-stu-id="80afe-202">If `IRR` cannot find a result after 20 tries, it fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-203">在此示例中， `IRR` 函数返回数组中包含的五个现金流的内部收益率 `Values()` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-203">In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="80afe-204">第一个数组元素是一个负现金流，表示业务启动成本。</span><span class="sxs-lookup"><span data-stu-id="80afe-204">The first array element is a negative cash flow representing business start-up costs.</span></span> <span data-ttu-id="80afe-205">其余四个现金流表示后续四年的正现金流。</span><span class="sxs-lookup"><span data-stu-id="80afe-205">The remaining four cash flows represent positive cash flows for the subsequent four years.</span></span> <span data-ttu-id="80afe-206">`Guess` 估计的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-206">`Guess` is the estimated internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-207">数组参数值无效或 <paramref name="Guess" /> &lt; =-1。</span><span class="sxs-lookup"><span data-stu-id="80afe-207">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-208">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-208">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MIRR">
      <MemberSignature Language="C#" Value="public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIRR (ByRef ValueArray As Double(), FinanceRate As Double, ReinvestRate As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MIRR(cli::array &lt;double&gt; ^ % ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="F#" Value="static member MIRR : Double[] * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.MIRR (ValueArray, FinanceRate, ReinvestRate)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
        <Parameter Name="FinanceRate" Type="System.Double" />
        <Parameter Name="ReinvestRate" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="80afe-209">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-209">Required.</span></span> <span data-ttu-id="80afe-210">指定现金流值的 <see cref="T:System.Double" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="80afe-210">Array of <see cref="T:System.Double" /> specifying cash-flow values.</span></span> <span data-ttu-id="80afe-211">该数组必须至少包含一个负值（支出）和一个正值（收入）。</span><span class="sxs-lookup"><span data-stu-id="80afe-211">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="FinanceRate"><span data-ttu-id="80afe-212">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-212">Required.</span></span> <span data-ttu-id="80afe-213">作为财务费用支付的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-213">The interest rate paid as the cost of financing.</span></span></param>
        <param name="ReinvestRate"><span data-ttu-id="80afe-214">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-214">Required.</span></span> <span data-ttu-id="80afe-215">现金再投资收益中的所得利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-215">The interest rate received on gains from cash reinvestment.</span></span></param>
        <summary><span data-ttu-id="80afe-216">返回一个值，该值指定一系列定期现金流（支出和收入）修改后的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-216">Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="80afe-217">一系列定期现金流（支出和收入）修改后的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-217">The modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-218">修改后的内部报酬率是指在支付和收入按不同费率计算时的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-218">The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates.</span></span> <span data-ttu-id="80afe-219">该 `MIRR` 函数将考虑投资的成本 (`FinanceRate`) ，以及在现金 () 利息重新投资上收到的利率 `ReinvestRate` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-219">The `MIRR` function takes into account both the cost of the investment (`FinanceRate`) and the interest rate received on reinvestment of cash (`ReinvestRate`).</span></span>  
  
 <span data-ttu-id="80afe-220">`FinanceRate`和 `ReinvestRate` 参数是以十进制值表示的百分比。</span><span class="sxs-lookup"><span data-stu-id="80afe-220">The `FinanceRate` and `ReinvestRate` arguments are percentages expressed as decimal values.</span></span> <span data-ttu-id="80afe-221">例如，12% 表示为0.12。</span><span class="sxs-lookup"><span data-stu-id="80afe-221">For example, 12 percent is expressed as 0.12.</span></span>  
  
 <span data-ttu-id="80afe-222">`MIRR`函数使用数组中值的顺序来解释付款和收入的顺序。</span><span class="sxs-lookup"><span data-stu-id="80afe-222">The `MIRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="80afe-223">请确保按正确的顺序输入付款值和接收值。</span><span class="sxs-lookup"><span data-stu-id="80afe-223">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-224">此示例使用 `MIRR` 函数来返回数组中包含的一系列现金流的修改后的内部收益率 `Values()` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-224">This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="80afe-225">`LoanAPR` 表示融资利息，并 `InvAPR` 表示在利息重新投资上收到的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-225">`LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.</span></span>  
  
 [!code-vb[VbVbalrMath#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-226"><paramref name="ValueArray" /> 的秩不等于 1，<paramref name="FinanceRate" /> = -1，或 <paramref name="ReinvestRate" /> = -1</span><span class="sxs-lookup"><span data-stu-id="80afe-226">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</span></span></exception>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="80afe-227">出现被零除。</span><span class="sxs-lookup"><span data-stu-id="80afe-227">Division by zero has occurred.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.DivideByZeroException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-228">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-228">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Rate As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member NPer : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.NPer (Rate, Pmt, PV, FV, Due)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-229">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-229">Required.</span></span> <span data-ttu-id="80afe-230">每期的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-230">The interest rate per period.</span></span> <span data-ttu-id="80afe-231">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="80afe-231">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Pmt"><span data-ttu-id="80afe-232">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-232">Required.</span></span> <span data-ttu-id="80afe-233">每期应付金额。</span><span class="sxs-lookup"><span data-stu-id="80afe-233">The payment to be made each period.</span></span> <span data-ttu-id="80afe-234">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="80afe-234">Payments usually contain principal and interest that does not change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="80afe-235">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-235">Required.</span></span> <span data-ttu-id="80afe-236">未来一系列支出或收入的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-236">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="80afe-237">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-237">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="80afe-238">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-238">Optional.</span></span> <span data-ttu-id="80afe-239">完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="80afe-239">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="80afe-240">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-240">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="80afe-241">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-241">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="80afe-242">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-242">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-243">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-243">Optional.</span></span> <span data-ttu-id="80afe-244"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-244">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-245">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-245">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-246">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-246">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-247">返回一个值，该值基于等额分期付款和固定利率指定年金的期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-247">Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-248">基于等额分期付款和固定利率的年金的期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-248">The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-249">年金是在一段时间内进行的一系列固定的现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-249">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="80afe-250">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-250">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-251">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-251">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-252">此示例使用 `NPer` 函数返回必须支付多少期才能支付其值包含在中的贷款 `PVal` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-252">This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`.</span></span> <span data-ttu-id="80afe-253">此外，还提供了每个周期的利率 (`APR / 12`) 、支付 (`Payment`) 、贷款的未来值 (`FVal`) ，以及一个数字，该数字指示付款在支付期的开始或结束时间是否是在 (`PayType`) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-253">Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-254"><paramref name="Rate" /> = 0 和 <paramref name="Pmt" /> = 0</span><span class="sxs-lookup"><span data-stu-id="80afe-254"><paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-255">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-255">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NPV">
      <MemberSignature Language="C#" Value="public static double NPV (double Rate, ref double[] ValueArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPV (Rate As Double, ByRef ValueArray As Double()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double NPV(double Rate, cli::array &lt;double&gt; ^ % ValueArray);" />
      <MemberSignature Language="F#" Value="static member NPV : double * Double[] -&gt; double" Usage="Microsoft.VisualBasic.Financial.NPV (Rate, ValueArray)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="ValueArray" Type="System.Double[]" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-256">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-256">Required.</span></span> <span data-ttu-id="80afe-257">每期的贴现率，以小数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-257">The discount rate over the length of the period, expressed as a decimal.</span></span></param>
        <param name="ValueArray"><span data-ttu-id="80afe-258">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-258">Required.</span></span> <span data-ttu-id="80afe-259">指定现金流值的 <see cref="T:System.Double" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="80afe-259">Array of <see cref="T:System.Double" /> specifying cash flow values.</span></span> <span data-ttu-id="80afe-260">该数组必须至少包含一个负值（支出）和一个正值（收入）。</span><span class="sxs-lookup"><span data-stu-id="80afe-260">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <summary><span data-ttu-id="80afe-261">返回一个值，该值基于一系列定期现金流（支出和收入）和贴现率来指定投资的净现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-261">Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-262">基于一系列定期现金流（支出和收入）和贴现率的投资的净现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-262">The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-263">投资的净现值是未来一系列支付和收入的当前价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-263">The net present value of an investment is the current value of a future series of payments and receipts.</span></span>  
  
 <span data-ttu-id="80afe-264">`NPV`函数使用数组中值的顺序来解释付款和收入的顺序。</span><span class="sxs-lookup"><span data-stu-id="80afe-264">The `NPV` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="80afe-265">请确保按正确的顺序输入付款值和接收值。</span><span class="sxs-lookup"><span data-stu-id="80afe-265">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
 <span data-ttu-id="80afe-266">`NPV`投资在第一个现金流值的日期之前开始一个句点，并以数组中的最后一个现金流值结束。</span><span class="sxs-lookup"><span data-stu-id="80afe-266">The `NPV` investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.</span></span>  
  
 <span data-ttu-id="80afe-267">净现值计算基于未来的现金流。</span><span class="sxs-lookup"><span data-stu-id="80afe-267">The net present value calculation is based on future cash flows.</span></span> <span data-ttu-id="80afe-268">如果第一个现金流在第一个周期开始时出现，则必须将第一个值添加到返回的值 `NPV` 中，而不能包含在的现金流值中 `ValueArray` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-268">If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by `NPV` and must not be included in the cash flow values of `ValueArray`.</span></span>  
  
 <span data-ttu-id="80afe-269">`NPV`函数类似于 `PV` 函数 (现值) ，只不过 `PV` 函数允许现金流在结束或某个时间段的开头开始。</span><span class="sxs-lookup"><span data-stu-id="80afe-269">The `NPV` function is similar to the `PV` function (present value) except that the `PV` function allows cash flows to begin either at the end or the beginning of a period.</span></span> <span data-ttu-id="80afe-270">与可变的 `NPV` 现金流值不同， `PV` 现金流必须在整个投资中固定。</span><span class="sxs-lookup"><span data-stu-id="80afe-270">Unlike the variable `NPV` cash flow values, `PV` cash flows must be fixed throughout the investment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-271">此示例使用 `NPV` 函数返回数组中包含的一系列现金流的净现值 `values()` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-271">This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`.</span></span> <span data-ttu-id="80afe-272">中存储的返回值 `FixedRetRate` 表示固定的内部收益率。</span><span class="sxs-lookup"><span data-stu-id="80afe-272">The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-273"><paramref name="ValueArray" />为 <see langword="Nothing" /> ，秩为 <paramref name="ValueArray" /> &lt; &gt; 1 或 <paramref name="Rate" /> =-1</span><span class="sxs-lookup"><span data-stu-id="80afe-273"><paramref name="ValueArray" /> is <see langword="Nothing" />, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-274">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-274">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Rate As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member Pmt : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.Pmt (Rate, NPer, PV, FV, Due)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-275">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-275">Required.</span></span> <span data-ttu-id="80afe-276">每期的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-276">The interest rate per period.</span></span> <span data-ttu-id="80afe-277">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="80afe-277">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="80afe-278">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-278">Required.</span></span> <span data-ttu-id="80afe-279">年金付款总期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-279">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="80afe-280">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-280">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="80afe-281">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-281">Required.</span></span> <span data-ttu-id="80afe-282">未来一系列要支付的付款现值（或一次付清款项）。</span><span class="sxs-lookup"><span data-stu-id="80afe-282">The present value (or lump sum) that a series of payments to be paid in the future is worth now.</span></span> <span data-ttu-id="80afe-283">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-283">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="80afe-284">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-284">Optional.</span></span> <span data-ttu-id="80afe-285">完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="80afe-285">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="80afe-286">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-286">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="80afe-287">但是，如果您想用 18 年的时间储蓄 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-287">However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="80afe-288">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-288">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-289">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-289">Optional.</span></span> <span data-ttu-id="80afe-290"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-290">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-291">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-291">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-292">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-292">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-293">返回一个值，它基于等额分期付款和固定利率指定年金的付款金额。</span><span class="sxs-lookup"><span data-stu-id="80afe-293">Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-294">基于等额分期付款和固定利率的年金的付款金额。</span><span class="sxs-lookup"><span data-stu-id="80afe-294">The payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-295">年金是在一段时间内进行的一系列固定的现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-295">An annuity is a series of fixed cash payments made during a period of time.</span></span> <span data-ttu-id="80afe-296">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-296">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-297">`Rate` `NPer` 必须使用以相同单位表示的付款期来计算和参数。</span><span class="sxs-lookup"><span data-stu-id="80afe-297">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="80afe-298">例如，如果 `Rate` 使用月份计算，则 `NPer` 还必须使用月份计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-298">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="80afe-299">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-299">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-300">此示例使用 `Pmt` 函数返回在固定期间内贷款的每月支付。</span><span class="sxs-lookup"><span data-stu-id="80afe-300">This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period.</span></span> <span data-ttu-id="80afe-301">给定的是每个期间的利率利率 (`APR / 12`) ， () 的总付款次数 `TotPmts` 、贷款 (的现值或本金) `PVal` 、贷款的未来值 () `FVal` ，以及指示付款是否在支付期的开始或结束日期 `(PayType).`</span><span class="sxs-lookup"><span data-stu-id="80afe-301">Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`</span></span>  
  
 [!code-vb[VbVbalrMath#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-302"><paramref name="NPer" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="80afe-302"><paramref name="NPer" /> = 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-303">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-303">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PPmt">
      <MemberSignature Language="C#" Value="public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member PPmt : double * double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.PPmt (Rate, Per, NPer, PV, FV, Due)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-304">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-304">Required.</span></span> <span data-ttu-id="80afe-305">每期的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-305">The interest rate per period.</span></span> <span data-ttu-id="80afe-306">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="80afe-306">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="80afe-307">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-307">Required.</span></span> <span data-ttu-id="80afe-308">1 到 <paramref name="NPer" />.范围内的支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-308">The payment period in the range 1 through <paramref name="NPer" />.</span></span></param>
        <param name="NPer"><span data-ttu-id="80afe-309">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-309">Required.</span></span> <span data-ttu-id="80afe-310">年金付款总期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-310">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="80afe-311">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-311">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="80afe-312">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-312">Required.</span></span> <span data-ttu-id="80afe-313">指定未来一系列支出或收入的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-313">The current value of a series of future payments or receipts.</span></span> <span data-ttu-id="80afe-314">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-314">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="80afe-315">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-315">Optional.</span></span> <span data-ttu-id="80afe-316">完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="80afe-316">The future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="80afe-317">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-317">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="80afe-318">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-318">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="80afe-319">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-319">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-320">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-320">Optional.</span></span> <span data-ttu-id="80afe-321"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-321">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-322">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-322">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-323">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-323">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-324">返回一个值，该值基于等额分期付款和固定利率指定年金在给定期间的本金付款额。</span><span class="sxs-lookup"><span data-stu-id="80afe-324">Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-325">基于等额分期付款和固定利率的年金在给定期间的本金付款额。</span><span class="sxs-lookup"><span data-stu-id="80afe-325">The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-326">年金是在一段时间内进行的一系列固定的现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-326">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="80afe-327">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-327">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-328">`Rate` `NPer` 必须使用以相同单位表示的付款期来计算和参数。</span><span class="sxs-lookup"><span data-stu-id="80afe-328">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="80afe-329">例如，如果 `Rate` 使用月份计算，则 `NPer` 还必须使用月份计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-329">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="80afe-330">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-330">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-331">此示例使用 `PPmt` 函数来计算当所有付款值都相等时，特定时间段的付款量是 "主体"。</span><span class="sxs-lookup"><span data-stu-id="80afe-331">This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value.</span></span> <span data-ttu-id="80afe-332">给定的是每个周期的利率 (`APR / 12`) 、需要主体部分的支付周期 () 、 (的 `Period` 总付款次数、贷款)  (、贷款的终值)  (、贷款的未来值)  (， `TotPmts` `PVal` `FVal` 以及指示付款是否在支付期的开始或结束时间) `PayType` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-332">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-333"><paramref name="Per" />&lt;= 0 或 <paramref name="Per" /> &gt;<paramref name="NPer" />.</span><span class="sxs-lookup"><span data-stu-id="80afe-333"><paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-334">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-334">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PV">
      <MemberSignature Language="C#" Value="public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PV (Rate As Double, NPer As Double, Pmt As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberSignature Language="F#" Value="static member PV : double * double * double * double * Microsoft.VisualBasic.DueDate -&gt; double" Usage="Microsoft.VisualBasic.Financial.PV (Rate, NPer, Pmt, FV, Due)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="80afe-335">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-335">Required.</span></span> <span data-ttu-id="80afe-336">每期的利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-336">The interest rate per period.</span></span> <span data-ttu-id="80afe-337">例如，如果您的汽车贷款的年利率 (APR) 为 10%，按月还款，则每期利率为 0.1/12（即 0.0083）。</span><span class="sxs-lookup"><span data-stu-id="80afe-337">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="80afe-338">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-338">Required.</span></span> <span data-ttu-id="80afe-339">年金付款总期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-339">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="80afe-340">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-340">For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="80afe-341">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-341">Required.</span></span> <span data-ttu-id="80afe-342">每期应付金额。</span><span class="sxs-lookup"><span data-stu-id="80afe-342">The payment to be made each period.</span></span> <span data-ttu-id="80afe-343">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="80afe-343">Payments usually contain principal and interest that does not change during the life of the annuity.</span></span></param>
        <param name="FV"><span data-ttu-id="80afe-344">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-344">Optional.</span></span> <span data-ttu-id="80afe-345">完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="80afe-345">The future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="80afe-346">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-346">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="80afe-347">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-347">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="80afe-348">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-348">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-349">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-349">Optional.</span></span> <span data-ttu-id="80afe-350"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-350">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-351">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-351">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-352">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-352">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="80afe-353">返回一个值，它基于未来等额分期付款和固定利率指定年金的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-353">Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="80afe-354">基于未来等额分期付款和固定利率的年金的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-354">The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-355">年金是在一段时间内进行的一系列固定的现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-355">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="80afe-356">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-356">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-357">`Rate` `NPer` 必须使用以相同单位表示的付款期来计算和参数。</span><span class="sxs-lookup"><span data-stu-id="80afe-357">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="80afe-358">例如，如果 `Rate` 使用月份计算，则 `NPer` 还必须使用月份计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-358">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="80afe-359">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-359">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-360">在此示例中，该 `PV` 函数将返回 $1000000 年金的现值，该年金将在未来20年中提供 $50000 年。</span><span class="sxs-lookup"><span data-stu-id="80afe-360">In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years.</span></span> <span data-ttu-id="80afe-361">提供的预计年百分比率 (`APR`) ， () 的总付款次数 `TotPmts` 、每个付款 () `YrIncome` 、投资的总未来值 (`FVal`) ，以及一个数字，用于指示是否在支付期的开始或结束时间 (`PayType`) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-361">Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="80afe-362">请注意， `YrIncome` 为负数，因为它表示每年从年金支付的现金。</span><span class="sxs-lookup"><span data-stu-id="80afe-362">Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.</span></span>  
  
 [!code-vb[VbVbalrMath#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-363">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-363">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (NPer As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod, Optional Guess As Double = 0.1) As Double" />
      <MemberSignature Language="F#" Value="static member Rate : double * double * double * double * Microsoft.VisualBasic.DueDate * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.Rate (NPer, Pmt, PV, FV, Due, Guess)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="NPer"><span data-ttu-id="80afe-364">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-364">Required.</span></span> <span data-ttu-id="80afe-365">年金付款总期数。</span><span class="sxs-lookup"><span data-stu-id="80afe-365">The total number of payment periods in the annuity.</span></span> <span data-ttu-id="80afe-366">例如，如果您的汽车贷款的期限为四年，按月还款，则这笔贷款共有 4 \* 12（即 48）个支付周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-366">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 \* 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="80afe-367">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-367">Required.</span></span> <span data-ttu-id="80afe-368">每期应付金额。</span><span class="sxs-lookup"><span data-stu-id="80afe-368">The payment to be made each period.</span></span> <span data-ttu-id="80afe-369">付款金额通常包含本金和利息，该值在年金的有效期限内都不会改变。</span><span class="sxs-lookup"><span data-stu-id="80afe-369">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="80afe-370">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-370">Required.</span></span> <span data-ttu-id="80afe-371">未来一系列支出或收入的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-371">The present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="80afe-372">例如，如果您贷款买车，贷款额就是您将以按月还款的方式付给贷方的现值。</span><span class="sxs-lookup"><span data-stu-id="80afe-372">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="80afe-373">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-373">Optional.</span></span> <span data-ttu-id="80afe-374">完成最后一次付款后所希望的终值或现金余额。</span><span class="sxs-lookup"><span data-stu-id="80afe-374">The future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="80afe-375">例如，贷款的终值为 $0，这是因为终值是末期还款之后的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-375">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="80afe-376">但是，如果您想用 18 年的时间存储 $50,000 作为孩子的教育经费，则 $50,000 是终值。</span><span class="sxs-lookup"><span data-stu-id="80afe-376">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="80afe-377">如果省略，则假定为 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-377">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="80afe-378">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-378">Optional.</span></span> <span data-ttu-id="80afe-379"><see cref="T:Microsoft.VisualBasic.DueDate" /> 类型的对象指定付款何时到期。</span><span class="sxs-lookup"><span data-stu-id="80afe-379">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="80afe-380">如果在付款期末付款，则此参数必须为 <c>DueDate.EndOfPeriod</c>；如果在付款期初付款，则此参数必须为 <c>DueDate.BegOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-380">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="80afe-381">如果省略，则假定 <c>DueDate.EndOfPeriod</c>。</span><span class="sxs-lookup"><span data-stu-id="80afe-381">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <param name="Guess"><span data-ttu-id="80afe-382">可选。</span><span class="sxs-lookup"><span data-stu-id="80afe-382">Optional.</span></span> <span data-ttu-id="80afe-383"><see langword="Rate" /> 将返回估计值。</span><span class="sxs-lookup"><span data-stu-id="80afe-383">The value you estimate is returned by <see langword="Rate" />.</span></span> <span data-ttu-id="80afe-384">如果省略，<paramref name="Guess" /> 便为 0.1 (10%)。</span><span class="sxs-lookup"><span data-stu-id="80afe-384">If omitted, <paramref name="Guess" /> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="80afe-385">返回一个指定每期年金利率的值。</span><span class="sxs-lookup"><span data-stu-id="80afe-385">Returns a value specifying the interest rate per period for an annuity.</span></span></summary>
        <returns><span data-ttu-id="80afe-386">每期的年金利率。</span><span class="sxs-lookup"><span data-stu-id="80afe-386">The interest rate per period for an annuity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-387">年金是在一段时间内进行的一系列固定的现金付款。</span><span class="sxs-lookup"><span data-stu-id="80afe-387">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="80afe-388">年金可以是贷款 (例如住房抵押) 或投资 (如每月储蓄计划) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-388">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="80afe-389">对于所有自变量，现金支付 (如储蓄量) 表示为负数;收到的现金 (如被除数检查) 由正数表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-389">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
 <span data-ttu-id="80afe-390">`Rate` 由迭代计算。</span><span class="sxs-lookup"><span data-stu-id="80afe-390">`Rate` is calculated by iteration.</span></span> <span data-ttu-id="80afe-391">从的值开始 `Guess` ， `Rate` 循环计算，直到结果精确到0.00001%。</span><span class="sxs-lookup"><span data-stu-id="80afe-391">Starting with the value of `Guess`, `Rate` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="80afe-392">如果 `Rate` 在20次尝试后找不到结果，则会失败。</span><span class="sxs-lookup"><span data-stu-id="80afe-392">If `Rate` cannot find a result after 20 tries, it fails.</span></span> <span data-ttu-id="80afe-393">如果推测值为10%，并且 `Rate` 失败，请尝试为使用其他值 `Guess` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-393">If your guess is 10 percent and `Rate` fails, try a different value for `Guess`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-394">此示例使用 `Rate` 函数来计算一笔贷款的利率，给定 () 的总付款次数 `TotPmts` ，贷款支付量 (`Payment`) ，贷款的现值或本金 (`PVal`) ，贷款的未来值 (`FVal`) ，指示支付是在付款期的开始还是结束时到期的数字 () `PayType` ，以及预计利率的近似值 (`Guess`) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-394">This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-395"><paramref name="NPer" />&lt;= 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-395"><paramref name="NPer" /> &lt;= 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-396">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-396">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SLN">
      <MemberSignature Language="C#" Value="public static double SLN (double Cost, double Salvage, double Life);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SLN (Cost As Double, Salvage As Double, Life As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SLN(double Cost, double Salvage, double Life);" />
      <MemberSignature Language="F#" Value="static member SLN : double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.SLN (Cost, Salvage, Life)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="80afe-397">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-397">Required.</span></span> <span data-ttu-id="80afe-398">资产的原始成本。</span><span class="sxs-lookup"><span data-stu-id="80afe-398">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="80afe-399">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-399">Required.</span></span> <span data-ttu-id="80afe-400">资产在使用年限结束时的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-400">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="80afe-401">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-401">Required.</span></span> <span data-ttu-id="80afe-402">资产的使用年限。</span><span class="sxs-lookup"><span data-stu-id="80afe-402">The length of the useful life of the asset.</span></span></param>
        <summary><span data-ttu-id="80afe-403">返回一个值，该值指定资产在一个周期内的直线折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-403">Returns a value specifying the straight-line depreciation of an asset for a single period.</span></span></summary>
        <returns><span data-ttu-id="80afe-404">资产在一个周期内的直线折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-404">The straight-line depreciation of an asset for a single period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-405">此折旧期必须以与参数相同的单位表示 `Life` 。</span><span class="sxs-lookup"><span data-stu-id="80afe-405">The depreciation period must be expressed in the same unit as the `Life` argument.</span></span> <span data-ttu-id="80afe-406">所有自变量都必须是正数。</span><span class="sxs-lookup"><span data-stu-id="80afe-406">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-407">此示例使用 `SLN` 函数在给定资产初始成本的情况下，在单个期间内返回资产的直线折旧 `InitCost`) ，资产的使用年限结束时的残值 (`SalvageVal`) ， (年资产的总寿命 (`LifeTime`) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-407">This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-408"><paramref name="Life" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="80afe-408"><paramref name="Life" /> = 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-409">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-409">Financial Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SYD">
      <MemberSignature Language="C#" Value="public static double SYD (double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SYD (Cost As Double, Salvage As Double, Life As Double, Period As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SYD(double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="F#" Value="static member SYD : double * double * double * double -&gt; double" Usage="Microsoft.VisualBasic.Financial.SYD (Cost, Salvage, Life, Period)" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="80afe-410">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-410">Required.</span></span> <span data-ttu-id="80afe-411">资产的原始成本。</span><span class="sxs-lookup"><span data-stu-id="80afe-411">The initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="80afe-412">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-412">Required.</span></span> <span data-ttu-id="80afe-413">资产在使用年限结束时的价值。</span><span class="sxs-lookup"><span data-stu-id="80afe-413">The value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="80afe-414">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-414">Required.</span></span> <span data-ttu-id="80afe-415">资产的使用年限。</span><span class="sxs-lookup"><span data-stu-id="80afe-415">The length of the useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="80afe-416">必需。</span><span class="sxs-lookup"><span data-stu-id="80afe-416">Required.</span></span> <span data-ttu-id="80afe-417">计算资产折旧所用的周期。</span><span class="sxs-lookup"><span data-stu-id="80afe-417">The period for which asset depreciation is calculated.</span></span></param>
        <summary><span data-ttu-id="80afe-418">返回一个值，该值指定在指定周期内资产的年限总额折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-418">Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></summary>
        <returns><span data-ttu-id="80afe-419">指定周期内资产的年限总额折旧。</span><span class="sxs-lookup"><span data-stu-id="80afe-419">The sum-of-years digits depreciation of an asset for a specified period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80afe-420">`Life`和 `Period` 参数必须以相同的单位表示。</span><span class="sxs-lookup"><span data-stu-id="80afe-420">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="80afe-421">例如，如果 `Life` 以月为单位给出，则 `Period` 还必须以月为单位给出。</span><span class="sxs-lookup"><span data-stu-id="80afe-421">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="80afe-422">所有自变量都必须是正数。</span><span class="sxs-lookup"><span data-stu-id="80afe-422">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80afe-423">此示例使用 `SYD` 函数返回指定时间段内资产的折旧率，给定资产的初始成本 (`InitCost`) 、资产的使用年限结束时的残值 (`SalvageVal`) ，以及年资产的总使用时间 (`LifeTime`) 。</span><span class="sxs-lookup"><span data-stu-id="80afe-423">This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80afe-424"><paramref name="Salvage" />&lt;0， <paramref name="Period" /> &gt;<paramref name="Life" />，或 <paramref name="Period" /> &lt;= 0。</span><span class="sxs-lookup"><span data-stu-id="80afe-424"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/financial-summary"><span data-ttu-id="80afe-425">财务摘要</span><span class="sxs-lookup"><span data-stu-id="80afe-425">Financial Summary</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
