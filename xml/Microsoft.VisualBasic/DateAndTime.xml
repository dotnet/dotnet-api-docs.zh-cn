<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1d0ed9da8245da8623b6ae855fa456aa39ce592" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89791429" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.VisualBasic.CompilerServices.StandardModule]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.VisualBasic.CompilerServices.StandardModule&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b7b5-101"><see langword="DateAndTime" /> 模块包含在日期和时间操作中使用的过程和属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-102">此模块支持 Visual Basic 语言关键字和运行库成员，它们可获取当前日期或时间、执行日期计算、返回日期或时间、设置日期或时间，或设置进程的持续时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-103">此示例使用 `Today` 属性返回当前系统日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/dates-and-times-summary"><span data-ttu-id="9b7b5-104">日期和时间摘要</span><span class="sxs-lookup"><span data-stu-id="9b7b5-104">Dates and Times Summary</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/"><span data-ttu-id="9b7b5-105">关键字 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="9b7b5-106">Visual Basic 运行时库成员</span><span class="sxs-lookup"><span data-stu-id="9b7b5-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b7b5-107">返回一个 <see langword="Date" /> 值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-107">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="9b7b5-108">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-108">Required.</span></span> <span data-ttu-id="9b7b5-109">表示要加上的时间间隔的 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-109">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="9b7b5-110">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-110">Required.</span></span> <span data-ttu-id="9b7b5-111">表示希望添加的时间间隔数的浮点表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-111">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="9b7b5-112">可以为正数（此时将获取今后的日期/时间值），也可以为负数（此时将获取过去的日期/时间值）。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-112">It can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="9b7b5-113">在 <paramref name="Interval" /> 指定小时、分钟或秒时，该参数可以包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-113">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="9b7b5-114">对于其他类型的 <paramref name="Interval" /> 值，将忽略 <paramref name="Number" /> 的所有小数部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-114">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="9b7b5-115">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-115">Required.</span></span> <span data-ttu-id="9b7b5-116">表示要在其基础上加上此时间间隔的日期和时间的表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-116">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="9b7b5-117"><paramref name="DateValue" /> 本身在调用程序中并未改变。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-117"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="9b7b5-118">返回一个值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-118">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-119">包含已添加指定时间间隔的日期和时间值的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-119">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-120">您可以使用 `DateAdd` 函数从日期中添加或减去指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-120">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="9b7b5-121">例如，你可以计算从今天开始的30天或现在的时间45分钟。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-121">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="9b7b5-122">若要将日期添加到 `DateValue` ，可以使用 `DateInterval.Day` 、 `DateInterval.DayOfYear` 或 `DateInterval.Weekday` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-122">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="9b7b5-123">它们被视为等效，因为 `DayOfYear` 和 `Weekday` 不是有意义的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-123">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="9b7b5-124">`DateAdd`函数从不返回无效日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-124">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="9b7b5-125">如有必要，生成的日期的日部分会向下调整到结果年份中结果月份的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-125">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="9b7b5-126">下面的示例将一个月添加到1月31日：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-126">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="9b7b5-127">在此示例中，将 `DateAdd` 返回 `#2/28/1995#` ，而不是 `#2/31/1995#` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-127">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="9b7b5-128">如果 `DateValue` 为 `#1/31/1996#` ，则返回， `#2/29/1996#` 因为1996为闰年。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-128">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b7b5-129">`DateAdd` 使用 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo> 命名空间中类的属性的当前日历设置 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-129">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="9b7b5-130">默认 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 值由 **"控制面板"** 设置确定。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-130">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="9b7b5-131">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法为您添加了额外的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-131">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="9b7b5-132">例如，可以将小数部分（舍入到最接近的毫秒）添加到变量，如下所示 `Date` ：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-132">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="9b7b5-133">`Interval`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-133">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-134">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-134">Enumeration value</span></span>|<span data-ttu-id="9b7b5-135">String</span><span class="sxs-lookup"><span data-stu-id="9b7b5-135">String</span></span>|<span data-ttu-id="9b7b5-136">要添加的时间间隔单位</span><span class="sxs-lookup"><span data-stu-id="9b7b5-136">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="9b7b5-137">d</span><span class="sxs-lookup"><span data-stu-id="9b7b5-137">d</span></span>|<span data-ttu-id="9b7b5-138">那截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-138">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="9b7b5-139">y</span><span class="sxs-lookup"><span data-stu-id="9b7b5-139">y</span></span>|<span data-ttu-id="9b7b5-140">那截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-140">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="9b7b5-141">h</span><span class="sxs-lookup"><span data-stu-id="9b7b5-141">h</span></span>|<span data-ttu-id="9b7b5-142">九点舍入为最接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-142">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="9b7b5-143">n</span><span class="sxs-lookup"><span data-stu-id="9b7b5-143">n</span></span>|<span data-ttu-id="9b7b5-144">分钟舍入为最接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-144">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="9b7b5-145">m</span><span class="sxs-lookup"><span data-stu-id="9b7b5-145">m</span></span>|<span data-ttu-id="9b7b5-146">月底截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-146">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="9b7b5-147">q</span><span class="sxs-lookup"><span data-stu-id="9b7b5-147">q</span></span>|<span data-ttu-id="9b7b5-148">分之截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-148">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="9b7b5-149">s</span><span class="sxs-lookup"><span data-stu-id="9b7b5-149">s</span></span>|<span data-ttu-id="9b7b5-150">数舍入为最接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-150">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="9b7b5-151">w</span><span class="sxs-lookup"><span data-stu-id="9b7b5-151">w</span></span>|<span data-ttu-id="9b7b5-152">那截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-152">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="9b7b5-153">ww</span><span class="sxs-lookup"><span data-stu-id="9b7b5-153">ww</span></span>|<span data-ttu-id="9b7b5-154">周日截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-154">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="9b7b5-155">yyyy</span><span class="sxs-lookup"><span data-stu-id="9b7b5-155">yyyy</span></span>|<span data-ttu-id="9b7b5-156">年截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-156">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-157">此示例使用了一个日期，并使用 `DateAdd` 函数在将来显示指定月份数的对应日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-157">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-158"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-158"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-159"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-159"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9b7b5-160">计算所得日期早于元年 1 月 1 日 00:00:00，或晚于 9999 年 12 月 31 日 23:59:59。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-160">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-161">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-161">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object? DateValue);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="9b7b5-162">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-162">Required.</span></span> <span data-ttu-id="9b7b5-163">表示要加上的时间间隔的 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-163">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="9b7b5-164">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-164">Required.</span></span> <span data-ttu-id="9b7b5-165">表示希望添加的时间间隔数的浮点表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-165">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="9b7b5-166"><paramref name="Number" /> 可以为正数（此时将获取今后的日期/时间值），也可以为负数（此时将获取过去的日期/时间值）。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-166"><paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="9b7b5-167">在 <paramref name="Interval" /> 指定小时、分钟或秒时，该参数可以包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-167">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="9b7b5-168">对于其他类型的 <paramref name="Interval" /> 值，将忽略 <paramref name="Number" /> 的所有小数部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-168">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="9b7b5-169">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-169">Required.</span></span> <span data-ttu-id="9b7b5-170">表示要在其基础上加上此时间间隔的日期和时间的表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-170">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="9b7b5-171"><paramref name="DateValue" /> 本身在调用程序中并未改变。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-171"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="9b7b5-172">返回一个值，其中包含已添加指定时间间隔的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-172">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-173">包含已添加指定时间间隔的日期和时间值的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-173">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-174">您可以使用 `DateAdd` 函数从日期中添加或减去指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-174">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="9b7b5-175">例如，你可以计算从今天开始的30天或现在的时间45分钟。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-175">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="9b7b5-176">若要将日期添加到 `DateValue` ，可以使用 `DateInterval.Day` 、 `DateInterval.DayOfYear` 或 `DateInterval.Weekday` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-176">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="9b7b5-177">它们被视为等效，因为 `DayOfYear` 和 `Weekday` 不是有意义的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-177">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="9b7b5-178">`DateAdd`函数从不返回无效日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-178">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="9b7b5-179">如有必要，生成的日期的日部分会向下调整到结果年份中结果月份的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-179">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="9b7b5-180">下面的示例将一个月添加到1月31日：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-180">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="9b7b5-181">在此示例中，将 `DateAdd` 返回 `#2/28/1995#` ，而不是 `#2/31/1995#` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-181">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="9b7b5-182">如果 `DateValue` 为 `#1/31/1996#` ，则返回， `#2/29/1996#` 因为1996为闰年。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-182">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b7b5-183">`DateAdd` 使用 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo> 命名空间中类的属性的当前日历设置 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-183">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="9b7b5-184">默认 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 值由 **"控制面板"** 设置确定。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-184">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="9b7b5-185">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法为您添加了额外的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-185">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="9b7b5-186">例如，可以将小数部分（舍入到最接近的毫秒）添加到变量，如下所示 `Date` ：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-186">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="9b7b5-187">`Interval`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-187">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-188">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-188">Enumeration value</span></span>|<span data-ttu-id="9b7b5-189">String</span><span class="sxs-lookup"><span data-stu-id="9b7b5-189">String</span></span>|<span data-ttu-id="9b7b5-190">要添加的时间间隔单位</span><span class="sxs-lookup"><span data-stu-id="9b7b5-190">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="9b7b5-191">d</span><span class="sxs-lookup"><span data-stu-id="9b7b5-191">d</span></span>|<span data-ttu-id="9b7b5-192">那截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-192">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="9b7b5-193">y</span><span class="sxs-lookup"><span data-stu-id="9b7b5-193">y</span></span>|<span data-ttu-id="9b7b5-194">那截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-194">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="9b7b5-195">h</span><span class="sxs-lookup"><span data-stu-id="9b7b5-195">h</span></span>|<span data-ttu-id="9b7b5-196">九点舍入为最接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-196">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="9b7b5-197">n</span><span class="sxs-lookup"><span data-stu-id="9b7b5-197">n</span></span>|<span data-ttu-id="9b7b5-198">分钟舍入为最接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-198">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="9b7b5-199">m</span><span class="sxs-lookup"><span data-stu-id="9b7b5-199">m</span></span>|<span data-ttu-id="9b7b5-200">月底截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-200">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="9b7b5-201">q</span><span class="sxs-lookup"><span data-stu-id="9b7b5-201">q</span></span>|<span data-ttu-id="9b7b5-202">分之截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-202">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="9b7b5-203">s</span><span class="sxs-lookup"><span data-stu-id="9b7b5-203">s</span></span>|<span data-ttu-id="9b7b5-204">数舍入为最接近的毫秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-204">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="9b7b5-205">w</span><span class="sxs-lookup"><span data-stu-id="9b7b5-205">w</span></span>|<span data-ttu-id="9b7b5-206">那截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-206">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="9b7b5-207">ww</span><span class="sxs-lookup"><span data-stu-id="9b7b5-207">ww</span></span>|<span data-ttu-id="9b7b5-208">周日截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-208">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="9b7b5-209">yyyy</span><span class="sxs-lookup"><span data-stu-id="9b7b5-209">yyyy</span></span>|<span data-ttu-id="9b7b5-210">年截断为整数值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-210">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-211">此示例使用了一个日期，并使用 `DateAdd` 函数在将来显示指定月份数的对应日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-211">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-212"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-212"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-213"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-213"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9b7b5-214">计算所得日期早于元年 1 月 1 日 00:00:00，或晚于 9999 年 12 月 31 日 23:59:59。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-214">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-215">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-215">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b7b5-216">返回一个值，该值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-216">Returns a value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="9b7b5-217">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-217">Required.</span></span> <span data-ttu-id="9b7b5-218"><see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，表示要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之差的单位的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-218">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="9b7b5-219">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-219">Required.</span></span> <span data-ttu-id="9b7b5-220">要在计算中使用的第一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-220">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="9b7b5-221">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-221">Required.</span></span> <span data-ttu-id="9b7b5-222">要在计算中使用的第二个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-222">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="9b7b5-223">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-223">Optional.</span></span> <span data-ttu-id="9b7b5-224">从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-224">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="9b7b5-225">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-225">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="9b7b5-226">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-226">Optional.</span></span> <span data-ttu-id="9b7b5-227">从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-227">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="9b7b5-228">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-228">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="9b7b5-229">返回一个长值，该长值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-229">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-230">指定两个 <see langword="Date" /> 值之间的时间间隔数的长值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-230">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-231">您可以使用 `DateDiff` 函数来确定两个日期/时间值之间存在多少指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-231">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="9b7b5-232">例如，你可以使用 `DateDiff` 来计算两个日期之间的天数，或当前与一年结束时间之间的周数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-232">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="9b7b5-233">行为</span><span class="sxs-lookup"><span data-stu-id="9b7b5-233">Behavior</span></span>  
  
-   <span data-ttu-id="9b7b5-234">**参数的处理。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-234">**Treatment of Parameters.**</span></span> <span data-ttu-id="9b7b5-235">`DateDiff` 从的值中减去的值 `Date1` `Date2` 可产生不同的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-235">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="9b7b5-236">调用程序中的两个值都未更改。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-236">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="9b7b5-237">**返回值。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-237">**Return Values.**</span></span> <span data-ttu-id="9b7b5-238">由于 `Date1` 和 `Date2` 都是 `Date` 数据类型，因此它们在系统计时器上保存的日期和时间值精确到100毫微秒。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-238">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="9b7b5-239">但是， `DateDiff` 始终以值的形式返回时间间隔数 `Long` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-239">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="9b7b5-240">如果 `Date1` 表示的日期和时间晚于 `Date2` ，则 `DateDiff` 返回负数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-240">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="9b7b5-241">**天间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-241">**Day Intervals.**</span></span> <span data-ttu-id="9b7b5-242">如果 `Interval` 设置为，则将 `DateInterval.DayOfYear` 其视为与相同 `DateInterval.Day` ，因为 `DayOfYear` 对于时间间隔不是有意义的单位。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-242">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="9b7b5-243">**周间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-243">**Week Intervals.**</span></span> <span data-ttu-id="9b7b5-244">如果 `Interval` 设置为 `DateInterval.WeekOfYear` ，则返回值表示一周的第一天与包含的第一周的第一天之间的周数 `Date1` `Date2` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-244">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="9b7b5-245">下面的示例演示了这如何产生不同的结果 `DateInterval.Weekday` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-245">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="9b7b5-246">在前面的示例中，将 `DateDiff` 返回0到0， `wD` 因为这两个日期之间的差异小于七天，但它返回1， `wY` 因为各自日历周的第一天之间存在七天的差异。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-246">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="9b7b5-247">**更大的间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-247">**Larger Intervals.**</span></span> <span data-ttu-id="9b7b5-248">如果 `Interval` 设置为 `DateInterval.Year` ，则只从和的年份部分计算返回值 `Date1` `Date2` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-248">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="9b7b5-249">同样，的返回值 `DateInterval.Month` 只是从参数的年份和月份部分计算得出的，并且是 `DateInterval.Quarter` 从包含两个日期的季度计算得出的。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-249">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="9b7b5-250">例如，比较下一年的12月31日到1月1日时，将 `DateDiff` 为、或返回1， `DateInterval.Year` `DateInterval.Quarter` `DateInterval.Month` 但最多只会有一天的时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-250">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="9b7b5-251">对于包含多个纪元的日语区域性， `DateDiff` 如果不同的年份超过两个或多个纪元，则该方法不会返回不同的年份。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-251">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="9b7b5-252">相反，你可以计算属性返回的值中的差异 <xref:System.DateTime.Year%2A> ，如以下示例中所示： `date2.Year - date1.Year` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-252">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="9b7b5-253">**其他时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-253">**Other Intervals.**</span></span> <span data-ttu-id="9b7b5-254">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法为查找时间间隔中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-254">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="9b7b5-255">例如，您可以使用方法的 `Subtract` 重载形式之一： <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 从变量中减去， <xref:System.TimeSpan> `Date` 返回另一个 `Date` 值，然后 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 减去 `Date` 值以返回 <xref:System.TimeSpan> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-255">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="9b7b5-256">您可以使用进程来找出所需的毫秒数，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-256">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="9b7b5-257">`Interval`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-257">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-258">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-258">Enumeration value</span></span>|<span data-ttu-id="9b7b5-259">字符串值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-259">String value</span></span>|<span data-ttu-id="9b7b5-260">时间差的单位</span><span class="sxs-lookup"><span data-stu-id="9b7b5-260">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="9b7b5-261">"d"</span><span class="sxs-lookup"><span data-stu-id="9b7b5-261">"d"</span></span>|<span data-ttu-id="9b7b5-262">天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-262">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="9b7b5-263">“y”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-263">"y"</span></span>|<span data-ttu-id="9b7b5-264">天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-264">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="9b7b5-265">“h”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-265">"h"</span></span>|<span data-ttu-id="9b7b5-266">小时</span><span class="sxs-lookup"><span data-stu-id="9b7b5-266">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="9b7b5-267">北</span><span class="sxs-lookup"><span data-stu-id="9b7b5-267">"n"</span></span>|<span data-ttu-id="9b7b5-268">Minute</span><span class="sxs-lookup"><span data-stu-id="9b7b5-268">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="9b7b5-269">“m”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-269">"m"</span></span>|<span data-ttu-id="9b7b5-270">Month</span><span class="sxs-lookup"><span data-stu-id="9b7b5-270">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="9b7b5-271">：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-271">"q"</span></span>|<span data-ttu-id="9b7b5-272">Quarter</span><span class="sxs-lookup"><span data-stu-id="9b7b5-272">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="9b7b5-273">“s”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-273">"s"</span></span>|<span data-ttu-id="9b7b5-274">秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-274">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="9b7b5-275">“w”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-275">"w"</span></span>|<span data-ttu-id="9b7b5-276">周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-276">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="9b7b5-277">人员</span><span class="sxs-lookup"><span data-stu-id="9b7b5-277">"ww"</span></span>|<span data-ttu-id="9b7b5-278">日历周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-278">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="9b7b5-279">“yyyy”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-279">"yyyy"</span></span>|<span data-ttu-id="9b7b5-280">Year</span><span class="sxs-lookup"><span data-stu-id="9b7b5-280">Year</span></span>|  
  
 <span data-ttu-id="9b7b5-281">`DayOfWeek`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-281">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-282">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-282">Enumeration value</span></span>|<span data-ttu-id="9b7b5-283">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-283">Value</span></span>|<span data-ttu-id="9b7b5-284">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-284">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="9b7b5-285">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-285">0</span></span>|<span data-ttu-id="9b7b5-286">系统设置中指定的周的第一天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-286">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="9b7b5-287">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-287">1</span></span>|<span data-ttu-id="9b7b5-288">星期日 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-288">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="9b7b5-289">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-289">2</span></span>|<span data-ttu-id="9b7b5-290">星期一 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-290">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="9b7b5-291">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-291">3</span></span>|<span data-ttu-id="9b7b5-292">星期二</span><span class="sxs-lookup"><span data-stu-id="9b7b5-292">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="9b7b5-293">4</span><span class="sxs-lookup"><span data-stu-id="9b7b5-293">4</span></span>|<span data-ttu-id="9b7b5-294">星期三</span><span class="sxs-lookup"><span data-stu-id="9b7b5-294">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="9b7b5-295">5</span><span class="sxs-lookup"><span data-stu-id="9b7b5-295">5</span></span>|<span data-ttu-id="9b7b5-296">星期四</span><span class="sxs-lookup"><span data-stu-id="9b7b5-296">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="9b7b5-297">6</span><span class="sxs-lookup"><span data-stu-id="9b7b5-297">6</span></span>|<span data-ttu-id="9b7b5-298">星期五</span><span class="sxs-lookup"><span data-stu-id="9b7b5-298">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="9b7b5-299">7</span><span class="sxs-lookup"><span data-stu-id="9b7b5-299">7</span></span>|<span data-ttu-id="9b7b5-300">星期六</span><span class="sxs-lookup"><span data-stu-id="9b7b5-300">Saturday</span></span>|  
  
 <span data-ttu-id="9b7b5-301">`WeekOfYear`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-301">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-302">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-302">Enumeration value</span></span>|<span data-ttu-id="9b7b5-303">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-303">Value</span></span>|<span data-ttu-id="9b7b5-304">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-304">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="9b7b5-305">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-305">0</span></span>|<span data-ttu-id="9b7b5-306">系统设置中指定的年份的第一周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-306">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="9b7b5-307">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-307">1</span></span>|<span data-ttu-id="9b7b5-308">1月1日所在的周 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-308">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="9b7b5-309">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-309">2</span></span>|<span data-ttu-id="9b7b5-310">新年份中至少为四天的周 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-310">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="9b7b5-311">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-311">3</span></span>|<span data-ttu-id="9b7b5-312">新年份中的第一个完整周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-312">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-313">此示例使用 `DateDiff` 函数显示给定日期和今天之间的天数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-313">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-314"><paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-314"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-315"><paramref name="Date1" /> 或 <paramref name="Date2" /> 是无效类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-315"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-316">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-316">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string? Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="9b7b5-317">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-317">Required.</span></span> <span data-ttu-id="9b7b5-318"><see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，表示要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之差的单位的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-318">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="9b7b5-319">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-319">Required.</span></span> <span data-ttu-id="9b7b5-320">要在计算中使用的第一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-320">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="9b7b5-321">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-321">Required.</span></span> <span data-ttu-id="9b7b5-322">要在计算中使用的第二个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-322">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="9b7b5-323">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-323">Optional.</span></span> <span data-ttu-id="9b7b5-324">从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-324">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="9b7b5-325">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-325">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="9b7b5-326">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-326">Optional.</span></span> <span data-ttu-id="9b7b5-327">从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-327">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="9b7b5-328">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-328">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="9b7b5-329">返回一个长值，该长值指定两个 <see langword="Date" /> 值之间的时间间隔数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-329">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-330">指定两个 <see langword="Date" /> 值之间的时间间隔数的长值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-330">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-331">您可以使用 `DateDiff` 函数来确定两个日期/时间值之间存在多少指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-331">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="9b7b5-332">例如，你可以使用 `DateDiff` 来计算两个日期之间的天数，或当前与一年结束时间之间的周数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-332">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="9b7b5-333">行为</span><span class="sxs-lookup"><span data-stu-id="9b7b5-333">Behavior</span></span>  
  
-   <span data-ttu-id="9b7b5-334">**参数的处理。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-334">**Treatment of Parameters.**</span></span> <span data-ttu-id="9b7b5-335">`DateDiff` 从的值中减去的值 `Date1` `Date2` 可产生不同的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-335">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="9b7b5-336">调用程序中的两个值都未更改。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-336">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="9b7b5-337">**返回值。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-337">**Return Values.**</span></span> <span data-ttu-id="9b7b5-338">由于 `Date1` 和 `Date2` 都是 `Date` 数据类型，因此它们在系统计时器上保存的日期和时间值精确到100毫微秒。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-338">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="9b7b5-339">但是， `DateDiff` 始终以值的形式返回时间间隔数 `Long` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-339">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="9b7b5-340">如果 `Date1` 表示的日期和时间晚于 `Date2` ，则 `DateDiff` 返回负数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-340">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="9b7b5-341">**天间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-341">**Day Intervals.**</span></span> <span data-ttu-id="9b7b5-342">如果 `Interval` 设置为，则将 `DateInterval.DayOfYear` 其视为与相同 `DateInterval.Day` ，因为 `DayOfYear` 对于时间间隔不是有意义的单位。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-342">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="9b7b5-343">**周间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-343">**Week Intervals.**</span></span> <span data-ttu-id="9b7b5-344">如果 `Interval` 设置为 `DateInterval.WeekOfYear` ，则返回值表示一周的第一天与包含的第一周的第一天之间的周数 `Date1` `Date2` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-344">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="9b7b5-345">下面的示例演示了这如何产生不同的结果 `DateInterval.Weekday` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-345">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="9b7b5-346">在前面的示例中，将 `DateDiff` 返回0到0， `wD` 因为这两个日期之间的差异小于七天，但它返回1， `wY` 因为各自日历周的第一天之间存在七天的差异。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-346">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="9b7b5-347">**更大的间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-347">**Larger Intervals.**</span></span> <span data-ttu-id="9b7b5-348">如果 `Interval` 设置为 `DateInterval.Year` ，则只从和的年份部分计算返回值 `Date1` `Date2` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-348">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="9b7b5-349">同样，的返回值 `DateInterval.Month` 只是从参数的年份和月份部分计算得出的，并且是 `DateInterval.Quarter` 从包含两个日期的季度计算得出的。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-349">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="9b7b5-350">例如，比较下一年的12月31日到1月1日时，将 `DateDiff` 为、或返回1， `DateInterval.Year` `DateInterval.Quarter` `DateInterval.Month` 但最多只会有一天的时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-350">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="9b7b5-351">对于包含多个纪元的日语区域性， `DateDiff` 如果不同的年份超过两个或多个纪元，则该方法不会返回不同的年份。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-351">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="9b7b5-352">相反，你可以计算属性返回的值中的差异 <xref:System.DateTime.Year%2A> ，如以下示例中所示： `date2.Year - date1.Year` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-352">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="9b7b5-353">**其他时间间隔。**</span><span class="sxs-lookup"><span data-stu-id="9b7b5-353">**Other Intervals.**</span></span> <span data-ttu-id="9b7b5-354">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法为查找时间间隔中的其他选项。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-354">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="9b7b5-355">例如，您可以使用方法的 `Subtract` 重载形式之一： <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 从变量中减去， <xref:System.TimeSpan> `Date` 返回另一个 `Date` 值，然后 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 减去 `Date` 值以返回 <xref:System.TimeSpan> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-355">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="9b7b5-356">您可以使用进程来找出所需的毫秒数，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-356">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="9b7b5-357">`Interval`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-357">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-358">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-358">Enumeration value</span></span>|<span data-ttu-id="9b7b5-359">字符串值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-359">String value</span></span>|<span data-ttu-id="9b7b5-360">时间差的单位</span><span class="sxs-lookup"><span data-stu-id="9b7b5-360">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="9b7b5-361">"d"</span><span class="sxs-lookup"><span data-stu-id="9b7b5-361">"d"</span></span>|<span data-ttu-id="9b7b5-362">天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-362">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="9b7b5-363">“y”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-363">"y"</span></span>|<span data-ttu-id="9b7b5-364">天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-364">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="9b7b5-365">“h”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-365">"h"</span></span>|<span data-ttu-id="9b7b5-366">小时</span><span class="sxs-lookup"><span data-stu-id="9b7b5-366">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="9b7b5-367">北</span><span class="sxs-lookup"><span data-stu-id="9b7b5-367">"n"</span></span>|<span data-ttu-id="9b7b5-368">Minute</span><span class="sxs-lookup"><span data-stu-id="9b7b5-368">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="9b7b5-369">“m”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-369">"m"</span></span>|<span data-ttu-id="9b7b5-370">Month</span><span class="sxs-lookup"><span data-stu-id="9b7b5-370">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="9b7b5-371">：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-371">"q"</span></span>|<span data-ttu-id="9b7b5-372">Quarter</span><span class="sxs-lookup"><span data-stu-id="9b7b5-372">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="9b7b5-373">“s”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-373">"s"</span></span>|<span data-ttu-id="9b7b5-374">秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-374">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="9b7b5-375">“w”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-375">"w"</span></span>|<span data-ttu-id="9b7b5-376">周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-376">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="9b7b5-377">人员</span><span class="sxs-lookup"><span data-stu-id="9b7b5-377">"ww"</span></span>|<span data-ttu-id="9b7b5-378">日历周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-378">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="9b7b5-379">“yyyy”</span><span class="sxs-lookup"><span data-stu-id="9b7b5-379">"yyyy"</span></span>|<span data-ttu-id="9b7b5-380">Year</span><span class="sxs-lookup"><span data-stu-id="9b7b5-380">Year</span></span>|  
  
 <span data-ttu-id="9b7b5-381">`DayOfWeek`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-381">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-382">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-382">Enumeration value</span></span>|<span data-ttu-id="9b7b5-383">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-383">Value</span></span>|<span data-ttu-id="9b7b5-384">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-384">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="9b7b5-385">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-385">0</span></span>|<span data-ttu-id="9b7b5-386">系统设置中指定的周的第一天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-386">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="9b7b5-387">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-387">1</span></span>|<span data-ttu-id="9b7b5-388">星期日 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-388">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="9b7b5-389">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-389">2</span></span>|<span data-ttu-id="9b7b5-390">星期一 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-390">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="9b7b5-391">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-391">3</span></span>|<span data-ttu-id="9b7b5-392">星期二</span><span class="sxs-lookup"><span data-stu-id="9b7b5-392">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="9b7b5-393">4</span><span class="sxs-lookup"><span data-stu-id="9b7b5-393">4</span></span>|<span data-ttu-id="9b7b5-394">星期三</span><span class="sxs-lookup"><span data-stu-id="9b7b5-394">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="9b7b5-395">5</span><span class="sxs-lookup"><span data-stu-id="9b7b5-395">5</span></span>|<span data-ttu-id="9b7b5-396">星期四</span><span class="sxs-lookup"><span data-stu-id="9b7b5-396">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="9b7b5-397">6</span><span class="sxs-lookup"><span data-stu-id="9b7b5-397">6</span></span>|<span data-ttu-id="9b7b5-398">星期五</span><span class="sxs-lookup"><span data-stu-id="9b7b5-398">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="9b7b5-399">7</span><span class="sxs-lookup"><span data-stu-id="9b7b5-399">7</span></span>|<span data-ttu-id="9b7b5-400">星期六</span><span class="sxs-lookup"><span data-stu-id="9b7b5-400">Saturday</span></span>|  
  
 <span data-ttu-id="9b7b5-401">`WeekOfYear`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-401">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-402">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-402">Enumeration value</span></span>|<span data-ttu-id="9b7b5-403">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-403">Value</span></span>|<span data-ttu-id="9b7b5-404">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-404">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="9b7b5-405">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-405">0</span></span>|<span data-ttu-id="9b7b5-406">系统设置中指定的年份的第一周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-406">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="9b7b5-407">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-407">1</span></span>|<span data-ttu-id="9b7b5-408">1月1日所在的周 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-408">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="9b7b5-409">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-409">2</span></span>|<span data-ttu-id="9b7b5-410">新年份中至少为四天的周 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-410">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="9b7b5-411">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-411">3</span></span>|<span data-ttu-id="9b7b5-412">新年份中的第一个完整周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-412">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-413">此示例使用 `DateDiff` 函数显示给定日期和今天之间的天数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-413">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-414"><paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-414"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-415"><paramref name="Date1" /> 或 <paramref name="Date2" /> 是无效类型。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-415"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-416">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-416">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b7b5-417">返回包含给定 <see langword="Date" /> 值的指定组件的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-417">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="9b7b5-418">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-418">Required.</span></span> <span data-ttu-id="9b7b5-419"><see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，它表示要返回的日期/时间值部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-419">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="9b7b5-420">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-420">Required.</span></span> <span data-ttu-id="9b7b5-421">要计算的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-421">The <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="9b7b5-422">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-422">Optional.</span></span> <span data-ttu-id="9b7b5-423">从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-423">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="9b7b5-424">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-424">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="FirstWeekOfYearValue"><span data-ttu-id="9b7b5-425">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-425">Optional.</span></span> <span data-ttu-id="9b7b5-426">从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-426">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="9b7b5-427">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-427">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="9b7b5-428">返回包含给定 <see langword="Date" /> 值的指定组件的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-428">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-429">包含给定 <see langword="Date" /> 值的指定组件的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-429">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-430">您可以使用 `DatePart` 函数来评估日期/时间值并返回特定的组件。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-430">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="9b7b5-431">例如，你可以使用 `DatePart` 来计算一周中的某一天或当前小时。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-431">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="9b7b5-432">如果选择 `DateInterval.Weekday` `Interval` 参数，则返回的值与枚举的值保持一致 `FirstDayOfWeek` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-432">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="9b7b5-433">如果选择 `DateInterval.WeekOfYear` ，将 `DatePart` 使用 <xref:System.Globalization.Calendar> 命名空间的和 <xref:System.Globalization.CultureInfo> 类 <xref:System.Globalization> 来确定当前设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-433">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="9b7b5-434">`FirstDayOfWeekValue`参数影响使用和设置的计算 `DateInterval.Weekday` `DateInterval.WeekOfYear` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-434">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="9b7b5-435">`FirstWeekOfYearValue`参数会影响 `DateInterval.WeekOfYear` 为指定的计算 `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-435">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="9b7b5-436">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法为您在检索日期/时间部分中指定了其他选项。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-436">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="9b7b5-437">例如，可以获取变量的整个日期值 `Date` ，时间值设置为午夜，如下所示：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-437">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="9b7b5-438">`Interval`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-438">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-439">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-439">Enumeration value</span></span>|<span data-ttu-id="9b7b5-440">String</span><span class="sxs-lookup"><span data-stu-id="9b7b5-440">String</span></span>|<span data-ttu-id="9b7b5-441">要返回的日期/时间值的一部分</span><span class="sxs-lookup"><span data-stu-id="9b7b5-441">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="9b7b5-442">d</span><span class="sxs-lookup"><span data-stu-id="9b7b5-442">d</span></span>|<span data-ttu-id="9b7b5-443">一月的某一日（1 到 31）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-443">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="9b7b5-444">y</span><span class="sxs-lookup"><span data-stu-id="9b7b5-444">y</span></span>|<span data-ttu-id="9b7b5-445">年中的哪一天（从 1 到 366）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-445">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="9b7b5-446">h</span><span class="sxs-lookup"><span data-stu-id="9b7b5-446">h</span></span>|<span data-ttu-id="9b7b5-447">小时</span><span class="sxs-lookup"><span data-stu-id="9b7b5-447">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="9b7b5-448">n</span><span class="sxs-lookup"><span data-stu-id="9b7b5-448">n</span></span>|<span data-ttu-id="9b7b5-449">Minute</span><span class="sxs-lookup"><span data-stu-id="9b7b5-449">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="9b7b5-450">m</span><span class="sxs-lookup"><span data-stu-id="9b7b5-450">m</span></span>|<span data-ttu-id="9b7b5-451">Month</span><span class="sxs-lookup"><span data-stu-id="9b7b5-451">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="9b7b5-452">q</span><span class="sxs-lookup"><span data-stu-id="9b7b5-452">q</span></span>|<span data-ttu-id="9b7b5-453">Quarter</span><span class="sxs-lookup"><span data-stu-id="9b7b5-453">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="9b7b5-454">s</span><span class="sxs-lookup"><span data-stu-id="9b7b5-454">s</span></span>|<span data-ttu-id="9b7b5-455">秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-455">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="9b7b5-456">w</span><span class="sxs-lookup"><span data-stu-id="9b7b5-456">w</span></span>|<span data-ttu-id="9b7b5-457">星期几（从 1 到 7）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-457">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="9b7b5-458">ww</span><span class="sxs-lookup"><span data-stu-id="9b7b5-458">ww</span></span>|<span data-ttu-id="9b7b5-459">年中的哪一周（从 1 到 53）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-459">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="9b7b5-460">yyyy</span><span class="sxs-lookup"><span data-stu-id="9b7b5-460">yyyy</span></span>|<span data-ttu-id="9b7b5-461">Year</span><span class="sxs-lookup"><span data-stu-id="9b7b5-461">Year</span></span>|  
  
 <span data-ttu-id="9b7b5-462">`FirstDayOfWeekValue`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-462">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-463">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-463">Enumeration value</span></span>|<span data-ttu-id="9b7b5-464">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-464">Value</span></span>|<span data-ttu-id="9b7b5-465">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-465">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="9b7b5-466">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-466">0</span></span>|<span data-ttu-id="9b7b5-467">系统设置中指定的周的第一天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-467">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="9b7b5-468">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-468">1</span></span>|<span data-ttu-id="9b7b5-469">星期日 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-469">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="9b7b5-470">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-470">2</span></span>|<span data-ttu-id="9b7b5-471">星期一 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-471">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="9b7b5-472">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-472">3</span></span>|<span data-ttu-id="9b7b5-473">星期二</span><span class="sxs-lookup"><span data-stu-id="9b7b5-473">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="9b7b5-474">4</span><span class="sxs-lookup"><span data-stu-id="9b7b5-474">4</span></span>|<span data-ttu-id="9b7b5-475">星期三</span><span class="sxs-lookup"><span data-stu-id="9b7b5-475">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="9b7b5-476">5</span><span class="sxs-lookup"><span data-stu-id="9b7b5-476">5</span></span>|<span data-ttu-id="9b7b5-477">星期四</span><span class="sxs-lookup"><span data-stu-id="9b7b5-477">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="9b7b5-478">6</span><span class="sxs-lookup"><span data-stu-id="9b7b5-478">6</span></span>|<span data-ttu-id="9b7b5-479">星期五</span><span class="sxs-lookup"><span data-stu-id="9b7b5-479">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="9b7b5-480">7</span><span class="sxs-lookup"><span data-stu-id="9b7b5-480">7</span></span>|<span data-ttu-id="9b7b5-481">星期六</span><span class="sxs-lookup"><span data-stu-id="9b7b5-481">Saturday</span></span>|  
  
 <span data-ttu-id="9b7b5-482">`FirstWeekOfYearValue`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-482">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-483">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-483">Enumeration value</span></span>|<span data-ttu-id="9b7b5-484">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-484">Value</span></span>|<span data-ttu-id="9b7b5-485">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-485">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="9b7b5-486">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-486">0</span></span>|<span data-ttu-id="9b7b5-487">系统设置中指定的年份的第一周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-487">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="9b7b5-488">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-488">1</span></span>|<span data-ttu-id="9b7b5-489">1月1日所在的周 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-489">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="9b7b5-490">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-490">2</span></span>|<span data-ttu-id="9b7b5-491">新年份中至少为四天的周 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-491">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="9b7b5-492">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-492">3</span></span>|<span data-ttu-id="9b7b5-493">新年份中的第一个完整周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-493">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-494">此示例使用了一个日期，并使用 `DatePart` 函数来显示该日期在一年中的哪个季度。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-494">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-495"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-495"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-496"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-496"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-497">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-497">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object? DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="9b7b5-498">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-498">Required.</span></span> <span data-ttu-id="9b7b5-499"><see cref="T:Microsoft.VisualBasic.DateInterval" /> 枚举值或字符串表达式，它表示要返回的日期/时间值部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-499">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="9b7b5-500">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-500">Required.</span></span> <span data-ttu-id="9b7b5-501">要计算的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-501">A <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="9b7b5-502">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-502">Optional.</span></span> <span data-ttu-id="9b7b5-503">从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-503">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="9b7b5-504">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-504">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="9b7b5-505">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-505">Optional.</span></span> <span data-ttu-id="9b7b5-506">从 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 枚举中选择的值，用于指定一年的第一周。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-506">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="9b7b5-507">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-507">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="9b7b5-508">返回一个值，其中包含给定 <see langword="Date" /> 值的指定组件。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-508">Returns an value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-509">包含给定 <see langword="Date" /> 值的指定组件的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-509">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-510">您可以使用 `DatePart` 函数来评估日期/时间值并返回特定的组件。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-510">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="9b7b5-511">例如，你可以使用 `DatePart` 来计算一周中的某一天或当前小时。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-511">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="9b7b5-512">如果选择 `DateInterval.Weekday` `Interval` 参数，则返回的值与枚举的值保持一致 `FirstDayOfWeek` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-512">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="9b7b5-513">如果选择 `DateInterval.WeekOfYear` ，将 `DatePart` 使用 <xref:System.Globalization.Calendar> 命名空间的和 <xref:System.Globalization.CultureInfo> 类 <xref:System.Globalization> 来确定当前设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-513">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="9b7b5-514">`FirstDayOfWeekValue`参数影响使用和设置的计算 `DateInterval.Weekday` `DateInterval.WeekOfYear` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-514">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="9b7b5-515">`FirstWeekOfYearValue`参数会影响 `DateInterval.WeekOfYear` 为指定的计算 `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-515">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="9b7b5-516">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法为您在检索日期/时间部分中指定了其他选项。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-516">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="9b7b5-517">例如，可以获取变量的整个日期值 `Date` ，时间值设置为午夜，如下所示：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-517">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="9b7b5-518">`Interval`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-518">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-519">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-519">Enumeration value</span></span>|<span data-ttu-id="9b7b5-520">String</span><span class="sxs-lookup"><span data-stu-id="9b7b5-520">String</span></span>|<span data-ttu-id="9b7b5-521">要返回的日期/时间值的一部分</span><span class="sxs-lookup"><span data-stu-id="9b7b5-521">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="9b7b5-522">d</span><span class="sxs-lookup"><span data-stu-id="9b7b5-522">d</span></span>|<span data-ttu-id="9b7b5-523">一月的某一日（1 到 31）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-523">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="9b7b5-524">y</span><span class="sxs-lookup"><span data-stu-id="9b7b5-524">y</span></span>|<span data-ttu-id="9b7b5-525">年中的哪一天（从 1 到 366）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-525">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="9b7b5-526">h</span><span class="sxs-lookup"><span data-stu-id="9b7b5-526">h</span></span>|<span data-ttu-id="9b7b5-527">小时</span><span class="sxs-lookup"><span data-stu-id="9b7b5-527">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="9b7b5-528">n</span><span class="sxs-lookup"><span data-stu-id="9b7b5-528">n</span></span>|<span data-ttu-id="9b7b5-529">Minute</span><span class="sxs-lookup"><span data-stu-id="9b7b5-529">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="9b7b5-530">m</span><span class="sxs-lookup"><span data-stu-id="9b7b5-530">m</span></span>|<span data-ttu-id="9b7b5-531">Month</span><span class="sxs-lookup"><span data-stu-id="9b7b5-531">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="9b7b5-532">q</span><span class="sxs-lookup"><span data-stu-id="9b7b5-532">q</span></span>|<span data-ttu-id="9b7b5-533">Quarter</span><span class="sxs-lookup"><span data-stu-id="9b7b5-533">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="9b7b5-534">s</span><span class="sxs-lookup"><span data-stu-id="9b7b5-534">s</span></span>|<span data-ttu-id="9b7b5-535">秒</span><span class="sxs-lookup"><span data-stu-id="9b7b5-535">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="9b7b5-536">w</span><span class="sxs-lookup"><span data-stu-id="9b7b5-536">w</span></span>|<span data-ttu-id="9b7b5-537">星期几（从 1 到 7）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-537">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="9b7b5-538">ww</span><span class="sxs-lookup"><span data-stu-id="9b7b5-538">ww</span></span>|<span data-ttu-id="9b7b5-539">年中的哪一周（从 1 到 53）</span><span class="sxs-lookup"><span data-stu-id="9b7b5-539">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="9b7b5-540">yyyy</span><span class="sxs-lookup"><span data-stu-id="9b7b5-540">yyyy</span></span>|<span data-ttu-id="9b7b5-541">Year</span><span class="sxs-lookup"><span data-stu-id="9b7b5-541">Year</span></span>|  
  
 <span data-ttu-id="9b7b5-542">`FirstDayOfWeekValue`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-542">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-543">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-543">Enumeration value</span></span>|<span data-ttu-id="9b7b5-544">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-544">Value</span></span>|<span data-ttu-id="9b7b5-545">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-545">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="9b7b5-546">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-546">0</span></span>|<span data-ttu-id="9b7b5-547">系统设置中指定的周的第一天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-547">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="9b7b5-548">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-548">1</span></span>|<span data-ttu-id="9b7b5-549">星期日 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-549">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="9b7b5-550">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-550">2</span></span>|<span data-ttu-id="9b7b5-551">星期一 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-551">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="9b7b5-552">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-552">3</span></span>|<span data-ttu-id="9b7b5-553">星期二</span><span class="sxs-lookup"><span data-stu-id="9b7b5-553">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="9b7b5-554">4</span><span class="sxs-lookup"><span data-stu-id="9b7b5-554">4</span></span>|<span data-ttu-id="9b7b5-555">星期三</span><span class="sxs-lookup"><span data-stu-id="9b7b5-555">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="9b7b5-556">5</span><span class="sxs-lookup"><span data-stu-id="9b7b5-556">5</span></span>|<span data-ttu-id="9b7b5-557">星期四</span><span class="sxs-lookup"><span data-stu-id="9b7b5-557">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="9b7b5-558">6</span><span class="sxs-lookup"><span data-stu-id="9b7b5-558">6</span></span>|<span data-ttu-id="9b7b5-559">星期五</span><span class="sxs-lookup"><span data-stu-id="9b7b5-559">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="9b7b5-560">7</span><span class="sxs-lookup"><span data-stu-id="9b7b5-560">7</span></span>|<span data-ttu-id="9b7b5-561">星期六</span><span class="sxs-lookup"><span data-stu-id="9b7b5-561">Saturday</span></span>|  
  
 <span data-ttu-id="9b7b5-562">`FirstWeekOfYearValue`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-562">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-563">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-563">Enumeration value</span></span>|<span data-ttu-id="9b7b5-564">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-564">Value</span></span>|<span data-ttu-id="9b7b5-565">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-565">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="9b7b5-566">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-566">0</span></span>|<span data-ttu-id="9b7b5-567">系统设置中指定的年份的第一周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-567">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="9b7b5-568">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-568">1</span></span>|<span data-ttu-id="9b7b5-569">1月1日所在的周 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-569">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="9b7b5-570">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-570">2</span></span>|<span data-ttu-id="9b7b5-571">新年份中至少为四天的周 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-571">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="9b7b5-572">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-572">3</span></span>|<span data-ttu-id="9b7b5-573">新年份中的第一个完整周</span><span class="sxs-lookup"><span data-stu-id="9b7b5-573">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-574">此示例使用了一个日期，并使用 `DatePart` 函数来显示该日期在一年中的哪个季度。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-574">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-575"><paramref name="Interval" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-575"><paramref name="Interval" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-576"><paramref name="DateValue" /> 并不强制为 <see langword="Date" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-576"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-577">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-577">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year"><span data-ttu-id="9b7b5-578">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-578">Required.</span></span> <span data-ttu-id="9b7b5-579">范围为 1 到 9999 的整数表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-579">Integer expression from 1 through 9999.</span></span> <span data-ttu-id="9b7b5-580">但是，也接受小于此范围的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-580">However, values below this range are also accepted.</span></span> <span data-ttu-id="9b7b5-581">如果 <paramref name="Year" /> 为 0 到 99，它被解释为介于 1930 年和 2029 年之间，下面的"备注"部分对此做了解释。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-581">If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span></span> <span data-ttu-id="9b7b5-582">如果 <paramref name="Year" /> 小于 1，则从当前年份减去它。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-582">If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</span></span></param>
        <param name="Month"><span data-ttu-id="9b7b5-583">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-583">Required.</span></span> <span data-ttu-id="9b7b5-584">范围为 1 到 12 的整数表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-584">Integer expression from 1 through 12.</span></span> <span data-ttu-id="9b7b5-585">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-585">However, values outside this range are also accepted.</span></span> <span data-ttu-id="9b7b5-586"><paramref name="Month" /> 值的偏移量为 1，且该值应用于所计算年份的 1 月。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-586">The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year.</span></span> <span data-ttu-id="9b7b5-587">换言之，就是 1 月加上 (<paramref name="Month" /> - 1)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-587">In other words, (<paramref name="Month" /> - 1) is added to January.</span></span> <span data-ttu-id="9b7b5-588">若有必要则对年份进行重新计算。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-588">The year is recalculated if necessary.</span></span> <span data-ttu-id="9b7b5-589">以下的结果阐释了这种效果：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-589">The following results illustrate this effect:</span></span> 
<span data-ttu-id="9b7b5-590">如果 <paramref name="Month" /> 为 1，则结果为所计算年份的 1 月。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-590">If <paramref name="Month" /> is 1, the result is January of the calculated year.</span></span>  
  
<span data-ttu-id="9b7b5-591">如果 <paramref name="Month" /> 为 0，则结果为上一年的 12 月。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-591">If <paramref name="Month" /> is 0, the result is December of the previous year.</span></span>  
  
<span data-ttu-id="9b7b5-592">如果 <paramref name="Month" /> 为 -1，则结果为上一年的 11 月。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-592">If <paramref name="Month" /> is -1, the result is November of the previous year.</span></span>  
  
<span data-ttu-id="9b7b5-593">如果 <paramref name="Month" /> 为 13，则结果为下一年的 1 月。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-593">If <paramref name="Month" /> is 13, the result is January of the following year.</span></span></param>
        <param name="Day"><span data-ttu-id="9b7b5-594">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-594">Required.</span></span> <span data-ttu-id="9b7b5-595">范围为 1 到 31 的 Integer 表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-595">Integer expression from 1 through 31.</span></span> <span data-ttu-id="9b7b5-596">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-596">However, values outside this range are also accepted.</span></span> <span data-ttu-id="9b7b5-597"><paramref name="Day" /> 值偏移量为 1，该值应用于所计算月份的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-597">The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month.</span></span> <span data-ttu-id="9b7b5-598">换言之，就是该月份的第一天加上 (<paramref name="Day" /> - 1)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-598">In other words, (<paramref name="Day" /> - 1) is added to the first of the month.</span></span> <span data-ttu-id="9b7b5-599">若有必要，则对月份和年份进行重新计算。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-599">The month and year are recalculated if necessary.</span></span> <span data-ttu-id="9b7b5-600">以下的结果阐释了这种效果：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-600">The following results illustrate this effect:</span></span> 
<span data-ttu-id="9b7b5-601">如果 <paramref name="Day" /> 为 1，则结果为所计算月份的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-601">If <paramref name="Day" /> is 1, the result is the first day of the calculated month.</span></span>  
  
<span data-ttu-id="9b7b5-602">如果 <paramref name="Day" /> 为 0，则结果为上一月份的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-602">If <paramref name="Day" /> is 0, the result is the last day of the previous month.</span></span>  
  
<span data-ttu-id="9b7b5-603">如果 <paramref name="Day" /> 为 -1，则结果为上一月份的倒数第二天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-603">If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.</span></span>  
  
<span data-ttu-id="9b7b5-604">如果 <paramref name="Day" /> 超过当前月份的月末，则结果为下一月份中相应的一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-604">If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month.</span></span> <span data-ttu-id="9b7b5-605">例如，如果 <paramref name="Month" /> 为 4 且 <paramref name="Day" /> 为 31，则结果为 5 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-605">For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</span></span></param>
        <summary><span data-ttu-id="9b7b5-606">返回表示已指定年月日的 <see langword="Date" /> 值，其时间信息被设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-606">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="9b7b5-607">表示已指定年月日的 <see langword="Date" /> 值，其时间信息被设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-607">A <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-608">在 Windows 98 或 Windows 2000 下，参数的两位数年份 `Year` 是基于用户定义的计算机设置来解释的。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-608">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="9b7b5-609">默认设置是从0到29的值被解释为年份2000-2029，30到99的值被解释为年份1930-1999。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-609">The default settings are that values from 0 through 29 are interpreted as the years 2000-2029, and values from 30 through 99 are interpreted as the years 1930-1999.</span></span> <span data-ttu-id="9b7b5-610">对于所有其他 `Year` 参数，请使用四位数年份; 例如，1924。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-610">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="9b7b5-611">早期版本的 Windows 会根据前面所述的默认值解释两位数年份。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-611">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="9b7b5-612">若要确保函数返回正确的值，请使用四位数 `Year` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-612">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="9b7b5-613">下面的示例演示了负数、零和正值参数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-613">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="9b7b5-614">在此，该 `DateSerial` 函数返回一个， `Date` 它表示当前年份的第一天的第一天的第一天的第一天，即10年2月前一天的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-614">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="9b7b5-615">如果 `Month` 或 `Day` 超出其正常范围，则会根据需要将其应用到下一个更大的单位。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-615">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="9b7b5-616">例如，如果指定32天，则将其评估为一个月，一天到四天，具体取决于的值 `Month` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-616">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="9b7b5-617">如果 `Year` 大于9999，或者任何参数超出范围-2147483648 到2147483647，则 <xref:System.ArgumentException> 会发生错误。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-617">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="9b7b5-618">如果由三个参数指定的日期早于00:00:00 年1月1日或晚于23:59:59 年12月 9999 31 日，则 <xref:System.ArgumentOutOfRangeException> 会发生错误。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-618">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="9b7b5-619">`Date`数据类型包含时间组件。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-619">The `Date` data type includes time components.</span></span> <span data-ttu-id="9b7b5-620">`DateSerial` 将所有这些值设置为0，因此返回的值表示计算出的那一天的开始值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-620">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="9b7b5-621">由于 `Date` 结构支持每个值 <xref:System.DateTime> ，因此它的方法会在组合值时为您指定其他选项 `Date` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-621">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="9b7b5-622">例如，可以使用重载的构造函数之一， <xref:System.DateTime.%23ctor%2A> 使用所需的 `Date` 组件组合来填充变量。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-622">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="9b7b5-623">以下示例在 `NewDateTime` 上午8:30 之前，将设置为5月6日，1978：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-623">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-624">此示例使用 `DateSerial` 函数返回指定年、月、日的日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-624">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-625">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-625">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b7b5-626">返回或设置一个字符串值，该值表示与系统对应的当前日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-626">Returns or sets a string value representing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="9b7b5-627">返回或设置一个字符串值，该值表示与系统对应的当前日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-627">Returns or sets a string value representing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-628">`DateString` 以 MM-yyyy 格式返回系统日期，该日期使用缩写的月份名称。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-628">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="9b7b5-629">日期的接受格式为 M-d-yyyy、M-y、M/d/yyyy 和 M/d/y。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-629">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="9b7b5-630">这适用于除使用双字节字符集 (DBCS) 的所有系统区域设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-630">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="9b7b5-631">如果系统区域设置使用双字节字符集，则 `DateString` 以 yyyy-mm-dd 格式返回系统日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-631">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="9b7b5-632">系统区域设置是使用**控制面板**中的 "**时钟、语言和区域**" 项设置的。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-632">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="9b7b5-633">**注意**`DateString`如果在 Silverlight 中运行 (，则该属性仅以 yyyy-mm-dd 格式返回 `zh` (中文) 、 `ko` (韩语) 和 `ja`) 日语 Visual Basic 系统区域设置的系统日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-633">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="9b7b5-634">若要以的形式获取或设置当前系统时间 `String` ，请使用 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-634">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="9b7b5-635">若要以你的区域设置格式或以自定义格式获取当前系统日期或时间，请将 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 属性提供给 <xref:Microsoft.VisualBasic.Strings.Format%2A> 函数，同时指定预定义的日期/时间格式或用户定义的日期/时间格式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-635">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="9b7b5-636">下面的示例演示这一操作。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-636">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="9b7b5-637">若要以形式访问当前系统日期 `Date` ，请使用 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-637">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b7b5-638">设置系统日期或时间需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-638">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="9b7b5-639">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-639">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-640">下面的示例使用 `DateString` 属性来显示当前系统日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-640">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-641">用于设置 <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> 值的格式无效。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-641">Invalid format used to set the value of <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateValue(string StringDate) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate"><span data-ttu-id="9b7b5-642">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-642">Required.</span></span> <span data-ttu-id="9b7b5-643">字符串表达式，表示 1 年 1 月 1 日 00:00:00 到 9999 年 12 月 31 日 23:59:59 之间的一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-643">string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="9b7b5-644">返回一个 <see langword="Date" /> 值，该值包含用字符串表示的日期信息，其时间信息设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-644">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="9b7b5-645"><see langword="Date" /> 值，它包含由字符串表示的日期信息，其中的时间信息设置为午夜 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-645">A <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-646">如果 `StringDate` 仅包含从1到12的数字（由有效的日期分隔符分隔），则 `DateValue` 根据为系统指定的短日期格式识别月、日和年的顺序。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-646">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="9b7b5-647">`DateValue` 使用 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo> 命名空间中类的属性的当前日历设置 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-647">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="9b7b5-648">默认 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 值由 **"控制面板"** 设置确定。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-648">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="9b7b5-649">通过 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> <xref:System.Globalization.DateTimeFormatInfo> 在命名空间中设置类的属性，可以重写短日期格式 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-649">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="9b7b5-650">`DateValue` 识别月份名称的长格式、缩写形式和数值形式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-650">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="9b7b5-651">例如，除了识别12/30/1991 和12/30/91 以外，还可 `DateValue` 识别12月30日1991和12月30日（1991）。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-651">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="9b7b5-652">如果省略了的年份部分 `StringDate` ，将 `DateValue` 使用计算机系统日期中的当前年份。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-652">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="9b7b5-653">如果 `StringDate` 自变量包含时间信息，则不 `DateValue` 会将其包含在返回值中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-653">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="9b7b5-654">但是，如果 `StringDate` 包含无效的时间信息（如 "89:98"），则 <xref:System.InvalidCastException> 会发生错误。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-654">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-655">此示例使用 `DateValue` 函数将字符串转换为日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-655">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="9b7b5-656">您还可以使用日期文字来向或变量直接分配日期 `Object` `Date` ，例如 `oldDate = #2/12/69#` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-656">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-657"><paramref name="StringDate" /> 包含无效的时间信息。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-657"><paramref name="StringDate" /> includes invalid time information.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/data-types/data-type-summary"><span data-ttu-id="9b7b5-658">数据类型摘要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9b7b5-658">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Day(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="9b7b5-659">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-659">Required.</span></span> <span data-ttu-id="9b7b5-660">要从中提取天的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-660">A <see langword="Date" /> value from which you want to extract the day.</span></span></param>
        <summary><span data-ttu-id="9b7b5-661">返回表示月中第几天的整数值，该值介于 1 和 31 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-661">Returns an integer value from 1 through 31 representing the day of the month.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-662">介于 1 和 31 之间表示月中第几天的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-662">An integer value from 1 through 31 representing the day of the month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-663">如果使用 `Day` 函数，则可能必须将其与 `Microsoft.VisualBasic` 命名空间限定，因为 <xref:System.Windows.Forms> 命名空间定义 <xref:System.Windows.Forms.Day> 为枚举。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-663">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="9b7b5-664">下面的示例演示了限定如何 `Day` 消除这种歧义：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-664">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="9b7b5-665">还可以通过调用 `DatePart` 并 `DateInterval.Day` 为 *Interval* 参数指定来获取该月中的第几天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-665">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-666">下面的示例使用 `Day` 函数获取指定日期中的月份日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-666">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="9b7b5-667">在开发环境中，日期文字以标准短格式显示， (例如 "02/12/1969" ) 使用代码的区域设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-667">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="9b7b5-668">`Day` 可以将其与枚举区分开来 <xref:System.Windows.Forms.Day?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-668">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Hour(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="9b7b5-669">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-669">Required.</span></span> <span data-ttu-id="9b7b5-670">要从中提取小时的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-670">A <see langword="Date" /> value from which you want to extract the hour.</span></span></param>
        <summary><span data-ttu-id="9b7b5-671">返回表示天中第几个小时的整数值，该值介于 0 和 23 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-671">Returns an integer value from 0 through 23 representing the hour of the day.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-672">介于 0 和 23 之间表示一天中第几个小时的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-672">An integer value from 0 through 23 representing the hour of the day.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-673">还可以通过调用 `DatePart` 并为参数指定来获取一天中的小时 `DateInterval.Hour` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-673">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-674">此示例使用 `Hour` 函数从指定的时间获取小时。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-674">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="9b7b5-675">在开发环境中，使用代码的区域设置以短时间格式显示时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-675">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Minute(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="9b7b5-676">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-676">Required.</span></span> <span data-ttu-id="9b7b5-677">要从中提取分钟的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-677">A <see langword="Date" /> value from which you want to extract the minute.</span></span></param>
        <summary><span data-ttu-id="9b7b5-678">返回表示一小时内第几分钟的整数值，该值介于 0 和 59 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-678">Returns an integer value from 0 through 59 representing the minute of the hour.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-679">介于 0 和 59 之间表示一小时内第几分钟的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-679">An integer value from 0 through 59 representing the minute of the hour.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-680">还可以通过调用 `DatePart` 并为参数指定来获取小时的分钟数 `DateInterval.Minute` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-680">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-681">此示例使用 `Minute` 函数获取指定时间的小时中的分钟数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-681">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="9b7b5-682">在开发环境中，使用代码的区域设置以短时间格式显示时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-682">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Month(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="9b7b5-683">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-683">Required.</span></span> <span data-ttu-id="9b7b5-684">要从中提取月的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-684">A <see langword="Date" /> value from which you want to extract the month.</span></span></param>
        <summary><span data-ttu-id="9b7b5-685">返回表示一年中第几个月的整数值，该值介于 1 和 12 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-685">Returns an integer value from 1 through 12 representing the month of the year.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-686">介于 1 和 12 之间表示一年中第几个月的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-686">An integer value from 1 through 12 representing the month of the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-687">你还可以通过调用 `DatePart` 并为参数指定来获取一年中的月份 `DateInterval.Month` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-687">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-688">此示例使用 `Month` 函数获取指定日期中的月份。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-688">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="9b7b5-689">在开发环境中，使用代码的区域设置以短日期格式显示日期文本。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-689">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MonthName(int32 Month, bool Abbreviate) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month"><span data-ttu-id="9b7b5-690">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-690">Required.</span></span> <span data-ttu-id="9b7b5-691">以数字表示的月份，介于 1 到 13 之间；1 表示 1 月，12 表示 12 月。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-691">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span></span> <span data-ttu-id="9b7b5-692">值 13 可用于 13 月制日历。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-692">You can use the value 13 with a 13-month calendar.</span></span> <span data-ttu-id="9b7b5-693">若系统正在使用 12 月制日历，而 <paramref name="Month" /> 为 13，则 MonthName 返回一个空字符串<c></c>。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-693">If your system is using a 12-month calendar and <paramref name="Month" /> is 13, <c>MonthName</c> returns an empty string.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="9b7b5-694">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-694">Optional.</span></span> <span data-ttu-id="9b7b5-695">为 <see langword="True" /> 则缩写月份名称；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-695"><see langword="True" /> to abbreviate the month name; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="9b7b5-696">默认值为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-696">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="9b7b5-697">返回包含指定月份名称的字符串值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-697">Returns a string value containing the name of the specified month.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-698">包含指定月份名称的字符串值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-698">A string value containing the name of the specified month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-699">返回的字符串 `MonthName` 不仅取决于输入参数，还取决于 Windows**控制面板**中指定的**区域选项**设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-699">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b7b5-700">`MonthName` 使用 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo> 命名空间中类的属性的当前日历设置 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-700">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="9b7b5-701">默认 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 值由 **"控制面板"** 设置确定。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-701">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-702">此示例使用 `MonthName` 函数根据给定的整数来确定月份的名称。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-702">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="9b7b5-703">布尔值将确定是否显示全名 (`False`) 或缩写名称 (`True`) 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-703">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-704"><paramref name="Month" /> 小于 1 或大于 13。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-704"><paramref name="Month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b7b5-705">返回一个值，该值包含与系统对应的当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-705">Returns a value containing the current date and time according to your system.</span></span></summary>
        <value><span data-ttu-id="9b7b5-706">根据系统的当前日期和时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-706">The current date and time according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-707">若要设置系统日期，请使用 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-707">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="9b7b5-708">若要设置系统时间，请使用 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-708">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-709">下面的示例使用 `Now` 属性返回当前系统日期和时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-709">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Second(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="9b7b5-710">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-710">Required.</span></span> <span data-ttu-id="9b7b5-711">要从中提取秒的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-711">A <see langword="Date" /> value from which you want to extract the second.</span></span></param>
        <summary><span data-ttu-id="9b7b5-712">返回表示一分钟内第几秒的整数值，该值介于 0 和 59 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-712">Returns an integer value from 0 through 59 representing the second of the minute.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-713">介于 0 和 59 之间表示一分钟内第几秒的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-713">An integer value from 0 through 59 representing the second of the minute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-714">还可以通过调用 `DatePart` 并为参数指定来获取分钟的秒数 `DateInterval.Second` `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-714">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-715">下面的示例使用 `Second` 函数从指定的时间获取分钟的秒数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-715">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="9b7b5-716">在开发环境中，使用代码的区域设置以短时间格式显示时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-716">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b7b5-717">返回或设置 <see langword="Date" /> 值，该值包含与系统对应的当前时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-717">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="9b7b5-718">返回或设置 <see langword="Date" /> 值，该值包含与系统对应的当前时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-718">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-719">`Date`数据类型包括日期部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-719">The `Date` data type includes date components.</span></span> <span data-ttu-id="9b7b5-720">返回系统时间时， `TimeOfDay` 将这些值全部设置为1，因此返回的值表示第1年的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-720">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="9b7b5-721">设置系统时间时，将 `TimeOfDay` 忽略日期部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-721">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="9b7b5-722">若要以形式访问当前系统时间 `String` ，请使用 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-722">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="9b7b5-723">若要获取或设置当前系统日期，请使用 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-723">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b7b5-724">设置系统日期或时间需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-724">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="9b7b5-725">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-725">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-726">此示例使用 `TimeOfDay` 属性返回当前系统时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-726">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b7b5-727">返回一个 <see cref="T:System.Double" /> 值，该值表示午夜之后的秒数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-727">Returns a <see cref="T:System.Double" /> value representing the number of seconds elapsed since midnight.</span></span></summary>
        <value><span data-ttu-id="9b7b5-728">一个值，该值表示从午夜开始所经过的秒数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-728">A value representing the number of seconds elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-729">`Timer`属性返回自最近午夜以来的秒数和毫秒数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-729">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="9b7b5-730">秒数在返回值的整数部分，毫秒数为小数部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-730">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-731">此示例使用 `Timer` 属性暂停应用程序。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-731">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="9b7b5-732">它可以在暂停期间执行其他处理。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-732">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="9b7b5-733">请注意，必须 `Timer` 使用命名空间限定属性 <xref:Microsoft.VisualBasic?displayProperty=nameWithType> ，因为 `Timer` 也是 <xref:System.Threading?displayProperty=nameWithType> 、 <xref:System.Timers?displayProperty=nameWithType> 和命名空间中定义的类 <xref:System.Windows.Forms?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-733">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour"><span data-ttu-id="9b7b5-734">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-734">Required.</span></span> <span data-ttu-id="9b7b5-735">范围为 0 到 23 的整数表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-735">Integer expression from 0 through 23.</span></span> <span data-ttu-id="9b7b5-736">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-736">However, values outside this range are also accepted.</span></span></param>
        <param name="Minute"><span data-ttu-id="9b7b5-737">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-737">Required.</span></span> <span data-ttu-id="9b7b5-738">范围为 0 到 59 的整数表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-738">Integer expression from 0 through 59.</span></span> <span data-ttu-id="9b7b5-739">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-739">However, values outside this range are also accepted.</span></span> <span data-ttu-id="9b7b5-740"><paramref name="Minute" /> 的值加入所计算的小时，因此负值指定该小时前的某几分钟。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-740">The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</span></span></param>
        <param name="Second"><span data-ttu-id="9b7b5-741">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-741">Required.</span></span> <span data-ttu-id="9b7b5-742">范围为 0 到 59 的整数表达式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-742">Integer expression from 0 through 59.</span></span> <span data-ttu-id="9b7b5-743">但是，也接受此范围之外的值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-743">However, values outside this range are also accepted.</span></span> <span data-ttu-id="9b7b5-744"><paramref name="Second" /> 的值加入所计算的分钟，因此负值指定该分钟前的某几秒。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-744">The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</span></span></param>
        <summary><span data-ttu-id="9b7b5-745">返回一个 <see langword="Date" /> 值，该值表示指定的小时、分钟和秒，其日期信息设置基点为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-745">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-746">一个 <see langword="Date" /> 值，该值表示指定的小时、分钟和秒，其日期信息设置基点为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-746">A <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-747">下面的示例演示了负数、零和正值参数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-747">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="9b7b5-748">该 `TimeSerial` 函数返回一个时间，该时间表示在中午之前的三个小时之前的15分钟，或是 8:45:00 AM。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-748">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="9b7b5-749">如果 `Minute` 或 `Second` 超出其正常范围，则会根据需要将其应用到下一个更大的单位。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-749">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="9b7b5-750">例如，如果指定75分钟，则计算结果为1小时15分钟。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-750">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="9b7b5-751">`TimeSerial` 缩短总秒数86400，即一天中的秒数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-751">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="9b7b5-752">因此，返回的时间始终介于00:00:00 和23:59:59 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-752">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="9b7b5-753">`Date`数据类型包括日期部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-753">The `Date` data type includes date components.</span></span> <span data-ttu-id="9b7b5-754">`TimeSerial` 将所有这些都设置为1，因此返回的值表示第1年的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-754">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="9b7b5-755">但是，如果参数的值导致计算出的时间超过24小时，则该日期将根据需要递增。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-755">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="9b7b5-756">在下面的示例中，和的 `Hour` 值 `Minute` 导致组合时间超过24小时。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-756">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="9b7b5-757">如果参数的值导致计算出的时间为负，则日期信息将设置为1/1/0001，并且时间信息将调整为介于00:00:00 和23:59:59 之间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-757">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="9b7b5-758">但是，如果计算出的时间小于负24小时，则 <xref:System.ArgumentOutOfRangeException> 会发生错误。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-758">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="9b7b5-759">由于 `Date` 结构支持每个值 <xref:System.DateTime?displayProperty=nameWithType> ，因此它的方法会在组合值时为您指定其他选项 `Date` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-759">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="9b7b5-760">例如，你可以使用重载的 <xref:System.DateTime.%23ctor%2A> 构造函数之一来 `Date` 使用所需的组件组合来填充变量。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-760">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="9b7b5-761">以下示例在 `newDateTime` 上午8:30 之前，将设置为5月6日，1978：</span><span class="sxs-lookup"><span data-stu-id="9b7b5-761">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-762">下面的示例使用 `TimeSerial` 函数返回指定的小时、分钟和秒的时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-762">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-763">-2,147,483,648 到 2,147,483,647 范围以外的参数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-763">An argument is outside the range -2,147,483,648 through 2,147,483,647</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9b7b5-764">计算所得的时间小于负 24 小时。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-764">Calculated time is less than negative 24 hours.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b7b5-765">根据系统返回或设置表示当前时间的字符串值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-765">Returns or sets a string value representing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="9b7b5-766">根据系统返回或设置表示当前时间的字符串值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-766">Returns or sets a string value representing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-767">`TimeString` 始终将系统时间返回为 "HH： mm： ss"，这是24小时格式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-767">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="9b7b5-768">此格式是区域性固定的，这意味着即使在 "**控制面板**" 中更改了**区域选项**，它也不会更改。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-768">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="9b7b5-769">若要获取或将当前系统日期设置为 `String` ，请使用 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-769">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="9b7b5-770">若要以你的区域设置格式或以自定义格式获取当前系统日期或时间，请将 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 属性提供给 <xref:Microsoft.VisualBasic.Strings.Format%2A> 函数，同时指定预定义的日期/时间格式或用户定义的日期/时间格式。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-770">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="9b7b5-771">下面的示例演示这一操作。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-771">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="9b7b5-772">若要以形式访问当前系统时间 `Date` ，请使用 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-772">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b7b5-773">设置系统日期或时间需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-773">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="9b7b5-774">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-774">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-775">此示例使用 `TimeString` 属性显示当前系统时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-775">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-776">用于设置 <see langword="TimeString" /> 值的格式无效。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-776">Invalid format used to set the value of <see langword="TimeString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime TimeValue(string StringTime) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime"><span data-ttu-id="9b7b5-777">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-777">Required.</span></span> <span data-ttu-id="9b7b5-778">字符串表达式，表示 1 年 1 月 1 日 00:00:00 到 9999 年 12 月 31 日 23:59:59 之间的一个日期/时间值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-778">A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="9b7b5-779">返回一个 <see langword="Date" /> 值，该值包含以字符串表示的时间信息，其日期信息设置为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-779">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-780">一个 <see langword="Date" /> 值，该值包含以字符串表示的时间信息，其日期信息设置为元年 1 月 1 日。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-780">A <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-781">可以使用12小时或24小时制输入有效时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-781">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="9b7b5-782">例如， `"2:24 P.M."` 和 `"14:24"` 都是有效的 `StringTime` 参数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-782">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="9b7b5-783">如果 `StringTime` 参数包含日期信息，则不 `TimeValue` 会将其包含在返回值中。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-783">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="9b7b5-784">但是，如果 `StringTime` 包含无效的日期信息（例如 "32 年1月1日"），则 <xref:System.InvalidCastException> 会发生错误。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-784">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-785">下面的示例使用 `TimeValue` 函数将字符串转换为时间。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-785">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="9b7b5-786">您还可以使用日期文字来向变量直接赋值 `Date` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-786">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9b7b5-787"><paramref name="StringTime" /> 包含无效的日期信息。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-787"><paramref name="StringTime" /> includes invalid date information.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b7b5-788">返回或设置一个 <see langword="Date" /> 值，该值包含对应于系统的当前日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-788">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="9b7b5-789">返回或设置一个 <see langword="Date" /> 值，该值包含对应于系统的当前日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-789">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-790">`Date`数据类型包含时间组件。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-790">The `Date` data type includes time components.</span></span> <span data-ttu-id="9b7b5-791">返回系统日期时， `Today` 将所有这些值设置为0，因此返回的值表示午夜 (00:00:00) 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-791">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="9b7b5-792">设置系统日期时，将 `Today` 忽略时间部分。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-792">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="9b7b5-793">若要以形式访问当前系统日期 `String` ，请使用 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-793">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="9b7b5-794">若要获取或设置当前系统时间，请使用 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-794">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b7b5-795">设置系统日期或时间需要非托管代码权限，这可能会影响在部分信任情况下的执行。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-795">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="9b7b5-796">有关详细信息，请参阅 <xref:System.Security.Permissions.SecurityPermission> 和 [代码访问权限](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-796">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-797">此示例使用 `Today` 属性返回当前系统日期。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-797">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="9b7b5-798">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-798">Required.</span></span> <span data-ttu-id="9b7b5-799">要确定属于一周中的哪一天的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-799">A <see langword="Date" /> value for which you want to determine the day of the week.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="9b7b5-800">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-800">Optional.</span></span> <span data-ttu-id="9b7b5-801">从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-801">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="9b7b5-802">如果未指定，则使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-802">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <summary><span data-ttu-id="9b7b5-803">返回包含表示星期几的数字的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-803">Returns an integer value containing a number representing the day of the week.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-804">包含表示星期几的数字的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-804">An integer value containing a number representing the day of the week.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-805">函数返回的值 `Weekday` 对应于枚举的值 `FirstDayOfWeek` ; 也就是说，1表示星期日，7表示星期六。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-805">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b7b5-806">`Weekday` 使用 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo> 命名空间中类的属性的当前日历设置 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-806">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="9b7b5-807">默认 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 值由 **"控制面板"** 设置确定。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-807">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="9b7b5-808">`DayOfWeek`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-808">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-809">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-809">Enumeration value</span></span>|<span data-ttu-id="9b7b5-810">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-810">Value</span></span>|<span data-ttu-id="9b7b5-811">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-811">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="9b7b5-812">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-812">0</span></span>|<span data-ttu-id="9b7b5-813">系统设置中指定的周的第一天</span><span class="sxs-lookup"><span data-stu-id="9b7b5-813">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="9b7b5-814">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-814">1</span></span>|<span data-ttu-id="9b7b5-815">星期日 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-815">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="9b7b5-816">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-816">2</span></span>|<span data-ttu-id="9b7b5-817">星期一 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-817">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="9b7b5-818">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-818">3</span></span>|<span data-ttu-id="9b7b5-819">星期二</span><span class="sxs-lookup"><span data-stu-id="9b7b5-819">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="9b7b5-820">4</span><span class="sxs-lookup"><span data-stu-id="9b7b5-820">4</span></span>|<span data-ttu-id="9b7b5-821">星期三</span><span class="sxs-lookup"><span data-stu-id="9b7b5-821">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="9b7b5-822">5</span><span class="sxs-lookup"><span data-stu-id="9b7b5-822">5</span></span>|<span data-ttu-id="9b7b5-823">星期四</span><span class="sxs-lookup"><span data-stu-id="9b7b5-823">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="9b7b5-824">6</span><span class="sxs-lookup"><span data-stu-id="9b7b5-824">6</span></span>|<span data-ttu-id="9b7b5-825">星期五</span><span class="sxs-lookup"><span data-stu-id="9b7b5-825">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="9b7b5-826">7</span><span class="sxs-lookup"><span data-stu-id="9b7b5-826">7</span></span>|<span data-ttu-id="9b7b5-827">星期六</span><span class="sxs-lookup"><span data-stu-id="9b7b5-827">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-828">下面的示例使用 `Weekday` 函数从指定的日期获取一周中的某一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-828">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-829"><paramref name="DayOfWeek" /> 小于 0 或大于 7。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-829"><paramref name="DayOfWeek" /> is less than 0 or more than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday"><span data-ttu-id="9b7b5-830">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-830">Required.</span></span> <span data-ttu-id="9b7b5-831">整数。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-831">Integer.</span></span> <span data-ttu-id="9b7b5-832">以数字表示的周几，介于 1 到 7 之间；1 表示一周的第一天，7 表示一周的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-832">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span></span> <span data-ttu-id="9b7b5-833">第一天和最后一天指的是哪一天取决于 <paramref name="FirstDayOfWeekValue" /> 的设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-833">The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="9b7b5-834">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-834">Optional.</span></span> <span data-ttu-id="9b7b5-835">指示是否缩写周几的名称的 <see langword="Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-835"><see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span></span> <span data-ttu-id="9b7b5-836">如果省略，则默认为 <see langword="False" />，表示星期几的名称不缩写。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-836">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="9b7b5-837">可选。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-837">Optional.</span></span> <span data-ttu-id="9b7b5-838">从 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 枚举中选择的值，用于指定一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-838">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="9b7b5-839">如果未指定，则使用 <see langword="FirstDayOfWeek.System" />。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-839">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span></span></param>
        <summary><span data-ttu-id="9b7b5-840">返回包含指定工作日的名称的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-840">Returns a string value containing the name of the specified weekday.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-841">包含指定工作日的名称的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-841">A string value containing the name of the specified weekday.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-842">返回的字符串 `WeekdayName` 不仅取决于输入参数，还取决于 Windows**控制面板**中指定的**区域选项**设置。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-842">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b7b5-843">`WeekdayName` 使用 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo> 命名空间中类的属性的当前日历设置 <xref:System.Globalization> 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-843">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="9b7b5-844">默认 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 值由 **"控制面板"** 设置确定。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-844">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="9b7b5-845">`FirstDayOfWeekValue`参数可以具有下列设置之一。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-845">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="9b7b5-846">枚举值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-846">Enumeration value</span></span>|<span data-ttu-id="9b7b5-847">值</span><span class="sxs-lookup"><span data-stu-id="9b7b5-847">Value</span></span>|<span data-ttu-id="9b7b5-848">说明</span><span class="sxs-lookup"><span data-stu-id="9b7b5-848">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="9b7b5-849">0</span><span class="sxs-lookup"><span data-stu-id="9b7b5-849">0</span></span>|<span data-ttu-id="9b7b5-850">系统设置中指定的周的第一天 (默认值) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-850">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="9b7b5-851">1</span><span class="sxs-lookup"><span data-stu-id="9b7b5-851">1</span></span>|<span data-ttu-id="9b7b5-852">星期日</span><span class="sxs-lookup"><span data-stu-id="9b7b5-852">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="9b7b5-853">2</span><span class="sxs-lookup"><span data-stu-id="9b7b5-853">2</span></span>|<span data-ttu-id="9b7b5-854">星期一 (符合 ISO 标准8601，第3.17 节) </span><span class="sxs-lookup"><span data-stu-id="9b7b5-854">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="9b7b5-855">3</span><span class="sxs-lookup"><span data-stu-id="9b7b5-855">3</span></span>|<span data-ttu-id="9b7b5-856">星期二</span><span class="sxs-lookup"><span data-stu-id="9b7b5-856">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="9b7b5-857">4</span><span class="sxs-lookup"><span data-stu-id="9b7b5-857">4</span></span>|<span data-ttu-id="9b7b5-858">星期三</span><span class="sxs-lookup"><span data-stu-id="9b7b5-858">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="9b7b5-859">5</span><span class="sxs-lookup"><span data-stu-id="9b7b5-859">5</span></span>|<span data-ttu-id="9b7b5-860">星期四</span><span class="sxs-lookup"><span data-stu-id="9b7b5-860">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="9b7b5-861">6</span><span class="sxs-lookup"><span data-stu-id="9b7b5-861">6</span></span>|<span data-ttu-id="9b7b5-862">星期五</span><span class="sxs-lookup"><span data-stu-id="9b7b5-862">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="9b7b5-863">7</span><span class="sxs-lookup"><span data-stu-id="9b7b5-863">7</span></span>|<span data-ttu-id="9b7b5-864">星期六</span><span class="sxs-lookup"><span data-stu-id="9b7b5-864">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-865">下面的示例使用 `Weekday` 函数从指定的日期获取一周中的某一天，然后使用该 `WeekDayName` 函数从其编号中获取工作日的名称。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-865">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9b7b5-866"><paramref name="Weekday" /> 小于 1 或大于 7，或 <paramref name="FirstDayOfWeekValue" /> 小于 0 或大于 7。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-866"><paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Year(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="9b7b5-867">必需。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-867">Required.</span></span> <span data-ttu-id="9b7b5-868">要从中提取年的 <see langword="Date" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-868">A <see langword="Date" /> value from which you want to extract the year.</span></span></param>
        <summary><span data-ttu-id="9b7b5-869">返回表示年的 1 到 9999 之间的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-869">Returns an integer value from 1 through 9999 representing the year.</span></span></summary>
        <returns><span data-ttu-id="9b7b5-870">表示年的 1 到 9999 之间的整数值。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-870">An integer value from 1 through 9999 representing the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b7b5-871">还可以通过调用 `DatePart` 并 `DateInterval.Year` 为参数指定来获取年份 `Interval` 。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-871">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b7b5-872">下面的示例使用 `Year` 函数获取指定日期的年份。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-872">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="9b7b5-873">在开发环境中，使用代码的区域设置以短日期格式显示日期文本。</span><span class="sxs-lookup"><span data-stu-id="9b7b5-873">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>
