<Type Name="WindowsPrincipal" FullName="System.Security.Principal.WindowsPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72e1f02e29e3e199446353b6516568e9cfafabbe" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86577835" /></Metadata><TypeSignature Language="C#" Value="public class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsPrincipal extends System.Security.Claims.ClaimsPrincipal" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsPrincipal&#xA;Inherits ClaimsPrincipal" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsPrincipal : System::Security::Claims::ClaimsPrincipal" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type WindowsPrincipal = class&#xA;    inherit ClaimsPrincipal" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class WindowsPrincipal : System.Security.Principal.IPrincipal" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsPrincipal&#xA;Implements IPrincipal" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsPrincipal : System::Security::Principal::IPrincipal" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="F#" Value="type WindowsPrincipal = class&#xA;    interface IPrincipal" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsPrincipal extends System.Security.Claims.ClaimsPrincipal" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0">
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f8b24-101">允许代码检查 Windows 用户的 Windows 组成员身份。</span><span class="sxs-lookup"><span data-stu-id="f8b24-101">Enables code to check the Windows group membership of a Windows user.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b24-102"><xref:System.Security.Principal.WindowsPrincipal>类主要用于检查 Windows 用户的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-102">The <xref:System.Security.Principal.WindowsPrincipal> class is primarily used to check the role of a Windows user.</span></span> <span data-ttu-id="f8b24-103"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType>方法重载使你可以使用不同的角色上下文检查用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-103">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> method overloads let you check the user role by using different role contexts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8b24-104">下面的示例演示如何使用 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-104">The following example demonstrates how to use the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method overloads.</span></span> <span data-ttu-id="f8b24-105"><xref:System.Security.Principal.WindowsBuiltInRole>枚举用作标识内置角色 (rid) 的相对标识符的源。</span><span class="sxs-lookup"><span data-stu-id="f8b24-105">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the relative identifiers (RIDs) that identify the built-in roles.</span></span> <span data-ttu-id="f8b24-106">Rid 用于确定当前主体的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-106">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity ntIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ntIdentity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsPrincipal(System::Security::Principal::WindowsIdentity ^ ntIdentity);" />
      <MemberSignature Language="F#" Value="new System.Security.Principal.WindowsPrincipal : System.Security.Principal.WindowsIdentity -&gt; System.Security.Principal.WindowsPrincipal" Usage="new System.Security.Principal.WindowsPrincipal ntIdentity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ntIdentity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="ntIdentity"><span data-ttu-id="f8b24-107">根据其构造 <see cref="T:System.Security.Principal.WindowsPrincipal" /> 新实例的对象。</span><span class="sxs-lookup"><span data-stu-id="f8b24-107">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsPrincipal" />.</span></span></param>
        <summary><span data-ttu-id="f8b24-108">使用指定的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 对象初始化 <see cref="T:System.Security.Principal.WindowsPrincipal" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f8b24-108">Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsPrincipal" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8b24-109">下面的示例从当前对象创建一个新的 <xref:System.Security.Principal.WindowsPrincipal> 对象 <xref:System.Security.Principal.WindowsIdentity> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-109">The following example creates a new <xref:System.Security.Principal.WindowsPrincipal> object from the current <xref:System.Security.Principal.WindowsIdentity> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8b24-110"><paramref name="ntIdentity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-110"><paramref name="ntIdentity" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__1))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__13))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__13))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8b24-111">从此主体中获取所有 Windows 设备声明。</span><span class="sxs-lookup"><span data-stu-id="f8b24-111">Gets all Windows device claims from this principal.</span></span></summary>
        <value><span data-ttu-id="f8b24-112">从此主体中声明的所有 Windows 设备的集合。</span><span class="sxs-lookup"><span data-stu-id="f8b24-112">A collection of all Windows device claims from this principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0">P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8b24-113">获取当前用户的标识。</span><span class="sxs-lookup"><span data-stu-id="f8b24-113">Gets the identity of the current principal.</span></span></summary>
        <value><span data-ttu-id="f8b24-114">当前主体的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f8b24-114">The <see cref="T:System.Security.Principal.WindowsIdentity" /> object of the current principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8b24-115">下面的示例通过使用对象的属性来检索用户的名称 <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> <xref:System.Security.Principal.WindowsPrincipal> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-115">The following example retrieves the name of the user by using the <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> property of the <xref:System.Security.Principal.WindowsPrincipal> object.</span></span>  
  
 [!code-cpp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8b24-116">确定当前主体是否属于指定的 Windows 用户组。</span><span class="sxs-lookup"><span data-stu-id="f8b24-116">Determines whether the current principal belongs to a specified Windows user group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b24-117">此方法有四个重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-117">There are four overloads for this method.</span></span> <span data-ttu-id="f8b24-118">出于性能原因， <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 强烈建议使用重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-118">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is strongly recommended.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8b24-119"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>Windows 98 或 Windows Millennium Edition 不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-119">The <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (int rid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(int32 rid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (rid As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(int rid);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : int -&gt; bool" Usage="windowsPrincipal.IsInRole rid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : int -&gt; bool&#xA;override this.IsInRole : int -&gt; bool" Usage="windowsPrincipal.IsInRole rid" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rid"><span data-ttu-id="f8b24-120">Windows 用户组的 RID，在该用户组中检查主体的成员资格状态。</span><span class="sxs-lookup"><span data-stu-id="f8b24-120">The RID of the Windows user group in which to check for the principal's membership status.</span></span></param>
        <summary><span data-ttu-id="f8b24-121">确定当前主体是否属于具有指定相对标识符 (RID) 的 Windows 用户组。</span><span class="sxs-lookup"><span data-stu-id="f8b24-121">Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</span></span></summary>
        <returns><span data-ttu-id="f8b24-122">如果当前主体是指定的 Windows 用户组的成员（即在特定的角色中），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-122"><see langword="true" /> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b24-123">测试新创建的角色信息（如新用户或新组）时，注销并登录以强制在域内传播角色信息非常重要。</span><span class="sxs-lookup"><span data-stu-id="f8b24-123">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8b24-124">不这样做可能会导致 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 测试返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-124">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8b24-125">Windows 98 或 Windows Millennium Edition 不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-125">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="f8b24-126">出于性能原因， <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 建议重载重载，作为确定用户角色的首选重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-126">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8b24-127">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="f8b24-127">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8b24-128">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="f8b24-128">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8b24-129">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-129">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8b24-130">当您尝试执行需要管理特权的任务时，您可以使用同意对话框动态提升您的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-130">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8b24-131">执行方法的代码 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 不显示 "同意" 对话框。</span><span class="sxs-lookup"><span data-stu-id="f8b24-131">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8b24-132">如果你是标准用户角色，则该代码将返回 false，即使你处于内置 Administrators 组中也是如此。</span><span class="sxs-lookup"><span data-stu-id="f8b24-132">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8b24-133">通过右键单击应用程序图标并指示你希望以管理员身份运行，可以在执行代码之前提升权限。</span><span class="sxs-lookup"><span data-stu-id="f8b24-133">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="f8b24-134">相对标识符 (Rid) 是 Windows 用户组的安全标识符 (SID) 的组件，并支持这些组件来帮助防止跨平台本地化问题。</span><span class="sxs-lookup"><span data-stu-id="f8b24-134">Relative identifiers (RIDs) are components of a Windows user group's security identifier (SID) and are supported to help prevent cross-platform localization issues.</span></span> <span data-ttu-id="f8b24-135">许多用户帐户、本地组和全局组的默认 RID 值在所有 Windows 版本中都是固定的。</span><span class="sxs-lookup"><span data-stu-id="f8b24-135">Many user accounts, local groups, and global groups have a default RID value that is constant across all versions of Windows.</span></span>  
  
 <span data-ttu-id="f8b24-136">例如，BUILTIN\Administrators 角色的 RID 为0x220。</span><span class="sxs-lookup"><span data-stu-id="f8b24-136">For example, the RID for the BUILTIN\Administrators role is 0x220.</span></span> <span data-ttu-id="f8b24-137"><xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>如果当前主体是管理员，则使用0x220 作为方法的输入参数 `true` 会导致返回。</span><span class="sxs-lookup"><span data-stu-id="f8b24-137">Using 0x220 as the input parameter for the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method results in `true` being returned if the current principal is an administrator.</span></span>  
  
 <span data-ttu-id="f8b24-138">下表列出了默认 RID 值。</span><span class="sxs-lookup"><span data-stu-id="f8b24-138">The following tables list the default RID values.</span></span>  
  
|<span data-ttu-id="f8b24-139">内置用户</span><span class="sxs-lookup"><span data-stu-id="f8b24-139">Built-in users</span></span>|<span data-ttu-id="f8b24-140">RID</span><span class="sxs-lookup"><span data-stu-id="f8b24-140">RID</span></span>|  
|---------------------|---------|  
|<span data-ttu-id="f8b24-141">DOMAINNAME\Administrator</span><span class="sxs-lookup"><span data-stu-id="f8b24-141">DOMAINNAME\Administrator</span></span>|<span data-ttu-id="f8b24-142">0x1F4</span><span class="sxs-lookup"><span data-stu-id="f8b24-142">0x1F4</span></span>|  
|<span data-ttu-id="f8b24-143">DOMAINNAME\Guest</span><span class="sxs-lookup"><span data-stu-id="f8b24-143">DOMAINNAME\Guest</span></span>|<span data-ttu-id="f8b24-144">0x1F5</span><span class="sxs-lookup"><span data-stu-id="f8b24-144">0x1F5</span></span>|  
  
|<span data-ttu-id="f8b24-145">内置全局组</span><span class="sxs-lookup"><span data-stu-id="f8b24-145">Built-in global groups</span></span>|<span data-ttu-id="f8b24-146">RID</span><span class="sxs-lookup"><span data-stu-id="f8b24-146">RID</span></span>|  
|-----------------------------|---------|  
|<span data-ttu-id="f8b24-147">DOMAINNAME\Domain 管理员</span><span class="sxs-lookup"><span data-stu-id="f8b24-147">DOMAINNAME\Domain Admins</span></span>|<span data-ttu-id="f8b24-148">0x200</span><span class="sxs-lookup"><span data-stu-id="f8b24-148">0x200</span></span>|  
|<span data-ttu-id="f8b24-149">DOMAINNAME\Domain 用户</span><span class="sxs-lookup"><span data-stu-id="f8b24-149">DOMAINNAME\Domain Users</span></span>|<span data-ttu-id="f8b24-150">0x201</span><span class="sxs-lookup"><span data-stu-id="f8b24-150">0x201</span></span>|  
|<span data-ttu-id="f8b24-151">DOMAINNAME\Domain 来宾</span><span class="sxs-lookup"><span data-stu-id="f8b24-151">DOMAINNAME\Domain Guests</span></span>|<span data-ttu-id="f8b24-152">0x202</span><span class="sxs-lookup"><span data-stu-id="f8b24-152">0x202</span></span>|  
  
|<span data-ttu-id="f8b24-153">内置本地组</span><span class="sxs-lookup"><span data-stu-id="f8b24-153">Built-in local groups</span></span>|<span data-ttu-id="f8b24-154">RID</span><span class="sxs-lookup"><span data-stu-id="f8b24-154">RID</span></span>|  
|----------------------------|---------|  
|<span data-ttu-id="f8b24-155">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="f8b24-155">BUILTIN\Administrators</span></span>|<span data-ttu-id="f8b24-156">0x220</span><span class="sxs-lookup"><span data-stu-id="f8b24-156">0x220</span></span>|  
|<span data-ttu-id="f8b24-157">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="f8b24-157">BUILTIN\Users</span></span>|<span data-ttu-id="f8b24-158">0x221</span><span class="sxs-lookup"><span data-stu-id="f8b24-158">0x221</span></span>|  
|<span data-ttu-id="f8b24-159">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="f8b24-159">BUILTIN\Guests</span></span>|<span data-ttu-id="f8b24-160">0x222</span><span class="sxs-lookup"><span data-stu-id="f8b24-160">0x222</span></span>|  
|<span data-ttu-id="f8b24-161">BUILTIN\Account 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-161">BUILTIN\Account Operators</span></span>|<span data-ttu-id="f8b24-162">0x224</span><span class="sxs-lookup"><span data-stu-id="f8b24-162">0x224</span></span>|  
|<span data-ttu-id="f8b24-163">BUILTIN\Server 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-163">BUILTIN\Server Operators</span></span>|<span data-ttu-id="f8b24-164">0x225</span><span class="sxs-lookup"><span data-stu-id="f8b24-164">0x225</span></span>|  
|<span data-ttu-id="f8b24-165">BUILTIN\Print 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-165">BUILTIN\Print Operators</span></span>|<span data-ttu-id="f8b24-166">0x226</span><span class="sxs-lookup"><span data-stu-id="f8b24-166">0x226</span></span>|  
|<span data-ttu-id="f8b24-167">BUILTIN\Backup 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-167">BUILTIN\Backup Operators</span></span>|<span data-ttu-id="f8b24-168">0x227</span><span class="sxs-lookup"><span data-stu-id="f8b24-168">0x227</span></span>|  
|<span data-ttu-id="f8b24-169">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="f8b24-169">BUILTIN\Replicator</span></span>|<span data-ttu-id="f8b24-170">0x228</span><span class="sxs-lookup"><span data-stu-id="f8b24-170">0x228</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f8b24-171">下面的代码示例演示方法的用法 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-171">The following code example demonstrates the use of  the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> methods.</span></span> <span data-ttu-id="f8b24-172"><xref:System.Security.Principal.WindowsBuiltInRole>枚举用作标识内置角色的 rid 的源。</span><span class="sxs-lookup"><span data-stu-id="f8b24-172">The <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used as the source for the RIDs that identify the built-in roles.</span></span> <span data-ttu-id="f8b24-173">Rid 用于确定当前主体的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-173">The RIDs are used to determine the roles of the current principal.</span></span>  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (sid As SecurityIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool" Usage="windowsPrincipal.IsInRole sid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool&#xA;override this.IsInRole : System.Security.Principal.SecurityIdentifier -&gt; bool" Usage="windowsPrincipal.IsInRole sid" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="f8b24-174">唯一标识 Windows 用户组的 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-174">A <see cref="T:System.Security.Principal.SecurityIdentifier" /> that uniquely identifies a Windows user group.</span></span></param>
        <summary><span data-ttu-id="f8b24-175">确定当前主体是否属于具有指定的安全标识符 (SID) 的 Windows 用户组。</span><span class="sxs-lookup"><span data-stu-id="f8b24-175">Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</span></span></summary>
        <returns><span data-ttu-id="f8b24-176">如果当前主体是指定的 Windows 用户组的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-176"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b24-177"><xref:System.Security.Principal.SecurityIdentifier>唯一标识 windows 2000、Windows Server 和 WINDOWS XP 实现上的用户或组。</span><span class="sxs-lookup"><span data-stu-id="f8b24-177">The <xref:System.Security.Principal.SecurityIdentifier> uniquely identifies a user or group on Windows 2000, Windows Server, and Windows XP implementations.</span></span> <span data-ttu-id="f8b24-178">测试新创建的角色信息（如新用户或新组）时，注销并登录以强制在域内传播角色信息非常重要。</span><span class="sxs-lookup"><span data-stu-id="f8b24-178">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8b24-179">不这样做可能会导致 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 测试返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-179">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8b24-180">Windows 98 或 Windows Millennium Edition 不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-180">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8b24-181">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="f8b24-181">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8b24-182">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="f8b24-182">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8b24-183">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-183">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8b24-184">当您尝试执行需要管理特权的任务时，您可以使用同意对话框动态提升您的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-184">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8b24-185">执行方法的代码 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 不显示 "同意" 对话框。</span><span class="sxs-lookup"><span data-stu-id="f8b24-185">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8b24-186">如果你是标准用户角色，则该代码将返回 false，即使你处于内置 Administrators 组中也是如此。</span><span class="sxs-lookup"><span data-stu-id="f8b24-186">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8b24-187">通过右键单击应用程序图标并指示你希望以管理员身份运行，可以在执行代码之前提升权限。</span><span class="sxs-lookup"><span data-stu-id="f8b24-187">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="f8b24-188">出于性能原因，这是确定用户角色的首选重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-188">For performance reasons, this is the preferable overload to determine a user's role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8b24-189">下面的代码示例演示方法的用法 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-189">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f8b24-190"><xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid>枚举值用于确定当前主体是否为管理员。</span><span class="sxs-lookup"><span data-stu-id="f8b24-190">The <xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> enumeration value is used to determine whether the current principal is an administrator.</span></span> <span data-ttu-id="f8b24-191">有关完整的代码示例，请参见 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-191">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#5)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8b24-192"><paramref name="sid" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-192"><paramref name="sid" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f8b24-193">Windows 返回了 Win32 错误。</span><span class="sxs-lookup"><span data-stu-id="f8b24-193">Windows returned a Win32 error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool&#xA;override this.IsInRole : System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="f8b24-194"><see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="f8b24-194">One of the <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> values.</span></span></param>
        <summary><span data-ttu-id="f8b24-195">确定当前主体是否属于具有指定 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 的 Windows 用户组。</span><span class="sxs-lookup"><span data-stu-id="f8b24-195">Determines whether the current principal belongs to the Windows user group with the specified <see cref="T:System.Security.Principal.WindowsBuiltInRole" />.</span></span></summary>
        <returns><span data-ttu-id="f8b24-196">如果当前主体是指定的 Windows 用户组的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-196"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b24-197">测试新创建的角色信息（如新用户或新组）时，注销并登录以强制在域内传播角色信息非常重要。</span><span class="sxs-lookup"><span data-stu-id="f8b24-197">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8b24-198">不这样做可能会导致 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 测试返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-198">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8b24-199">Windows 98 或 Windows Millennium Edition 不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-199">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="f8b24-200">出于性能原因， <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 建议重载重载，作为确定用户角色的首选重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-200">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8b24-201">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="f8b24-201">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8b24-202">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="f8b24-202">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8b24-203">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-203">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8b24-204">当您尝试执行需要管理特权的任务时，您可以使用同意对话框动态提升您的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-204">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8b24-205">执行方法的代码 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 不显示 "同意" 对话框。</span><span class="sxs-lookup"><span data-stu-id="f8b24-205">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8b24-206">如果你是标准用户角色，则该代码将返回 false，即使你处于内置 Administrators 组中也是如此。</span><span class="sxs-lookup"><span data-stu-id="f8b24-206">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8b24-207">通过右键单击应用程序图标并指示你希望以管理员身份运行，可以在执行代码之前提升权限。</span><span class="sxs-lookup"><span data-stu-id="f8b24-207">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8b24-208">下面的示例使用 <xref:System.Security.Principal.WindowsBuiltInRole> 枚举来确定当前主体是否为 <xref:System.Security.Principal.WindowsBuiltInRole.Administrator> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-208">The following example uses the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration is used to determine whether the current principal is an <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>.</span></span> <span data-ttu-id="f8b24-209">有关完整的代码示例，请参见 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-209">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#4)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8b24-210"><paramref name="role" /> 不是有效的 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f8b24-210"><paramref name="role" /> is not a valid <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="windowsPrincipal.IsInRole role" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0">M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="f8b24-211">要对其检查成员身份的 Windows 用户组的名称。</span><span class="sxs-lookup"><span data-stu-id="f8b24-211">The name of the Windows user group for which to check membership.</span></span></param>
        <summary><span data-ttu-id="f8b24-212">确定当前主体是否属于具有指定名称的 Windows 用户组。</span><span class="sxs-lookup"><span data-stu-id="f8b24-212">Determines whether the current principal belongs to the Windows user group with the specified name.</span></span></summary>
        <returns><span data-ttu-id="f8b24-213">如果当前主体是指定的 Windows 用户组的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f8b24-213"><see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8b24-214">测试新创建的角色信息（如新用户或新组）时，注销并登录以强制在域内传播角色信息非常重要。</span><span class="sxs-lookup"><span data-stu-id="f8b24-214">When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain.</span></span> <span data-ttu-id="f8b24-215">不这样做可能会导致 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 测试返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-215">Not doing so can cause the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> test to return `false`.</span></span> <span data-ttu-id="f8b24-216">Windows 98 或 Windows Millennium Edition 不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-216">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span>  
  
 <span data-ttu-id="f8b24-217">出于性能原因， <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 建议重载重载，作为确定用户角色的首选重载。</span><span class="sxs-lookup"><span data-stu-id="f8b24-217">For performance reasons, the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> overload is recommended as the preferable overload for determining the user's role.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8b24-218">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="f8b24-218">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="f8b24-219">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="f8b24-219">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="f8b24-220">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-220">By default, you are in the standard user role.</span></span> <span data-ttu-id="f8b24-221">当您尝试执行需要管理特权的任务时，您可以使用同意对话框动态提升您的角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-221">When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.</span></span> <span data-ttu-id="f8b24-222">执行方法的代码 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 不显示 "同意" 对话框。</span><span class="sxs-lookup"><span data-stu-id="f8b24-222">The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box.</span></span> <span data-ttu-id="f8b24-223">如果你是标准用户角色，则该代码将返回 false，即使你处于内置 Administrators 组中也是如此。</span><span class="sxs-lookup"><span data-stu-id="f8b24-223">The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.</span></span> <span data-ttu-id="f8b24-224">通过右键单击应用程序图标并指示你希望以管理员身份运行，可以在执行代码之前提升权限。</span><span class="sxs-lookup"><span data-stu-id="f8b24-224">You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="f8b24-225">对于内置角色， `role` 字符串应采用 "内置 \\ *RoleNameHere*" 格式。</span><span class="sxs-lookup"><span data-stu-id="f8b24-225">For built-in roles, the `role` string should be in the form "BUILTIN\\*RoleNameHere*".</span></span> <span data-ttu-id="f8b24-226">例如，若要测试 Windows 管理员角色中的成员身份，表示角色的字符串应为 "BUILTIN\Administrators"。</span><span class="sxs-lookup"><span data-stu-id="f8b24-226">For example, to test for membership in the Windows administrator role, the string representing the role should be "BUILTIN\Administrators".</span></span> <span data-ttu-id="f8b24-227">请注意，可能需要转义反斜杠。</span><span class="sxs-lookup"><span data-stu-id="f8b24-227">Note that the backslash might need to be escaped.</span></span> <span data-ttu-id="f8b24-228">下表列出了内置角色。</span><span class="sxs-lookup"><span data-stu-id="f8b24-228">The following table lists the built-in roles.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8b24-229">采用字符串格式的内置角色的拼写与枚举中使用的拼写不同 <xref:System.Security.Principal.WindowsBuiltInRole> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-229">The spelling for the BUILTIN roles in string format differs from the spelling used in the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration.</span></span> <span data-ttu-id="f8b24-230">例如，枚举中的管理员拼写为 "管理员"，而不是 "Administrators"。</span><span class="sxs-lookup"><span data-stu-id="f8b24-230">For example, the spelling for an administrator in the enumeration is "Administrator", not "Administrators".</span></span> <span data-ttu-id="f8b24-231">使用此重载时，使用下表中的角色拼写。</span><span class="sxs-lookup"><span data-stu-id="f8b24-231">When using this overload, use the spelling for the role from the following table.</span></span>  
  
|<span data-ttu-id="f8b24-232">内置本地组</span><span class="sxs-lookup"><span data-stu-id="f8b24-232">Built-in local groups</span></span>|  
|----------------------------|  
|<span data-ttu-id="f8b24-233">BUILTIN\Administrators</span><span class="sxs-lookup"><span data-stu-id="f8b24-233">BUILTIN\Administrators</span></span>|  
|<span data-ttu-id="f8b24-234">BUILTIN\Users</span><span class="sxs-lookup"><span data-stu-id="f8b24-234">BUILTIN\Users</span></span>|  
|<span data-ttu-id="f8b24-235">BUILTIN\Guests</span><span class="sxs-lookup"><span data-stu-id="f8b24-235">BUILTIN\Guests</span></span>|  
|<span data-ttu-id="f8b24-236">BUILTIN\Account 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-236">BUILTIN\Account Operators</span></span>|  
|<span data-ttu-id="f8b24-237">BUILTIN\Server 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-237">BUILTIN\Server Operators</span></span>|  
|<span data-ttu-id="f8b24-238">BUILTIN\Print 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-238">BUILTIN\Print Operators</span></span>|  
|<span data-ttu-id="f8b24-239">BUILTIN\Backup 运算符</span><span class="sxs-lookup"><span data-stu-id="f8b24-239">BUILTIN\Backup Operators</span></span>|  
|<span data-ttu-id="f8b24-240">BUILTIN\Replicator</span><span class="sxs-lookup"><span data-stu-id="f8b24-240">BUILTIN\Replicator</span></span>|  
  
 <span data-ttu-id="f8b24-241">对于计算机特定的角色， `role` 字符串应采用 "MachineName \\ *RoleNameHere*" 格式。</span><span class="sxs-lookup"><span data-stu-id="f8b24-241">For machine-specific roles, the `role` string should be in the form "MachineName\\*RoleNameHere*".</span></span>  
  
 <span data-ttu-id="f8b24-242">对于域特定的角色， `role` 字符串应采用 "DomainName \\ *RoleNameHere*" 形式; 例如， `"SomeDomain\Domain Users` ""。</span><span class="sxs-lookup"><span data-stu-id="f8b24-242">For domain-specific roles, the `role` string should be in the form "DomainName\\*RoleNameHere*"; for example, `"SomeDomain\Domain Users`".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8b24-243">在 .NET Framework 版本1.0 中， `role` 参数区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f8b24-243">In the .NET Framework version 1.0, the `role` parameter is case-sensitive.</span></span> <span data-ttu-id="f8b24-244">在 .NET Framework 版本1.1 及更高版本中， `role` 参数不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="f8b24-244">In the .NET Framework version 1.1 and later, the `role` parameter is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8b24-245">下面的代码示例演示方法的用法 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="f8b24-245">The following code example demonstrates the use of the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f8b24-246">字符串 `BUILTIN\Administrators` 和 `BUILTIN\Users` 用于确定当前主体是否是管理员或用户。</span><span class="sxs-lookup"><span data-stu-id="f8b24-246">The strings `BUILTIN\Administrators` and `BUILTIN\Users` are used to determine whether the current principal is an administrator or a user.</span></span> <span data-ttu-id="f8b24-247">有关完整的代码示例，请参见 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f8b24-247">For the full code example, see the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#3)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserClaims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__1))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__11))]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__11))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8b24-248">从此主体中获取所有 Windows 用户声明。</span><span class="sxs-lookup"><span data-stu-id="f8b24-248">Gets all Windows user claims from this principal.</span></span></summary>
        <value><span data-ttu-id="f8b24-249">从此主体中声明的所有 Windows 用户的集合。</span><span class="sxs-lookup"><span data-stu-id="f8b24-249">A collection of all Windows user claims from this principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
