<Type Name="XmlDsigExcC14NWithCommentsTransform" FullName="System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="08c156681bf13fb906add3baea1c68902b324b1e" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82485446" /></Metadata><TypeSignature Language="C#" Value="public class XmlDsigExcC14NWithCommentsTransform : System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigExcC14NWithCommentsTransform extends System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigExcC14NWithCommentsTransform&#xA;Inherits XmlDsigExcC14NTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigExcC14NWithCommentsTransform : System::Security::Cryptography::Xml::XmlDsigExcC14NTransform" />
  <TypeSignature Language="F#" Value="type XmlDsigExcC14NWithCommentsTransform = class&#xA;    inherit XmlDsigExcC14NTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.XmlDsigExcC14NTransform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示由万维网联合会 (W3C) 定义的数字签名专用 C14N XML 标准化转换（带注释）。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>类表示包含注释的独占 C14N XML 规范化转换。  此类与 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> 类相似，后者允许签名者使用 XML 文档的规范形式创建摘要。  但是， <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> 类会排除规范化子文档中的上级上下文。  
  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>需要规范化 xml 子文档，使其独立于其 xml 上下文时，可使用类。  例如，在复杂的通信协议内使用已签名 XML 的应用程序（如 Web 服务）通常需要以这种方式规范化 XML。  此类应用程序通常在各种动态构造的元素内信封 XML，这可能会显著更改文档并导致 XML 签名验证失败。  <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>类通过从规范子文档中排除此类上级上下文来解决此问题。  
  
 请注意，不能直接创建规范化转换类的新实例。  若要指定规范化转换，请将描述转换的统一资源标识符（URI）传递给 <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> 属性，该属性可从属性访问 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> 。  若要获取对规范化转换的引用，请使用属性 <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> ，该属性可从属性进行访问 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> 。  
  
 描述类的 URI <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> 由 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> 字段定义。  
  
 有关独占 C14N 转换的详细信息，请参阅 W3C 网站中提供的[XMLDSIG 规范](https://www.w3.org/TR/xmldsig-core/)。 规范化算法是在[W3C 规范 XML 规范](https://www.w3.org/TR/2002/REC-xml-exc-c14n-20020718/)中定义的。  
  
   
  
## Examples  
 下面的代码示例演示如何使用类对 XML 文档进行签名和验证 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> 。  此示例将创建一个信封签名。  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NWithCommentsTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NWithCommentsTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NWithCommentsTransform (string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NWithCommentsTransform(System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform : string -&gt; System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform inclusiveNamespacesPrefixList" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inclusiveNamespacesPrefixList">要使用标准规范化算法来规范化的命名空间前缀。</param>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> 类的一个新实例，并指定要使用标准规范化算法来规范化的命名空间前缀列表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `inclusiveNamespacesPrefixList`参数包含以空白分隔的命名空间前缀列表，以使用标准规范化算法而不是专用规范化算法来规范化。  若要指定没有前缀的默认命名空间，请传递特殊前缀 "#default"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
