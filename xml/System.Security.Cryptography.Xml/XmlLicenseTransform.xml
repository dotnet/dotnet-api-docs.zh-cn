<Type Name="XmlLicenseTransform" FullName="System.Security.Cryptography.Xml.XmlLicenseTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4dcc21756bc2c1104ea29ff4b1d83c6f09df994" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89873926" /></Metadata><TypeSignature Language="C#" Value="public class XmlLicenseTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLicenseTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlLicenseTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlLicenseTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlLicenseTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f537-101">表示用于对签名的 XrML 许可证进行标准化的许可证转换算法。</span><span class="sxs-lookup"><span data-stu-id="0f537-101">Represents the license transform algorithm used to normalize XrML licenses for signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f537-102"><xref:System.Security.Cryptography.Xml.XmlLicenseTransform>类表示在 Mpeg 权限扩展语言 (MPEG REL) 中定义的许可证转换算法。</span><span class="sxs-lookup"><span data-stu-id="0f537-102">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).</span></span>  
  
 <span data-ttu-id="0f537-103">使用 <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> 类可转换签名的 XrML 许可证。</span><span class="sxs-lookup"><span data-stu-id="0f537-103">Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures.</span></span>  
  
 <span data-ttu-id="0f537-104">描述类的统一资源标识符 (URI) 由 <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> 字段定义。</span><span class="sxs-lookup"><span data-stu-id="0f537-104">The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f537-105">下面的代码示例演示如何使用接口和类验证 XML 数字签名 <xref:System.Security.Cryptography.Xml.IRelDecryptor> <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> 。</span><span class="sxs-lookup"><span data-stu-id="0f537-105">The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlLicenseTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlLicenseTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f537-106">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f537-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryptor">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.IRelDecryptor Decryptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.IRelDecryptor Decryptor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" />
      <MemberSignature Language="VB.NET" Value="Public Property Decryptor As IRelDecryptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::IRelDecryptor ^ Decryptor { System::Security::Cryptography::Xml::IRelDecryptor ^ get(); void set(System::Security::Cryptography::Xml::IRelDecryptor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Decryptor : System.Security.Cryptography.Xml.IRelDecryptor with get, set" Usage="System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.IRelDecryptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f537-107">获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的解密码。</span><span class="sxs-lookup"><span data-stu-id="0f537-107">Gets or sets the decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="0f537-108">当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的解密码。</span><span class="sxs-lookup"><span data-stu-id="0f537-108">The decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f537-109"><xref:System.Security.Cryptography.Xml.XmlLicenseTransform>对象使用 <xref:System.Security.Cryptography.Xml.IRelDecryptor> 接口来解密 `<encryptedGrant>` 当前元素中的元素 `<license>` 。</span><span class="sxs-lookup"><span data-stu-id="0f537-109">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f537-110">下面的代码示例演示如何使用接口和类验证 XML 数字签名 <xref:System.Security.Cryptography.Xml.IRelDecryptor> <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> 。</span><span class="sxs-lookup"><span data-stu-id="0f537-110">The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlLicenseTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f537-111">返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素的子元素的形成来包含这些参数。</span><span class="sxs-lookup"><span data-stu-id="0f537-111">Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="0f537-112">XML 节点的列表，这些节点表示描述 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象所需的特定于转换的内容。</span><span class="sxs-lookup"><span data-stu-id="0f537-112">A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f537-113">返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</span><span class="sxs-lookup"><span data-stu-id="0f537-113">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlLicenseTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f537-114">返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</span><span class="sxs-lookup"><span data-stu-id="0f537-114">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <returns><span data-ttu-id="0f537-115"><see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</span><span class="sxs-lookup"><span data-stu-id="0f537-115">The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f537-116">返回的对象的类型必须为 <xref:System.Xml.XmlDocument> 。</span><span class="sxs-lookup"><span data-stu-id="0f537-116">The type of the returned object must be <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput (type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlLicenseTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0f537-117">要返回的输出的类型。</span><span class="sxs-lookup"><span data-stu-id="0f537-117">The type of the output to return.</span></span> <span data-ttu-id="0f537-118"><see cref="T:System.Xml.XmlDocument" /> 是此参数的唯一有效类型。</span><span class="sxs-lookup"><span data-stu-id="0f537-118"><see cref="T:System.Xml.XmlDocument" /> is the only valid type for this parameter.</span></span></param>
        <summary><span data-ttu-id="0f537-119">返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</span><span class="sxs-lookup"><span data-stu-id="0f537-119">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <returns><span data-ttu-id="0f537-120"><see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</span><span class="sxs-lookup"><span data-stu-id="0f537-120">The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f537-121"><paramref name="type" /> 参数不是一个 <see cref="T:System.Xml.XmlDocument" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f537-121">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f537-122">获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 方法的有效输入。</span><span class="sxs-lookup"><span data-stu-id="0f537-122">Gets an array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="0f537-123">一个类型数组，这些类型是当前 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 方法的有效输入；只能将属于这些类型之一的对象传递给当前 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="0f537-123">An array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; you can pass only objects of one of these types to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f537-124">类的唯一有效输入类型 <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> 为 <xref:System.Xml.XmlDocument> 。</span><span class="sxs-lookup"><span data-stu-id="0f537-124">The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlLicenseTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList"><span data-ttu-id="0f537-125">一个 <see cref="T:System.Xml.XmlNodeList" /> 对象，该对象封装要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象中的转换。</span><span class="sxs-lookup"><span data-stu-id="0f537-125">An <see cref="T:System.Xml.XmlNodeList" /> object that encapsulates the transform to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></param>
        <summary><span data-ttu-id="0f537-126">将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 <see langword="&lt;Transform&gt;" /> 元素的特定于转换的内容；此方法不受支持，因为 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象没有内部 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="0f537-126">Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element; this method is not supported because the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object has no inner XML elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlLicenseTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0f537-127">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象中的输入。</span><span class="sxs-lookup"><span data-stu-id="0f537-127">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span> <span data-ttu-id="0f537-128">输入对象的类型必须为 <see cref="T:System.Xml.XmlDocument" />。</span><span class="sxs-lookup"><span data-stu-id="0f537-128">The type of the input object must be <see cref="T:System.Xml.XmlDocument" />.</span></span></param>
        <summary><span data-ttu-id="0f537-129">将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象中。</span><span class="sxs-lookup"><span data-stu-id="0f537-129">Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0f537-130">调用此转换之前未设置上下文。</span><span class="sxs-lookup"><span data-stu-id="0f537-130">The context was not set before this transform was invoked.</span></span>  
  
<span data-ttu-id="0f537-131">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0f537-131">-or-</span></span> 
<span data-ttu-id="0f537-132">调用此转换之前未设置 <see langword="&lt;issuer&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="0f537-132">The <see langword="&lt;issuer&gt;" /> element was not set before this transform was invoked.</span></span>  
  
<span data-ttu-id="0f537-133">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0f537-133">-or-</span></span> 
<span data-ttu-id="0f537-134">调用此转换之前未设置 <see langword="&lt;license&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="0f537-134">The <see langword="&lt;license&gt;" /> element was not set before this transform was invoked.</span></span>  
  
<span data-ttu-id="0f537-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0f537-135">-or-</span></span> 
<span data-ttu-id="0f537-136">调用此转换之前未设置 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0f537-136">The <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> property was not set before this transform was invoked.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f537-137">获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 方法的有效输出。</span><span class="sxs-lookup"><span data-stu-id="0f537-137">Gets an array of types that are valid outputs from the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="0f537-138">当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的一个有效输出类型数组；从当前 <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 方法只返回属于这些类型之一的对象。</span><span class="sxs-lookup"><span data-stu-id="0f537-138">An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f537-139">类的唯一有效输出类型 <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> 为 <xref:System.Xml.XmlDocument> 。</span><span class="sxs-lookup"><span data-stu-id="0f537-139">The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
