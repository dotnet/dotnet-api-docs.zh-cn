<Type Name="WebErrorEvent" FullName="System.Web.Management.WebErrorEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="decf6fffa6454261ec782c82808b2bffdd0e63e6" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89726893" /></Metadata><TypeSignature Language="C#" Value="public class WebErrorEvent : System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebErrorEvent extends System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebErrorEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebErrorEvent&#xA;Inherits WebBaseErrorEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebErrorEvent : System::Web::Management::WebBaseErrorEvent" />
  <TypeSignature Language="F#" Value="type WebErrorEvent = class&#xA;    inherit WebBaseErrorEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebBaseErrorEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供有关系统错误的信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET health monitoring 允许生产和运营人员管理已部署的 Web 应用程序。 <xref:System.Web.Management>命名空间包含的运行状况事件类型负责打包应用程序运行状况数据，以及负责处理此数据的提供程序类型。 它还包含在运行状况事件的管理过程中可帮助的支持类型。  
  
 <xref:System.Web.Management.WebErrorEvent>提供有关配置或应用程序代码问题导致的错误的信息。 例如，当在页面中找到错误时，ASP.NET 发出的错误。  
  
> [!NOTE]
>  在大多数情况下，你将能够使用已实现的 ASP.NET health 监视类型，并且将通过在 "配置" 部分中指定值来控制运行状况监视系统 `healthMonitoring` 。 还可以从运行状况监视类型派生，以创建自己的自定义事件和提供程序。 有关从类派生的示例 <xref:System.Web.Management.WebErrorEvent> ，请参阅本主题中提供的示例。  
  
   
  
## Examples  
 下面的代码示例演示如何从 <xref:System.Web.Management.WebErrorEvent> 类派生以创建自定义事件。  
  
 还显示了配置文件的节选，使 ASP.NET 可以使用此自定义事件。  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <eventMappings>  
  
    <add  name="SampleWebErrorEvent" type="SamplesAspNet.SampleWebErrorEvent,weberrorevent,Version=1.0.1573.21549, Culture=neutral, PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  
  </eventMappings>  
  
  <profiles>  
    <add name="Custom"  
      minInstances="1"  
      maxLimit="Infinite"  
      minInterval="00:00:00" />  
  </profiles>  
  
  <rules>  
    <clear />  
  
    <add name="Custom Web Error Event"   
      eventName="SampleWebErrorEvent"  
      provider="EventLogProvider"   
      profile="Custom" />  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebErrorEvent" /> 类的新实例。</summary>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebErrorEvent (string message, object eventSource, int eventCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebErrorEvent : string * obj * int * Exception -&gt; System.Web.Management.WebErrorEvent" Usage="new System.Web.Management.WebErrorEvent (message, eventSource, eventCode, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">事件说明。</param>
        <param name="eventSource">作为事件源的对象。</param>
        <param name="eventCode">与该事件关联的代码。 实现自定义事件时，事件代码必须大于 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="exception">与此错误关联的 <see cref="T:System.Exception" />。</param>
        <summary>使用所提供的参数初始化 <see cref="T:System.Web.Management.WebErrorEvent" /> 类。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebErrorEvent.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 调用。 <xref:System.Web.Management.WebErrorEvent.%23ctor%2A>从类派生时，可以调用构造函数 <xref:System.Web.Management.WebErrorEvent> 。  
  
   
  
## Examples  
 下面的代码示例演示如何自定义此构造函数。  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#2)]
 [!code-vb[System.Web.Management.WebErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebErrorEvent : string * obj * int * int * Exception -&gt; System.Web.Management.WebErrorEvent" Usage="new System.Web.Management.WebErrorEvent (message, eventSource, eventCode, eventDetailCode, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">事件说明。</param>
        <param name="eventSource">作为事件源的对象。</param>
        <param name="eventCode">与该事件关联的代码。 实现自定义事件时，事件代码必须大于 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">用于指定事件的详细标识符的 <see cref="T:System.Web.Management.WebEventCodes" /> 值。</param>
        <param name="exception">与此错误关联的 <see cref="T:System.Exception" />。</param>
        <summary>使用所提供的参数初始化 <see cref="T:System.Web.Management.WebErrorEvent" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Management.WebErrorEvent.%23ctor%2A>构造函数不应在代码中直接使用。 它由 ASP.NET 调用。 <xref:System.Web.Management.WebErrorEvent.%23ctor%2A>从类派生时，可以调用构造函数 <xref:System.Web.Management.WebErrorEvent> 。  
  
   
  
## Examples  
 下面的代码示例演示如何从 <xref:System.Web.Management.WebErrorEvent> 类派生以创建自定义事件。  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#3)]
 [!code-vb[System.Web.Management.WebErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebErrorEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webErrorEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在内部使用，用于递增性能计数器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebRequestInformation RequestInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebRequestInformation RequestInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebErrorEvent.RequestInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestInformation As WebRequestInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebRequestInformation ^ RequestInformation { System::Web::Management::WebRequestInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestInformation : System.Web.Management.WebRequestInformation" Usage="System.Web.Management.WebErrorEvent.RequestInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebRequestInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序请求信息。</summary>
        <value>包含有关当前请求的信息的 <see cref="T:System.Web.Management.WebRequestInformation" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何获取 <xref:System.Web.Management.WebErrorEvent.RequestInformation%2A> 值。  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#5)]
 [!code-vb[System.Web.Management.WebErrorEvent#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebThreadInformation ThreadInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebThreadInformation ThreadInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebErrorEvent.ThreadInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadInformation As WebThreadInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebThreadInformation ^ ThreadInformation { System::Web::Management::WebThreadInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadInformation : System.Web.Management.WebThreadInformation" Usage="System.Web.Management.WebErrorEvent.ThreadInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebThreadInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取应用程序线程信息。</summary>
        <value>包含有关当前线程的信息的 <see cref="T:System.Web.Management.WebThreadInformation" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何获取应用程序 <xref:System.Web.Management.WebErrorEvent.ThreadInformation%2A> 值。  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#6)]
 [!code-vb[System.Web.Management.WebErrorEvent#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
