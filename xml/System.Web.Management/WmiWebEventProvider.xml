<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61bce5da3aca2a69f14d26ca45535de847e8a052" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86679677" /></Metadata><TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>实现将 ASP.NET 运行状况监视事件映射到 Windows Management Instrumentation (WMI) 事件的事件提供程序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET health monitoring 允许生产和运营人员管理已部署的 Web 应用程序。 <xref:System.Web.Management>命名空间包含的运行状况事件类型负责打包应用程序运行状况数据，以及负责处理此数据的提供程序类型。 它还包含在运行状况事件的管理过程中可帮助的支持类型。  
  
 ASP.NET 使用此类将运行状况监视事件映射到 WMI 事件。 若要启用 ASP.NET 运行状况监视事件到 WMI 子系统的传递，必须 <xref:System.Web.Management.WmiWebEventProvider> 通过在配置文件的节中添加适当的设置来配置类 `<healthMonitoring>` 。  
  
 Aspnet mof 文件中包含的信息描述了在将 ASP.NET 运行状况监视事件路由到 <xref:System.Web.Management.WmiWebEventProvider> 类并将其映射到 WMI 事件时引发的 WMI 事件的参数。 Aspnet 文件存储在 .NET Framework 生成目录中，例如%windir%\Microsoft.NET\Framework \\ *BuildNumber*。 有关将运行状况监视事件报告为 WMI 事件的详细信息，请参阅 [使用 Wmi 传递 ASP.NET Health Monitoring 事件](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms178709(v=vs.85))。  
  
> [!NOTE]
>  在大多数情况下，你将能够使用已实现的 ASP.NET health 监视类型，并且将通过在 "配置" 部分中指定值来控制运行状况监视系统 `<healthMonitoring>` 。 还可以从运行状况监视类型派生，以创建自己的自定义事件和提供程序。 有关创建自定义提供程序的示例，请参阅 [如何：实现运行状况监视自定义提供程序示例](https://docs.microsoft.com/previous-versions/ms178718(v=vs.140))。  
  
   
  
## Examples  
 下面的示例演示如何创建由 ASP.NET health monitoring 颁发的 WMI 事件的使用者，作为 Web 应用程序运行状况事件的结果。  
  
> [!NOTE]
>  <xref:System.Web.Management.WmiWebEventProvider>类和要监视的运行状况事件类型已默认配置。 唯一需要执行的操作是为所有运行状况事件定义规则。 请记住，默认情况下不会将运行状况事件调度到 <xref:System.Web.Management.WmiWebEventProvider> 提供程序。  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 下面的示例是一个配置文件节选，其中显示了一个 `<healthMonitoring>` 配置节，该配置节使 ASP.NET 可以使用 <xref:System.Web.Management.WmiWebEventProvider> 提供程序来处理所有的运行状况监视事件。  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 运行状况监视概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/ms178718(v=vs.140)">ASP.NET 运行状况-监视自定义提供程序示例</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2">安装和配置 ASP.NET 提供程序</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WmiWebEventProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数由 ASP.NET health 监视系统在内部使用。 你永远不会使用它来创建类的实例 <xref:System.Web.Management.TraceWebEventProvider> ，但你可以在实现继承自此类的提供程序类型时调用此构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从提供程序的缓冲区中移除所有事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法时，将立即删除提供程序的缓冲区中的所有事件，而不管自上次写入以来经过了多少时间或缓冲区中有多少个事件。 上次写入的时间将重置为刷新操作的时间。 如果未启用缓冲机制，则调用此方法不起作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">配置文件中用于标识此提供程序的名称。</param>
        <param name="config">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象，指定配置文件中为此提供程序分配的特性。</param>
        <summary>设置此对象的初始值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 在 <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> 调用构造函数后调用方法 <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> 。 调用此方法来初始化 <xref:System.Web.Management.WmiWebEventProvider> 具有配置文件中指定的配置设置和名称的类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">要处理的 <see cref="T:System.Web.Management.WebBaseEvent" /> 对象。</param>
        <summary>处理传递给提供程序的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是 ASP.NET 运行状况监视调用来开始处理事件的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">未能引发该事件。</exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>执行与关闭提供程序相关联的任务。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 在 <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> 承载 Web 应用程序的应用程序域终止时调用方法。 调用方法来执行允许应用程序正常结束的任务。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
