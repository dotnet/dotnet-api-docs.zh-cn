<Type Name="DataRowComparer&lt;TRow&gt;" FullName="System.Data.DataRowComparer&lt;TRow&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e10157023f6d5fdef697bf590ecf252e80662c51" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86858120" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataRowComparer&lt;TRow&gt; : System.Collections.Generic.IEqualityComparer&lt;TRow&gt; where TRow : DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataRowComparer`1&lt;(class System.Data.DataRow) TRow&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!TRow&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataRowComparer(Of TRow)&#xA;Implements IEqualityComparer(Of TRow)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRow&gt;&#xA; where TRow : DataRowpublic ref class DataRowComparer sealed : System::Collections::Generic::IEqualityComparer&lt;TRow&gt;" />
  <TypeSignature Language="F#" Value="type DataRowComparer&lt;'Row (requires 'Row :&gt; DataRow)&gt; = class&#xA;    interface IEqualityComparer&lt;'Row (requires 'Row :&gt; DataRow)&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.0.0" To="System.Data.Common" ToVersion="4.2.1.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.1.0" To="System.Data.Common" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="TRow">
      <Constraints>
        <BaseTypeName>System.Data.DataRow</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;TRow&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TRow">要进行比较的对象的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
    <summary>通过使用基于值的比较来比较两个 <see cref="T:System.Data.DataRow" /> 对象是否等值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类实现 <xref:System.Collections.Generic.IEqualityComparer%601> 接口，并使用基于值的语义来比较 <xref:System.Data.DataRow> 对象。 此类是必需的，因为某些基于集的操作的默认实现 (如 <xref:System.Linq.Enumerable.Distinct%2A> 、 <xref:System.Linq.Enumerable.Union%2A> 、 <xref:System.Linq.Enumerable.Intersect%2A> 和 <xref:System.Linq.Enumerable.Except%2A>) 使用基于引用的语义来比较 <xref:System.Data.DataRow> 对象引用，而不是比较 <xref:System.Data.DataRow> 对象值。 <xref:System.Data.DataRowComparer%601.Default%2A>类用于比较对象的值 <xref:System.Data.DataRow> ，并且不比较对象引用。  
  
 不能直接实例化此类。 相反， <xref:System.Data.DataRowComparer%601.Default%2A> 必须使用属性返回类的单一实例 <xref:System.Data.DataRowComparer%601.Default%2A> 。  
  
 此类是无状态的。  
  
 此类是密封的，不能从派生。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/comparing-datarows-linq-to-dataset">比较 DataRow</related>
    <related type="Article" href="/dotnet/framework/data/adonet/linq-to-dataset-examples">LINQ to DataSet 示例</related>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Data.DataRowComparer&lt;TRow&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.DataRowComparer`1&lt;!TRow&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As DataRowComparer(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::DataRowComparer&lt;TRow&gt; ^ Default { System::Data::DataRowComparer&lt;TRow&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Data.DataRowComparer&lt;'Row (requires 'Row :&gt; System.Data.DataRow)&gt;" Usage="System.Data.DataRowComparer&lt;'Row (requires 'Row :&gt; System.Data.DataRow)&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowComparer&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Data.DataRowComparer`1" /> 的单一实例。 此属性是只读的。</summary>
        <value><see cref="T:System.Data.DataRowComparer`1" /> 的一个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性为只读。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/comparing-datarows-linq-to-dataset">比较 DataRow</related>
        <related type="Article" href="/dotnet/framework/data/adonet/linq-to-dataset-examples">LINQ to DataSet 示例</related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TRow leftRow, TRow rightRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!TRow leftRow, !TRow rightRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (leftRow As TRow, rightRow As TRow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TRow leftRow, TRow rightRow);" />
      <MemberSignature Language="F#" Value="override this.Equals : 'Row * 'Row -&gt; bool" Usage="dataRowComparer.Equals (leftRow, rightRow)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftRow" Type="TRow" />
        <Parameter Name="rightRow" Type="TRow" />
      </Parameters>
      <Docs>
        <param name="leftRow">要比较的第一个 <see cref="T:System.Data.DataRow" /> 对象。</param>
        <param name="rightRow">要比较的第二个 <see cref="T:System.Data.DataRow" /> 对象。</param>
        <summary>通过使用基于值的逐列比较来比较两个 <see cref="T:System.Data.DataRow" /> 对象。</summary>
        <returns>如果两个 <see cref="T:System.Data.DataRow" /> 对象具有相等的列值有序集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不检查两个对象的架构 <xref:System.Data.DataRow> 。 如果两个 <xref:System.Data.DataRow> 对象具有相同的有序列值集，则将它们视为相等。  
  
 仅检查对象的当前值 <xref:System.Data.DataRow> 。 <xref:System.Data.DataRow>不检查对象的状态。  
  
 <xref:System.Data.DataRowComparer`1.Equals*>方法是方法的基于值的比较实现 <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">两个源 <see cref="T:System.Data.DataRow" /> 对象之一或全部为 <see langword="null" />。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/comparing-datarows-linq-to-dataset">比较 DataRow</related>
        <related type="Article" href="/dotnet/framework/data/adonet/linq-to-dataset-examples">LINQ to DataSet 示例</related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (TRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!TRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (row As TRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(TRow row);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : 'Row -&gt; int" Usage="dataRowComparer.GetHashCode row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="TRow" />
      </Parameters>
      <Docs>
        <param name="row">要从中计算哈希代码的 <see cref="T:System.Data.DataRow" />。</param>
        <summary>返回指定 <see cref="T:System.Data.DataRow" /> 对象的哈希代码。</summary>
        <returns>表示该行的哈希代码的 <see cref="T:System.Int32" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRowComparer%601.GetHashCode%2A>方法是方法的基于值的比较实现 <xref:System.Collections.Generic.IEqualityComparer%601.GetHashCode%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">源 <see cref="T:System.Data.DataRow" /> 对象不属于 <see cref="T:System.Data.DataTable" />。</exception>
        <exception cref="T:System.ArgumentNullException">源 <see cref="T:System.Data.DataRow" /> 对象为 <see langword="null" />。</exception>
        <related type="Article" href="/dotnet/framework/data/adonet/comparing-datarows-linq-to-dataset">比较 DataRow</related>
        <related type="Article" href="/dotnet/framework/data/adonet/linq-to-dataset-examples">LINQ to DataSet 示例</related>
      </Docs>
    </Member>
  </Members>
</Type>
