<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2fdfcc87411d6e0feecc285df710896e77e25412" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83947307" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataRow extends System.Object" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Data.DataTable" /> 中的一行数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow> 和 <xref:System.Data.DataColumn> 对象是 <xref:System.Data.DataTable>的主要组件。 使用 <xref:System.Data.DataRow> 对象及其属性和方法来检索和评估;并在 <xref:System.Data.DataTable>中插入、删除和更新值。 <xref:System.Data.DataRowCollection> 表示 <xref:System.Data.DataTable>中的实际 <xref:System.Data.DataRow> 对象，而 <xref:System.Data.DataColumnCollection> 包含描述 <xref:System.Data.DataColumn> 架构的 <xref:System.Data.DataTable>对象。 使用重载的 <xref:System.Data.DataRow.Item%2A> 属性返回或设置 <xref:System.Data.DataColumn>的值。  
  
 使用 "<xref:System.Data.DataRow.HasVersion%2A>" 和 "<xref:System.Data.DataRow.IsNull%2A>" 属性来确定特定行值的状态，并使用 "<xref:System.Data.DataRow.RowState*>" 属性来确定相对于其父 <xref:System.Data.DataTable>的行的状态。  
  
 若要创建新 <xref:System.Data.DataRow>，请使用 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataTable.NewRow%2A> 方法。 创建新的 <xref:System.Data.DataRow>后，使用 <xref:System.Data.DataRowCollection.Add%2A> 方法将新 <xref:System.Data.DataRow> 添加到 <xref:System.Data.DataRowCollection>。 最后，调用 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataRow.AcceptChanges%2A> 方法，确认添加。 有关将数据添加到 <xref:System.Data.DataTable>的详细信息，请参阅[将数据添加到 DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable)。  
  
 可以通过调用 <xref:System.Data.DataRowCollection>的 <xref:System.Data.DataRowCollection.Remove%2A> 方法，或通过调用 <xref:System.Data.DataRow.Delete%2A> 对象的 <xref:System.Data.DataRow> 方法，从 <xref:System.Data.DataRowCollection> 中删除 <xref:System.Data.DataRow>。 <xref:System.Data.DataRowCollection.Remove%2A> 方法从集合中移除行。 相反，<xref:System.Data.DataRow.Delete%2A> 会标记要删除的 <xref:System.Data.DataRow>。 调用 <xref:System.Data.DataRow.AcceptChanges%2A> 方法时，将发生实际的删除。 通过调用 <xref:System.Data.DataRow.Delete%2A>，你可以以编程方式检查哪些行在实际删除之前标记为删除。 有关详细信息，请参阅[DataRow 删除](/dotnet/framework/data/adonet/dataset-datatable-dataview/datarow-deletion)。  
  
   
  
## Examples  
 下面的示例通过调用 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataTable.NewRow%2A> 方法来创建新 <xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>对于多线程读取操作，此类型是安全的。 必须同步任何写入操作。</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">生成器</param>
        <summary>初始化 DataRow 的新实例。 从生成器中构造行。 仅限内部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提交自上次调用 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以来对该行进行的所有更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Data.DataRow.AcceptChanges%2A>时，<xref:System.Data.DataRow.EndEdit%2A> 方法将被隐式调用以结束任何编辑。 如果添加或修改了该行的 <xref:System.Data.DataRow.RowState*>，则 <xref:System.Data.DataRow.RowState*> 将变得不变。 如果删除了 <xref:System.Data.DataRow.RowState*>，则删除该行。  
  
 有关更多信息，请参阅 <xref:System.Data.DataRow.BeginEdit%2A> 方法。  
  
 <xref:System.Data.DataTable> 类还具有一个 <xref:System.Data.DataTable.AcceptChanges%2A> 方法，该方法会影响对整个表所做的更改。 有关演示如何接受和拒绝对单个数据行所做的更改的代码示例，请参阅[AcceptChanges 和 RejectChanges](/dotnet/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges)。  
  
   
  
## Examples  
 下面的示例首先创建一个新的 <xref:System.Data.DataTable>，其中包含一个列，然后创建一个 <xref:System.Data.DataRow>。 创建、添加、修改和删除 <xref:System.Data.DataRow> 时，将打印其 <xref:System.Data.DataRow.RowState*>。  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对 <see cref="T:System.Data.DataRow" /> 对象启动编辑操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.BeginEdit%2A> 方法将 <xref:System.Data.DataRow> 置于编辑模式。 在此模式下，事件会暂时挂起，使用户无需触发验证规则即可更改多行。 例如，如果您必须确保总计的列的值与行中的借方列和贷方列的值相等，则可以将每一行置于编辑模式，以挂起行值验证，直到用户尝试提交值。  
  
 当用户更改数据绑定控件的值时，将隐式调用 <xref:System.Data.DataRow.BeginEdit%2A> 方法;调用 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataTable.AcceptChanges%2A> 方法时，将隐式调用 <xref:System.Data.DataRow.EndEdit%2A> 方法。 在此编辑模式下，<xref:System.Data.DataRow> 存储原始值和新的建议值的表示形式。 因此，只要未调用 <xref:System.Data.DataRow.EndEdit%2A> 方法，就可以通过为 <xref:System.Data.DataRow.Item%2A> 属性的 `version` 参数传递 `DataRowVersion.Original` 或 `DataRowVersion.Proposed` 来检索原始版本或建议版本。 您还可以通过调用 <xref:System.Data.DataRow.CancelEdit%2A> 方法，在此时取消任何编辑。  
  
 若要查看行是否包含原始值或建议值，请调用 <xref:System.Data.DataRow.HasVersion%2A> 方法。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> 方法暂时挂起 <xref:System.Data.DataTable.RowChanging> 事件，但 `delete` 操作不会。  
  
   
  
## Examples  
 该示例创建一个简单的 <xref:System.Data.DataTable>，其中包含一个 <xref:System.Data.DataColumn> 和五个 <xref:System.Data.DataRow> 对象和一个 <xref:System.Data.UniqueConstraint>。 还添加了一个 <xref:System.Data.DataTable.RowChanged> 事件处理程序，以便在行的值更改时进行监视。 对现有行调用 <xref:System.Data.DataRow.BeginEdit%2A> 后，将暂时禁用约束和事件，并打印原始值和建议值。 再次调用 <xref:System.Data.DataRow.BeginEdit%2A>，以将两行设置为相同的值。 调用 <xref:System.Data.DataRow.EndEdit%2A> 时，将对相同的值强制执行 <xref:System.Data.UniqueConstraint>。  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">已在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中调用该方法。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">对已删除的行调用该方法。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消当前对该行进行的编辑。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关更多信息，请参阅 <xref:System.Data.DataRow.BeginEdit%2A> 方法。  
  
   
  
## Examples  
 下面的示例在 <xref:System.Windows.Forms.DataGrid> 控件的最后一行中编辑一列的值。 该示例使用 <xref:System.Data.DataRow.BeginEdit%2A>、<xref:System.Data.DataRow.EndEdit%2A>、方法来编辑列的值并将更改提交到行。  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">已在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中调用该方法。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除该行的错误。 这包括 <see cref="P:System.Data.DataRow.RowError" /> 和 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> 的错误设置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.SetColumnError%2A> 和 <xref:System.Data.DataRow.GetColumnError%2A> 设置和返回各个列的错误。  
  
 设置 <xref:System.Data.DataRow.RowError%2A> 属性，以设置适用于整行的错误。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 方法。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.HasErrors%2A> 来查找错误。 如果行有错误，<xref:System.Data.DataRow.GetColumnsInError%2A> 方法将返回列的数组，其中包含可解决的错误。 然后调用 <xref:System.Data.DataRow.ClearErrors%2A> 方法以清除所有错误。  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除 <see cref="T:System.Data.DataRow" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果添加了行的 <xref:System.Data.DataRow.RowState*>，则 <xref:System.Data.DataRow.RowState*> 将变为 `Detached`，并且当调用 <xref:System.Data.DataRow.AcceptChanges%2A>时，将从表中删除该行。  
  
 在现有 <xref:System.Data.DataRow>上使用 <xref:System.Data.DataRow.Delete%2A> 方法之后，<xref:System.Data.DataRow.RowState*> 将变为 `Deleted`。 在调用 <xref:System.Data.DataRow.AcceptChanges%2A>之前，它将保持 `Deleted`。 此时，将从表中删除 <xref:System.Data.DataRow>。  
  
 在循环访问 <xref:System.Data.DataRowCollection> 对象时，不应在 foreach 循环中调用 <xref:System.Data.DataRow.Delete%2A>。 <xref:System.Data.DataRow.Delete%2A> 修改集合的状态。  
  
 可以通过调用 <xref:System.Data.DataRow.RejectChanges%2A>删除删除的行。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> 方法暂时挂起 <xref:System.Data.DataTable.RowChanging> 事件，但删除操作不会。  
  
   
  
## Examples  
 下面的示例创建一个具有两列和10行的简单 <xref:System.Data.DataTable>。 使用 <xref:System.Data.DataRow.Delete%2A> 方法删除多个 <xref:System.Data.DataRow> 项后，将通过调用 <xref:System.Data.DataRow.RejectChanges%2A>取消删除某行。  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">已删除 <see cref="T:System.Data.DataRow" />。</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>终止该行的编辑。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置属性时，如果 <xref:System.Data.DataTable.RowChanging> 事件中发生异常，则会生成异常。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.EndEdit%2A> 方法来结束对 <xref:System.Data.DataRow> 值的编辑（如果验证函数返回 true）。  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">已在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中调用该方法。</exception>
        <exception cref="T:System.Data.ConstraintException">该编辑操作破坏了约束。</exception>
        <exception cref="T:System.Data.ReadOnlyException">此行属于该表，该编辑尝试更改只读列的值。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">该编辑操作尝试将 null 值放在 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 False 的列中。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRelation" /> 获取此 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataTable.ChildRelations%2A> 属性返回的 <xref:System.Data.DataRelation> 对象的集合。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetChildRows%2A> 为 <xref:System.Data.DataTable>中的每个子 <xref:System.Data.DataRelation> 返回子 <xref:System.Data.DataRow> 对象。 然后打印该行中每列的值。  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.ArgumentNullException">关系为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有此版本的数据。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">要使用的 <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataTable.ChildRelations%2A> 属性返回的 <xref:System.Data.DataRelation> 对象的集合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRelation" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> 对象的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataTable.ChildRelations%2A> 属性返回的 <xref:System.Data.DataRelation> 对象的集合。  
  
 使用 <xref:System.Data.DataRow.HasVersion%2A> 属性来确定所需的 <xref:System.Data.DataRowVersion> 是否存在。  
  
 如果指定 <xref:System.Data.DataRowVersion.Default>，则使用的版本取决于调用 `GetChildRows` 的行的 <xref:System.Data.DataRow.RowState*>。 如果调用 `GetChildRows` 的行具有 `Modified`、`New`或 `Unchanged`的 `RowState`，则该行的 <xref:System.Data.DataRowVersion.Current> 版本用于提取其当前版本中具有匹配值的相关子行。 如果调用 `GetChildRows` 的行的 `RowState` 为 `Deleted`，则将使用该行的 <xref:System.Data.DataRowVersion.Original> 版本来提取其原始版本中具有匹配值的相关子行。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetChildRows%2A> 为 <xref:System.Data.DataTable>中的每个子 <xref:System.Data.DataRelation> 返回子 <xref:System.Data.DataRow> 对象。 然后打印行中具有指定版本的每一列的值。  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/">在 ADO.NET 中使用数据集</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">要使用的 <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRowVersion" />获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataTable.ChildRelations%2A> 属性返回的 <xref:System.Data.DataRelation> 对象的集合。  
  
 使用 <xref:System.Data.DataRow.HasVersion%2A> 属性来确定所需的 <xref:System.Data.DataRowVersion> 是否存在。  
  
 如果指定 <xref:System.Data.DataRowVersion.Default>，则使用的版本取决于调用 `GetChildRows` 的行的 <xref:System.Data.DataRow.RowState*>。 如果调用 `GetChildRows` 的行具有 `Modified`、`New`或 `Unchanged`的 `RowState`，则该行的 <xref:System.Data.DataRowVersion.Current> 版本用于提取其当前版本中具有匹配值的相关子行。 如果调用 `GetChildRows` 的行的 `RowState` 为 `Deleted`，则将使用该行的 <xref:System.Data.DataRowVersion.Original> 版本来提取其原始版本中具有匹配值的相关子行。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取列的错误说明。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">一个 <see cref="T:System.Data.DataColumn" />。</param>
        <summary>获取指定 <see cref="T:System.Data.DataColumn" /> 的错误说明。</summary>
        <returns>错误说明的文本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.SetColumnError%2A> 方法设置列错误。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 方法。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。 或者，<xref:System.Data.DataTable> 的 <xref:System.Data.DataTable.GetErrors%2A> 方法返回所有包含错误的行。  
  
 若要清除列集合的所有错误，请使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法。  
  
   
  
## Examples  
 下面的示例为指定的 <xref:System.Data.DataRow>设置错误说明。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列的从零开始的索引。</param>
        <summary>获取由索引指定的列的错误说明。</summary>
        <returns>错误说明的文本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.SetColumnError%2A> 方法设置列错误。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 方法。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。  
  
 若要清除列集合的所有错误，请使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法。  
  
   
  
## Examples  
 下面的示例为指定的 <xref:System.Data.DataRow>设置错误说明。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 参数超出范围。</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列的名称。</param>
        <summary>获取由名称指定的列的错误说明。</summary>
        <returns>错误说明的文本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.SetColumnError%2A> 方法设置列错误。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 方法。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。  
  
 若要清除列集合的所有错误，请使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法。  
  
   
  
## Examples  
 下面的示例为指定的 <xref:System.Data.DataRow>设置错误说明。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取由包含错误的列组成的数组。</summary>
        <returns>包含错误的 <see cref="T:System.Data.DataColumn" /> 对象组成的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 可以通过仅返回那些包含错误的列来减少必须处理错误的 <xref:System.Data.DataColumn> 对象的数量。 可以将错误设置为具有 <xref:System.Data.DataRow.SetColumnError%2A> 方法的各个列。 若要进一步减少处理次数，请检查 <xref:System.Data.DataRow> 类的 <xref:System.Data.DataRow.HasErrors%2A> 属性，以确定 <xref:System.Data.DataRow> 在调用 <xref:System.Data.DataRow.GetColumnsInError%2A>之前是否有错误。  
  
 使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法可清除行中的所有错误。 其中包括 <xref:System.Data.DataRow.RowError%2A>。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.HasErrors%2A> 来查找错误。 如果行有错误，<xref:System.Data.DataRow.GetColumnsInError%2A> 方法将返回列的数组，其中包含可解决的错误。 然后调用 <xref:System.Data.DataRow.ClearErrors%2A> 方法以清除所有错误。  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRelation" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetParentRow%2A> 为 <xref:System.Data.DataTable>中的每个子 <xref:System.Data.DataRelation> 返回子 <xref:System.Data.DataRow> 对象。 然后打印该行中每列的值。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 不属于 <see cref="T:System.Data.DataTable" />。  
  
- 或 -

该行为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.DataException">子行具有多个父行。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">此行不属于 <see cref="T:System.Data.DataRelation" /> 对象的子表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于表。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetParentRow%2A> 从 <xref:System.Data.DataTable>中每个 <xref:System.Data.DataRow> 的每个父行中打印一个值。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.Data.DataException">子行具有多个父行。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRelation" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
 使用 <xref:System.Data.DataRow.HasVersion%2A> 属性来确定所需的 <xref:System.Data.DataRowVersion> 是否存在。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetParentRow%2A> 为 <xref:System.Data.DataTable>中的每个子 <xref:System.Data.DataRelation> 返回子 <xref:System.Data.DataRow> 对象。 然后打印该行中每列的值。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">该行为 <see langword="null" />。  
  
- 或 -

<paramref name="relation" /> 不属于该表的父关系。</exception>
        <exception cref="T:System.Data.DataException">子行具有多个父行。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">此关系的子表不是该行所属的表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有此版本的数据。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一。</param>
        <summary>使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
 使用 <xref:System.Data.DataRow.HasVersion%2A> 属性来确定所需的 <xref:System.Data.DataRowVersion> 是否存在。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetParentRow%2A> 从 <xref:System.Data.DataTable>中每个 <xref:System.Data.DataRow> 的每个父行中打印一个值。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.DataException">子行具有多个父行。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRelation" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetParentRows%2A> 为 <xref:System.Data.DataTable>中的每个子 <xref:System.Data.DataRelation> 返回子 <xref:System.Data.DataRow> 对象。 然后打印该行中每列的值。  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> 不属于此行的 <see cref="T:System.Data.DataSet" />。</exception>
        <exception cref="T:System.ArgumentNullException">该行为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">此关系的子表不是该行所属的表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">该行不属于 <see cref="T:System.Data.DataTable" />。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRelation" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
 使用 <xref:System.Data.DataRow.HasVersion%2A> 属性来确定所需的 <xref:System.Data.DataRowVersion> 是否存在。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.GetParentRows%2A> 为 <xref:System.Data.DataTable>中的每个子 <xref:System.Data.DataRelation> 返回子 <xref:System.Data.DataRow> 对象。 然后打印该行中每列的值。  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> 不属于此行的 <see cref="T:System.Data.DataSet" />。</exception>
        <exception cref="T:System.ArgumentNullException">该行为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">此关系的子表不是该行所属的表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">该行不属于 <see cref="T:System.Data.DataTable" />。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <returns>一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Data.DataSet>中，<xref:System.Data.DataRow.GetParentRows%2A> 方法返回数据集的所有父 <xref:System.Data.DataRelation> 对象的集合。  
  
 <xref:System.Data.DataTable> 还包含 <xref:System.Data.DataRelation> 对象的集合，这些对象由 <xref:System.Data.DataTable.ParentRelations%2A> 属性返回。  
  
 使用 <xref:System.Data.DataRow.HasVersion%2A> 属性来确定所需的 <xref:System.Data.DataRowVersion> 是否存在。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">关系和行不属于同一个表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示某行是否包含错误。</summary>
        <value>如果该行包含错误，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果行中的任何 <xref:System.Data.DataColumn> 对象包含错误，则 `HasErrors` 返回 `true`; 如果 <xref:System.Data.DataRow> 的 <xref:System.Data.DataRow.RowError%2A> 属性不为空字符串，则返回。  
  
 在验证数据时，您可以对行中的任何列设置错误。 此类列在 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 控件中显示时，将标有一个红色的感叹号，以向用户发送此列出错的消息。  
  
 使用 <xref:System.Data.DataRow.SetColumnError%2A> 对任何列设置错误。  
  
 使用 <xref:System.Data.DataRow.GetColumnError%2A> 和 `GetColumnsInError` 方法返回包含错误的列。  
  
 <xref:System.Data.DataRow.ClearErrors%2A> 方法将清除该行的所有错误。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.HasErrors%2A> 来查找错误。 如果行有错误，<xref:System.Data.DataRow.GetColumnsInError%2A> 方法将返回列的数组，其中包含可解决的错误。 然后调用 <xref:System.Data.DataRow.ClearErrors%2A> 方法以清除所有错误。  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定行版本。</param>
        <summary>获取一个值，该值指示指定的版本是否存在。</summary>
        <returns>如果该版本存在，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关更多信息，请参阅 <xref:System.Data.DataRow.BeginEdit%2A> 方法。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.HasVersion%2A> 方法来确定列的当前值和建议的值是否相同。 如果是这样，则取消编辑。 否则，将调用 <xref:System.Data.DataRow.AcceptChanges%2A> 方法来结束编辑。  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取一个值，该值指示指定的列是否包含 null 值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">一个 <see cref="T:System.Data.DataColumn" />。</param>
        <summary>获取一个值，该值指示指定的 <see cref="T:System.Data.DataColumn" /> 是否包含 null 值。</summary>
        <returns>如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将打印 <xref:System.Data.DataSet>的每个表中每一行的每一列。 如果将行设置为 null 值，则不会打印该值。  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列的从零开始的索引。</param>
        <summary>获取一个值，该值指示位于指定索引处的列是否包含 null 值。</summary>
        <returns>如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将列的值更改为 null 值，然后使用 <xref:System.Data.DataRow.IsNull%2A> 方法来确定该值是否为 null。  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">没有列对应于 <paramref name="columnIndex" /> 指定的索引。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列的名称。</param>
        <summary>获取一个值，该值指示指定的列是否包含 null 值。</summary>
        <returns>如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将列的值更改为 null 值，然后使用 <xref:System.Data.DataRow.IsNull%2A> 方法来确定该值是否为 null。  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到由 <paramref name="columnName" /> 指定的列。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="columnName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">一个 <see cref="T:System.Data.DataColumn" />。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>获取一个值，该值指示指定的 <see cref="T:System.Data.DataColumn" /> 和 <see cref="T:System.Data.DataRowVersion" /> 是否包含 null 值。</summary>
        <returns>如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有请求的 <paramref name="version" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置指定列中存储的数据。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">一个包含数据的 <see cref="T:System.Data.DataColumn" />。</param>
        <summary>获取或设置指定 <see cref="T:System.Data.DataColumn" /> 中存储的数据。</summary>
        <value>包该数据的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置属性时，如果 <xref:System.Data.DataTable.ColumnChanging> 事件中发生异常，则会生成异常。  
  
 如果这是立即编辑，请参阅 <xref:System.Data.DataRow.EndEdit%2A>，了解可以生成的异常。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Data.DataRow.Item%2A> 属性来获取和设置特定列索引的值。 第一个示例获取用户在 <xref:System.Windows.Forms.DataGrid> 控件中单击的任意行中的第一列的值。 第二个设置作为参数传递给方法的值。  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">该列不属于此表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 为 null。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">尝试对已删除的行设置值。</exception>
        <exception cref="T:System.InvalidCastException">值与列的数据类型不匹配。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列的从零开始的索引。</param>
        <summary>获取或设置由索引指定的列中存储的数据。</summary>
        <value>包该数据的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置属性时，如果 <xref:System.Data.DataTable.ColumnChanging> 事件中发生异常，则会生成异常。  
  
 如果这是一个编辑，请参阅 <xref:System.Data.DataRow.EndEdit%2A>，了解可以生成的异常。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Data.DataRow.Item%2A> 属性来获取和设置特定列索引的值。 第一个示例获取用户在 <xref:System.Windows.Forms.DataGrid> 控件中单击的任意行中的第一列的值。  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">尝试对已删除的行设置值时发生。</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 参数超出范围。</exception>
        <exception cref="T:System.InvalidCastException">设置值且新值的 <see cref="T:System.Type" /> 与 <see cref="P:System.Data.DataColumn.DataType" /> 不匹配时发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列的名称。</param>
        <summary>获取或设置由名称指定的列中存储的数据。</summary>
        <value>包该数据的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置属性时，如果 <xref:System.Data.DataTable.ColumnChanging> 事件中发生异常，则会生成异常。  
  
 如果这是立即编辑，请参阅 <xref:System.Data.DataRow.EndEdit%2A>，了解可以生成的异常。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Data.DataRow.Item%2A> 属性来获取和设置特定列索引的值。 第一个示例获取用户在 <xref:System.Windows.Forms.DataGrid> 控件中单击的任意行中的第一列的值。 第二个设置作为参数传递给方法的值。  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到由 <paramref name="columnName" /> 指定的列。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">尝试对已删除的行设置值时发生。</exception>
        <exception cref="T:System.InvalidCastException">设置值且该值的 <see cref="T:System.Type" /> 与 <see cref="P:System.Data.DataColumn.DataType" /> 不匹配时发生。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">尝试在 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 设置为 <see langword="false" /> 的列中插入 null 值时发生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" />，包含有关该列的信息。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定需要的行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>获取指定 <see cref="T:System.Data.DataColumn" /> 中存储的数据的指定版本。</summary>
        <value>包该数据的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不应将 `version` 与 <xref:System.Data.DataRow.RowState*> 属性混淆。 `version` 参数说明列所包含的数据相对于列的原始值的状态。  
  
 设置属性时，如果 <xref:System.Data.DataTable.ColumnChanging> 事件中发生异常，则会生成异常。  
  
 如果这是立即编辑，请参阅 <xref:System.Data.DataRow.EndEdit%2A>，了解可以生成的异常。  
  
   
  
## Examples  
 下面的示例获取 <xref:System.Windows.Forms.DataGrid> 控件中已单击的单元格的当前值。  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">该列不属于此表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 参数包含 null。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有此版本的数据。</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列的从零开始的索引。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定需要的行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>获取由索引和要检索的数据版本指定的列中存储的数据。</summary>
        <value>包该数据的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在调用 <xref:System.Data.DataRow.BeginEdit%2A> 方法后，只能创建或更新行;同样，必须调用 <xref:System.Data.DataRow.EndEdit%2A> 方法才能提交编辑。 调用 <xref:System.Data.DataRow.EndEdit%2A> 方法并且调用 <xref:System.Data.DataRow.AcceptChanges%2A> 方法之前，会存储原始值和新的建议值的内部表示形式。 因此，在调用 <xref:System.Data.DataRow.AcceptChanges%2A>之前，您可以使用 `version` 自变量来指定所需的列值的版本，`DataRowVersion.Original` 或 `DataRowVersion.Proposed`。 但是，一旦调用 <xref:System.Data.DataRow.AcceptChanges%2A> 方法，列的版本就会恢复为 `DataRowVersion.Original`。 如果行是新行，还可以传递参数 `DataRowVersion.Default`，以检索列的默认值。 传递 `DataRowVersion.Current`时，属性将返回当前值，无论其版本是什么。  
  
> [!NOTE]
>  当您更改数据绑定控件的值或将 <xref:System.Data.DataRow> 对象添加到 <xref:System.Data.DataRowCollection>时，将隐式调用 <xref:System.Data.DataRow.BeginEdit%2A> 方法;调用以下方法时，将隐式调用 <xref:System.Data.DataRow.EndEdit%2A> 方法： <xref:System.Data.DataRow> 对象的 <xref:System.Data.DataRow.AcceptChanges%2A> 方法、<xref:System.Data.DataTable> 对象的 <xref:System.Data.DataTable.AcceptChanges%2A> 方法或 <xref:System.Data.DataRow.CancelEdit%2A> 方法。  
  
 与此相反，<xref:System.Data.DataRowVersion> 枚举 `Current` 在调用 <xref:System.Data.DataRow.EndEdit%2A> 方法之后返回数据的版本。  
  
 不应将 `version` 参数与 <xref:System.Data.DataRow.RowState*> 属性混淆。 `version` 参数说明列所包含的数据相对于列的原始值的状态。 <xref:System.Data.DataRow.RowState*> 属性说明了相对于其父级 <xref:System.Data.DataTable>的整行的状态。  
  
 设置属性时，如果 <xref:System.Data.DataTable.ColumnChanging> 事件中发生异常，则会生成异常。  
  
 如果这是立即编辑，请参阅 <xref:System.Data.DataRow.EndEdit%2A>，了解可以生成的异常。  
  
   
  
## Examples  
 下面的示例通过 <xref:System.Data.DataRow> 对象的 <xref:System.Data.DataRow.Item%2A> 属性获取列的当前值。  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 参数超出范围。</exception>
        <exception cref="T:System.InvalidCastException">值与列的数据类型不匹配。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有此版本的数据。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">尝试对已删除的行设置值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">列的名称。</param>
        <param name="version"><see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定需要的行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>获取指定列中存储的数据的指定版本。</summary>
        <value>包该数据的 <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不应将版本与 <xref:System.Data.DataRow.RowState*> 属性混淆。 `version` 参数说明列所包含的数据相对于列的原始值的状态。 <xref:System.Data.DataRow.RowState*> 属性说明了相对于其父级 <xref:System.Data.DataTable>的整行的状态。  
  
 设置属性时，如果 <xref:System.Data.DataTable.ColumnChanging> 事件中发生异常，则会生成异常。  
  
 如果这是立即编辑，请参阅 <xref:System.Data.DataRow.EndEdit%2A>，了解可以生成的异常。  
  
   
  
## Examples  
 下面的示例在 <xref:System.Windows.Forms.DataGrid> 控件的已单击单元格中获取数据的当前版本。  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到由 <paramref name="columnName" /> 指定的列。</exception>
        <exception cref="T:System.InvalidCastException">值与列的数据类型不匹配。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">该行没有此版本的数据。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">该行已删除。</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>通过数组获取或设置此行的所有值。</summary>
        <value>一个类型为 <see cref="T:System.Object" /> 的数组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用此属性通过数组设置或获取此行的值。 如果使用此属性设置值，则数组的大小和排序方式必须与列集合的大小相同。 将 `null` 传入 <xref:System.Data.DataRow.ItemArray%2A> 指示未指定任何值。  
  
 用户可以在 <xref:System.Data.DataTable.ColumnChanging> 事件或 <xref:System.Data.DataTable.RowChanging> 事件中生成异常。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Data.DataRow.ItemArray%2A> 属性获取和设置值。  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">该数组大于表中的列数。</exception>
        <exception cref="T:System.InvalidCastException">数组中的值与其相应的 <see cref="T:System.Data.DataColumn" /> 中的 <see cref="P:System.Data.DataColumn.DataType" /> 不匹配。</exception>
        <exception cref="T:System.Data.ConstraintException">编辑操作破坏了约束。</exception>
        <exception cref="T:System.Data.ReadOnlyException">编辑操作尝试更改只读列的值。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">编辑操作尝试将 null 值放在 <see cref="T:System.Data.DataColumn" /> 对象的 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 <see langword="false" /> 的列中。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">已删除该行。</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>拒绝自上次调用 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以来进行的所有更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Data.DataRow.RejectChanges%2A> 方法时，将隐式调用 <xref:System.Data.DataRow.CancelEdit%2A> 方法以取消任何编辑。 如果删除或修改了 <xref:System.Data.DataRow.RowState*>，则该行将恢复为其以前的值，并且 <xref:System.Data.DataRow.RowState*> 将变为不变。 如果添加了 <xref:System.Data.DataRow.RowState*>，则删除该行。  
  
   
  
## Examples  
 下面的示例创建一个包含2列和10行的简单 <xref:System.Data.DataTable>。 使用 <xref:System.Data.DataRow.Delete%2A> 方法删除几个 <xref:System.Data.DataRow> 项后，将通过调用 <xref:System.Data.DataRow.RejectChanges%2A>删除某行。  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">此行不属于该表。</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置行的自定义错误说明。</summary>
        <value>描述错误的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.HasErrors%2A> 属性首先确定 <xref:System.Data.DataRow> 是否包含错误。  
  
   
  
## Examples  
 下面的示例将 <xref:System.Windows.Forms.DataGrid> 控件中显示的表中的10行设置为错误文本。  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与该行和 <see cref="T:System.Data.DataRowCollection" /> 的关系相关的当前状态。</summary>
        <value><see cref="T:System.Data.DataRowState" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.RowState*> 的值取决于两个因素：已对行执行了操作的类型，以及是否对 <xref:System.Data.DataRow>调用了 <xref:System.Data.DataRow.AcceptChanges%2A>。  
  
   
  
## Examples  
 下面的示例首先创建一个新的 <xref:System.Data.DataTable>，其中包含一个列，然后创建一个 <xref:System.Data.DataRow>。 创建、添加、修改和删除 <xref:System.Data.DataRow> 时，将打印其 <xref:System.Data.DataRow.RowState*>。  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Data.DataRow" /> 的 <see cref="P:System.Data.DataRow.RowState" /> 更改为 <see langword="Added" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Data.DataRow> 的 <xref:System.Data.DataRow.RowState*> 更改为 `Added`。 如果当前行不处于 `Unchanged` 或 `Added` 状态，则会引发一个 <xref:System.InvalidOperationException> 消息 `SetAdded`，该消息只可在 `DataRow` `RowState` `Unchanged`实例上调用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>为列设置错误说明。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">为其设置错误说明的 <see cref="T:System.Data.DataColumn" />。</param>
        <param name="error">错误说明。</param>
        <summary>为指定为 <see cref="T:System.Data.DataColumn" /> 的列设置错误说明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要检查错误说明，请使用 <xref:System.Data.DataRow.GetColumnError%2A> 方法。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 属性。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。  
  
 如果 `null` 或空字符串作为 `error` 参数传入，<xref:System.Data.DataRow> 的行为就好像未设置错误，<xref:System.Data.DataRow.HasErrors%2A> 属性将返回 false。  
  
 若要对整行设置自定义错误说明，请使用 <xref:System.Data.DataRow.RowError%2A> 属性。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 方法。  
  
 若要清除列集合的所有错误，请使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法。  
  
   
  
## Examples  
 下面的示例为指定的 <xref:System.Data.DataRow>设置错误说明。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列的从零开始的索引。</param>
        <param name="error">错误说明。</param>
        <summary>为由索引指定的列设置错误说明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法用于设置指定列上的自定义错误说明。 您可以使用 <xref:System.Windows.Forms.ErrorProvider> 控件来显示错误的文本。  
  
 若要检查错误说明，请使用 <xref:System.Data.DataRow.GetColumnError%2A> 方法。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 属性。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。  
  
 如果 `null` 或空字符串作为 `error` 参数传入，<xref:System.Data.DataRow> 的行为就好像未设置错误，<xref:System.Data.DataRow.HasErrors%2A> 属性将返回 false。  
  
 若要对整行设置自定义错误说明，请使用 <xref:System.Data.DataRow.RowError%2A> 属性。  
  
 若要清除列集合的所有错误，请使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法。  
  
 若要设置适用于整行的错误文本，请设置 <xref:System.Data.DataRow.RowError%2A> 属性。  
  
   
  
## Examples  
 下面的示例为指定的 <xref:System.Data.DataRow>设置错误说明。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 参数超出范围</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">列的名称。</param>
        <param name="error">错误说明。</param>
        <summary>为由名称指定的列设置错误说明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataColumn> 类的 <xref:System.Data.DataColumn.ColumnName%2A> 属性设置列的名称。  
  
 若要检查错误说明，请使用 <xref:System.Data.DataRow.GetColumnError%2A> 方法。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 属性。 因此，您可以使用 <xref:System.Data.DataRow.GetColumnsInError%2A> 方法来检索所有包含错误的列。  
  
 如果 `null` 或空字符串作为 `error` 参数传入，<xref:System.Data.DataRow> 的行为就好像未设置错误，<xref:System.Data.DataRow.HasErrors%2A> 属性将返回 false。  
  
 若要对整行设置自定义错误说明，请使用 <xref:System.Data.DataRow.RowError%2A> 属性。  
  
 若要确定列集合是否存在任何错误，请使用 <xref:System.Data.DataRow.HasErrors%2A> 方法。  
  
 若要清除列集合的所有错误，请使用 <xref:System.Data.DataRow.ClearErrors%2A> 方法。  
  
   
  
## Examples  
 下面的示例为指定的 <xref:System.Data.DataRow>设置错误说明。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Data.DataRow" /> 的 <see cref="P:System.Data.DataRow.RowState" /> 更改为 <see langword="Modified" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将 <xref:System.Data.DataRow> 的 <xref:System.Data.DataRow.RowState*> 更改为 `Modified`。 如果当前行不处于 `Unchanged` 或 `Added` 状态，则会引发一个 <xref:System.InvalidOperationException> 消息 `SetModified`，该消息只可在 `DataRow` `RowState` `Unchanged`实例上调用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">一个 <see cref="T:System.Data.DataColumn" />。</param>
        <summary>将指定 <see cref="T:System.Data.DataColumn" /> 的值设置为 null 值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Data.DataRow.IsNull%2A> 方法来确定列是否包含 null 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>设置 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">新的父 <see cref="T:System.Data.DataRow" />。</param>
        <summary>使用指定的新父 <see cref="T:System.Data.DataRow" /> 设置 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">新的父 <see cref="T:System.Data.DataRow" />。</param>
        <param name="relation">要使用的关系 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的新父 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" /> 设置 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例设置特定子行的父行。  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">其中一行不属于表</exception>
        <exception cref="T:System.ArgumentNullException">其中一行为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">该关系不属于 <see cref="T:System.Data.DataSet" /> 对象的 <see cref="T:System.Data.DataRelationCollection" />。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">该关系的子级 <see cref="T:System.Data.DataTable" /> 不是此行所属的表。</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该行拥有其架构的 <see cref="T:System.Data.DataTable" />。</summary>
        <value>该行所属的 <see cref="T:System.Data.DataTable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow> 不一定属于任何表的行集合。 如果 <xref:System.Data.DataRow> 已创建但未添加到 <xref:System.Data.DataRowCollection>中，则会出现此行为。 如果 <xref:System.Data.DataRow.RowState*> 属性返回 `DataRowState.Detached`，则该行不在任何集合中。  
  
   
  
## Examples  
 下面的示例使用 <xref:System.Data.DataRow.Table%2A> 属性返回对 <xref:System.Data.DataTable>的列集合的引用。  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>
