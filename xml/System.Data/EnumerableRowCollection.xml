<Type Name="EnumerableRowCollection" FullName="System.Data.EnumerableRowCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="08dec7757dc243a8e5b18935e50aa33404eaf7fc" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="86354313" /></Metadata><TypeSignature Language="C#" Value="public abstract class EnumerableRowCollection : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EnumerableRowCollection extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EnumerableRowCollection&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollection abstract : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollection = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.0.0" To="System.Data.Common" ToVersion="4.2.1.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.1.0" To="System.Data.Common" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示从 LINQ to DataSet 查询返回的 <see cref="T:System.Data.DataRow" /> 对象的集合。 此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EnumerableRowCollection> 提供一个入口点，以便可以在扩展方法中截获强制转换运算。 派生的泛型类 <xref:System.Data.EnumerableRowCollection%601> 实际上由 .NET Framework 用来包含查询的结果。  
  
 此类无法实例化。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <related type="Article" href="/dotnet/framework/data/adonet/linq-to-dataset">LINQ to DataSet</related>
  </Docs>
  <Members>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="enumerableRowCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Data.DataRow" /> 对象集合的枚举数。 此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <returns>一个可用于遍历 <see cref="T:System.Collections.IEnumerator" /> 对象的集合的 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现始终返回 `null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
      </Docs>
    </Member>
  </Members>
</Type>
