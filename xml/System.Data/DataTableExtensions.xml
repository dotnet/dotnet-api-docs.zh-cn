<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7190d214e7ea7543c8cbc91d647eb406d272893a" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102074076" /></Metadata><TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataTableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.0.0" To="System.Data.Common" ToVersion="4.2.1.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="System.Data.DataSetExtensions" FromVersion="4.0.1.0" To="System.Data.Common" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e63ec-101">定义 <see cref="T:System.Data.DataTable" /> 类的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="e63ec-101">Defines the extension methods to the <see cref="T:System.Data.DataTable" /> class.</span></span> <span data-ttu-id="e63ec-102"><see cref="T:System.Data.DataTableExtensions" /> 是一个静态类。</span><span class="sxs-lookup"><span data-stu-id="e63ec-102"><see cref="T:System.Data.DataTableExtensions" /> is a static class.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.DataTable -&gt; System.Data.DataView" Usage="System.Data.DataTableExtensions.AsDataView table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="e63ec-103">从中创建支持 LINQ 的 <see cref="T:System.Data.DataTable" /> 的源 <see cref="T:System.Data.DataView" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-103">The source <see cref="T:System.Data.DataTable" /> from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</span></span></param>
        <summary><span data-ttu-id="e63ec-104">创建并返回支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e63ec-104">Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span></span></summary>
        <returns><span data-ttu-id="e63ec-105">支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e63ec-105">A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63ec-106"><xref:System.Data.DataView> 启用 LINQ to DataSet 的数据绑定方案，可以从类型化或非类型化的 <xref:System.Data.DataTable> 中创建，提供该表的默认视图。</span><span class="sxs-lookup"><span data-stu-id="e63ec-106"><xref:System.Data.DataView> enables data-binding scenarios for LINQ to DataSet and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table.</span></span> <span data-ttu-id="e63ec-107">在从 <xref:System.Data.DataView> 创建 <xref:System.Data.DataTable> 后，可以在其上设置筛选和排序。</span><span class="sxs-lookup"><span data-stu-id="e63ec-107">Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e63ec-108">然后，将 <xref:System.Data.DataView> 绑定到一个 UI 控件（如 <xref:System.Windows.Forms.DataGrid> 或 <xref:System.Windows.Forms.DataGridView> ），提供一个简单的数据绑定模型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-108">The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.</span></span>  
  
 <span data-ttu-id="e63ec-109">有关详细信息和示例，请参阅 [创建 DataView 对象](/dotnet/framework/data/adonet/creating-a-dataview-object-linq-to-dataset)。</span><span class="sxs-lookup"><span data-stu-id="e63ec-109">For more information and examples, see [Creating a DataView Object](/dotnet/framework/data/adonet/creating-a-dataview-object-linq-to-dataset).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e63ec-110">下面的示例 <xref:System.Data.DataView> 从 SalesOrderDetail 表创建，并将其设置为对象的数据源 <xref:System.Windows.Forms.BindingSource> ，该对象用作控件的代理 <xref:System.Windows.Forms.DataGridView> ：</span><span class="sxs-lookup"><span data-stu-id="e63ec-110">The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:</span></span>  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.EnumerableRowCollection&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataView (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.AsDataView source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e63ec-111">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</span><span class="sxs-lookup"><span data-stu-id="e63ec-111">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e63ec-112">从中创建支持 LINQ 的的源 LINQ to DataSet 查询 <see cref="T:System.Data.DataView" /> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-112">The source LINQ to DataSet query from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</span></span></param>
        <summary><span data-ttu-id="e63ec-113">创建并返回一个启用了 LINQ 的 <see cref="T:System.Data.DataView" /> 对象，该对象表示 LINQ to DataSet 查询。</span><span class="sxs-lookup"><span data-stu-id="e63ec-113">Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object representing the LINQ to DataSet query.</span></span></summary>
        <returns><span data-ttu-id="e63ec-114">支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e63ec-114">A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63ec-115"><xref:System.Data.DataView> 启用 LINQ to DataSet 的数据绑定方案，可以通过 LINQ to DataSet 的查询创建。</span><span class="sxs-lookup"><span data-stu-id="e63ec-115"><xref:System.Data.DataView> enables data binding scenarios for LINQ to DataSet and can be created from a LINQ to DataSet query.</span></span> <span data-ttu-id="e63ec-116"><xref:System.Data.DataView>表示查询本身，而不是查询顶部的视图。</span><span class="sxs-lookup"><span data-stu-id="e63ec-116">The <xref:System.Data.DataView> represents the query itself, and is not a view on top of the query.</span></span> <span data-ttu-id="e63ec-117">新创建的将从 <xref:System.Data.DataView> 创建它的查询推断筛选和排序信息。</span><span class="sxs-lookup"><span data-stu-id="e63ec-117">The newly created <xref:System.Data.DataView> infers the filtering and sorting information from the query it is created from.</span></span> <span data-ttu-id="e63ec-118">然后，将 <xref:System.Data.DataView> 绑定到 UI 控件（如 <xref:System.Windows.Forms.DataGrid> 或 <xref:System.Windows.Forms.DataGridView> ），从而提供简单的数据绑定模型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-118">The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data-binding model.</span></span>  
  
 <span data-ttu-id="e63ec-119">`T`输入参数的参数 `source` 只能为类型 <xref:System.Data.DataRow> 或派生自的类型 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-119">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e63ec-120">以下查询运算符仅在用于创建的查询中受支持 <xref:System.Data.DataView> ：</span><span class="sxs-lookup"><span data-stu-id="e63ec-120">The following query operators, only, are supported in a query used to create <xref:System.Data.DataView>:</span></span>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 <span data-ttu-id="e63ec-121">有关详细信息和示例，请参阅 [创建 DataView 对象](/dotnet/framework/data/adonet/creating-a-dataview-object-linq-to-dataset)。</span><span class="sxs-lookup"><span data-stu-id="e63ec-121">For more information and examples, see [Creating a DataView Object](/dotnet/framework/data/adonet/creating-a-dataview-object-linq-to-dataset).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e63ec-122">下面的示例创建 <xref:System.Data.DataView> 按总计到期顺序排序的联机订单：</span><span class="sxs-lookup"><span data-stu-id="e63ec-122">The following example creates a <xref:System.Data.DataView> of online orders ordered by total due:</span></span>  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Data.DataTable -&gt; System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;" Usage="System.Data.DataTableExtensions.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e63ec-123">可枚举的源 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-123">The source <see cref="T:System.Data.DataTable" /> to make enumerable.</span></span></param>
        <summary><span data-ttu-id="e63ec-124">返回一个 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象，其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-124">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span> <span data-ttu-id="e63ec-125">此对象可用于 LINQ 表达式或方法查询中。</span><span class="sxs-lookup"><span data-stu-id="e63ec-125">This object can be used in a LINQ expression or method query.</span></span></summary>
        <returns><span data-ttu-id="e63ec-126">一个 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象，其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-126">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63ec-127">Language-Integrated 查询 (LINQ) 查询可用于实现 <xref:System.Collections.Generic.IEnumerable%601> 接口或接口的数据源 <xref:System.Linq.IQueryable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-127">Language-Integrated Query (LINQ) queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Linq.IQueryable> interface.</span></span>  <span data-ttu-id="e63ec-128"><xref:System.Data.DataTable>类不实现任何一个接口，因此必须调用方法，以便 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> <xref:System.Data.DataTable> 在 LINQ 查询的子句中使用作为源 `From` 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-128">The <xref:System.Data.DataTable> class does not implement either interface, so you must call the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a LINQ query.</span></span> <span data-ttu-id="e63ec-129">还可以通过返回对象来获取自定义的、特定于域的运算符，例如 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> <xref:System.Collections.Generic.IEnumerable%601> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-129">You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.</span></span>  
  
 <span data-ttu-id="e63ec-130">方法返回的可枚举对象 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 将永久绑定到 <xref:System.Data.DataTable> 生成它的。</span><span class="sxs-lookup"><span data-stu-id="e63ec-130">The enumerable object returned by the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method is permanently bound to the <xref:System.Data.DataTable> that produced it.</span></span> <span data-ttu-id="e63ec-131">多次调用 <xref:System.Data.DataTableExtensions.AsEnumerable%2A> 方法将返回多个独立的可查询对象，这些对象都绑定到源 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-131">Multiple calls to the <xref:System.Data.DataTableExtensions.AsEnumerable%2A> method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e63ec-132">在下面的示例中， `DisplayProducts` 方法接收包含名为的 DataColumn 的 DataTable `ProductName` ，提取 `ProductName` 值，然后打印这些值。</span><span class="sxs-lookup"><span data-stu-id="e63ec-132">In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.</span></span>  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e63ec-133">源 <see cref="T:System.Data.DataTable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-133">The source <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e63ec-134">在给定输入 <see cref="T:System.Data.DataTable" /> 对象的情况下，返回包含 <see cref="T:System.Data.DataRow" /> 对象副本的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-134">Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataTable (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e63ec-135">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</span><span class="sxs-lookup"><span data-stu-id="e63ec-135">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e63ec-136">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</span><span class="sxs-lookup"><span data-stu-id="e63ec-136">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span></span></param>
        <summary><span data-ttu-id="e63ec-137">在给定其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataTable" /> 的输入 <see cref="T:System.Data.DataRow" /> 对象的情况下，返回包含 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象副本的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-137">Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="e63ec-138">一个 <see cref="T:System.Data.DataTable" />，其中包含作为 <see cref="T:System.Data.DataRow" /> 对象的类型的输入序列。</span><span class="sxs-lookup"><span data-stu-id="e63ec-138">A <see cref="T:System.Data.DataTable" /> that contains the input sequence as the type of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63ec-139">`T`输入参数的参数 `source` 只能为类型 <xref:System.Data.DataRow> 或派生自的类型 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-139">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow> or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e63ec-140">输入序列可以是任何 <xref:System.Collections.Generic.IEnumerable%601> 源，不仅可以是查询，也可以是查询 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-140">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query or a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e63ec-141">请注意，如果源序列是查询，则调用此运算符将强制立即执行。</span><span class="sxs-lookup"><span data-stu-id="e63ec-141">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="e63ec-142">枚举源序列也会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e63ec-142">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="e63ec-143">目标表的架构基于 <xref:System.Data.DataRow> 源序列中第一行的架构。</span><span class="sxs-lookup"><span data-stu-id="e63ec-143">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="e63ec-144">表元数据从的 <xref:System.Data.DataRow> 元数据和表值中提取 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-144">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="e63ec-145">对于类型化 <xref:System.Data.DataTable> ，不会保留类型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-145">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="e63ec-146">传输数据和架构，但输出表的结果行不是类型化的 <xref:System.Data.DataRow> 类型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-146">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="e63ec-147">在 <xref:System.Data.DataRow.RowState%2A> <xref:System.Data.DataRow.RowError%2A> 从源复制到返回的过程中，不会保留和属性 <xref:System.Data.DataRow> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-147">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e63ec-148">在源中找到值为 **null** 的 **空** 引用或可为 null 的类型时 <xref:System.Data.DataRow> ，此方法会将目标中的值替换为 <xref:System.Data.DataTable> 的值 <xref:System.DBNull.Value> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-148">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="e63ec-149">方法返回的生成表具有默认的表名称。</span><span class="sxs-lookup"><span data-stu-id="e63ec-149">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="e63ec-150">如果要命名 <xref:System.Data.DataTable> 、将其附加到 <xref:System.Data.DataSet> 或执行任何其他 <xref:System.Data.DataTable> 特定操作，则必须在创建并返回表后执行此操作。</span><span class="sxs-lookup"><span data-stu-id="e63ec-150">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="e63ec-151">有关详细信息，请参阅 [从查询创建 DataTable](/dotnet/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset)。</span><span class="sxs-lookup"><span data-stu-id="e63ec-151">For more information, see [Creating a DataTable From a Query](/dotnet/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e63ec-152">下面的示例在2001年8月8日之后查询 SalesOrderHeader 表中的订单，并使用 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> 方法 <xref:System.Data.DataTable> 从该查询创建。</span><span class="sxs-lookup"><span data-stu-id="e63ec-152">The following example queries the SalesOrderHeader table for orders after August 8, 2001, and uses the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method to create a <xref:System.Data.DataTable> from that query.</span></span> <span data-ttu-id="e63ec-153">然后将 <xref:System.Data.DataTable> 绑定到作为 <xref:System.Windows.Forms.BindingSource> 的代理的 <xref:System.Windows.Forms.DataGridView>。</span><span class="sxs-lookup"><span data-stu-id="e63ec-153">The <xref:System.Data.DataTable> is then bound to a <xref:System.Windows.Forms.BindingSource>, which acts as proxy for a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e63ec-154">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列为 <see langword="null" />，因此无法创建新表。</span><span class="sxs-lookup"><span data-stu-id="e63ec-154">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> and a new table cannot be created.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e63ec-155">源序列中的 <see cref="T:System.Data.DataRow" /> 的状态为 <see cref="F:System.Data.DataRowState.Deleted" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-155">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span></span>  
  
<span data-ttu-id="e63ec-156">源序列不包含任何 <see cref="T:System.Data.DataRow" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e63ec-156">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span></span>  
  
<span data-ttu-id="e63ec-157">源序列中的 <see cref="T:System.Data.DataRow" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-157">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e63ec-158">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</span><span class="sxs-lookup"><span data-stu-id="e63ec-158">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e63ec-159">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</span><span class="sxs-lookup"><span data-stu-id="e63ec-159">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span></span></param>
        <param name="table"><span data-ttu-id="e63ec-160">目标 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-160">The destination <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="options"><span data-ttu-id="e63ec-161"><see cref="T:System.Data.LoadOption" /> 枚举，用于指定 <see cref="T:System.Data.DataTable" /> 加载选项。</span><span class="sxs-lookup"><span data-stu-id="e63ec-161">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</span></span></param>
        <summary><span data-ttu-id="e63ec-162">在给定其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" /> 的输入 <see cref="T:System.Data.DataTable" /> 对象的情况下，将 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象复制到指定的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-162">Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63ec-163">`T`输入参数的参数 `source` 只能是类型 <xref:System.Data.DataRow> 或派生自的类型 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-163">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e63ec-164">输入序列可以是任何 <xref:System.Collections.Generic.IEnumerable%601> 源，而不仅是对的查询 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-164">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e63ec-165">请注意，如果源序列是查询，则调用此运算符将强制立即执行。</span><span class="sxs-lookup"><span data-stu-id="e63ec-165">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="e63ec-166">枚举源序列也会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e63ec-166">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="e63ec-167">目标表的架构基于 <xref:System.Data.DataRow> 源序列中第一行的架构。</span><span class="sxs-lookup"><span data-stu-id="e63ec-167">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="e63ec-168">表元数据从的 <xref:System.Data.DataRow> 元数据和表值中提取 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-168">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="e63ec-169">对于类型化 <xref:System.Data.DataTable> ，不会保留类型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-169">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="e63ec-170">传输数据和架构，但输出表的结果行不是类型化的 <xref:System.Data.DataRow> 类型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-170">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="e63ec-171">在 <xref:System.Data.DataRow.RowState%2A> <xref:System.Data.DataRow.RowError%2A> 从源复制到返回的过程中，不会保留和属性 <xref:System.Data.DataRow> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-171">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e63ec-172">在源中找到值为 **null** 的 **空** 引用或可为 null 的类型时 <xref:System.Data.DataRow> ，此方法会将目标中的值替换为 <xref:System.Data.DataTable> 的值 <xref:System.DBNull.Value> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-172">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="e63ec-173">方法返回的生成表具有默认的表名称。</span><span class="sxs-lookup"><span data-stu-id="e63ec-173">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="e63ec-174">如果要命名 <xref:System.Data.DataTable> 、将其附加到 <xref:System.Data.DataSet> 或执行任何其他 <xref:System.Data.DataTable> 特定操作，则必须在创建并返回表后执行此操作。</span><span class="sxs-lookup"><span data-stu-id="e63ec-174">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="e63ec-175">有关详细信息，请参阅 [从查询创建 DataTable](/dotnet/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset)。</span><span class="sxs-lookup"><span data-stu-id="e63ec-175">For more information, see [Creating a DataTable From a Query](/dotnet/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e63ec-176">复制的 <see cref="T:System.Data.DataRow" /> 对象不符合目标 <see cref="T:System.Data.DataTable" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="e63ec-176">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e63ec-177">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列为 <see langword="null" />，或者目标 <see cref="T:System.Data.DataTable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-177">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e63ec-178">源序列中的 <see cref="T:System.Data.DataRow" /> 的状态为 <see cref="F:System.Data.DataRowState.Deleted" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-178">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span></span>  
  
<span data-ttu-id="e63ec-179">源序列不包含任何 <see cref="T:System.Data.DataRow" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e63ec-179">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span></span>  
  
<span data-ttu-id="e63ec-180">源序列中的 <see cref="T:System.Data.DataRow" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-180">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options, errorHandler)" />
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler? errorHandler) where T : System.Data.DataRow;" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e63ec-181">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</span><span class="sxs-lookup"><span data-stu-id="e63ec-181">The type of objects in the source sequence, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e63ec-182">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</span><span class="sxs-lookup"><span data-stu-id="e63ec-182">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</span></span></param>
        <param name="table"><span data-ttu-id="e63ec-183">目标 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-183">The destination <see cref="T:System.Data.DataTable" />.</span></span></param>
        <param name="options"><span data-ttu-id="e63ec-184"><see cref="T:System.Data.LoadOption" /> 枚举，用于指定 <see cref="T:System.Data.DataTable" /> 加载选项。</span><span class="sxs-lookup"><span data-stu-id="e63ec-184">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</span></span></param>
        <param name="errorHandler"><span data-ttu-id="e63ec-185"><see cref="T:System.Data.FillErrorEventHandler" /> 委托，表示将处理错误的方法。</span><span class="sxs-lookup"><span data-stu-id="e63ec-185">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate that represents the method that will handle an error.</span></span></param>
        <summary><span data-ttu-id="e63ec-186">在给定其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" /> 的输入 <see cref="T:System.Data.DataTable" /> 对象的情况下，将 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象复制到指定的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-186">Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e63ec-187">`T`输入参数的参数 `source` 只能是类型 <xref:System.Data.DataRow> 或派生自的类型 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-187">The parameter `T` of the input parameter `source` can only be of type <xref:System.Data.DataRow>, or a type derived from <xref:System.Data.DataRow>.</span></span>  
  
 <span data-ttu-id="e63ec-188">输入序列可以是任何 <xref:System.Collections.Generic.IEnumerable%601> 源，而不仅是对的查询 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-188">The input sequence can be any <xref:System.Collections.Generic.IEnumerable%601> source, not only a query over a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e63ec-189">请注意，如果源序列是查询，则调用此运算符将强制立即执行。</span><span class="sxs-lookup"><span data-stu-id="e63ec-189">Note that if the source sequence is a query, calling this operator will force immediate execution.</span></span> <span data-ttu-id="e63ec-190">枚举源序列也会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="e63ec-190">Enumerating the source sequence can also cause exceptions to be thrown.</span></span>  
  
 <span data-ttu-id="e63ec-191">目标表的架构基于 <xref:System.Data.DataRow> 源序列中第一行的架构。</span><span class="sxs-lookup"><span data-stu-id="e63ec-191">The schema of the destination table is based on the schema of the first <xref:System.Data.DataRow> row in the source sequence.</span></span> <span data-ttu-id="e63ec-192">表元数据从的 <xref:System.Data.DataRow> 元数据和表值中提取 <xref:System.Data.DataRow> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-192">The table metadata is extracted from the <xref:System.Data.DataRow> metadata and the table values from the column values of the <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="e63ec-193">对于类型化 <xref:System.Data.DataTable> ，不会保留类型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-193">For a typed <xref:System.Data.DataTable>, types are not preserved.</span></span> <span data-ttu-id="e63ec-194">传输数据和架构，但输出表的结果行不是类型化的 <xref:System.Data.DataRow> 类型。</span><span class="sxs-lookup"><span data-stu-id="e63ec-194">The data and schema are transferred, but the resulting rows of the output table will not be of the typed <xref:System.Data.DataRow> type.</span></span> <span data-ttu-id="e63ec-195">在 <xref:System.Data.DataRow.RowState%2A> <xref:System.Data.DataRow.RowError%2A> 从源复制到返回的过程中，不会保留和属性 <xref:System.Data.DataRow> <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-195">The <xref:System.Data.DataRow.RowState%2A> and <xref:System.Data.DataRow.RowError%2A> properties are not preserved during the copy from the source <xref:System.Data.DataRow> to the returned <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e63ec-196">在源中找到值为 **null** 的 **空** 引用或可为 null 的类型时 <xref:System.Data.DataRow> ，此方法会将目标中的值替换为 <xref:System.Data.DataTable> 的值 <xref:System.DBNull.Value> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-196">When a **null** reference or nullable type with a value of **null** is found in a source <xref:System.Data.DataRow>, this method replaces the value in the destination <xref:System.Data.DataTable> with a value of <xref:System.DBNull.Value>.</span></span>  
  
 <span data-ttu-id="e63ec-197">方法返回的生成表具有默认的表名称。</span><span class="sxs-lookup"><span data-stu-id="e63ec-197">The generated table returned by the method has the default table name.</span></span> <span data-ttu-id="e63ec-198">如果要命名 <xref:System.Data.DataTable> 、将其附加到 <xref:System.Data.DataSet> 或执行任何其他 <xref:System.Data.DataTable> 特定操作，则必须在创建并返回表后执行此操作。</span><span class="sxs-lookup"><span data-stu-id="e63ec-198">If you want to name the <xref:System.Data.DataTable>, attach it to a <xref:System.Data.DataSet>, or perform any other <xref:System.Data.DataTable> specific operation, you must do so after the table is created and returned.</span></span>  
  
 <span data-ttu-id="e63ec-199">如果在将数据行复制到目标表期间引发了异常，如约束异常，则 `errorHandler` 调用委托。</span><span class="sxs-lookup"><span data-stu-id="e63ec-199">If an exception is thrown during the copy of a data row into the target table, such as a constraint exception, the `errorHandler` delegate is called.</span></span> <span data-ttu-id="e63ec-200"><xref:System.Data.FillErrorEventArgs> `errorHandler` 使用以下值将传递给委托：</span><span class="sxs-lookup"><span data-stu-id="e63ec-200">A <xref:System.Data.FillErrorEventArgs> is passed to the `errorHandler` delegate with the following values:</span></span>  
  
-   <span data-ttu-id="e63ec-201"><xref:System.Data.FillErrorEventArgs.Values%2A>属性设置为源数据的副本。</span><span class="sxs-lookup"><span data-stu-id="e63ec-201">The <xref:System.Data.FillErrorEventArgs.Values%2A> property is set to a copy of the source data.</span></span>  
  
-   <span data-ttu-id="e63ec-202"><xref:System.Data.FillErrorEventArgs.DataTable%2A>属性设置为目标 <xref:System.Data.DataTable> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-202">The <xref:System.Data.FillErrorEventArgs.DataTable%2A> property is set to the target <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="e63ec-203"><xref:System.Data.FillErrorEventArgs.Errors%2A>属性设置为捕获的异常。</span><span class="sxs-lookup"><span data-stu-id="e63ec-203">The <xref:System.Data.FillErrorEventArgs.Errors%2A> property is set to the caught exception.</span></span>  
  
 <span data-ttu-id="e63ec-204"><xref:System.Data.FillErrorEventArgs.Continue%2A>委托调用返回后，将读取属性。</span><span class="sxs-lookup"><span data-stu-id="e63ec-204">The <xref:System.Data.FillErrorEventArgs.Continue%2A> property is read after the delegate call returns.</span></span> <span data-ttu-id="e63ec-205">如果 <xref:System.Data.FillErrorEventArgs.Continue%2A> 属性为 `true` ，则继续枚举源序列并将其加载到数据表中。</span><span class="sxs-lookup"><span data-stu-id="e63ec-205">If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `true`, the source sequence continues to be enumerated and loaded into the data table.</span></span> <span data-ttu-id="e63ec-206">如果 <xref:System.Data.FillErrorEventArgs.Continue%2A> 属性为 `false` ，则从方法引发原始异常 <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> 。</span><span class="sxs-lookup"><span data-stu-id="e63ec-206">If the <xref:System.Data.FillErrorEventArgs.Continue%2A> property is `false`, the original exception is thrown from the <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> method.</span></span>  
  
 <span data-ttu-id="e63ec-207">有关详细信息，请参阅 [从查询创建 DataTable](/dotnet/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset)。</span><span class="sxs-lookup"><span data-stu-id="e63ec-207">For more information, see [Creating a DataTable From a Query](/dotnet/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e63ec-208">复制的 <see cref="T:System.Data.DataRow" /> 对象不符合目标 <see cref="T:System.Data.DataTable" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="e63ec-208">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e63ec-209">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列为 <see langword="null" />，或者目标 <see cref="T:System.Data.DataTable" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-209">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e63ec-210">源序列中的 <see cref="T:System.Data.DataRow" /> 的状态为 <see cref="F:System.Data.DataRowState.Deleted" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-210">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.</span></span>  
  
<span data-ttu-id="e63ec-211">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e63ec-211">-or-</span></span> 
<span data-ttu-id="e63ec-212">源序列不包含任何 <see cref="T:System.Data.DataRow" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e63ec-212">The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.</span></span>  
  
<span data-ttu-id="e63ec-213">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e63ec-213">-or-</span></span> 
<span data-ttu-id="e63ec-214">源序列中的 <see cref="T:System.Data.DataRow" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e63ec-214">A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
