<Type Name="XmlWriteMode" FullName="System.Data.XmlWriteMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0dff7b7f441918955b2d02c49dac553e63e40d1" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89728608" /></Metadata><TypeSignature Language="C#" Value="public enum XmlWriteMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlWriteMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlWriteMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlWriteMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlWriteMode" />
  <TypeSignature Language="F#" Value="type XmlWriteMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定如何从 <see cref="T:System.Data.DataSet" /> 写入 XML 数据和关系架构。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置方法的参数时，请使用此枚举的成员 `WriteMode` <xref:System.Data.DataSet.WriteXml%2A> 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlWriteMode DiffGram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlWriteMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberSignature Language="F#" Value="DiffGram = 2" Usage="System.Data.XmlWriteMode.DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlWriteMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>以 DiffGram 形式编写整个 <see cref="T:System.Data.DataSet" />，包括原始值和当前值。 若要生成只包含已更改的值的 DiffGram，请调用 <see cref="M:System.Data.DataSet.GetChanges" />，然后在返回的 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 上作为 DiffGram 调用 <see cref="T:System.Data.DataSet" />。</summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlWriteMode IgnoreSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlWriteMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberSignature Language="F#" Value="IgnoreSchema = 1" Usage="System.Data.XmlWriteMode.IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlWriteMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>以 XML 数据形式写入 <see cref="T:System.Data.DataSet" /> 的当前内容，不带 XSD 架构。 如果无数据加载到 <see cref="T:System.Data.DataSet" /> 中，则不写入任何内容。</summary>
      </Docs>
    </Member>
    <Member MemberName="WriteSchema">
      <MemberSignature Language="C#" Value="WriteSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlWriteMode WriteSchema = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlWriteMode.WriteSchema" />
      <MemberSignature Language="VB.NET" Value="WriteSchema" />
      <MemberSignature Language="C++ CLI" Value="WriteSchema" />
      <MemberSignature Language="F#" Value="WriteSchema = 0" Usage="System.Data.XmlWriteMode.WriteSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlWriteMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>以 XML 数据形式写入 <see cref="T:System.Data.DataSet" /> 的当前内容，以关系结构作为内联 XSD 架构。 如果 <see cref="T:System.Data.DataSet" /> 只有架构而无数据，那么只写入内联架构。 如果 <see cref="T:System.Data.DataSet" /> 没有当前架构，则不写入任何内容。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
