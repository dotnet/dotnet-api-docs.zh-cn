<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf02e35f84cc527c121a453f9810d2c9ba536079" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83947377" /></Metadata><TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ed9a-101">表示 <see cref="T:System.Data.DataTable" /> 中的列的架构。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-102"><xref:System.Data.DataColumn> 是创建 <xref:System.Data.DataTable>架构的基本构建基块。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0ed9a-103">您可以通过将一个或多个 <xref:System.Data.DataColumn> 对象添加到 <xref:System.Data.DataColumnCollection>来生成架构。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="0ed9a-104">有关详细信息，请参阅[将列添加到 DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable)。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-104">For more information, see [Adding Columns to a DataTable](/dotnet/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable).</span></span>  
  
 <span data-ttu-id="0ed9a-105">每个 <xref:System.Data.DataColumn> 都有一个 <xref:System.Data.DataColumn.DataType%2A> 属性，该属性确定 <xref:System.Data.DataColumn> 包含的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="0ed9a-106">例如，可以将数据类型限制为整数或字符串或小数。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="0ed9a-107">由于 <xref:System.Data.DataTable> 包含的数据通常会合并回其原始数据源，因此必须将数据类型与数据源中的数据类型相匹配。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="0ed9a-108">有关详细信息，请参阅[ADO.NET 中的数据类型映射](/dotnet/framework/data/adonet/data-type-mappings-in-ado-net)。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-108">For more information, see [Data Type Mappings in ADO.NET](/dotnet/framework/data/adonet/data-type-mappings-in-ado-net).</span></span>  
  
 <span data-ttu-id="0ed9a-109">属性（例如 <xref:System.Data.DataColumn.AllowDBNull%2A>、<xref:System.Data.DataColumn.Unique%2A>和 <xref:System.Data.DataColumn.ReadOnly%2A> 对数据的输入和更新施加限制，从而有助于保证数据的完整性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="0ed9a-110">你还可以使用 <xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>和 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 属性来控制自动数据生成。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="0ed9a-111">有关 <xref:System.Data.DataColumn.AutoIncrement%2A> 列的详细信息，请参阅[创建自动增量列](/dotnet/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns)。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](/dotnet/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns).</span></span> <span data-ttu-id="0ed9a-112">有关详细信息，请参阅[定义主键](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys)。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-112">For more information, see [Defining Primary Keys](/dotnet/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys).</span></span>  
  
 <span data-ttu-id="0ed9a-113">您还可以通过创建 <xref:System.Data.UniqueConstraint> 并将其添加到 <xref:System.Data.DataColumn> 所属的 <xref:System.Data.DataTable> <xref:System.Data.ConstraintCollection>，确保 <xref:System.Data.DataColumn> 中的值是唯一的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="0ed9a-114">有关详细信息，请参阅[DataTable 约束](/dotnet/framework/data/adonet/dataset-datatable-dataview/datatable-constraints)。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-114">For more information, see [DataTable Constraints](/dotnet/framework/data/adonet/dataset-datatable-dataview/datatable-constraints).</span></span>  
  
 <span data-ttu-id="0ed9a-115">若要创建 <xref:System.Data.DataColumn> 对象之间的关系，请创建 <xref:System.Data.DataRelation> 对象并将其添加到 <xref:System.Data.DataSet>的 <xref:System.Data.DataRelationCollection>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="0ed9a-116">您可以使用 <xref:System.Data.DataColumn> 对象的 <xref:System.Data.DataColumn.Expression%2A> 属性计算列中的值或创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="0ed9a-117">有关详细信息，请参阅[创建表达式列](/dotnet/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns)。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-117">For more information, see [Creating Expression Columns](/dotnet/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-118">下面的示例创建具有多个 <xref:System.Data.DataColumn> 对象的 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="0ed9a-119">对于多线程读取操作，此类型是安全的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-119">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="0ed9a-120">必须同步任何写入操作。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-120">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-121">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-121">Using DataSets in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ed9a-122">初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-122">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ed9a-123">将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-123">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-124">创建时，<xref:System.Data.DataColumn> 对象没有默认 <xref:System.Data.DataColumn.ColumnName%2A> 或 <xref:System.Data.DataColumn.Caption%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-124">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="0ed9a-125">将其添加到 <xref:System.Data.DataColumnCollection>时，如果尚未将名称分配给 <xref:System.Data.DataColumn.ColumnName%2A>，则将生成默认名称（"Column1"、"Column2" 等）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-125">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-126">下面的示例创建一个新 <xref:System.Data.DataColumn>，设置各种属性，并将其添加到 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataColumnCollection> 中。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-126">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-127">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-127">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="0ed9a-128">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-128">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="0ed9a-129">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-129">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <summary><span data-ttu-id="0ed9a-130">使用指定的列名称将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-130">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-131">默认情况下，特定于列的名称将成为 <xref:System.Data.DataColumn.Caption%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-131">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-132">下面的示例使用指定的 <xref:System.Data.DataColumn.ColumnName%2A>创建新 <xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-132">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-133">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-133">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="0ed9a-134">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-134">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="0ed9a-135">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-135">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="0ed9a-136">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-136">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <summary><span data-ttu-id="0ed9a-137">使用指定列名称和数据类型初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-137">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-138">下面的示例使用指定的 <xref:System.Data.DataColumn.ColumnName%2A> 和 <xref:System.Data.DataColumn.DataType%2A>创建新 <xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-138">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ed9a-139">未指定任何 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-139">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-140">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-140">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="0ed9a-141">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-141">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="0ed9a-142">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-142">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="0ed9a-143">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-143">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="0ed9a-144">用于创建该列的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-144">The expression used to create this column.</span></span> <span data-ttu-id="0ed9a-145">有关详细信息，请参阅 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-145">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="0ed9a-146">使用指定的名称、数据类型和表达式初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-146">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-147">下面的示例创建一个计算列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-147">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ed9a-148">未指定任何 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-148">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-149">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-149">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String, type As MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="0ed9a-150">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-150">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="0ed9a-151">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-151">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="0ed9a-152">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-152">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="0ed9a-153">用于创建该列的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-153">The expression used to create this column.</span></span> <span data-ttu-id="0ed9a-154">有关详细信息，请参阅 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-154">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <param name="type"><span data-ttu-id="0ed9a-155"><see cref="T:System.Data.MappingType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-155">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></param>
        <summary><span data-ttu-id="0ed9a-156">使用指定名称、数据类型、表达式和确定列是否为特性的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-156">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-157">`type` 参数设置 <xref:System.Data.DataColumn.ColumnMapping%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-157">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="0ed9a-158">属性指定将 <xref:System.Data.DataSet> 转换为 XML 文档时如何映射 <xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-158">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="0ed9a-159">例如，如果列的名称为 "fName"，并且它包含的值为 "Bob" 并且 `type` 设置为 `MappingType.Attribute`，则 XML 元素如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-159">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="0ed9a-160">\<名称 fName = "Bob"/></span><span class="sxs-lookup"><span data-stu-id="0ed9a-160">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="0ed9a-161">有关列如何映射到元素或属性的详细信息，请参阅 <xref:System.Data.DataColumn.ColumnMapping%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-161">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-162">下面的示例构造一个计算列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-162">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ed9a-163">未指定任何 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-163">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-164">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-164">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAllowNullDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-165">获取或设置一个值，该值指示对于属于该表的行，此列中是否允许空值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-165">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span></span></summary>
        <value><span data-ttu-id="0ed9a-166"><see langword="true" /> 是否允许 null 值;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-166"><see langword="true" /> if null values are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0ed9a-167">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-167">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-168">下面的示例创建一个新 <xref:System.Data.DataColumn>，并将其 <xref:System.Data.DataColumn.AllowDBNull%2A> 属性设置为 "`true`"。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-168">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-169">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-169">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-170">获取或设置一个值，该值指示对于添加到该表中的新行，列是否将列的值自动递增。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-170">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span></span></summary>
        <value><span data-ttu-id="0ed9a-171">如果列的值自动递增，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-171"><see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0ed9a-172">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-172">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-173">如果在设置此属性时此列的类型不是 Int16、Int32 或 Int64，则 <xref:System.Data.DataColumn.DataType%2A> 属性将强制转换为 Int32。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-173">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="0ed9a-174">如果这是一个计算列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-174">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="0ed9a-175">设置 <xref:System.Data.DataColumn.Expression%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-175">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="0ed9a-176">仅当将此列的值（添加到列集合时）等于默认值时，才使用递增的值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-176">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="0ed9a-177">您可以使用 <xref:System.Data.DataRow> 类的 <xref:System.Data.DataRow.ItemArray%2A> 属性创建一个新行，并传入一个值数组。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-177">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="0ed9a-178">对于其 <xref:System.Data.DataColumn.AutoIncrement%2A> 设置为 `true`的列，这是一个潜在的问题，因为它的值是自动生成的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-178">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="0ed9a-179">若要使用 <xref:System.Data.DataRow.ItemArray%2A> 属性，请将 `null` 置于数组中的位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-179">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="0ed9a-180">有关详细信息，请参阅 <xref:System.Data.DataRow> 类的 <xref:System.Data.DataRow.ItemArray%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-180">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="0ed9a-181">如果列的类型为 <xref:System.Data.SqlTypes.SqlInt16> 或 <xref:System.Data.SqlTypes.SqlInt32>，则 <xref:System.Data.DataColumn.AutoIncrement%2A> 将不起作用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-181">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="0ed9a-182">请改用 Int16 或 Int32。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-182">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="0ed9a-183">如果列的类型为 <xref:System.Data.SqlTypes.SqlInt64> 或 <xref:System.Data.SqlTypes.SqlDecimal>，则 <xref:System.Data.DataColumn.AutoIncrement%2A> 仅部分工作。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-183">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="0ed9a-184">请改用 Int64 或 Decimal。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-184">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="0ed9a-185">将 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 值添加到当前值后，溢出检查将被取消。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-185">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-186">下面的示例设置 <xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>和 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-186">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-187">该列是计算所得的列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-187">The column is a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-188">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-188">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementSeedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-189">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列的起始值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-189">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="0ed9a-190">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-190">The default is 0.</span></span></summary>
        <value><span data-ttu-id="0ed9a-191"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 功能的起始值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-191">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-192">下面的示例设置 <xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>和 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-192">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-193">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-193">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementStepDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-194">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列使用的增量。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-194">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="0ed9a-195">列的值自动递增的数值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-195">The number by which the value of the column is automatically incremented.</span></span> <span data-ttu-id="0ed9a-196">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-196">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-197">下面的示例设置 <xref:System.Data.DataColumn.AutoIncrement%2A>、<xref:System.Data.DataColumn.AutoIncrementSeed%2A>和 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-197">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-198">设置的值为零。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-198">The value set is zero.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-199">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-199">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnCaptionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-200">获取或设置列的标题。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-200">Gets or sets the caption for the column.</span></span></summary>
        <value><span data-ttu-id="0ed9a-201">列的标题。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-201">The caption of the column.</span></span> <span data-ttu-id="0ed9a-202">如果没有设置，则返回 <see cref="P:System.Data.DataColumn.ColumnName" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-202">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-203">您可以使用 <xref:System.Data.DataColumn.Caption%2A> 属性为 <xref:System.Data.DataColumn>显示描述性名称或友好名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-203">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-204">下面的示例创建一个新 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-204">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0ed9a-205">然后，它将三个 <xref:System.Data.DataColumn> 对象添加到 <xref:System.Data.DataColumnCollection> 中，并为每个 <xref:System.Data.DataColumn>设置 <xref:System.Data.DataColumn.Caption%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-205">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-206">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-206">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ed9a-207">此成员支持 .NET Framework 基础结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-207">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ed9a-208">此成员支持 .NET Framework 基础结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-208">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMappingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-209">获取或设置列的 <see cref="T:System.Data.MappingType" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-209">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span></span></summary>
        <value><span data-ttu-id="0ed9a-210"><see cref="T:System.Data.MappingType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-210">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-211">当使用 <xref:System.Data.DataSet.WriteXml%2A> 方法将 <xref:System.Data.DataSet> 保存为 XML 文档时，<xref:System.Data.DataColumn.ColumnMapping%2A> 属性将确定 <xref:System.Data.DataColumn> 的映射方式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-211">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="0ed9a-212">例如，如果 <xref:System.Data.DataColumn> 名为 "customerID"，其 <xref:System.Data.DataColumn.ColumnMapping%2A> 属性设置为 `MappingType.Element`，则列值将生成以下 XML：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-212">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="0ed9a-213">但是，如果将同一列映射到 `MappingType.Attribute`，则将生成以下 XML：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-213">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="0ed9a-214">使用包含 `type` 参数的 <xref:System.Data.DataColumn.%23ctor%2A> 构造函数指定 <xref:System.Data.DataColumn> 在其 <xref:System.Data.DataSet> 转换为 XML 文档时如何映射。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-214">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specify how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="0ed9a-215"><xref:System.Data.DataColumn.ColumnMapping%2A> 属性对应于构造函数参数 `type`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-215">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-216">下面的示例设置 new <xref:System.Data.DataColumn>的 <xref:System.Data.DataColumn.ColumnMapping%2A> type 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-216">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-217">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-217">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnColumnNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-218">获取或设置 <see cref="T:System.Data.DataColumnCollection" /> 中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-218">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <value><span data-ttu-id="0ed9a-219">列的名称。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-219">The name of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-220">创建 <xref:System.Data.DataColumn> 时，它没有 <xref:System.Data.DataColumn.ColumnName%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-220">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="0ed9a-221">但是，将 <xref:System.Data.DataColumn> 添加到 <xref:System.Data.DataTable> 对象的 <xref:System.Data.DataColumnCollection> 时，会为其提供默认名称（"Column1"、"Column2" 等）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-221">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="0ed9a-222">默认情况下，<xref:System.Data.DataColumn.Caption%2A> 值设置为 <xref:System.Data.DataColumn.ColumnName%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-222">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-223">下面的示例获取 <xref:System.Data.DataSet>的每个表中的每一列的 <xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-223">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0ed9a-224">该示例还演示了如何使用新 <xref:System.Data.DataColumn.ColumnName%2A>创建 <xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-224">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-225">属性设置为 <see langword="null" /> 或空字符串，且列属于一个集合。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-225">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="0ed9a-226">集合中已经存在同名称的列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-226">A column with the same name already exists in the collection.</span></span> <span data-ttu-id="0ed9a-227">名称比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-227">The name comparison is not case sensitive.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-228">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-228">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;net-5.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTypeDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-229">获取或设置存储在列中的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-229">Gets or sets the type of data stored in the column.</span></span></summary>
        <value><span data-ttu-id="0ed9a-230">一个 <see cref="T:System.Type" /> 对象，它表示列数据类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-230">A <see cref="T:System.Type" /> object that represents the column data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-231">若要确保正确创建和更新数据源中的数据，设置 <xref:System.Data.DataColumn.DataType%2A> 值非常重要。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-231">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="0ed9a-232"><xref:System.Data.DataColumn.DataType%2A> 属性支持以下基本 .NET Framework 数据类型：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-232">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="0ed9a-233">以及以下数组类型：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-233">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="0ed9a-234">在列开始存储数据后更改此属性时，将生成异常。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-234">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="0ed9a-235">如果在设置 <xref:System.Data.DataColumn.DataType%2A> 属性之前将 <xref:System.Data.DataColumn.AutoIncrement%2A> 设置为 `true`，并且尝试将类型设置为除整数类型之外的任何内容，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-235">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ed9a-236">在某些情况下，数据类型为的列 `Byte[]` 需要特殊处理，因为与基本 .NET Framework 数据类型不同，它是引用数据类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-236">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="0ed9a-237">如果将数据类型 `Byte[]` 的列用作 <xref:System.Data.DataTable.PrimaryKey%2A>，或者作为 <xref:System.Data.DataView>的 <xref:System.Data.DataView.Sort%2A> 或 <xref:System.Data.DataView.RowFilter%2A> 键，则对列值的任何更改都必须涉及将 `Byte[]` 列值分配给单独实例化的 `Byte[]` 对象。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-237">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="0ed9a-238">需要执行此分配以触发对排序、筛选和主键操作所使用的内部索引的更新。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-238">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="0ed9a-239">下面的示例对此进行演示：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-239">This is illustrated by the following example:</span></span>  
  
```csharp  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="0ed9a-240">尽管可以将列定义为数据类型（而不是基本 .NET Framework 数据类型和 `Byte[]`），但这类列将被视为用户定义的类型，但要服从以下使用限制。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-240">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="0ed9a-241">（有关用户定义类型的详细信息，请参阅[创建和使用用户定义的类型](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40)。）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-241">(For more information on user-defined types, see [Creating and Using User-Defined Types](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="0ed9a-242">列不能是 <xref:System.Data.DataView.RowFilter%2A> 或 <xref:System.Data.DataTable.Select%2A> 表达式的一部分。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-242">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="0ed9a-243">如果该列用作 <xref:System.Data.DataTable.PrimaryKey%2A>或 <xref:System.Data.DataView.Sort%2A> 或 <xref:System.Data.DataView>，则它必须被视为不可变字段;一旦将列数据添加到表中，就不能对其进行更改。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-243">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="0ed9a-244">只能将其 <xref:System.Data.DataColumn.ColumnMapping%2A> 设置为 `MappingType.Element`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-244">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="0ed9a-245">实现列的数据类型的类必须用 <xref:System.SerializableAttribute>进行标记，并在必要时实现 <xref:System.Runtime.Serialization.ISerializable> 或 <xref:System.Xml.Serialization.IXmlSerializable> 接口。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-245">The class that implements the column's data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="0ed9a-246">对更改跟踪的支持是有限的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-246">Support for change tracking is limited.</span></span> <span data-ttu-id="0ed9a-247">若要利用 <xref:System.Data.DataTable> 类的更改跟踪机制，实现列的数据类型的类必须实现 <xref:System.ComponentModel.IChangeTracking> 接口，或接管通过对行调用 <xref:System.Data.DataRow.SetModified%2A> 或通过将列值对象分配给单独实例化的列值对象来在修改列值时通知 <xref:System.Data.DataRow> 的责任。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-247">To utilize the <xref:System.Data.DataTable> class' change tracking mechanism, the class that implements the column's data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-248">下面的示例将几个数据类型的列添加到 <xref:System.Data.DataTable>中，然后向表中添加一行。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-248">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-249">列已经存储了数据。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-249">The column already has data stored.</span></span></exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-250">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-250">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-251">获取或设置列的 <see langword="DateTimeMode" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-251">Gets or sets the <see langword="DateTimeMode" /> for the column.</span></span></summary>
        <value><span data-ttu-id="0ed9a-252">所指定的列的 <see cref="T:System.Data.DataSetDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-252">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-253">在将行添加到 <xref:System.Data.DataColumn>后，不能修改 <xref:System.Data.DataColumn.DateTimeMode%2A>，除非从 <xref:System.Data.DataSetDateTime.Unspecified> 和 <xref:System.Data.DataSetDateTime.UnspecifiedLocal> 进行修改，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-253">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="0ed9a-254">允许从 `UnspecifiedLocal` 到 `Unspecified` 的修改，反之亦然，因为这两个选项之间的差异仅在序列化期间，不会影响存储。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-254">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-255">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-255">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;net-5.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDefaultValueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-256">在创建新行时获取或设置列的默认值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-256">Gets or sets the default value for the column when you are creating new rows.</span></span></summary>
        <value><span data-ttu-id="0ed9a-257">适合于列的 <see cref="P:System.Data.DataColumn.DataType" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-257">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-258">默认值是创建 <xref:System.Data.DataRow> 时自动分配给列的值（例如，创建 <xref:System.Data.DataRow> 的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-258">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="0ed9a-259">如果 <xref:System.Data.DataColumn.AutoIncrement%2A> 设置为 true，则不能有默认值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-259">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="0ed9a-260">您可以使用 <xref:System.Data.DataRow> 类的 <xref:System.Data.DataRow.ItemArray%2A> 属性创建一个新行，并向该方法传递一个值数组。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-260">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="0ed9a-261">对于具有默认值的列，这是一个潜在的问题，因为它的值是自动生成的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-261">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="0ed9a-262">若要对此类列使用 <xref:System.Data.DataRow.ItemArray%2A> 属性，请将 `null` 置于数组中的位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-262">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="0ed9a-263">有关详细信息，请参阅 <xref:System.Data.DataRow.ItemArray%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-263">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-264">下面的示例创建多个具有不同数据类型的 <xref:System.Data.DataColumn> 对象，并为每个列设置适当的默认值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-264">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="0ed9a-265">在添加行时，默认值不是列的数据类型的实例。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-265">When you are adding a row, the default value is not an instance of the column's data type.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-266">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-266">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-267">获取或设置表达式，用于筛选行、计算列中的值或创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-267">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span></span></summary>
        <value><span data-ttu-id="0ed9a-268">用来计算列的值，或创建聚合列的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-268">An expression to calculate the value of a column, or create an aggregate column.</span></span> <span data-ttu-id="0ed9a-269">表达式的返回类型由列的 <see cref="P:System.Data.DataColumn.DataType" /> 来确定。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-269">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-270"><xref:System.Data.DataColumn.Expression%2A> 属性的一个用途是创建计算列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-270">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="0ed9a-271">例如，若要计算税金值，单位价格乘以特定区域的税率。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-271">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="0ed9a-272">由于税率因区域而异，因此不可能在列中设置单个税率;相反，将使用 <xref:System.Data.DataColumn.Expression%2A> 属性计算该值，如以下部分中的 Visual Basic 代码所示：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-272">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="0ed9a-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="0ed9a-274">另一种用途是创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-274">A second use is to create an aggregate column.</span></span> <span data-ttu-id="0ed9a-275">与计算得出的值类似，聚合根据 <xref:System.Data.DataTable>中的整行集执行操作。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-275">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0ed9a-276">一个简单的示例是计算集中返回的行数。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-276">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="0ed9a-277">此方法用于计算特定销售人员完成的事务数，如以下 Visual Basic 代码所示：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-277">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```vb  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="0ed9a-278">表达式语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-278">Expression Syntax</span></span>  
 <span data-ttu-id="0ed9a-279">创建表达式时，请使用 <xref:System.Data.DataColumn.ColumnName%2A> 属性来引用列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-279">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="0ed9a-280">例如，如果一个列的 <xref:System.Data.DataColumn.ColumnName%2A> 是 "单价"，而另一个 "数量" 为，则表达式如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-280">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="0ed9a-281">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-281">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ed9a-282">如果在表达式中使用某列，则会认为该表达式依赖于该列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-282">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="0ed9a-283">如果重命名或删除了依赖列，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-283">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="0ed9a-284">当访问现在断开的表达式列时，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-284">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="0ed9a-285">创建筛选器表达式时，用单引号将字符串引起来：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-285">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="0ed9a-286">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-286">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="0ed9a-287">如果列名包含任何非字母数字字符或以数字或匹配项（区分）开头，则需要特殊处理，如以下各段所述。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-287">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="0ed9a-288">And</span><span class="sxs-lookup"><span data-stu-id="0ed9a-288">And</span></span>  
  
 <span data-ttu-id="0ed9a-289">出现在</span><span class="sxs-lookup"><span data-stu-id="0ed9a-289">Between</span></span>  
  
 <span data-ttu-id="0ed9a-290">子</span><span class="sxs-lookup"><span data-stu-id="0ed9a-290">Child</span></span>  
  
 <span data-ttu-id="0ed9a-291">False</span><span class="sxs-lookup"><span data-stu-id="0ed9a-291">False</span></span>  
  
 <span data-ttu-id="0ed9a-292">In</span><span class="sxs-lookup"><span data-stu-id="0ed9a-292">In</span></span>  
  
 <span data-ttu-id="0ed9a-293">Is</span><span class="sxs-lookup"><span data-stu-id="0ed9a-293">Is</span></span>  
  
 <span data-ttu-id="0ed9a-294">Like</span><span class="sxs-lookup"><span data-stu-id="0ed9a-294">Like</span></span>  
  
 <span data-ttu-id="0ed9a-295">Not</span><span class="sxs-lookup"><span data-stu-id="0ed9a-295">Not</span></span>  
  
 <span data-ttu-id="0ed9a-296">Null</span><span class="sxs-lookup"><span data-stu-id="0ed9a-296">Null</span></span>  
  
 <span data-ttu-id="0ed9a-297">或</span><span class="sxs-lookup"><span data-stu-id="0ed9a-297">Or</span></span>  
  
 <span data-ttu-id="0ed9a-298">Parent</span><span class="sxs-lookup"><span data-stu-id="0ed9a-298">Parent</span></span>  
  
 <span data-ttu-id="0ed9a-299">True</span><span class="sxs-lookup"><span data-stu-id="0ed9a-299">True</span></span>  
  
 <span data-ttu-id="0ed9a-300">如果列名称满足上述条件之一，则必须将其包装在方括号或 "'" （重音符）引号中。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-300">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="0ed9a-301">例如，若要在表达式中使用名为 "Column #" 的列，您可以编写 "[Column #]"：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-301">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="0ed9a-302">总计 \* [列号]</span><span class="sxs-lookup"><span data-stu-id="0ed9a-302">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="0ed9a-303">或 "\`列 # '"：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-303">or "\`Column#\`":</span></span>  
  
 <span data-ttu-id="0ed9a-304">Total \* \`列 # '</span><span class="sxs-lookup"><span data-stu-id="0ed9a-304">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="0ed9a-305">如果列名称括在方括号中，则必须通过使用反斜杠（"\\"）字符来对其进行转义，才能对其中的任何 "]" 和 "\\" 字符（而不是任何其他字符）进行转义。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-305">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="0ed9a-306">如果列名用抑音符字符括起来，则它不能包含任何抑音符的重音字符。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-306">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="0ed9a-307">例如，将写入一个名为 "Column []\\" 的列：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-307">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="0ed9a-308">Total \* [Column [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="0ed9a-308">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="0ed9a-309">或</span><span class="sxs-lookup"><span data-stu-id="0ed9a-309">or</span></span>  
  
 <span data-ttu-id="0ed9a-310">总计 \* \`列 []\\`</span><span class="sxs-lookup"><span data-stu-id="0ed9a-310">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="0ed9a-311">用户定义的值</span><span class="sxs-lookup"><span data-stu-id="0ed9a-311">User-Defined Values</span></span>  
 <span data-ttu-id="0ed9a-312">可以在表达式中使用用户定义的值，以便与列值进行比较。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-312">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="0ed9a-313">字符串值应括在单引号内（并且字符串值中的每个单引号字符必须通过使用另一个单引号字符来对其进行转义）进行转义。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-313">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="0ed9a-314">日期值应基于数据访问接口包含在井号（#）或单引号（'）中。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-314">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="0ed9a-315">数值应允许小数和科学记数法。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-315">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="0ed9a-316">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-316">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-317">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-317">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="0ed9a-318">"Price < = 50.00"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-318">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="0ed9a-319">"生日 < #1/31/82 #"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-319">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="0ed9a-320">对于包含枚举值的列，将值强制转换为整数数据类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-320">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="0ed9a-321">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-321">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-322">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-322">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="0ed9a-323">分析文本表达式</span><span class="sxs-lookup"><span data-stu-id="0ed9a-323">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="0ed9a-324">所有文本表达式必须用固定区域性区域设置表示。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-324">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="0ed9a-325">当 `DataSet` 分析和转换文本表达式时，它始终使用固定区域性，而不是当前区域性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-325">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="0ed9a-326">当值有单引号时，将标识字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-326">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="0ed9a-327">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-327">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-328">李四</span><span class="sxs-lookup"><span data-stu-id="0ed9a-328">'John'</span></span>  
  
 <span data-ttu-id="0ed9a-329">`Boolean` 文本为 true 和 false;它们不是在表达式中括起来的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-329">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="0ed9a-330">`Integer` 文本 [+-]？[0-9] + 被视为 `System.Int32`、`System.Int64` 或 `System.Double`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-330">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="0ed9a-331">`System.Double` 可能会丢失精度，具体取决于数字的大小。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-331">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="0ed9a-332">例如，如果文本中的数字为2147483650，`DataSet` 将首先尝试将数字分析为 `Int32`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-332">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="0ed9a-333">这不会成功，因为数字太大。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-333">This will not succeed because the number is too large.</span></span> <span data-ttu-id="0ed9a-334">在这种情况下 `DataSet` 会将数字分析为 `Int64`，这将会成功。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-334">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="0ed9a-335">如果文本的数字大于 Int64 的最大值，`DataSet` 将使用 `Double`分析文本。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-335">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="0ed9a-336">使用科学记数法的真实文本（如 4.42372 E-30）使用 `System.Double`进行分析。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-336">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="0ed9a-337">不带科学记数法但带有小数点的真实文本将被视为 `System.Decimal`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-337">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="0ed9a-338">如果数字超过了 `System.Decimal`支持的最大值或最小值，则将其分析为 `System.Double`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-338">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="0ed9a-339">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-339">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-340">142526.144524 将转换为 `Decimal`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-340">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="0ed9a-341">345262.78036719560925667 将被视为 `Double`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-341">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="0ed9a-342">运算符</span><span class="sxs-lookup"><span data-stu-id="0ed9a-342">Operators</span></span>  
 <span data-ttu-id="0ed9a-343">允许使用布尔运算符 AND、OR 和 NOT 运算符进行串联。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-343">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="0ed9a-344">可以使用括号将子句分组，并强制优先使用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-344">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="0ed9a-345">AND 运算符的优先级高于其他运算符。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-345">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="0ed9a-346">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-346">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-347">（LastName = "Smith" 或 LastName = "和 FirstName = "John"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-347">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="0ed9a-348">创建比较表达式时，允许使用以下运算符：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-348">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 \>  
  
 \<=  
  
 \>=  
  
 <>  
  
 =  
  
 <span data-ttu-id="0ed9a-349">IN</span><span class="sxs-lookup"><span data-stu-id="0ed9a-349">IN</span></span>  
  
 <span data-ttu-id="0ed9a-350">LIKE</span><span class="sxs-lookup"><span data-stu-id="0ed9a-350">LIKE</span></span>  
  
 <span data-ttu-id="0ed9a-351">表达式中还支持以下算术运算符：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-351">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="0ed9a-352">\+ （添加）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-352">\+ (addition)</span></span>  
  
 <span data-ttu-id="0ed9a-353">\-（减号）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-353">\- (subtraction)</span></span>  
  
 <span data-ttu-id="0ed9a-354">\* （乘）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-354">\* (multiplication)</span></span>  
  
 <span data-ttu-id="0ed9a-355">/（除）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-355">/ (division)</span></span>  
  
 <span data-ttu-id="0ed9a-356">% （取模）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-356">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="0ed9a-357">字符串运算符</span><span class="sxs-lookup"><span data-stu-id="0ed9a-357">String Operators</span></span>  
 <span data-ttu-id="0ed9a-358">若要连接字符串，请使用 + 字符。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-358">To concatenate a string, use the + character.</span></span> <span data-ttu-id="0ed9a-359"><xref:System.Data.DataSet> 类的 <xref:System.Data.DataSet.CaseSensitive%2A> 属性的值确定字符串比较是否区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-359">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="0ed9a-360">但是，您可以用 <xref:System.Data.DataTable> 类的 <xref:System.Data.DataTable.CaseSensitive%2A> 属性来重写该值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-360">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="0ed9a-361">通配符</span><span class="sxs-lookup"><span data-stu-id="0ed9a-361">Wildcard Characters</span></span>  
 <span data-ttu-id="0ed9a-362">在 LIKE 比较中，\* 和% 可互换使用通配符。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-362">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="0ed9a-363">如果 LIKE 子句中的字符串包含 \* 或%，则这些字符应括在方括号（[]）中。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-363">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="0ed9a-364">如果子句中有一个方括号，则每个方括号字符应括在方括号中（例如 [[] 或 []]）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-364">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="0ed9a-365">在模式的开头和结尾，或在模式末尾或在模式的开头，允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-365">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="0ed9a-366">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-366">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-367">"（例如" 产品\*"）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-367">"ItemName LIKE '\*product\*'"</span></span>  
  
 <span data-ttu-id="0ed9a-368">"类1，如" \* 产品 "</span><span class="sxs-lookup"><span data-stu-id="0ed9a-368">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="0ed9a-369">"类1，如" product \* "</span><span class="sxs-lookup"><span data-stu-id="0ed9a-369">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="0ed9a-370">字符串中间不允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-370">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="0ed9a-371">例如，不允许使用 "te \* xt"。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-371">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="0ed9a-372">父/子关系引用</span><span class="sxs-lookup"><span data-stu-id="0ed9a-372">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="0ed9a-373">在表达式中，可以通过使用 `Parent`追加列名称来引用父表。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-373">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="0ed9a-374">例如，`Parent.Price` 引用名为 `Price`的父表的列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-374">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="0ed9a-375">当子级具有多个父行时，请使用 Parent （RelationName）。ColumnName.</span><span class="sxs-lookup"><span data-stu-id="0ed9a-375">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="0ed9a-376">例如，Parent （RelationName）。价格通过关系引用名为 Price 的父表的列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-376">For example, the Parent(RelationName).Price references the parent table's column named Price via the relation.</span></span>  
  
 <span data-ttu-id="0ed9a-377">通过使用 `Child`追加列名称，可以在表达式中引用子表中的列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-377">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="0ed9a-378">但是，由于子关系可能返回多行，因此您必须在聚合函数中包含对子列的引用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-378">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="0ed9a-379">例如，`Sum(Child.Price)` 将返回子表中名为 `Price` 的列的总和。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-379">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="0ed9a-380">如果表具有多个子元素，则语法为： `Child(RelationName)`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-380">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="0ed9a-381">例如，如果一个表有两个子表，分别名为 `Customers` 和 `Orders`，并且 <xref:System.Data.DataRelation> 对象名为 `Customers2Orders`，则引用将如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-381">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="0ed9a-382">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="0ed9a-382">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="0ed9a-383">聚合</span><span class="sxs-lookup"><span data-stu-id="0ed9a-383">Aggregates</span></span>  
 <span data-ttu-id="0ed9a-384">支持下列聚合类型：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-384">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="0ed9a-385">Sum （Sum）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-385">Sum (Sum)</span></span>  
  
 <span data-ttu-id="0ed9a-386">平均（平均值）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-386">Avg (Average)</span></span>  
  
 <span data-ttu-id="0ed9a-387">最小值（最小值）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-387">Min (Minimum)</span></span>  
  
 <span data-ttu-id="0ed9a-388">最大值（最大值）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-388">Max (Maximum)</span></span>  
  
 <span data-ttu-id="0ed9a-389">计数（计数）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-389">Count (Count)</span></span>  
  
 <span data-ttu-id="0ed9a-390">StDev （统计标准偏差）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-390">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="0ed9a-391">Var （统计方差）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-391">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="0ed9a-392">聚合通常沿关系执行。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-392">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="0ed9a-393">使用前面列出的函数之一创建聚合表达式，并使用前面讨论的父/子关系引用中详细说明的子表列来创建聚合表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-393">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="0ed9a-394">例如：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-394">For example:</span></span>  
  
 <span data-ttu-id="0ed9a-395">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="0ed9a-395">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="0ed9a-396">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="0ed9a-396">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="0ed9a-397">还可以对单个表执行聚合。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-397">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="0ed9a-398">例如，若要在名为 "Price" 的列中创建数字的摘要：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-398">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="0ed9a-399">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="0ed9a-399">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ed9a-400">如果使用单个表来创建聚合，则没有分组依据功能。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-400">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="0ed9a-401">相反，所有行都将在列中显示相同的值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-401">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="0ed9a-402">如果表中没有行，聚合函数将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-402">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="0ed9a-403">始终可以通过检查列的 <xref:System.Data.DataColumn.DataType%2A> 属性来确定数据类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-403">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="0ed9a-404">您也可以使用 Convert 函数来转换数据类型，如下一节所示。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-404">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="0ed9a-405">聚合只能应用于单个列，并且不能在该聚合内使用其他表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-405">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="0ed9a-406">函数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-406">Functions</span></span>  
 <span data-ttu-id="0ed9a-407">还支持以下函数：</span><span class="sxs-lookup"><span data-stu-id="0ed9a-407">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="0ed9a-408">说明</span><span class="sxs-lookup"><span data-stu-id="0ed9a-408">Description</span></span>|<span data-ttu-id="0ed9a-409">将特定的表达式转换为指定的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-409">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="0ed9a-410">语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-410">Syntax</span></span>|<span data-ttu-id="0ed9a-411">Convert （`expression`，`type`）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-411">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="0ed9a-412">参数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-412">Arguments</span></span>|<span data-ttu-id="0ed9a-413">`expression`-要转换的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-413">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="0ed9a-414">`type`-要将该值转换到 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-414">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="0ed9a-415">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-415">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="0ed9a-416">所有转换都有效，但有以下例外： `Boolean` 可以在 `Byte`、`SByte`、`Int16`、`Int32`、`Int64`、`UInt16`、`UInt32`、`UInt64`、`String` 和本身之间强制转换。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-416">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="0ed9a-417">`Char` 可以在 `Int32`、`UInt32`、`String`和本身之间强制转换。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-417">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="0ed9a-418">`DateTime` 只能在 `String` 和本身之间强制转换。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-418">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="0ed9a-419">`TimeSpan` 只能在 `String` 和本身之间强制转换。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-419">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="0ed9a-420">说明</span><span class="sxs-lookup"><span data-stu-id="0ed9a-420">Description</span></span>|<span data-ttu-id="0ed9a-421">获取字符串的长度</span><span class="sxs-lookup"><span data-stu-id="0ed9a-421">Gets the length of a string</span></span>|  
|<span data-ttu-id="0ed9a-422">语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-422">Syntax</span></span>|<span data-ttu-id="0ed9a-423">LEN （`expression`）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-423">LEN(`expression`)</span></span>|  
|<span data-ttu-id="0ed9a-424">参数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-424">Arguments</span></span>|<span data-ttu-id="0ed9a-425">`expression`-要计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-425">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="0ed9a-426">Example: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-426">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="0ed9a-427">说明</span><span class="sxs-lookup"><span data-stu-id="0ed9a-427">Description</span></span>|<span data-ttu-id="0ed9a-428">检查表达式并返回检查的表达式或替换值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-428">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="0ed9a-429">语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-429">Syntax</span></span>|<span data-ttu-id="0ed9a-430">ISNULL （`expression`，`replacementvalue`）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-430">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="0ed9a-431">参数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-431">Arguments</span></span>|<span data-ttu-id="0ed9a-432">`expression`-要检查的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-432">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="0ed9a-433">`replacementvalue`-如果 `null`expression，则返回 `replacementvalue`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-433">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="0ed9a-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="0ed9a-435">说明</span><span class="sxs-lookup"><span data-stu-id="0ed9a-435">Description</span></span>|<span data-ttu-id="0ed9a-436">获取两个值中的一个，具体取决于逻辑表达式的结果。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-436">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="0ed9a-437">语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-437">Syntax</span></span>|<span data-ttu-id="0ed9a-438">IIF （`expr`、`truepart`、`falsepart`）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-438">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="0ed9a-439">参数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-439">Arguments</span></span>|<span data-ttu-id="0ed9a-440">`expr`-要计算的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-440">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="0ed9a-441">`truepart`-表达式为 true 时要返回的值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-441">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="0ed9a-442">`falsepart`-如果表达式为 false，则返回值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-442">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="0ed9a-443">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span><span class="sxs-lookup"><span data-stu-id="0ed9a-443">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="0ed9a-444">说明</span><span class="sxs-lookup"><span data-stu-id="0ed9a-444">Description</span></span>|<span data-ttu-id="0ed9a-445">删除所有前导和尾随空白字符，如 \r、\n、\t、""</span><span class="sxs-lookup"><span data-stu-id="0ed9a-445">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="0ed9a-446">语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-446">Syntax</span></span>|<span data-ttu-id="0ed9a-447">TRIM （`expression`）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-447">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="0ed9a-448">参数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-448">Arguments</span></span>|<span data-ttu-id="0ed9a-449">`expression`-要剪裁的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-449">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="0ed9a-450">说明</span><span class="sxs-lookup"><span data-stu-id="0ed9a-450">Description</span></span>|<span data-ttu-id="0ed9a-451">从字符串中的指定点开始，获取指定长度的子字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-451">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="0ed9a-452">语法</span><span class="sxs-lookup"><span data-stu-id="0ed9a-452">Syntax</span></span>|<span data-ttu-id="0ed9a-453">SUBSTRING （`expression`、`start`、`length`）</span><span class="sxs-lookup"><span data-stu-id="0ed9a-453">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="0ed9a-454">参数</span><span class="sxs-lookup"><span data-stu-id="0ed9a-454">Arguments</span></span>|<span data-ttu-id="0ed9a-455">`expression`-子字符串的源字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-455">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="0ed9a-456">`start`-整数，用于指定子字符串的起始位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-456">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="0ed9a-457">`length`--指定子字符串长度的整数。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-457">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="0ed9a-458">示例： myDataColumn = "SUBSTRING （phone，7，8）"</span><span class="sxs-lookup"><span data-stu-id="0ed9a-458">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ed9a-459">可以通过为其指定 null 值或空字符串，来重置 <xref:System.Data.DataColumn.Expression%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-459">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="0ed9a-460">如果在 "表达式" 列中设置了默认值，则在重置 <xref:System.Data.DataColumn.Expression%2A> 属性后，将为所有以前填充的行分配默认值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-460">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-461">下面的示例在 <xref:System.Data.DataTable>中创建三列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-461">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0ed9a-462">第二列和第三列包含表达式;第二个使用可变税率计算税金，第三个计算所得结果为第一列的值。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-462">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="0ed9a-463">生成的表将显示在 <xref:System.Windows.Forms.DataGrid> 控件中。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-463">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-464">将 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 或 <see cref="P:System.Data.DataColumn.Unique" /> 属性设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-464">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0ed9a-465">在使用 CONVERT 函数时，表达式的计算结果为一个字符串，但该字符串不包含可以转换成类型参数的表示形式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-465">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="0ed9a-466">在使用 CONVERT 函数时，所请求的强制转换不可能完成。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-466">When you are using the CONVERT function, the requested cast is not possible.</span></span> <span data-ttu-id="0ed9a-467">有关可能的强制转换的详细信息，请参见下面一节中的 Conversion 函数。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-467">See the Conversion function in the following section for detailed information about possible casts.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0ed9a-468">在使用 SUBSTRING 函数时，起始参数超出范围。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-468">When you use the SUBSTRING function, the start argument is out of range.</span></span>  
  
 <span data-ttu-id="0ed9a-469">-或-</span><span class="sxs-lookup"><span data-stu-id="0ed9a-469">-Or-</span></span>  
  
 <span data-ttu-id="0ed9a-470">在使用 SUBSTRING 函数时，长度参数超出范围。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-470">When you use the SUBSTRING function, the length argument is out of range.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="0ed9a-471">在使用 LEN 函数或 TRIM 函数时，表达式的计算结果不是字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-471">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span></span> <span data-ttu-id="0ed9a-472">这包括计算结果为 <see cref="T:System.Char" /> 的表达式。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-472">This includes expressions that evaluate to <see cref="T:System.Char" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-473">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-473">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-474">获取与 <see cref="T:System.Data.DataColumn" /> 相关的自定义用户信息的集合。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-474">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="0ed9a-475">自定义信息的 <see cref="T:System.Data.PropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-475">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-476"><xref:System.Data.DataColumn.ExtendedProperties%2A> 属性允许您将自定义信息与对象一起存储。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-476">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="0ed9a-477">例如，你可以存储数据应刷新的时间。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-477">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="0ed9a-478">扩展属性的类型必须为 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-478">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="0ed9a-479">当 <xref:System.Data.DataColumn> 写入为 XML 时，不会保留不属于 <xref:System.String> 类型的属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-479">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-480">下面的示例将自定义属性添加到 <xref:System.Data.DataColumn.ExtendedProperties%2A> 属性返回的 <xref:System.Data.PropertyCollection>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-480">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="0ed9a-481">第二个示例检索自定义属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-481">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-482">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-482">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMaxLengthDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-483">获取或设置文本列的最大长度。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-483">Gets or sets the maximum length of a text column.</span></span></summary>
        <value><span data-ttu-id="0ed9a-484">列的最大长度（以字符数表示）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-484">The maximum length of the column in characters.</span></span> <span data-ttu-id="0ed9a-485">如果列没有最大长度，则值为-1 （默认值）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-485">If the column has no maximum length, the value is -1 (default).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-486">对于非文本列，将忽略 <xref:System.Data.DataColumn.MaxLength%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-486">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="0ed9a-487">如果将 <xref:System.Data.DataColumn.MaxLength%2A> 赋给非字符串列，则会引发 <xref:System.ArgumentException> 异常。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-487">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-488">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-488">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-489">获取或设置 <see cref="T:System.Data.DataColumn" /> 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-489">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="0ed9a-490"><see cref="T:System.Data.DataColumn" /> 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-490">The namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-491">使用 <xref:System.Data.DataSet.ReadXml%2A>、<xref:System.Data.DataSet.WriteXml%2A>、<xref:System.Data.DataSet.ReadXmlSchema%2A>或 <xref:System.Data.DataSet.WriteXmlSchema%2A> 方法读取 XML 文档并将其写入到 <xref:System.Data.DataSet> 中的 <xref:System.Data.DataTable> 时，将使用 <xref:System.Data.DataColumn.Namespace%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-491">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="0ed9a-492">XML 文档的命名空间用于在读取到 <xref:System.Data.DataSet>时确定 XML 特性和元素的范围。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-492">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0ed9a-493">例如，<xref:System.Data.DataSet> 包含从具有命名空间 "myCompany" 的文档中读取的架构，并尝试从具有命名空间 "theirCompany" 的文档中读取数据（使用 <xref:System.Data.DataSet.ReadXml%2A> 方法）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-493">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="0ed9a-494">与现有架构不对应的任何数据都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-494">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-495">该命名空间已有数据。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-495">The namespace already has data.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-496">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-496">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberSignature Language="C#" Value="protected internal virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="0ed9a-497">参数引用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-497">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="0ed9a-498">此成员支持 .NET Framework 基础结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-498">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnOrdinalDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-499">获取列在 <see cref="T:System.Data.DataColumnCollection" /> 集合中的位置（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-499">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="0ed9a-500">列的位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-500">The position of the column.</span></span> <span data-ttu-id="0ed9a-501">如果列不是集合的成员，获取 -1。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-501">Gets -1 if the column is not a member of a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-502">下面的示例将返回列的名称、序号和数据类型。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-502">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-503">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-503">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnPrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-504">获取或设置一个 XML 前缀，该前缀是 <see cref="T:System.Data.DataTable" /> 的命名空间的别名。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-504">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="0ed9a-505"><see cref="T:System.Data.DataTable" /> 命名空间的 XML 前缀。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-505">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-506"><xref:System.Data.DataTable.Prefix%2A> 在整个 XML 文档中使用，以标识属于 <xref:System.Data.DataSet> 对象（由 <xref:System.Data.DataSet.Namespace%2A> 属性设置）的命名空间的元素。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-506">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-507">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-507">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0ed9a-508">参数引用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-508">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="0ed9a-509">此成员支持 .NET Framework 基础结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-509">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnReadOnlyDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-510">获取或设置一个值，该值指示一旦向表中添加了行，列是否还允许更改。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-510">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span></span></summary>
        <value><span data-ttu-id="0ed9a-511">如果列为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-511"><see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0ed9a-512">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-512">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-513">下面的示例创建一个 <xref:System.Data.DataColumn> 并将其 <xref:System.Data.DataColumn.ReadOnly%2A> 属性设置 `true`。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-513">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-514">对于计算所得的列，此属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-514">The property is set to <see langword="false" /> on a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-515">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-515">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="0ed9a-516">指定的序号。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-516">The specified ordinal.</span></span></param>
        <summary><span data-ttu-id="0ed9a-517">将 <see cref="T:System.Data.DataColumn" /> 的序号或位置更改为指定的序号或位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-517">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-518">将 <xref:System.Data.DataColumn> 的序号或位置更改为指定的序号或位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-518">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="0ed9a-519">如果序数小于0或大于现有的列数-1 （大于最后一列的序号），则将引发无效的 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-519">If ordinal is less than 0 or greater than the existing number of columns - 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="0ed9a-520">更改列的序号时，该列将移到列集合中的新位置。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-520">When you change a column's ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="0ed9a-521">在上一个和新的序号之间的所有列都将重新编号，以调整列的新序号。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-521">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-522">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-522">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTableDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-523">获取列所属的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-523">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span></span></summary>
        <value><span data-ttu-id="0ed9a-524"><see cref="T:System.Data.DataTable" /> 所属的 <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-524">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-525">下面的示例通过其 <xref:System.Data.DataColumn.Table%2A> 属性返回 <xref:System.Data.DataColumn> 的父表。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-525">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-526">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-526">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ed9a-527">获取列的 <see cref="P:System.Data.DataColumn.Expression" />（如果存在的话）。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-527">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span></span></summary>
        <returns><span data-ttu-id="0ed9a-528">如果设置了属性；则为 <see cref="P:System.Data.DataColumn.Expression" /> 的值；否则为 <see cref="P:System.Data.DataColumn.ColumnName" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-528">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ed9a-529">下面的示例使用 <xref:System.Data.DataColumn.ToString%2A> 属性返回 <xref:System.Data.DataColumn> 对象的集合的每个成员的默认字符串。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-529">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-530">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-530">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnUniqueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ed9a-531">获取或设置一个值，该值指示列的每一行中的值是否必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-531">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span></span></summary>
        <value><span data-ttu-id="0ed9a-532">如果值必须是唯一的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-532"><see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0ed9a-533">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-533">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ed9a-534">一旦将此属性从 false 更改为 true，就会在该列上创建唯一约束，以确保值是唯一的。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-534">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ed9a-535">下面的示例创建新 <xref:System.Data.DataColumn>，设置其属性，并将其添加到表的列集合中。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-535">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ed9a-536">列是计算出的列。</span><span class="sxs-lookup"><span data-stu-id="0ed9a-536">The column is a calculated column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
        <related type="Article" href="/dotnet/framework/data/adonet/dataset-datatable-dataview/"><span data-ttu-id="0ed9a-537">在 ADO.NET 中使用数据集</span><span class="sxs-lookup"><span data-stu-id="0ed9a-537">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
